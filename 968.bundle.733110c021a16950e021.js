"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[968],{68968:(e,t,a)=>{a.r(t),a.d(t,{ContextMenuController:()=>fa,CustomizableContextMenuTypes:()=>n,StaticWadoClient:()=>A,createReportAsync:()=>Ze,createReportDialogPrompt:()=>Be,default:()=>Pn,dicomWebUtils:()=>s,getStudiesForPatientByMRN:()=>ke});var n={};a.r(n);var s={};a.r(s),a.d(s,{fixBulkDataURI:()=>V});var i=a(97604),r=a(84793),o=a(9415);const{getString:c,getName:l,getModalities:u}=r.DICOMWeb;function d(e){if(!e||!e.length)return[];const t=[];return e.forEach((e=>t.push({studyInstanceUid:c(e["0020000D"]),date:c(e["00080020"]),time:c(e["00080030"]),accession:c(e["00080050"])||"",mrn:c(e["00100020"])||"",patientName:r.utils.formatPN(l(e["00100010"]))||"",instances:Number(c(e["00201208"]))||0,description:c(e["00081030"])||"",modalities:c(u(e["00080060"],e["00080061"]))||""}))),t}async function m(e,t,a,n){return await e.searchForStudies({studyInstanceUid:void 0,queryParams:n})}function p(e,t={}){if(!e)return;const a=["00081030","00080060"].join(","),{supportsWildcard:n}=t,s=e=>n&&e?`*${e}*`:e,i={PatientName:s(e.patientName),"00100020":s(e.patientId),AccessionNumber:s(e.accessionNumber),StudyDescription:s(e.studyDescription),ModalitiesInStudy:e.modalitiesInStudy,limit:e.limit||101,offset:e.offset||0,fuzzymatching:!0===t.supportsFuzzyMatching,includefield:a};if(e.startDate&&e.endDate)i.StudyDate=`${e.startDate}-${e.endDate}`;else if(e.startDate){const t=new Date,a=String(t.getDate()).padStart(2,"0"),n=String(t.getMonth()+1).padStart(2,"0"),s=`${t.getFullYear()}${n}${a}`;i.StudyDate=`${e.startDate}-${s}`}else if(e.endDate){const t="19700102";i.StudyDate=`${t}-${e.endDate}`}if(e.studyInstanceUid){let t=e.studyInstanceUid;t=Array.isArray(t)?t.join():t,t=t.replace(/[^0-9.]+/g,"\\"),i.StudyInstanceUID=t}const r={};return Object.keys(i).forEach((e=>{void 0!==i[e]&&""!==i[e]&&(r[e]=i[e])})),r}function g({instance:e,frame:t,config:a,thumbnail:n=!1}){if(!e)return;if(e.url)return e.url;const s=n?"thumbnailRendering":"imageRendering";if(a[s]&&"wadouri"!==a[s])return function(e,t,a){const n=function(e,t,a){const n=function(e,t){const{StudyInstanceUID:a,SeriesInstanceUID:n,SOPInstanceUID:s}=e;return`${t.wadoRoot}/studies/${a}/series/${n}/instances/${s}`}(e,t);return`${n}/frames/${a=a||1}`}(e,t,a);if(n)return`wadors:${n}`}(e,a,t);{const n=function(e,t){const{StudyInstanceUID:a,SeriesInstanceUID:n,SOPInstanceUID:s}=t,i=[];i.push("requestType=WADO"),i.push(`studyUID=${a}`),i.push(`seriesUID=${n}`),i.push(`objectUID=${s}`),i.push("contentType=application/dicom"),i.push("transferSyntax=*");const r=i.join("&");return`${e.wadoUriRoot}?${r}`}(a,e);let s="dicomweb:"+n;return void 0!==t&&(s+="&frame="+t),s}}var h=a(67540);class f{constructor(e,t,a={},n=void 0,s=void 0){this.client=e,this.studyInstanceUID=t,this.filters=a,this.sortCriteria=n,this.sortFunction=s}async execLoad(){const e=await this.preLoad(),t=await this.load(e);return await this.posLoad(t)}async runLoaders(e){let t;for(const a of e)if(t=await a(),t&&t.length)break;if(e.next().done&&!t)throw new Error("RetrieveMetadataLoader failed");return t}async configLoad(){}async preLoad(){}async load(e){}async posLoad(e){}}class y extends f{getOptions(){const{studyInstanceUID:e,filters:t}=this,a={studyInstanceUID:e},{seriesInstanceUID:n}=t;return n&&(a.seriesInstanceUID=n),a}*getLoaders(){const e=[],{studyInstanceUID:t,filters:{seriesInstanceUID:a}={},client:n}=this;a&&e.push(n.retrieveSeriesMetadata.bind(n,{studyInstanceUID:t,seriesInstanceUID:a})),e.push(n.retrieveStudyMetadata.bind(n,{studyInstanceUID:t})),yield*e}async load(e){const t=this.getLoaders();return this.runLoaders(t)}async posLoad(e){return e}}const S=["00080021","00080031","0008103E","00200011"].join(",");class I{constructor(){this.metadata=void 0,this.processFunction=void 0,this.internalPromise=void 0,this.thenFunction=void 0,this.rejectFunction=void 0}setMetadata(e){this.metadata=e}setProcessFunction(e){this.processFunction=e}getPromise(){return this.start()}start(){return this.internalPromise||(this.internalPromise=this.processFunction(),this.thenFunction&&(this.then(this.thenFunction),this.thenFunction=void 0),this.rejectFunction&&(this.reject(this.rejectFunction),this.rejectFunction=void 0)),this.internalPromise}then(e){if(this.internalPromise)return this.internalPromise.then(e);this.thenFunction=e}reject(e){if(this.internalPromise)return this.internalPromise.reject(e);this.rejectFunction=e}}class v extends f{*getPreLoaders(){const e=[],{studyInstanceUID:t,filters:{seriesInstanceUID:a}={},client:n}=this;let s={studyInstanceUID:t,queryParams:{includefield:S}};a&&(s.queryParams.SeriesInstanceUID=a,e.push(n.searchForSeries.bind(n,s))),e.push(n.searchForSeries.bind(n,s)),yield*e}async preLoad(){const e=this.getPreLoaders(),t=await this.runLoaders(e),a=this.sortCriteria,n=this.sortFunction,{naturalizeDataset:s}=h.default.data.DicomMetaDictionary,i=t.map(s);return(0,o.IO)(i,a,n)}async load(e){const{client:t,studyInstanceUID:a}=this,n=function(e,t,a){return Object.freeze({hasNext:()=>a.length>0,next(){const{seriesInstanceUID:n,metadata:s}=a.shift(),i=new I;return i.setMetadata(s),i.setProcessFunction((()=>e.retrieveSeriesMetadata({studyInstanceUID:t,seriesInstanceUID:n}))),i}})}(t,a,e.map((e=>({seriesInstanceUID:e.SeriesInstanceUID,metadata:e})))),s=[];for(;n.hasNext();){const e=n.next();s.push(e)}return{preLoadData:e,promises:s}}async posLoad({preLoadData:e,promises:t}){return{preLoadData:e,promises:t}}}const D=async function(e,t,a,n={},s,i){const r=new(!1!==a?v:y)(e,t,n,s,i);return await r.execLoad()};const w=function(e,t,a,n,s,i){const{SeriesInstanceUIDs:r}=n;return new Promise(((o,c)=>{const l=r.map((r=>{const o=Object.assign({},n,{seriesInstanceUID:r});return D(e,t,a,o,s,i)}));Promise.all(l).then((e=>{const t={preLoadData:[],promises:[]};e.forEach((({preLoadData:e,promises:a})=>{t.preLoadData=t.preLoadData.concat(e),t.promises=t.promises.concat(a)})),o(t)}),c)}))},b="RetrieveStudyMetadata",E=new Map;function C(e,t,a,n,s,i,r={}){if(!e)throw new Error(`${b}: Required 'dicomWebClient' parameter not provided.`);if(!t)throw new Error(`${b}: Required 'StudyInstanceUID' parameter not provided.`);const o=`${r.name}:${t}`;if(E.has(o))return E.get(o);let c;return c=n&&n.SeriesInstanceUIDs?w(e,t,a,n,s,i):new Promise(((r,o)=>{D(e,t,a,n,s,i).then((function(e){r(e)}),o)})),E.set(o,c),c}function x(e){E.has(e)&&E.delete(e)}function P(e,t,a){if(a+e.length>t.length)return!1;let n=a;for(let a=0;a<e.length;a++)if(e[a]!==t[n++])return!1;return!0}const M=function(e,t,a){a=a||0;const n=function(e){const t=new Uint8Array(e.length);for(let a=0,n=e.length;a<n;a++)t[a]=e.charCodeAt(a);return t}(t);for(let t=a;t<e.length;t++)if(n[0]===e[t]&&P(n,e,t))return t;return-1};function N(e){const t=new Uint8Array(e[0]);if(t.length<25)return e;const a=M(t,"--");if(a>6)return e;const n=M(t,"\r\n\r\n",a);if(n>512)return e;const s=function(e,t,a){t=t||0,a=a||e.length-t;let n="";for(let s=t;s<t+a;s++)n+=String.fromCharCode(e[s]);return n}(t,0,n),i=function(e){for(let t=0;t<e.length;t++)if("--"===e[t].substr(0,2))return e[t]}(s.split("\r\n"));if(!i)return e;const r=n+4,o=M(t,i,r);return-1===o?e:[t.slice(r,o-2).buffer]}const{DICOMwebClient:R}=i.api,U=R;U._orig_buildMultipartAcceptHeaderFieldValue||(U._orig_buildMultipartAcceptHeaderFieldValue=U._buildMultipartAcceptHeaderFieldValue,U._buildMultipartAcceptHeaderFieldValue=function(e,t){return 1===e.length&&e[0].mediaType.endsWith("/*")?"*/*":U._orig_buildMultipartAcceptHeaderFieldValue(e,t)});class A extends i.api.DICOMwebClient{constructor(e){super(e),this.config=void 0,this.staticWado=void 0,this.staticWado=e.staticWado,this.config=e}retrieveBulkData(e){const t=!1!==this.config.fixBulkdataMultipart,a={...e};return this.staticWado&&(a.mediaTypes=[{mediaType:"application/*"}]),super.retrieveBulkData(a).then((e=>t?N(e):e))}retrieveInstanceFrames(e){return this.staticWado?super.retrieveInstanceFrames({...e,mediaTypes:[{mediaType:"image/*"}]}):super.retrieveInstanceFrames(e)}async searchForStudies(e){if(!this.staticWado)return super.searchForStudies(e);const t=await super.searchForStudies(e),{queryParams:a}=e;if(!a)return t;const n=this.toLowerParams(a);return t.filter((e=>{for(const t of Object.keys(A.studyFilterKeys))if(!this.filterItem(t,n,e,A.studyFilterKeys))return!1;return!0}))}async searchForSeries(e){if(!this.staticWado)return super.searchForSeries(e);const t=await super.searchForSeries(e),{queryParams:a}=e;if(!a)return t;const n=this.toLowerParams(a);return t.filter((e=>{for(const t of Object.keys(A.seriesFilterKeys))if(!this.filterItem(t,n,e,A.seriesFilterKeys))return!1;return!0}))}compareValues(e,t){if(Array.isArray(e))return e.find((e=>this.compareValues(e,t)));if(Array.isArray(t))return t.find((t=>this.compareValues(e,t)));if(t?.Alphabetic&&(t=t.Alphabetic),"string"==typeof t){if(0===t.length)return!0;if(0===e.length||"*"===e)return!0;if("*"===e[0]&&"*"===e[e.length-1])return-1!=t.indexOf(e.substring(1,e.length-1));if("*"===e[e.length-1])return-1!=t.indexOf(e.substring(0,e.length-1));if("*"===e[0])return t.indexOf(e.substring(1))===t.length-e.length+1}return e===t}compareDateRange(e,t){if(!t)return!0;const a=e.indexOf("-");if(-1===a)return this.compareValues(e,t);const n=e.substring(0,a),s=e.substring(a+1);return(!n||t>=n)&&(!s||t<=s)}filterItem(e,t,a,n){const s=n[e]||e;if(!t)return!0;const i=t[e]||t[s];if(!i)return!0;const r=a[e]||a[s];if(!r)return!1;if("DA"===r.vr&&r.Value?.[0])return this.compareDateRange(i,r.Value[0]);const o=r.Value;return this.compareValues(i,o)}toLowerParams(e){const t={};return Object.entries(e).forEach((([e,a])=>{t[e.toLowerCase()]=a})),t}}A.studyFilterKeys={studyinstanceuid:"0020000D",patientname:"00100010","00100020":"mrn",studydescription:"00081030",studydate:"00080020",modalitiesinstudy:"00080061",accessionnumber:"00080050"},A.seriesFilterKeys={seriesinstanceuid:"0020000E",seriesnumber:"00200011",modality:"00080060"};const O=(e,t)=>{const{instance:a,tag:n="PixelData",defaultPath:s="/pixeldata",defaultType:i="video/mp4"}=t,r=a[n],{StudyInstanceUID:o,SeriesInstanceUID:c,SOPInstanceUID:l}=a,u=r&&r.BulkDataURI||`series/${c}/instances/${l}${s}`,d=-1!==u.indexOf("?"),m=-1!==u.indexOf("accept="),p=u+(m?"":(d?"&":"?")+`accept=${i}`);if(p.startsWith("series/")){const{wadoRoot:t}=e;return`${t}/studies/${o}/${p}`}return p},T=(e,t)=>{const{wadoRoot:a}=e,{instance:n,tag:s="PixelData"}=t,{StudyInstanceUID:i,SeriesInstanceUID:r,SOPInstanceUID:o}=n,c=n[s]?.BulkDataURI??"";if(-1===c?.indexOf("?"))return"PixelData"===s||"EncapsulatedDocument"===s?`${a}/studies/${i}/series/${r}/instances/${o}/rendered`:void 0},L=(e,t)=>{const{singlepart:a}=e,{instance:n,tag:s="PixelData",defaultType:i="video/mp4",singlepart:o="video",url:c=null}=t;if(c)return c;const l=n[s];if(l){if(l.DirectRetrieveURL)return l.DirectRetrieveURL;if(l.InlineBinary){const e=r.utils.b64toBlob(l.InlineBinary,i);return l.DirectRetrieveURL=URL.createObjectURL(e),l.DirectRetrieveURL}if(!a||!0!==a&&-1===a.indexOf(o)){if(l.retrieveBulkData){const e={mediaType:i};return l.retrieveBulkData(e).then((e=>(l.DirectRetrieveURL=URL.createObjectURL(new Blob([e],{type:i})),l.DirectRetrieveURL)))}return void console.warn("Unable to retrieve",s,"from",n)}}return T(e,t)||O(e,t)};function V(e,t,a){let{BulkDataURI:n}=e;const{bulkDataURI:s={}}=a,{startsWith:i,prefixWith:r=""}=s;if(i&&n.startsWith(i)&&(n=r+n.substring(i.length),e.BulkDataURI=n),n.startsWith("http")||e.BulkDataURI.startsWith("/")){if("/"===n[0]&&a.wadoRoot.startsWith("http")){const t=new URL(a.wadoRoot);e.BulkDataURI=`${t.origin}${n}`}}else{const{StudyInstanceUID:i,SeriesInstanceUID:r}=t,o=n.startsWith("instances/")||n.startsWith("../");n.startsWith("series/")||n.startsWith("bulkdata/")||"studies"===s.relativeResolution&&o?e.BulkDataURI=`${a.wadoRoot}/studies/${i}/${n}`:!o&&"series"!==s.relativeResolution&&s.relativeResolution||(e.BulkDataURI=`${a.wadoRoot}/studies/${i}/series/${r}/${n}`)}}const{DicomMetaDictionary:k,DicomDict:F}=h.default.data,{naturalizeDataset:_,denaturalizeDataset:q}=k,$=r.classes.MetadataProvider;function G(e,t){const{userAuthenticationService:a,customizationService:n}=t.services;let s,l,u,h,f,y,S;const I={initialize:({params:t,query:n})=>{e.onConfiguration&&"function"==typeof e.onConfiguration&&(e=e.onConfiguration(e,{params:t,query:n})),s=JSON.parse(JSON.stringify(e)),y=()=>{const e={},t=a.getAuthorizationHeader();return t&&t.Authorization&&(e.Authorization=t.Authorization),e},S=()=>({...y(),Accept:r.utils.generateAcceptHeader(e.acceptHeader,e.requestTransferSyntaxUID,e.omitQuotationForMultipartRequest)}),l={url:e.qidoRoot,staticWado:e.staticWado,singlepart:e.singlepart,headers:a.getAuthorizationHeader(),errorInterceptor:r.Po.getHTTPErrorHandler()},u={url:e.wadoRoot,staticWado:e.staticWado,singlepart:e.singlepart,headers:a.getAuthorizationHeader(),errorInterceptor:r.Po.getHTTPErrorHandler()},h=e.staticWado?new A(l):new i.api.DICOMwebClient(l),f=e.staticWado?new A(u):new i.api.DICOMwebClient(u)},query:{studies:{mapParams:p.bind(),search:async function(t){h.headers=y();const{studyInstanceUid:a,seriesInstanceUid:n,...s}=p(t,{supportsFuzzyMatching:e.supportsFuzzyMatching,supportsWildcard:e.supportsWildcard})||{};return d(await m(h,0,0,s))},processResults:d.bind()},series:{search:async function(e){h.headers=y();return function(e){const t=[];return e&&e.length&&e.forEach((e=>t.push({studyInstanceUid:c(e["0020000D"]),seriesInstanceUid:c(e["0020000E"]),modality:c(e["00080060"]),seriesNumber:c(e["00200011"]),seriesDate:r.utils.formatDate(c(e["00080021"])),numSeriesInstances:Number(c(e["00201209"])),description:c(e["0008103E"])}))),(0,o.IO)(t),t}(await function(e,t){const a={includefield:["0008103E","00080021"].join(",")};return e.searchForSeries({studyInstanceUID:t,queryParams:a})}(h,e))}},instances:{search:(e,t)=>(h.headers=y(),m.call(void 0,h,e,null,t))}},retrieve:{directURL:t=>L({wadoRoot:e.wadoRoot,singlepart:e.singlepart},t),bulkDataURI:async({StudyInstanceUID:e,BulkDataURI:t})=>{h.headers=y();const a={multipart:!1,BulkDataURI:t,StudyInstanceUID:e};return h.retrieveBulkData(a).then((e=>e&&e[0]||void 0))},series:{metadata:async({StudyInstanceUID:t,filters:a,sortCriteria:n,sortFunction:s,madeInClient:i=!1,returnPromises:r=!1}={})=>{if(!t)throw new Error("Unable to query for SeriesMetadata without StudyInstanceUID");return e.enableStudyLazyLoad?I._retrieveSeriesMetadataAsync(t,a,n,s,i,r):I._retrieveSeriesMetadataSync(t,a,n,s,i)}}},store:{dicom:async(e,t,a)=>{if(f.headers=y(),e instanceof ArrayBuffer){const a={datasets:[e],request:t};await f.storeInstances(a)}else{let n=a;if(!a){const t={FileMetaInformationVersion:e._meta?.FileMetaInformationVersion?.Value,MediaStorageSOPClassUID:e.SOPClassUID,MediaStorageSOPInstanceUID:e.SOPInstanceUID,TransferSyntaxUID:"1.2.840.10008.1.2.1",ImplementationClassUID:"2.25.270695996825855179949881587723571202391.2.0.0",ImplementationVersionName:"OHIF-VIEWER-2.0.0"},a=q(t),s=new F(a);s.dict=q(e),n=s}const s={datasets:[n.write()],request:t};await f.storeInstances(s)}}},_retrieveSeriesMetadataSync:async(t,a,n,s,i)=>{f.headers=S();const o=(await C(f,t,!1,a,n,s,e)).map(_),c={},l={};o.forEach((a=>{c[a.SeriesInstanceUID]||(c[a.SeriesInstanceUID]={StudyInstanceUID:a.StudyInstanceUID,StudyDescription:a.StudyDescription,SeriesInstanceUID:a.SeriesInstanceUID,SeriesDescription:a.SeriesDescription,SeriesNumber:a.SeriesNumber,SeriesTime:a.SeriesTime,SOPClassUID:a.SOPClassUID,ProtocolName:a.ProtocolName,Modality:a.Modality}),l[a.SeriesInstanceUID]||(l[a.SeriesInstanceUID]=[]);const n=I.getImageIdsForInstance({instance:a});a.imageId=n,a.wadoRoot=e.wadoRoot,a.wadoUri=e.wadoUri,$.addImageIdToUIDs(n,{StudyInstanceUID:t,SeriesInstanceUID:a.SeriesInstanceUID,SOPInstanceUID:a.SOPInstanceUID}),l[a.SeriesInstanceUID].push(a)}));const u=Object.values(c);return r.DicomMetadataStore.addSeriesMetadata(u,i),Object.keys(l).forEach((e=>r.DicomMetadataStore.addInstances(l[e],i))),c},_retrieveSeriesMetadataAsync:async(t,a,n,s,i=!1,o=!1)=>{f.headers=S();const{preLoadData:c,promises:l}=await C(f,t,!0,a,n,s,e),u=t=>{const a=_(t);return e.bulkDataURI?.enabled?(Object.keys(a).forEach((t=>{const n=a[t];n&&n.BulkDataURI&&!n.Value&&(V(n,a,e),n.retrieveBulkData=(e={})=>{const{mediaType:t}=e,s={multipart:!1,BulkDataURI:n.BulkDataURI,StudyInstanceUID:a.StudyInstanceUID,mediaTypes:t?[{mediaType:t},{mediaType:"application/octet-stream"}]:void 0,...e};return h.retrieveBulkData(s).then((e=>{const t=e instanceof Array&&e.find((e=>e?.byteLength))||void 0;return n.Value=t,t}))})})),a):a};function d(){const e=r.DicomMetadataStore.getStudy(t);e&&(e.isLoaded=!0)}c.forEach((e=>{e.StudyInstanceUID=t})),r.DicomMetadataStore.addSeriesMetadata(c,i);const m=l.map((a=>(o||a?.start(),a.then((a=>{!function(a){const n=a.map(u);n.forEach((a=>{a.wadoRoot=e.wadoRoot,a.wadoUri=e.wadoUri;const n=I.getImageIdsForInstance({instance:a});a.imageId=n,$.addImageIdToUIDs(n,{StudyInstanceUID:t,SeriesInstanceUID:a.SeriesInstanceUID,SOPInstanceUID:a.SOPInstanceUID})})),r.DicomMetadataStore.addInstances(n,i)}(a)})))));return o?(Promise.all(m).then((()=>d())),l):(await Promise.all(m),d(),c)},deleteStudyMetadataPromise:x,getImageIdsForDisplaySet(e){const t=e.images,a=[];return t?(e.images.forEach((e=>{const t=e.NumberOfFrames;if(t>1)for(let n=1;n<=t;n++){const t=this.getImageIdsForInstance({instance:e,frame:n});a.push(t)}else{const t=this.getImageIdsForInstance({instance:e});a.push(t)}})),a):a},getImageIdsForInstance:({instance:t,frame:a})=>g({instance:t,frame:a,config:e}),getConfig:()=>s,getStudyInstanceUIDs({params:e,query:t}){const{StudyInstanceUIDs:a}=e,n=r.utils.splitComma(t.getAll("StudyInstanceUIDs")),s=n.length&&n||a;return s&&Array.isArray(s)?s:[s]}};var v;return e.supportsReject&&(I.reject=(v=e.wadoRoot,{series:(e,t)=>new Promise(((a,n)=>{const s=`${v}/studies/${e}/series/${t}/reject/113001%5EDCM`,i=new XMLHttpRequest;i.open("POST",s,!0),console.log(i),i.onreadystatechange=function(){if(4==i.readyState)switch(i.status){case 204:a(i.responseText);break;case 404:n("Your dataSource does not support reject functionality")}},i.send()}))})),r.Is.create(I)}const z=r.default.classes.MetadataProvider,B={studyInstanceUid:"StudyInstanceUID",patientId:"PatientID"};let j={urls:[],studyInstanceUIDMap:new Map};function Z(e){return Object.keys(e).reduce(((t,a)=>("object"==typeof e[a]&&null!==e[a]?t[a]=Z(e[a]):t[a]=e[a],a.endsWith("Sequence")&&(t[a]=r.default.utils.addAccessors(t[a])),t)),Array.isArray(e)?[]:{})}const H=(e,t)=>{let a=[];return j.urls.map((n=>{n.studies.map((n=>{n[e]===t&&a.push(n)}))})),a};function W(e){const{wadoRoot:t}=e,a={initialize:async({query:e,url:t})=>{t||(t=e.get("url"));let a=(e=>j.urls.find((t=>t.url===e)))(t);if(a)return a.studies.map((e=>e.StudyInstanceUID));const n=await fetch(t),s=await n.json();let i,r;s.studies.forEach((e=>{i=e.StudyInstanceUID,e.series.forEach((e=>{r=e.SeriesInstanceUID,e.instances.forEach((e=>{const{url:t,metadata:a}=e;z.addImageIdToUIDs(t,{StudyInstanceUID:i,SeriesInstanceUID:r,SOPInstanceUID:a.SOPInstanceUID})}))}))})),j.urls.push({url:t,studies:[...s.studies]}),j.studyInstanceUIDMap.set(t,s.studies.map((e=>e.StudyInstanceUID)))},query:{studies:{mapParams:()=>{},search:async e=>{const[t,a]=Object.entries(e)[0];return H(B[t],a).map((e=>({accession:e.AccessionNumber,date:e.StudyDate,description:e.StudyDescription,instances:e.NumInstances,modalities:e.Modalities,mrn:e.PatientID,patientName:e.PatientName,studyInstanceUid:e.StudyInstanceUID,NumInstances:e.NumInstances,time:e.StudyTime})))},processResults:()=>{console.warn(" DICOMJson QUERY processResults not implemented")}},series:{search:()=>{console.warn(" DICOMJson QUERY SERIES SEARCH not implemented")}},instances:{search:()=>{console.warn(" DICOMJson QUERY instances SEARCH not implemented")}}},retrieve:{directURL:t=>L(e,t),series:{metadata:async({filters:e,StudyInstanceUID:t,madeInClient:a=!1,customSort:n}={})=>{if(!t)throw new Error("Unable to query for SeriesMetadata without StudyInstanceUID");const s=H("StudyInstanceUID",t)[0];let i;i=n?n(s.series):s.series;const o=["SeriesInstanceUID","SeriesInstanceUIDs","seriesInstanceUID","seriesInstanceUIDs"].find((t=>e[t]));if(o){const t=e[o];i=i.filter((e=>t.includes(e.SeriesInstanceUID)))}const c=i.map((e=>{const t={StudyInstanceUID:s.StudyInstanceUID,...e};return delete t.instances,t}));r.DicomMetadataStore.addSeriesMetadata(c,a);const l=i.length;i.forEach(((e,n)=>{const i=e.instances.map((t=>{const a={...Z(t.metadata),url:t.url,imageId:t.url,...e,...s};return delete a.instances,delete a.series,a}));var o;o=i,r.DicomMetadataStore.addInstances(o,a),n===l-1&&(r.DicomMetadataStore.getStudy(t,a).isLoaded=!0)}))}}},store:{dicom:()=>{console.warn(" DICOMJson store dicom not implemented")}},getImageIdsForDisplaySet(t){const a=t.images,n=[];return a?(t.images.forEach((t=>{const a=t.NumberOfFrames;if(a>1)for(let s=0;s<a;s++){const a=g({instance:t,frame:s,config:e});n.push(a)}else{const a=g({instance:t,config:e});n.push(a)}})),n):n},getImageIdsForInstance:({instance:e,frame:t})=>g({instance:e,frame:t}),getStudyInstanceUIDs:({params:e,query:t})=>{const a=t.get("url");return j.studyInstanceUIDMap.get(a)}};return r.Is.create(a)}const Y=r.default.classes.MetadataProvider,{EVENTS:X}=r.DicomMetadataStore,Q={SR:!0,SEG:!0,DOC:!0},J=(e,t,a=0)=>e===t?a:e<t?-1:1,K=(e,t)=>{const a=e.instances[0],n=t.instances[0],s=a.Modality,i=n.Modality,r=Q[s],o=Q[i];return r&&o?J(a.SeriesNumber,n.SeriesNumber):r||o?r?-1:1:J(n.SeriesNumber,a.SeriesNumber)};function ee(e){const{name:t}=e,a={initialize:({params:e,query:t})=>{},query:{studies:{mapParams:()=>{},search:e=>r.DicomMetadataStore.getStudyInstanceUIDs().map((e=>{let t=0;const a=new Set,n=r.DicomMetadataStore.getStudy(e);n.series.forEach((e=>{t+=e.instances.length,a.add(e.instances[0].Modality)}));const s=n?.series[0]?.instances[0];if(s)return{accession:s.AccessionNumber,date:s.StudyDate,description:s.StudyDescription,mrn:s.PatientID,patientName:r.utils.formatPN(s.PatientName),studyInstanceUid:s.StudyInstanceUID,time:s.StudyTime,instances:t,modalities:Array.from(a).join("/"),NumInstances:t}})),processResults:()=>{console.warn(" DICOMLocal QUERY processResults not implemented")}},series:{search:e=>r.DicomMetadataStore.getStudy(e).series.map((t=>{const a=t?.instances[0];return{studyInstanceUid:e,seriesInstanceUid:a.SeriesInstanceUID,modality:a.Modality,seriesNumber:a.SeriesNumber,seriesDate:a.SeriesDate,numSeriesInstances:t.instances.length,description:a.SeriesDescription}}))},instances:{search:()=>{console.warn(" DICOMLocal QUERY instances SEARCH not implemented")}}},retrieve:{directURL:e=>{const{instance:t,tag:a,defaultType:n}=e,s=t[a];if(s instanceof Array&&s[0]instanceof ArrayBuffer)return URL.createObjectURL(new Blob([s[0]],{type:n}))},series:{metadata:async({StudyInstanceUID:e,madeInClient:t=!1}={})=>{if(!e)throw new Error("Unable to query for SeriesMetadata without StudyInstanceUID");const a=r.DicomMetadataStore.getStudy(e,t);r.DicomMetadataStore._broadcastEvent(X.SERIES_ADDED,{StudyInstanceUID:e,madeInClient:t}),a.series.forEach((a=>{const{SeriesInstanceUID:n}=a,s=a.instances[0].NumberOfFrames>1;a.instances.forEach(((e,t)=>{const{url:a,StudyInstanceUID:n,SeriesInstanceUID:i,SOPInstanceUID:r}=e;e.imageId=a,Y.addImageIdToUIDs(a,{StudyInstanceUID:n,SeriesInstanceUID:i,SOPInstanceUID:r,frameIndex:s?t:1})})),r.DicomMetadataStore._broadcastEvent(X.INSTANCES_ADDED,{StudyInstanceUID:e,SeriesInstanceUID:n,madeInClient:t})}))}}},store:{dicom:e=>{const t=h.default.data.datasetToBlob(e);var a=URL.createObjectURL(t);window.location.assign(a)}},getImageIdsForDisplaySet(e){const t=e.images,a=[];return t?(e.images.forEach((e=>{const t=e.NumberOfFrames;if(t>1)for(let n=1;n<=t;n++){const t=this.getImageIdsForInstance({instance:e,frame:n});a.push(t)}else{const t=this.getImageIdsForInstance({instance:e});a.push(t)}})),a):a},getImageIdsForInstance({instance:e,frame:t}){const{StudyInstanceUID:a,SeriesInstanceUID:n,SOPInstanceUID:s}=e,i=r.DicomMetadataStore.getInstance(a,n,s);let o=i.url??i.imageId;return void 0!==t&&(o+=`&frame=${t}`),o},deleteStudyMetadataPromise(){console.log("deleteStudyMetadataPromise not implemented")},getStudyInstanceUIDs:({params:e,query:t})=>{const{StudyInstanceUIDs:a}=e,n=t.getAll("StudyInstanceUIDs")||a,s=n&&Array.isArray(n)?n:[n];let i=!1;return s.forEach((e=>{const t=r.DicomMetadataStore.getStudy(e);t&&(t.series=t.series.sort(K),i=!0)})),i?s:[]}};return r.Is.create(a)}function te(e,t){const{name:a}=e;let n;const s={initialize:async({params:e,query:s})=>{const i=s.get("url");if(!i)throw new Error(`No url for '${a}'`);{const a=await fetch(i),r=await a.json();if(!r.servers?.dicomWeb?.[0])throw new Error("Invalid configuration returned by url");n=G(r.servers.dicomWeb[0].configuration,t),n.initialize({params:e,query:s})}},query:{studies:{search:e=>n.query.studies.search(e)},series:{search:(...e)=>n.query.series.search(...e)},instances:{search:(e,t)=>n.query.instances.search(e,t)}},retrieve:{directURL:(...e)=>n.retrieve.directURL(...e),series:{metadata:async(...e)=>n.retrieve.series.metadata(...e)}},store:{dicom:(...e)=>n.store(...e)},deleteStudyMetadataPromise:(...e)=>n.deleteStudyMetadataPromise(...e),getImageIdsForDisplaySet:(...e)=>n.getImageIdsForDisplaySet(...e),getImageIdsForInstance:(...e)=>n.getImageIdsForInstance(...e),getStudyInstanceUIDs({params:e,query:t}){let n=[];const s=t.get("studyInstanceUIDs")||t.get("studyInstanceUids");if(!s)throw new Error(`No studyInstanceUids in request for '${a}'`);return n=s.split(";"),n}};return r.Is.create(s)}var ae=a(44379);const ne={"query.studies.search":{mergeKey:"studyInstanceUid",tagFunc:e=>e},"query.series.search":{mergeKey:"seriesInstanceUid",tagFunc:(e,t)=>(e.forEach((e=>{e.RetrieveAETitle=t,r.DicomMetadataStore.updateSeriesMetadata(e)})),e)}},se=async({mergeMap:e,path:t,args:a,extensionManager:n,dataSourceNames:s,defaultDataSourceName:i})=>{const{mergeKey:r,tagFunc:o}=e[t]||{tagFunc:e=>e},c=Object.values(n.dataSourceDefs),l=c.find((e=>e.sourceName===i)),u=c.filter((e=>e.sourceName!==i));l&&u.unshift(l);const d=[],m=[];for(const e of u){const{configuration:i,sourceName:r}=e;if(i&&s.includes(r)){const[e]=n.getDataSources(r),s=(0,ae.get)(e,t).apply(e,a);d.push(s),m.push(r)}}const p=(await Promise.allSettled(d)).map(((e,t)=>o(e.value,m[t])));let g=[];return g=r?(0,ae.uniqBy)(p.flat(),(e=>(0,ae.get)(e,r))):p.flat(),g},ie=({path:e,args:t,extensionManager:a,dataSourceNames:n,defaultDataSourceName:s})=>{const i=Object.values(a.dataSourceDefs),r=i.find((e=>e.sourceName===s)),o=i.filter((e=>e.sourceName!==s));r&&o.unshift(r);const c=[];for(const s of o){const{configuration:i,sourceName:r}=s;if(i&&n.includes(r)){const[n]=a.getDataSources(r),s=(0,ae.get)(n,e).apply(n,t);c.push(s)}}return c.flat()},re=({path:e,args:t,defaultDataSourceName:a,extensionManager:n})=>{const[s]=n.getDataSources(a);return(0,ae.get)(s,e).apply(s,t)},oe=({path:e,args:t,defaultDataSourceName:a,extensionManager:n})=>{const[s]=t,i=r.DicomMetadataStore.getSeries(s.StudyInstanceUID,s.SeriesInstanceUID),[o]=n.getDataSources(i.RetrieveAETitle||a);return o[e](...t)};function ce(e,t,a){const{seriesMerge:n}=e,{dataSourceNames:s,defaultDataSourceName:i}=n,o={initialize:(...e)=>ie({path:"initialize",args:e,extensionManager:a,dataSourceNames:s,defaultDataSourceName:i}),query:{studies:{search:(...e)=>se({mergeMap:ne,path:"query.studies.search",args:e,extensionManager:a,dataSourceNames:s,defaultDataSourceName:i})},series:{search:(...e)=>se({mergeMap:ne,path:"query.series.search",args:e,extensionManager:a,dataSourceNames:s,defaultDataSourceName:i})},instances:{search:(...e)=>se({mergeMap:ne,path:"query.instances.search",args:e,extensionManager:a,dataSourceNames:s,defaultDataSourceName:i})}},retrieve:{bulkDataURI:(...e)=>se({mergeMap:ne,path:"retrieve.bulkDataURI",args:e,extensionManager:a,dataSourceNames:s,defaultDataSourceName:i}),directURL:(...e)=>re({path:"retrieve.directURL",args:e,defaultDataSourceName:i,extensionManager:a}),series:{metadata:(...e)=>se({mergeMap:ne,path:"retrieve.series.metadata",args:e,extensionManager:a,dataSourceNames:s,defaultDataSourceName:i})}},store:{dicom:(...e)=>re({path:"store.dicom",args:e,defaultDataSourceName:i,extensionManager:a})},deleteStudyMetadataPromise:(...e)=>ie({path:"deleteStudyMetadataPromise",args:e,extensionManager:a,dataSourceNames:s,defaultDataSourceName:i}),getImageIdsForDisplaySet:(...e)=>oe({path:"getImageIdsForDisplaySet",args:e,defaultDataSourceName:i,extensionManager:a}),getImageIdsForInstance:(...e)=>oe({path:"getImageIdsForDisplaySet",args:e,defaultDataSourceName:i,extensionManager:a}),getStudyInstanceUIDs:(...e)=>ie({path:"getStudyInstanceUIDs",args:e,extensionManager:a,dataSourceNames:s,defaultDataSourceName:i})};return r.Is.create(o)}const le=function(){return[{name:"dicomweb",type:"webApi",createDataSource:G},{name:"dicomwebproxy",type:"webApi",createDataSource:te},{name:"dicomjson",type:"jsonApi",createDataSource:W},{name:"dicomlocal",type:"localApi",createDataSource:ee},{name:"merge",type:"mergeApi",createDataSource:ce}]};var ue=a(43001),de=a(3827),me=a.n(de),pe=a(47316),ge=a(52490),he=a(62474),fe=a(69190),ye=a(85066),Se=a(91629);function Ie(){return Ie=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)({}).hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e},Ie.apply(null,arguments)}function ve({servicesManager:e,buttonSection:t="primary"}){const{toolbarButtons:a,onInteraction:n}=(0,r.Sm)({servicesManager:e,buttonSection:t});return a.length?ue.createElement(ue.Fragment,null,a.map((t=>{if(!t)return null;const{id:a,Component:s,componentProps:i}=t,r=ue.createElement(s,Ie({key:a,id:a,onInteraction:n,servicesManager:e},i));return ue.createElement("div",{key:a},r)}))):null}const{availableLanguages:De,defaultLanguage:we,currentLanguage:be}=Se.default;const Ee=function({hotkeysManager:e,extensionManager:t,servicesManager:a,appConfig:n}){const s=(0,he.s0)(),i=(0,ye.TH)(),{t:o}=(0,fe.$G)(),{show:c,hide:l}=(0,pe.dd)(),{hotkeyDefinitions:u,hotkeyDefaults:d}=e,m=[{title:o("Header:Preferences"),icon:"settings",onClick:()=>c({title:o("UserPreferencesModal:User preferences"),content:pe.i1,containerDimensions:"w-[70%] max-w-[900px]",contentProps:{hotkeyDefaults:e.getValidHotkeyDefinitions(d),hotkeyDefinitions:u,currentLanguage:be(),availableLanguages:De,defaultLanguage:we,onCancel:()=>{r.dD.stopRecord(),r.dD.unpause(),l()},onSubmit:({hotkeyDefinitions:t,language:a})=>{a.value!==be().value&&Se.default.changeLanguage(a.value),e.setHotkeys(t),l()},onReset:()=>e.restoreDefaultBindings(),hotkeysModule:r.dD}})}];return n.oidc&&m.push({title:o("Header:Logout"),icon:"power-off",onClick:async()=>{s(`/logout?redirect_uri=${encodeURIComponent(window.location.href)}`)}}),ue.createElement(pe.h4,{menuOptions:m,isReturnEnabled:!!n.showStudyList,onClickReturnButton:()=>{const{pathname:e}=i,a=e.indexOf("/",1),n=new URLSearchParams(window.location.search).get("configUrl"),r=e.substring(a+1),o=t.getDataSources(r),c=new URLSearchParams;-1!==a&&o&&c.append("datasources",e.substring(a+1)),n&&c.append("configUrl",n),s({pathname:"/",search:decodeURIComponent(c.toString())})},WhiteLabeling:n.whiteLabeling,servicesManager:a,Secondary:ue.createElement(ve,{servicesManager:a,buttonSection:"secondary"}),appConfig:n},ue.createElement(pe.SV,{context:"Primary Toolbar"},ue.createElement("div",{className:"relative flex justify-center gap-[4px]"},ue.createElement(ve,{servicesManager:a}))))};function Ce(){return Ce=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)({}).hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e},Ce.apply(null,arguments)}const xe=({servicesManager:e,side:t,activeTabIndex:a,tabs:n,expandedWidth:s,...i})=>{const r=e?.services?.panelService,[o,c]=(0,ue.useState)(!1),[l,u]=(0,ue.useState)(a),[d,m]=(0,ue.useState)(n??r.getPanels(t)),p=(0,ue.useCallback)((()=>{c(!0)}),[]),g=(0,ue.useCallback)((({activeTabIndex:e})=>{u(e)}),[]);return(0,ue.useEffect)((()=>{u(a)}),[a]),(0,ue.useEffect)((()=>{const{unsubscribe:e}=r.subscribe(r.EVENTS.PANELS_CHANGED,(e=>{if(e.position!==t)return;const a=r.getPanels(t);m(a),e.options?.activate&&u(a.length-1)}));return()=>{e()}}),[r,t]),(0,ue.useEffect)((()=>{const e=r.subscribe(r.EVENTS.ACTIVATE_PANEL,(e=>{if(!o||e.forceActive){const t=d.findIndex((t=>t.id===e.panelId));-1!==t&&u(t)}}));return()=>{e.unsubscribe()}}),[d,o,r]),ue.createElement(pe.hs,Ce({},i,{side:t,tabs:d,activeTabIndex:l,onOpen:p,onActiveTabIndexChange:g,expandedWidth:s}))};function Pe({extensionManager:e,servicesManager:t,hotkeysManager:a,commandsManager:n,viewports:s,ViewportGridComp:i,leftPanelClosed:o=!0,rightPanelClosed:c=!1}){const[l]=(0,ge.M)(),{panelService:u,hangingProtocolService:d}=t.services,[m,p]=(0,ue.useState)(l.showLoadingIndicator),g=(0,ue.useCallback)((e=>!!u.getPanels(e).length),[u]),[h,f]=(0,ue.useState)(g("right")),[y,S]=(0,ue.useState)(g("left")),[I,v]=(0,ue.useState)(o),[D,w]=(0,ue.useState)(c);(0,ue.useEffect)((()=>(document.body.classList.add("bg-black"),document.body.classList.add("overflow-hidden"),()=>{document.body.classList.remove("bg-black"),document.body.classList.remove("overflow-hidden")})),[]);(0,ue.useEffect)((()=>{const{unsubscribe:e}=d.subscribe(r.hy.EVENTS.PROTOCOL_CHANGED,(()=>{p(!1)}));return()=>{e()}}),[d]);(0,ue.useEffect)((()=>{const{unsubscribe:e}=u.subscribe(u.EVENTS.PANELS_CHANGED,(({options:e})=>{S(g("left")),f(g("right")),void 0!==e?.leftPanelClosed&&v(e.leftPanelClosed),void 0!==e?.rightPanelClosed&&w(e.rightPanelClosed)}));return()=>{e()}}),[u,g]);const b=s.map((t=>{const{entry:a}=(t=>{const a=e.getModuleEntry(t);if(!a||!a.component)throw new Error(`${t} is not valid for an extension module or no component found from extension ${t}. Please verify your configuration or ensure that the extension is properly registered. It's also possible that your mode is utilizing a module from an extension that hasn't been included in its dependencies (add the extension to the "extensionDependencies" array in your mode's index.js file). Check the reference string to the extension in your Mode configuration`);return{entry:a,content:a.component}})(t.namespace);return{component:a.component,displaySetsToDisplay:t.displaySetsToDisplay}}));return ue.createElement("div",null,ue.createElement(Ee,{hotkeysManager:a,extensionManager:e,servicesManager:t,appConfig:l}),ue.createElement("div",{className:"relative flex w-full flex-row flex-nowrap items-stretch overflow-hidden bg-black",style:{height:"calc(100vh - 52px"}},ue.createElement(ue.Fragment,null,m&&ue.createElement(pe.LE,{className:"h-full w-full bg-black"}),y?ue.createElement(pe.SV,{context:"Left Panel"},ue.createElement(xe,{side:"left",activeTabIndex:I?null:0,servicesManager:t})):null,ue.createElement("div",{className:"flex h-full flex-1 flex-col"},ue.createElement("div",{className:"relative flex h-full flex-1 items-center justify-center overflow-hidden bg-black"},ue.createElement(pe.SV,{context:"Grid"},ue.createElement(i,{servicesManager:t,viewportComponents:b,commandsManager:n})))),h?ue.createElement(pe.SV,{context:"Right Panel"},ue.createElement(xe,{side:"right",activeTabIndex:D?null:0,servicesManager:t})):null)))}Pe.propTypes={extensionManager:me().shape({getModuleEntry:me().func.isRequired}).isRequired,commandsManager:me().instanceOf(r.HQ),servicesManager:me().object.isRequired,leftPanels:me().array,rightPanels:me().array,leftPanelClosed:me().bool.isRequired,rightPanelClosed:me().bool.isRequired,children:me().oneOfType([me().node,me().func]).isRequired,viewports:me().array};const Me=Pe;const{sortStudyInstances:Ne,formatDate:Re,createStudyBrowserTabs:Ue}=r.utils;function Ae({servicesManager:e,getImageSrc:t,getStudiesForPatientByMRN:a,requestDisplaySetCreationForStudy:n,dataSource:s}){const{hangingProtocolService:i,displaySetService:r,uiNotificationService:o}=e.services,c=(0,he.s0)(),{StudyInstanceUIDs:l}=(0,pe.zG)(),[{activeViewportId:u,viewports:d,isHangingProtocolLayout:m},p]=(0,pe.O_)(),[g,h]=(0,ue.useState)("primary"),[f,y]=(0,ue.useState)([...l]),[S,I]=(0,ue.useState)([]),[v,D]=(0,ue.useState)([]),[w,b]=(0,ue.useState)({});(0,ue.useEffect)((()=>{l.forEach((e=>async function(e){const t=await s.query.studies.search({studyInstanceUid:e});if(!t?.length)throw c("/notfoundstudy","_self"),new Error("Invalid study URL");let n=t;try{n=await a(t)}catch(e){console.warn(e)}const i=n.map((e=>({AccessionNumber:e.accession,StudyDate:e.date,StudyDescription:e.description,NumInstances:e.instances,ModalitiesInStudy:e.modalities,PatientID:e.mrn,PatientName:e.patientName,StudyInstanceUID:e.studyInstanceUid,StudyTime:e.time}))).map((e=>({studyInstanceUid:e.StudyInstanceUID,date:Re(e.StudyDate),description:e.StudyDescription,modalities:e.ModalitiesInStudy,numInstances:e.NumInstances})));I((e=>{const t=[...e];for(const a of i)e.find((e=>e.studyInstanceUid===a.studyInstanceUid))||t.push(a);return t}))}(e)))}),[l,s,a,c]),(0,ue.useEffect)((()=>{r.activeDisplaySets.forEach((async e=>{const a={},n=r.getDisplaySetByUID(e.displaySetInstanceUID),i=s.getImageIdsForDisplaySet(n),o=i[Math.floor(i.length/2)];o&&!n?.unsupported&&(a[e.displaySetInstanceUID]=await t(o),b((e=>({...e,...a}))))}))}),[l,s,r,t]),(0,ue.useEffect)((()=>{const e=Te(r.activeDisplaySets,w);Ne(e),D(e)}),[l,w,r]),(0,ue.useEffect)((()=>{const e=r.subscribe(r.EVENTS.DISPLAY_SETS_ADDED,(e=>{const{displaySetsAdded:a,options:n}=e;a.forEach((async e=>{const a={},n=r.getDisplaySetByUID(e.displaySetInstanceUID);if(n?.unsupported)return;const i=s.getImageIdsForDisplaySet(n),o=i[Math.floor(i.length/2)];o&&(a[e.displaySetInstanceUID]=await t(o,e.initialViewport),b((e=>({...e,...a}))))}))}));return()=>{e.unsubscribe()}}),[t,s,r]),(0,ue.useEffect)((()=>{const e=r.subscribe(r.EVENTS.DISPLAY_SETS_CHANGED,(e=>{const t=Te(e,w);D(t)})),t=r.subscribe(r.EVENTS.DISPLAY_SET_SERIES_METADATA_INVALIDATED,(()=>{const e=Te(r.getActiveDisplaySets(),w);D(e)}));return()=>{e.unsubscribe(),t.unsubscribe()}}),[l,w,r]);const E=Ue(l,S,v);const C=d.get(u)?.displaySetInstanceUIDs;return ue.createElement(pe.eX,{tabs:E,servicesManager:e,activeTabName:g,onDoubleClickThumbnail:e=>{let t=[];const a=u;try{t=i.getViewportsRequireUpdate(a,e,m)}catch(e){console.warn(e),o.show({title:"Thumbnail Double Click",message:"The selected display sets could not be added to the viewport.",type:"info",duration:3e3})}p.setDisplaySetsForViewports(t)},activeDisplaySetInstanceUIDs:C,expandedStudyInstanceUIDs:f,onClickStudy:function(e){const t=f.includes(e),a=t?[...f.filter((t=>t!==e))]:[...f,e];if(y(a),!t){n(r,e,!0)}},onClickTab:e=>{h(e)}})}Ae.propTypes={servicesManager:me().object.isRequired,dataSource:me().shape({getImageIdsForDisplaySet:me().func.isRequired}).isRequired,getImageSrc:me().func.isRequired,getStudiesForPatientByMRN:me().func.isRequired,requestDisplaySetCreationForStudy:me().func.isRequired};const Oe=Ae;function Te(e,t){const a=[],n=[];return e.filter((e=>!e.excludeFromThumbnailBrowser)).forEach((e=>{const s=t[e.displaySetInstanceUID],i=function(e){if(Le.includes(e.Modality)||e?.unsupported)return"thumbnailNoImage";return"thumbnail"}(e);("thumbnail"===i?a:n).push({displaySetInstanceUID:e.displaySetInstanceUID,description:e.SeriesDescription||"",seriesNumber:e.SeriesNumber,modality:e.Modality,seriesDate:e.SeriesDate,seriesTime:e.SeriesTime,numInstances:e.numImageFrames,countIcon:e.countIcon,StudyInstanceUID:e.StudyInstanceUID,messages:e.messages,componentType:i,imageSrc:s,dragData:{type:"displayset",displaySetInstanceUID:e.displaySetInstanceUID},isHydratedForDerivedDisplaySet:e.isHydrated})})),[...a,...n]}const Le=["SR","SEG","SM","RTSTRUCT","RTPLAN","RTDOSE"];const Ve=function(e,t){return new Promise(((a,n)=>{const s=document.createElement("canvas");e.utilities.loadImageToCanvas({canvas:s,imageId:t,thumbnail:!0}).then((e=>{a(s.toDataURL())})).catch(n)}))};const ke=async function(e,t){return t&&t.length&&t[0].mrn?e.query.studies.search({patientId:t[0].mrn}):(console.log("No mrn found for",t),t)};const Fe=function(e,t,a,n){t.activeDisplaySets.some((e=>e.StudyInstanceUID===a))||e.retrieve.series.metadata({StudyInstanceUID:a,madeInClient:n})};function _e({commandsManager:e,extensionManager:t,servicesManager:a}){const n=t.getDataSources()[0],s=ke.bind(null,n),i=(0,ue.useCallback)(function(e){const t=e.getModuleEntry("@ohif/extension-cornerstone.utilityModule.common");try{const{cornerstone:e}=t.exports.getCornerstoneLibraries();return Ve.bind(null,e)}catch(e){throw new Error("Required command not found")}}(t),[]),r=Fe.bind(null,n);return ue.createElement(Oe,{servicesManager:a,dataSource:n,getImageSrc:i,getStudiesForPatientByMRN:s,requestDisplaySetCreationForStudy:r})}_e.propTypes={commandsManager:me().object.isRequired,extensionManager:me().object.isRequired,servicesManager:me().object.isRequired};const qe=_e;var $e=a(8324),Ge=a.n($e);const ze={CANCEL:0,CREATE_REPORT:1};function Be(e,{extensionManager:t}){return new Promise((function(a,n){let s;const i=Object.keys(t.dataSourceMap).filter((e=>{const a=t.dataSourceDefs[e]?.configuration;return a?.supportsStow??a?.wadoRoot})).map((e=>({value:e,label:e,placeHolder:e})));s=e.create({centralize:!0,isDraggable:!1,content:pe.Vq,useLastPosition:!1,showOverlay:!0,contentProps:{title:"Create Report",value:{label:"",dataSourceName:t.activeDataSource},noCloseButton:!0,onClose:()=>{e.dismiss({id:s}),a({action:ze.CANCEL,value:void 0,dataSourceName:void 0})},actions:[{id:"cancel",text:"Cancel",type:pe.LZ.dt.secondary},{id:"save",text:"Save",type:pe.LZ.dt.primary}],onSubmit:({action:t,value:n})=>{switch(e.dismiss({id:s}),t.id){case"save":a({action:ze.CREATE_REPORT,value:n.label,dataSourceName:n.dataSourceName});break;case"cancel":a({action:ze.CANCEL,value:void 0,dataSourceName:void 0})}},body:({value:t,setValue:n})=>ue.createElement(ue.Fragment,null,i.length>1&&window.config?.allowMultiSelectExport&&ue.createElement("div",null,ue.createElement("label",{className:"text-[14px] leading-[1.2] text-white"},"Data Source"),ue.createElement(pe.Ph,{closeMenuOnSelect:!0,className:"border-primary-main  mt-2 bg-black",options:i,placeholder:i.find((e=>e.value===t.dataSourceName)).placeHolder,value:t.dataSourceName,onChange:e=>{n((t=>({...t,dataSourceName:e.value})))},isClearable:!1})),ue.createElement("div",{className:"mt-3"},ue.createElement(pe.II,{autoFocus:!0,label:"Enter the report name",labelClassName:"text-white text-[14px] leading-[1.2]",className:"border-primary-main bg-black",type:"text",value:t.label,onChange:e=>{e.persist(),n((t=>({...t,label:e.target.value})))},onKeyPress:n=>{"Enter"===n.key&&(e.dismiss({id:s}),a({action:ze.CREATE_REPORT,value:t.label}))},required:!0})))}})}))}function je(){return ue.createElement("div",{className:"text-primary-active"},"Loading...")}const Ze=async function({servicesManager:e,getReport:t,reportType:a="measurement"}){const{displaySetService:n,uiNotificationService:s,uiDialogService:i}=e.services,o=i.create({showOverlay:!0,isDraggable:!1,centralize:!0,content:je});try{const e=await t();r.DicomMetadataStore.addInstances([e],!0);const i=n.getMostRecentDisplaySet().displaySetInstanceUID;return s.show({title:"Create Report",message:`${a} saved successfully`,type:"success"}),[i]}catch(e){throw s.show({title:"Create Report",message:e.message||`Failed to store ${a}`,type:"error"}),new Error(`Failed to store ${a}. Error: ${e.message||"Unknown error"}`)}finally{i.dismiss({id:o})}};function He(e,t){const a=t.getActiveDisplaySets().filter((e=>"SR"===e.Modality)).find((t=>t.SeriesDescription===e));if(a){console.log("Storing to same series",a);const{instance:e}=a,{SeriesInstanceUID:t,SeriesDescription:n,SeriesDate:s,SeriesTime:i,SeriesNumber:r,Modality:o}=e;return{SeriesInstanceUID:t,SeriesDescription:n,SeriesDate:s,SeriesTime:i,SeriesNumber:r,Modality:o,InstanceNumber:a.instances.length+1}}const n=function(e){const t=e.getActiveDisplaySets().filter((e=>"SR"===e.Modality)).map((e=>e.SeriesNumber));return Math.max(...t,4700)+1}(t);return{SeriesDescription:e,SeriesNumber:n}}const{downloadCSVReport:We}=r.utils;function Ye({servicesManager:e,commandsManager:t,extensionManager:a}){const{t:n}=(0,fe.$G)("MeasurementTable"),[s,i]=(0,pe.O_)(),{activeViewportId:r,viewports:o}=s,{measurementService:c,uiDialogService:l,uiNotificationService:u,displaySetService:d}=e.services,[m,p]=(0,ue.useState)([]);(0,ue.useEffect)((()=>{const e=Ge()(p,100);p(Xe(c));const t=c.EVENTS.MEASUREMENT_ADDED,a=c.EVENTS.RAW_MEASUREMENT_ADDED,n=c.EVENTS.MEASUREMENT_UPDATED,s=c.EVENTS.MEASUREMENT_REMOVED,i=c.EVENTS.MEASUREMENTS_CLEARED,r=[];return[t,a,n,s,i].forEach((t=>{r.push(c.subscribe(t,(()=>{e(Xe(c))})).unsubscribe)})),()=>{r.forEach((e=>{e()})),e.cancel()}}),[]);const g=({uid:e,isActive:t})=>{if(!t){const t=[...m],a=t.find((t=>t.uid===e));t.forEach((t=>t.isActive=t.uid===e)),a.isActive=!0,p(t)}};return ue.createElement(ue.Fragment,null,ue.createElement("div",{className:"ohif-scrollbar overflow-y-auto overflow-x-hidden","data-cy":"measurements-panel"},ue.createElement(pe.wt,{title:n("Measurements"),servicesManager:e,data:m,onClick:({uid:e,isActive:t})=>{c.jumpToMeasurement(s.activeViewportId,e),g({uid:e,isActive:t})},onEdit:({uid:e,isActive:t})=>{const a=c.getMeasurement(e),n=({action:t,value:n})=>{if("save"===t.id)c.update(e,{...a,...n},!0);l.dismiss({id:"enter-annotation"})};l.create({id:"enter-annotation",centralize:!0,isDraggable:!1,showOverlay:!0,content:pe.Vq,contentProps:{title:"Annotation",noCloseButton:!0,value:{label:a.label||""},body:({value:e,setValue:t})=>ue.createElement(pe.II,{label:"Enter your annotation",labelClassName:"text-white text-[14px] leading-[1.2]",autoFocus:!0,id:"annotation",className:"border-primary-main bg-black",type:"text",value:e.label,onChange:e=>{e.persist(),t((t=>({...t,label:e.target.value})))},onKeyPress:t=>{"Enter"===t.key&&n({value:e,action:{id:"save"}})}}),actions:[{id:"cancel",text:"Cancel",type:pe.LZ.dt.secondary},{id:"save",text:"Save",type:pe.LZ.dt.primary}],onSubmit:n}})}})),ue.createElement("div",{className:"flex justify-center p-4"},ue.createElement(pe.EY,{t:n,actions:[{label:"Export",onClick:async function(){const e=c.getMeasurements();We(e,c)}},{label:"Create Report",onClick:async function(){const n=o.get(r),s=c.getMeasurements(),i=d.getDisplaySetByUID(n.displaySetInstanceUIDs[0]),m=s.filter((e=>i.StudyInstanceUID===e.referenceStudyUID));if(m.length<=0)return void u.show({title:"No Measurements",message:"No Measurements are added to the current Study.",type:"info",duration:3e3});const p=await Be(l,{extensionManager:a});if(p.action===ze.CREATE_REPORT){const n=a.getDataSources(p.dataSourceName)[0],s=He(void 0===p.value||""===p.value?"Research Derived Series":p.value,d);return Ze({servicesManager:e,getReport:async()=>t.runCommand("storeMeasurements",{measurementData:m,dataSource:n,additionalFindingTypes:["ArrowAnnotate"],options:s},"CORNERSTONE_STRUCTURED_REPORT")})}}}]})))}function Xe(e){return e.getMeasurements().map(((t,a)=>function(e){const{displayText:t,uid:a,label:n,type:s,selected:i,findingSites:r,finding:o}=e,c=r?.[0],l=n||o?.text||c?.text||"(empty)";let u=t||[];if(r){const e=[];r.forEach((t=>{t?.text!==l&&e.push(t.text)})),u=[...e,...u]}o&&o?.text!==l&&(u=[o.text,...u]);return{uid:a,label:l,baseLabel:n,measurementType:s,displayText:u,baseDisplayText:t,isActive:i,finding:o,findingSites:r}}(t,0,e.VALUE_TYPES)))}Ye.propTypes={servicesManager:me().object.isRequired};var Qe=a(93702),Je=a(16623),Ke=a(62709),et=a(45822),tt=a(8455),at=a(16047),nt=(a(18727),a(54131)),st=a(46576);const it=class{constructor(e){this._extractGroup=e=>{const t=[],a=[];for(this.visitedCells[e[0]]=!0;e.length>0;){const n=e.shift();t.push(n);const s=this.polyData.getCellPoints(n).cellPointIds;for(const t of s)if(!this.visitedPoints[t]){this.visitedPoints[t]=!0,a.push(t);for(const a of this.polyData.getPointCells(t))this.visitedCells[a]||(this.visitedCells[a]=!0,e.push(a))}}return[t,a]},this._buildExtractedPolyData=(e,t)=>{const a=[],n=[],s={};t.forEach(((e,t)=>{s[e]=t;const n=this.polyData.getPoints().getPoint(e);a.push(...n)}));for(const t of e){const e=this.polyData.getCellPoints(t).cellPointIds.map((e=>s[e]));n.push(3),n.push(...e)}const i=st.ZP.newInstance();return i.getPoints().setData(new Float32Array(a),3),i.getPolys().setData(new Uint32Array(n)),i.getPolys().setNumberOfComponents(4),i},this.extractGroups=()=>{const e=[];for(let t=0;t<this.polyData.getNumberOfCells();t++)if(!this.visitedCells[t]){const[a,n]=this._extractGroup([t]),s=this._buildExtractedPolyData(a,n);e.push(s)}return e},console.assert(e.getLinks(),"PolyDataExtractor: No links built for polydata"),this.polyData=e,this.visitedCells=new Array(e.getNumberOfCells()).fill(!1),this.visitedPoints=new Array(e.getNumberOfPoints()).fill(!1)}};var rt=a(32899);const ot=a(33001);class ct{constructor(e){this.add=e=>(this.Axx+=e.Axx,this.Axy+=e.Axy,this.Axz+=e.Axz,this.Ayy+=e.Ayy,this.Ayz+=e.Ayz,this.Azz+=e.Azz,this.bx+=e.bx,this.by+=e.by,this.bz+=e.bz,this.c+=e.c,this),this.getCentroid=e=>{const[t,a,n]=e;return[(t[0]+a[0]+n[0])/3,(t[1]+a[1]+n[1])/3,(t[2]+a[2]+n[2])/3]},this.getNormal=e=>{const[t,a,n]=e;let s=new Array(3),i=new Array(3),r=new Array(3);return rt.ZP.subtract(a,t,s),rt.ZP.subtract(n,t,i),rt.ZP.cross(s,i,r),rt.ZP.normalize(r),r},this.evaluate=e=>{const t=this.Axx*e[0]+this.Axy*e[1]+this.Axz*e[2],a=this.Axy*e[0]+this.Ayy*e[1]+this.Ayz*e[2],n=this.Axz*e[0]+this.Ayz*e[1]+this.Azz*e[2];return e[0]*t+e[1]*a+e[2]*n+2*(e[0]*this.bx+e[1]*this.by+e[2]*this.bz)+this.c},this.optimalPoint=e=>{let t=this.Azz*this.Ayy-this.Ayz*this.Ayz,a=this.Axz*this.Ayz-this.Azz*this.Axy,n=this.Axy*this.Ayz-this.Axz*this.Ayy,s=this.Azz*this.Axx-this.Axz*this.Axz,i=this.Axy*this.Axz-this.Axx*this.Ayz,r=this.Axx*this.Ayy-this.Axy*this.Axy,o=this.Axx*t+this.Axy*a+this.Axz*n;return ot.abs(o)>1e-9&&(o=1/o,t*=o,a*=o,n*=o,s*=o,i*=o,r*=o,e[0]=-(t*this.bx+a*this.by+n*this.bz),e[1]=-(a*this.bx+s*this.by+i*this.bz),e[2]=-(n*this.bx+i*this.by+r*this.bz),!0)};const t=this.getNormal(e),a=this.getCentroid(e);this.Axx=t[0]*t[0],this.Axy=t[0]*t[1],this.Axz=t[0]*t[2],this.Ayy=t[1]*t[1],this.Ayz=t[1]*t[2],this.Azz=t[2]*t[2];const n=this.Axx*a[0]+this.Axy*a[1]+this.Axz*a[2],s=this.Axy*a[0]+this.Ayy*a[1]+this.Ayz*a[2],i=this.Axz*a[0]+this.Ayz*a[1]+this.Azz*a[2];this.bx=-n,this.by=-s,this.bz=-i,this.c=ot.dot(a,[n,s,i])}}function lt(e,t,a,n){this.v1Id=e,this.v2Id=t,this.cost=a,this.v_=n}const ut=class{constructor(e,t=.5){this.copy=e=>{const t=st.ZP.newInstance();return t.getPoints().setData(e.getPoints().getTuples(),3),t.getPolys().setData(e.getPolys().getTuples()),t.getPolys().setNumberOfComponents(4),t},this.setTargetReduction=e=>{this.target_reduction=e},this.initLines=()=>{const e=new Set;for(let t=0;t<this.polyData.getNumberOfCells();t++){const a=this.polyData.getCellPoints(t).cellPointIds,[n,s,i]=a.sort(((e,t)=>e-t));e.add(`${n}-${s}`),e.add(`${n}-${i}`),e.add(`${s}-${i}`)}console.log(e.size);return Array.from(e).sort(((e,t)=>{const[a,n]=e.split("-").map(Number),[s,i]=t.split("-").map(Number);return a-s||n-i}))},this.initNeighbors=()=>{let e=Array.from({length:this.polyData.getNumberOfPoints()},(()=>new Set));for(const t of this.lines){const[a,n]=t.split("-").map(Number);e[a].add(n),e[n].add(a)}return e},this.initQuadricMatrices=()=>{let e=Array.from({length:this.polyData.getNumberOfPoints()});for(let t=0;t<this.polyData.getNumberOfCells();t++){const a=Array.from(this.polyData.getCellPoints(t).cellPointIds),n=a.map((e=>this.points.getPoint(e))),s=new ct(n);for(const t of a)e[t]?e[t].add(s):e[t]=s}return e},this._computeQ_V_Cost=(e,t)=>{const a=this.qMatrices[e],n=this.qMatrices[t],s=a.add(n);let i,r=Array.from({length:3});if(s.optimalPoint(r))i=s.evaluate(r);else{const a=this.points.getPoint(e),n=this.points.getPoint(t),o=[(a[0]+n[0])/2,(a[1]+n[1])/2,(a[2]+n[2])/2],c=s.evaluate(a),l=s.evaluate(n),u=s.evaluate(o);c<l&&c<u?(r=a,i=c):l<u?(r=n,i=l):(r=o,i=u)}return[s,r,i]},this.initPairCosts=()=>{let e=Array.from({length:this.lines.length}).fill(!1);const t=this.lines.length;return console.log(`QuadricDecimation - vertex pairs: ${t}`),this.lines.forEach(((t,a)=>{const[n,s]=t.split("-").map(Number),[i,r,o]=this._computeQ_V_Cost(n,s),c=new lt(Number(n),Number(s),o,r);e[a]=c})),e},this.buildMinHeap=()=>{const e=this.pairCosts.length;for(let t=~~(e/2)-1;t>=0;t--)this.heapify(t,e)},this.heapify=(e,t)=>{const a=this.pairCosts,n=2*e+1,s=2*e+2;let i=e;n<t&&a[n].cost<a[i].cost&&(i=n),s<t&&a[s].cost<a[i].cost&&(i=s),i!==e&&([a[e],a[i]]=[a[i],a[e]],this.heapify(i,t))},this.extractMin=()=>{if(0===this.pairCosts.length)return null;const e=this.pairCosts[0];return this.pairCosts[0]=this.pairCosts.pop(),this.heapify(0,this.pairCosts.length),e},this._updateCells=e=>{const t=e.v1Id,a=e.v2Id,n=this.polyData.getCellEdgeNeighbors(-1,t,a);for(const e of n){const t=this.polyData.getCellPoints(e).cellPointIds;for(const a of t)this.polyData.getLinks().removeCellReference(e,a);this.polyData.getCells().deleteCell(e),this.currentNumberOfCells--,this.deletedCells[e]=!0}for(const e of this.polyData.getPointCells(a))if(!this.deletedCells[e]){let s=this.polyData.getCellPoints(e).cellPointIds;s=s.map((e=>e===a?t:e)),this.polyData.getPolys().setTuple(e,[3,...s]),n.includes(e)||this.polyData.getLinks().insertNextCellReference(t,e)}},this._updatePoints=e=>{const t=e.v1Id,a=e.v2Id,n=e.v_;this.points.setPoint(t,n[0],n[1],n[2]),this.deletedPoints[a]=!0,this.polyData.getLinks().deletePoint(a),--this.currentNumberOfPoints},this._updatePairCosts=e=>{const t=e.v1Id,a=e.v2Id;for(let e=0;e<this.pairCosts.length;e++){const n=this.pairCosts[e].v1Id,s=this.pairCosts[e].v2Id;if(n===t||s===t){const[t,a,i]=this._computeQ_V_Cost(n,s);this.pairCosts[e]=new lt(n,s,i,a)}else if(n===a||s===a){const i=n!==a?n:s,[r,o]=[t,i].sort(((e,t)=>e-t)),[c,l,u]=this._computeQ_V_Cost(r,o);if(this.pairCosts.some((e=>e.v1Id===r&&e.v2Id===o))){const t=this.pairCosts.length-1;[this.pairCosts[e],this.pairCosts[t]]=[this.pairCosts[t],this.pairCosts[e]],this.pairCosts.pop(),e--}else this.pairCosts[e]=new lt(r,o,u,l)}}},this._removeDegenerate=e=>{if(this.deletedPoints[e])return;for(const t of this.polyData.getPointCells(e)){const e=this.polyData.getCellPoints(t).cellPointIds;for(const a of e)this.polyData.getLinks().removeCellReference(t,a);this.polyData.getCells().deleteCell(t),this.currentNumberOfCells--,this.deletedCells[t]=!0}this.deletedPoints[e]=!0,this.polyData.getLinks().deletePoint(e),--this.currentNumberOfPoints;for(let t=0;t<this.pairCosts.length;t++){let a=this.pairCosts[t];if(a.v1Id===e||a.v2Id===e){const e=this.pairCosts.length-1;[this.pairCosts[t],this.pairCosts[e]]=[this.pairCosts[e],this.pairCosts[t]],this.pairCosts.pop(),t--}}const t=Array.from(this.neighbors[e]);for(const a of t)this.neighbors[a].delete(e);this.neighbors[e].clear()},this._updateNeighbors=e=>{const t=e.v1Id,a=e.v2Id,n=Array.from(this.neighbors[a]);for(const e of n)this.neighbors[e].delete(a),e!==t&&(this.neighbors[e].add(t),this.neighbors[t].add(e));this.neighbors[a].clear()},this.decimate=()=>{if(this.targetReduction<=0||this.targetReduction>=1)return this.polyData;const e=this.polyData.getNumberOfCells(),t=this.polyData.getNumberOfPoints(),a=~~(this.targetReduction*e);for(this.deletedCells=Array.from({length:e}).fill(!1),this.deletedPoints=Array.from({length:t}).fill(!1),this.buildMinHeap();this.currentNumberOfCells>a;){(e-this.currentNumberOfCells)%100==0&&console.log("QuadricDecimation - cells destroyed: "+(e-this.currentNumberOfCells)+" / "+(e-a));const t=this.extractMin();this._updateCells(t),this._updatePoints(t),this._updatePairCosts(t),this.buildMinHeap()}let n=[],s=[],i=Array.from({length:t}).fill(-1),r=0;for(let e=0;e<t;e++)this.deletedPoints[e]||(n.push(...this.points.getPoint(e)),i[e]=r,r++);for(let t=0;t<e;t++)if(!this.deletedCells[t]){s.push(3);let e=this.polyData.getCellPoints(t).cellPointIds;e=e.map((e=>i[e])),s.push(...Array.from(e))}const o=st.ZP.newInstance();return o.getPoints().setData(new Float32Array(n),3),o.getPolys().setData(new Uint32Array(s)),o.getPolys().setNumberOfComponents(4),o},console.log("QuadricDecimation: Init QuadricDecimator"),this.polyData=this.copy(e),this.targetReduction=t,this.points=this.polyData.getPoints(),this.polyData.getLinks()||(console.log("QuadricDecimation: Build Links"),this.polyData.buildLinks()),console.log("QuadricDecimation: Init Lines"),this.lines=this.initLines(),console.log("QuadricDecimation: Init QMatrices"),this.qMatrices=this.initQuadricMatrices(),console.log("QuadricDecimation: Init PairCosts"),this.pairCosts=this.initPairCosts(),this.currentNumberOfCells=this.polyData.getNumberOfCells(),this.currentNumberOfPoints=this.polyData.getNumberOfPoints()}};var dt=a(90643),mt=a(61316),pt=a(5193),gt=a(44031),ht=a(68470),ft=a(29699),yt=a(59474),St=a(56529);const{vtkErrorMacro:It,vtkDebugMacro:vt}=ht.m;const Dt={contourValue:0,contourValueMax:4096,computeNormals:!1,mergePoints:!1};function wt(e,t){let a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};Object.assign(t,Dt,a),ht.m.obj(e,t),ht.m.algo(e,t,1,1),ht.m.setGet(e,t,["contourValue","contourValueMax","computeNormals","mergePoints"]),ht.m.algo(e,t,1,1),function(e,t){t.classHierarchy.push("imageMarchingCubes");const a=[],n=[],s=[],i=[],r=ft.Z.newInstance();e.getVoxelScalars=(e,t,s,i,r,o,c,l)=>{a[0]=s*i+t*r[0]+e,a[1]=a[0]+1,a[2]=a[0]+r[0],a[3]=a[2]+1,a[4]=a[0]+i,a[5]=a[4]+1,a[6]=a[4]+r[0],a[7]=a[6]+1;for(let e=0;e<8;++e)n[e]=l[a[e]]},e.getVoxelPoints=(e,t,a,n,s)=>{const r=n[0]+e*s[0],o=n[1]+t*s[1],c=n[2]+a*s[2];i[0]=[r,o,c],i[1]=[r+s[0],o,c],i[2]=[r,o+s[1],c],i[3]=[r+s[0],o+s[1],c],i[4]=[r,o,c+s[2]],i[5]=[r+s[0],o,c+s[2]],i[6]=[r,o+s[1],c+s[2]],i[7]=[r+s[0],o+s[1],c+s[2]]},e.getPointGradient=(e,t,a,n,s,i,r,o)=>{let c,l;0===e?(c=r[e+1+t*n[0]+a*s],l=r[e+t*n[0]+a*s],o[0]=(l-c)/i[0]):e===n[0]-1?(c=r[e+t*n[0]+a*s],l=r[e-1+t*n[0]+a*s],o[0]=(l-c)/i[0]):(c=r[e+1+t*n[0]+a*s],l=r[e-1+t*n[0]+a*s],o[0]=.5*(l-c)/i[0]),0===t?(c=r[e+(t+1)*n[0]+a*s],l=r[e+t*n[0]+a*s],o[1]=(l-c)/i[1]):t===n[1]-1?(c=r[e+t*n[0]+a*s],l=r[e+(t-1)*n[0]+a*s],o[1]=(l-c)/i[1]):(c=r[e+(t+1)*n[0]+a*s],l=r[e+(t-1)*n[0]+a*s],o[1]=.5*(l-c)/i[1]),0===a?(c=r[e+t*n[0]+(a+1)*s],l=r[e+t*n[0]+a*s],o[2]=(l-c)/i[2]):a===n[2]-1?(c=r[e+t*n[0]+a*s],l=r[e+t*n[0]+(a-1)*s],o[2]=(l-c)/i[2]):(c=r[e+t*n[0]+(a+1)*s],l=r[e+t*n[0]+(a-1)*s],o[2]=.5*(l-c)/i[2])},e.getVoxelGradients=(t,a,n,i,r,o,c)=>{const l=[];e.getPointGradient(t,a,n,i,r,o,c,l),s[0]=l,e.getPointGradient(t+1,a,n,i,r,o,c,l),s[1]=l,e.getPointGradient(t,a+1,n,i,r,o,c,l),s[2]=l,e.getPointGradient(t+1,a+1,n,i,r,o,c,l),s[3]=l,e.getPointGradient(t,a,n+1,i,r,o,c,l),s[4]=l,e.getPointGradient(t+1,a,n+1,i,r,o,c,l),s[5]=l,e.getPointGradient(t,a+1,n+1,i,r,o,c,l),s[6]=l,e.getPointGradient(t+1,a+1,n+1,i,r,o,c,l),s[7]=l},e.produceTriangles=(o,c,l,u,d,m,p,g,h,f,y,S,I,v)=>{const D=[1,2,4,8,16,32,64,128],w=[0,1,3,2,4,5,7,6],b=new Float32Array(3),E=new Float32Array(3);let C;e.getVoxelScalars(l,u,d,p,g,h,f,y);let x=0;for(let e=0;e<8;e++){const t=n[w[e]];t>o&&t<c&&(x|=D[e])}const P=St.Z.getCase(x);if(!(P[0]<0)){e.getVoxelPoints(l+m[0],u+m[2],d+m[4],h,f),t.computeNormals&&e.getVoxelGradients(l,u,d,g,p,f,y);for(let e=0;P[e]>=0;e+=3){I.push(3);for(let l=0;l<3;l++){const u=St.Z.getEdge(P[e+l]);if(C=void 0,t.mergePoints&&(C=r.isInsertedEdge(a[u[0]],a[u[1]])?.value),void 0===C){const e=((n[u[0]]<=o||n[u[1]]<=o?o:c)-n[u[0]])/(n[u[1]]-n[u[0]]),l=i[u[0]],d=i[u[1]];if(b[0]=l[0]+e*(d[0]-l[0]),b[1]=l[1]+e*(d[1]-l[1]),b[2]=l[2]+e*(d[2]-l[2]),C=S.length/3,S.push(b[0],b[1],b[2]),t.computeNormals){const t=s[u[0]],a=s[u[1]];E[0]=t[0]+e*(a[0]-t[0]),E[1]=t[1]+e*(a[1]-t[1]),E[2]=t[2]+e*(a[2]-t[2]),(0,yt.l)(E),v.push(E[0],E[1],E[2])}t.mergePoints&&r.insertEdge(a[u[0]],a[u[1]],C)}I.push(C)}}}},e.requestData=(a,n)=>{const s=a[0];if(!s)return void It("Invalid or missing input");console.time("mcubes");const i=s.getOrigin(),o=s.getSpacing(),c=s.getDimensions(),l=s.getPointData().getScalars().getData(),u=[],d=[],m=[],p=s.getExtent(),g=c[0]*c[1];for(let a=0;a<c[2]-1;++a)for(let n=0;n<c[1]-1;++n)for(let s=0;s<c[0]-1;++s)e.produceTriangles(t.contourValue,t.contourValueMax,s,n,a,p,g,c,i,o,l,u,d,m);r.initialize();const h=st.ZP.newInstance();if(h.getPoints().setData(new Float32Array(u),3),h.getPolys().setData(new Uint32Array(d)),h.getPolys().setNumberOfComponents(4),t.computeNormals){const e=new Float32Array(m),t=nt.default.newInstance({numberOfComponents:3,values:e,name:"Normals"});h.getPointData().setNormals(t)}n[0]=h,vt("Produced output"),console.timeEnd("mcubes")}}(e,t)}var bt={newInstance:ht.m.newInstance(wt,"imageMarchingCubes"),extend:wt};a(44379);const Et=(e=>{let t=e%2147483647;return()=>(t=16807*t%2147483647,t/2147483647)})(42);function Ct({commandsManager:e,extensionManager:t,servicesManager:a}){const[n,s]=(0,ue.useState)(new Array(100).fill(0)),[i,r]=(0,ue.useState)("50"),[o,c]=(0,ue.useState)("0"),[l,u]=(0,ue.useState)("50"),[d,m]=(0,ue.useState)("20"),[p,g]=(0,ue.useState)("450"),[h,f]=(0,ue.useState)("1200"),y=(0,ue.useRef)(!0),{StudyInstanceUIDs:S}=(0,pe.zG)(),[{activeViewportId:I,viewports:v},D]=(0,pe.O_)(),{cornerstoneViewportService:w,hangingProtocolService:b,uiNotificationService:E}=a.services;(0,ue.useEffect)((()=>{const t=D.getState();console.log("STATE",t),console.log("HP",b.getActiveProtocol()),"mprAnd3DVolumeViewport"!==b.getActiveProtocol().protocol.id&&e.runCommand("toggleHangingProtocol",{protocolId:"mprAnd3DVolumeViewport",stageIndex:0})}),[]),(0,ue.useEffect)((()=>{if(y.current)return void(y.current=!1);const e=Array.from(v.values()).find((e=>"volume3d"===e.viewportOptions.viewportType));console.assert(e,'UseEffect Threshold: Could not find "volume3d" viewport'),D.setActiveViewportId(e.viewportId);const t=w.getCornerstoneViewport(e.viewportId),a=t.getActors();if(!a||!a.length)return void E.show({title:"Edition 3D export",message:"No actor on 3d viewport",type:"error",duration:3e3});const n=pt.ZP.newInstance();n.addRGBPoint(-1e3,0,0,0),n.addRGBPoint(+d,1,0,.031),n.addRGBPoint(+p,1,.458,.105),n.addRGBPoint(+h,1,.882,.207),n.addRGBPoint(3095,1,1,1);const s=gt.ZP.newInstance();s.addPoint(-1e3,0),s.addPoint(+d,.05),s.addPoint(+p,.3),s.addPoint(+h,1),s.addPoint(3095,1),a.forEach((e=>{const t=e.actor;t.getProperty().setRGBTransferFunction(0,n),t.getProperty().setScalarOpacity(0,s)})),(0,Ke.getEnabledElement)(t.element).viewport.render()}),[d,p,h]);return ue.createElement("div",{style:{width:"100%",display:"flex",flexDirection:"column",justifyContent:"space-evenly",height:"50%"}},ue.createElement(pe.zx,{onClick:async()=>{const t=Array.from(v.values()).find((e=>"volume3d"===e.viewportOptions.viewportType));console.assert(t,'FocusOn: Could not find "volume3d" viewport');const a=v.size>1?Array.from(v.keys())[1]:"default";await D.setActiveViewportId(a),e.runCommand("toggleOneUp",{})}},"Volume Zoom In / Out"),ue.createElement("p",{style:{color:"white",fontSize:"larger"}},"Volume rendering"),ue.createElement("div",{style:{display:"inline-flex",width:"100%",justifyContent:"flex-start"}},ue.createElement("p",{style:{color:"white"}},`Airway -> Skin threshold: ${d}`)),ue.createElement("input",{type:"range",min:"-1000",max:p,value:d,className:"slider",id:"myRange",step:"1",onChange:e=>m(e.target.value)}),ue.createElement("div",{style:{display:"inline-flex",width:"100%",justifyContent:"flex-start"}},ue.createElement("p",{style:{color:"white"}},`Skin -> Bone threshold: ${p}`)),ue.createElement("input",{type:"range",min:d,max:h,value:p,className:"slider",id:"myRange",step:"1",onChange:e=>g(e.target.value)}),ue.createElement("div",{style:{display:"inline-flex",width:"100%",justifyContent:"flex-start"}},ue.createElement("p",{style:{color:"white"}},`Bone -> Tooth threshold: ${h}`)),ue.createElement("input",{type:"range",min:p,max:"3095",value:h,className:"slider",id:"myRange",step:"1",onChange:e=>f(e.target.value)}),ue.createElement("p",{style:{color:"white",fontSize:"larger"}},"Mesh rendering"),ue.createElement("div",{style:{display:"inline-flex",width:"100%",justifyContent:"flex-start"}},ue.createElement("p",{style:{color:"white"}},`CT value for mesh: ${o}`)),ue.createElement("input",{type:"range",min:"-1000",max:"3095",value:o,className:"slider",id:"myRange",step:"1",onChange:e=>c(e.target.value)}),ue.createElement("div",{style:{display:"inline-flex",width:"100%",justifyContent:"flex-start"}},ue.createElement("p",{style:{color:"white"}},`Target Reduction: ${l}%`)),ue.createElement("input",{type:"range",min:"0",max:"100",value:l,className:"slider",id:"myRange",step:"1",onChange:e=>u(e.target.value)}),ue.createElement(pe.zx,{onClick:()=>{let e=w.getCornerstoneViewport("default").getImageData().imageData;const t=Array.from(v.values()).find((e=>"volume3d"===e.viewportOptions.viewportType));console.assert(t,'MarchingCubes: Could not find "volume3d" viewport'),D.setActiveViewportId(t.viewportId),console.log("Marching cubes - Preprocessing");let a=[];const n=o,s=n<d?"airways":n<p?"skin":n<h?"bones":"teeth";if("airways"==s){const t=tt.ZP.newInstance();t.shallowCopy(e);const a=at.ZP.newInstance();a.setCroppingPlanes([0,400,50,400,75,280]),a.setInputData(t),e=a.getOutputData()}console.log(`Marching cubes - Processing ${s}`);const i=bt.newInstance({contourValue:n,computeNormals:!1,mergePoints:!0});i.setInputData(e);const r=i.getOutputData();r.buildLinks();const c=Qe.default.newInstance();c.setInputData(r);const u=Je.ZP.newInstance();u.setMapper(c),"airways"==s?u.getProperty().setDiffuseColor(Et(),Et(),Et()):"skin"==s?u.getProperty().setDiffuseColor(.88,.55,.55):"bones"==s?u.getProperty().setDiffuseColor(.9,.85,.77):"teeth"==s&&u.getProperty().setDiffuseColor(1,1,1),u.getProperty().setOpacity(1),u.getProperty().setBackfaceCulling(!0),console.log("Marching cubes - Separating airways");const m=new it(r).extractGroups(),g=m.map(((e,t)=>({index:t,size:e.getNumberOfCells()})));g.sort(((e,t)=>t.size-e.size));const f=Array.from({length:10},((e,t)=>t)),y=f.map((e=>g[e])).map((e=>m[e.index])),S=Number(l)/100;y.map(((e,t)=>{let n=e;if(S>0&&S<1){n=new ut(e,S).decimate()}const s=Qe.default.newInstance();s.setInputData(n);const i=Je.ZP.newInstance();i.setMapper(s),i.getProperty().setColor(Et(),Et(),Et()),i.getProperty().setOpacity(1),i.getProperty().setBackfaceCulling(!1),a.push({uid:`airway_${t}`,actor:i})}));const I=et.ZP.newInstance();I.setInputData(u);const b=Qe.default.newInstance();b.setInputConnection(I.getOutputPort());const E=Je.ZP.newInstance();E.setMapper(b),E.getProperty().setColor(1,1,0),E.getProperty().setOpacity(1),a.push({uid:"outline",actor:E}),console.log("Marching cubes - Display"),(e=>{const t=Array.from(v.values()).find((e=>"volume3d"===e.viewportOptions.viewportType));console.assert(t,'DisplayMarchingCubes: Could not find "volume3d" viewport'),D.setActiveViewportId(t.viewportId);const a=w.getCornerstoneViewport(t.viewportId);a.setActors(e);const n=a.getRenderer();n.getRenderWindow().setNumberOfLayers(2),n.setUseDepthPeeling(!0),n.setOcclusionRatio(.1),n.setMaximumNumberOfPeels(100),n.getActiveCamera().setParallelProjection(!0),n.resetCamera(),(0,Ke.getEnabledElement)(a.element).viewport.render()})(a)}},"Marching cubes"),ue.createElement(pe.zx,{onClick:()=>{const e=Array.from(v.values()).find((e=>"volume3d"===e.viewportOptions.viewportType));console.assert(e,'Export STL: Could not find "volume3d" viewport');const t=w.getCornerstoneViewport(e.viewportId).getActors();if(t&&t.length)for(const e of t){const{uid:t,actor:a}=e;if("outline"===t)continue;const n=a.getMapper().getInputData(),s=dt.ZP.writeSTL(n,mt.p.BINARY),i=new Blob([s],{type:"text/plain;charset=utf-8"}),r=window.document.createElement("a");r.href=window.URL.createObjectURL(i),r.download=`${t}STL.stl`,r.text=`Download ${t} STL`,document.body.appendChild(r),r.click(),console.log(`${t} polygons successfully exported`)}else E.show({title:"Edition 3D export",message:"STL needs to be generated",type:"info",duration:3e3})}},"Export STL"))}function xt({commandsManager:e,servicesManager:t}){const{panoramicService:a,viewportGridService:n}=t.services,[s,i]=(0,ue.useState)(a.getPanoramicState(n.getDisplaySetsUIDsForViewport("default")?.[0])??null),[r,o]=(0,ue.useState)(a.isDisplayed()),[c,l]=(0,ue.useState)(a.isEditing()),[u,d]=(0,ue.useState)(0);(0,ue.useEffect)((()=>{const e=[{event:a.EVENTS.PANORAMIC_STATE_UPDATED,callback:({displaySetUID:e})=>i({...a.getPanoramicState(e)})},{event:a.EVENTS.PANORAMIC_PROCESSING,callback:({percent:e})=>d(e)},{event:a.EVENTS.PANORAMIC_CREATED,callback:()=>d(0)},{event:a.EVENTS.STATUS_DISPLAYED_CHANGED,callback:({displayed:e})=>o(e)},{event:a.EVENTS.STATUS_EDITING_CHANGED,callback:({editing:e})=>l(e)}].map((({event:e,callback:t})=>a.subscribe(e,t).unsubscribe));return()=>{for(const t of e)t()}}),[]);return ue.createElement("div",{style:{width:"100%",height:"100%"}},ue.createElement("div",{style:{width:"100%",display:"flex",flexDirection:"column",height:"100%"}},ue.createElement("p",{style:{color:"white",fontWeight:"bold",marginBottom:"10px"}},"Panoramic Generation"),r&&ue.createElement(pe.zx,{onClick:()=>{const e=s.annotationUIDs[0];a.setAnnotationVisibility(s.id,[e],!c),a.setAnnotationVisibility(s.id,s.annotationUIDs.slice(1),c),c&&a.computePanoramic(s.id),a.setEditing(!c)}},c?"Validate":"Move control points"),ue.createElement("div",{className:"h-[6px] bg-black "}),ue.createElement(pe.zx,{onClick:()=>{e.runCommand("toggleHangingProtocol",{protocolId:"panoramicViewport",stageIndex:1})}},"Dentascan Focus"),u&&ue.createElement("div",{className:"w-full mt-[10px] mb-[20px]"},ue.createElement("p",{style:{color:"white",fontSize:"small",marginBottom:"10px",marginTop:"10px"}},"Creating panoramic..."),ue.createElement(pe.YE,{progress:u}))))}var Pt=a(73577);const Mt=function({commandsManager:e,extensionManager:t,servicesManager:a}){return[{name:"seriesList",iconName:"tab-studies",iconLabel:"Studies",label:Pt.Z.t("SidePanel:Studies"),component:qe.bind(null,{commandsManager:e,extensionManager:t,servicesManager:a})},{name:"measure",iconName:"tab-linear",iconLabel:"Measure",label:Pt.Z.t("SidePanel:Measurements"),secondaryLabel:Pt.Z.t("SidePanel:Measurements"),component:()=>ue.createElement(Ye,{commandsManager:e,servicesManager:a,extensionManager:t})},{name:"volumeEditionPanel",iconName:"edition-3D",iconLabel:"3D Edition",label:"3D Edition",component:Ct.bind(null,{commandsManager:e,extensionManager:t,servicesManager:a})},{name:"panoramicGenerationPanel",iconName:"panoramic",iconLabel:"Panoramic Generation",label:"Panoramic",component:xt.bind(null,{commandsManager:e,extensionManager:t,servicesManager:a})}]};var Nt=a(74440),Rt=a(66050),Ut=a(15337),At=a(74824);const Ot=JSON.parse('{"u2":"@ohif/extension-default"}').u2;var Tt=a(87134);var Lt=a(11218);var Vt=a(72076);function kt(e,t,a,n){const s=Vt.R3.scaleAndAdd(Vt.R3.create(),e,a,n);return Vt.R3.distance(t,s)>n}function Ft(e){if(!e?.length)return!1;const t=(0,Lt.Z)(e[0].ImageOrientationPatient);if(!t)return!1;const a=function(e){const t=Vt.R3.fromValues(e[0],e[1],e[2]),a=Vt.R3.fromValues(e[3],e[4],e[5]);return Vt.R3.cross(Vt.R3.create(),t,a)}(t),n=(0,Lt.Z)(e[0].ImagePositionPatient),s=(0,Lt.Z)(e[e.length-1].ImagePositionPatient),i=(0,At.Xn)(n,s)/(e.length-1);let r=n;for(let t=1;t<e.length;t++){const n=e[t],s=(0,Lt.Z)(n.ImagePositionPatient);if(kt(r,s,a,i))return!1;r=s}return!0}function _t(e,t){e.length>2&&(function(e){if(!e?.length)return!1;const t=e[0],a=(0,Lt.Z)(t.Rows),n=(0,Lt.Z)(t.Columns);for(let t=1;t<e.length;t++){const s=e[t],{Rows:i,Columns:r}=s;if(i!==a||r!==n)return!1}return!0}(e)||t.addMessage(r.Lt.CODES.INCONSISTENT_DIMENSIONS),function(e){if(!e?.length)return!1;const t=e[0],a=(0,Lt.Z)(t.SamplesPerPixel);for(let t=1;t<e.length;t++){const n=e[t],{SamplesPerPixel:s}=n;if(s!==a)return!1}return!0}(e)||t.addMessage(r.Lt.CODES.INCONSISTENT_COMPONENTS),function(e){if(!e?.length)return!1;const t=e[0],a=(0,Lt.Z)(t.ImageOrientationPatient);for(let t=1;t<e.length;t++){const n=e[t],s=(0,Lt.Z)(n.ImageOrientationPatient);if(!(0,At.NB)(s,a))return!1}return!0}(e)||t.addMessage(r.Lt.CODES.INCONSISTENT_ORIENTATIONS),Ft(e)||t.addMessage(r.Lt.CODES.INCONSISTENT_POSITION_INFORMATION),function(e,t){if(!e?.length)return;const a=(0,Lt.Z)(e[0].ImagePositionPatient);if(!a)return;const n=(0,Lt.Z)(e[e.length-1].ImagePositionPatient),s=(0,At.Xn)(a,n)/(e.length-1);let i=a;const o=[];for(let a=1;a<e.length;a++){const n=e[a],c=(0,Lt.Z)(n.ImagePositionPatient),l=(0,At.Xn)(c,i),u=(0,At.bg)(l,s);if(u){const e=u.issue;if(o.includes(e)||(o.push(e),e===At.e1.MISSING_FRAMES?t.addMessage(r.Lt.CODES.MISSING_FRAMES):e===At.e1.IRREGULAR_SPACING&&t.addMessage(r.Lt.CODES.IRREGULAR_SPACING)),o.length>1)break}i=c}}(e,t))}function qt(e,t,a){const n=new r.iK;if(a)return n;if(!e.length)return void n.addMessage(r.Lt.CODES.NO_VALID_INSTANCES);const s=e[0],{Modality:i,ImageType:o,NumberOfFrames:c}=s;if(o?.includes("LOCALIZER"))return n;if(!At.M6.includes(i))return n;const l=c>1;l||e.every((e=>e.ImagePositionPatient))||n.addMessage(r.Lt.CODES.NO_POSITION_INFORMATION);const u=(0,Tt.Z)(e);return l?function(e,t){(0,At.hu)(e)||t.addMessage(r.Lt.CODES.MULTIFRAME_NO_PIXEL_MEASUREMENTS),(0,At.sb)(e)||t.addMessage(r.Lt.CODES.MULTIFRAME_NO_ORIENTATION),(0,At.kN)(e)||t.addMessage(r.Lt.CODES.MULTIFRAME_NO_POSITION_INFORMATION)}(u[0],n):_t(u,n),t||n.addMessage(r.Lt.CODES.NOT_RECONSTRUCTABLE),n}function $t(e){const t=new Ut.Z(e),a=new r.iK;a.addMessage(r.Lt.CODES.UNSUPPORTED_DISPLAYSET);const n=e[0];return t.setAttributes({displaySetInstanceUID:t.uid,SeriesDate:n.SeriesDate,SeriesTime:n.SeriesTime,SeriesInstanceUID:n.SeriesInstanceUID,StudyInstanceUID:n.StudyInstanceUID,SeriesNumber:n.SeriesNumber||0,FrameRate:n.FrameTime,SOPClassUID:n.SOPClassUID,SeriesDescription:n.SeriesDescription||"",Modality:n.Modality,numImageFrames:e.length,unsupported:!0,SOPClassHandlerId:"unsupported",isReconstructable:!1,messages:a}),[t]}const Gt="chart",zt=(e,t)=>{const{StudyInstanceUID:a,SeriesInstanceUID:n,SOPInstanceUID:s,SeriesDescription:i,SeriesNumber:o,SeriesDate:c,SOPClassUID:l}=e;return{Modality:"CHT",loading:!1,isReconstructable:!1,displaySetInstanceUID:r.utils.guid(),SeriesDescription:i,SeriesNumber:o,SeriesDate:c,SOPInstanceUID:s,SeriesInstanceUID:n,StudyInstanceUID:a,SOPClassHandlerId:`${Ot}.sopClassHandlerModule.${Gt}`,SOPClassUID:l,isDerivedDisplaySet:!0,isLoaded:!0,sopClassUids:t,instance:e,instances:[e],addInstances:function(e,t){return this.instances.push(...e),this.instance=this.instances[this.instances.length-1],this}}};function Bt(e){if(!e||!e.length)throw new Error("No instances were provided");const t=function(e){const t=new Set;return e.forEach((e=>{t.add(e.SOPClassUID)})),Array.from(t)}(e);return e.map((e=>{if("CHT"===e.Modality)return zt(e,t);throw new Error("Unsupported modality")}))}const jt={name:Gt,sopClassUids:["1.9.451.13215.7.3.2.7.6.1"],getDisplaySetsFromSeries:e=>Bt(e)},Zt="stack";let Ht={};const Wt=e=>e.NumberOfFrames>1;function Yt(e){const t=(e=>{const{extensionManager:t}=Ht;if(!t)throw new Error("extensionManager is not available");const a=e.map((({imageId:e})=>e)),n=t.getModuleEntry("@ohif/extension-cornerstone.utilityModule.volumeLoader"),{getDynamicVolumeInfo:s}=n.exports;return s(a)})(e),{isDynamicVolume:a,timePoints:n}=t;let s;const{appConfig:i}=Ht;if(a){const t=n[0],a=new Map;e.forEach((e=>a.set(e.imageId,e)));const r=t.map((e=>a.get(e)));s=(0,At.ZP)(r,i)}else s=(0,At.ZP)(e,i);return{isDynamicVolume:a,...s,dynamicVolumeInfo:t}}const Xt=e=>{const t=e[0],a=new Ut.Z(e),{isDynamicVolume:n,value:s,averageSpacingBetweenFrames:i,dynamicVolumeInfo:r}=Yt(e),o=n?"cornerstoneStreamingDynamicImageVolume":"cornerstoneStreamingImageVolume",c=qt(e,s,n);a.setAttributes({volumeLoaderSchema:o,displaySetInstanceUID:a.uid,SeriesDate:t.SeriesDate,SeriesTime:t.SeriesTime,SeriesInstanceUID:t.SeriesInstanceUID,StudyInstanceUID:t.StudyInstanceUID,SeriesNumber:t.SeriesNumber||0,FrameRate:t.FrameTime,SOPClassUID:t.SOPClassUID,SeriesDescription:t.SeriesDescription||"",Modality:t.Modality,isMultiFrame:Wt(t),countIcon:s?"icon-mpr":void 0,numImageFrames:e.length,SOPClassHandlerId:`${Ot}.sopClassHandlerModule.${Zt}`,isReconstructable:s,messages:c,averageSpacingBetweenFrames:i||null,isDynamicVolume:n,dynamicVolumeInfo:r});return a.sortBy(((e,t)=>(parseInt(e.InstanceNumber)||0)-(parseInt(t.InstanceNumber)||0))),a};function Qt(e){if(!e||!e.length)throw new Error("No instances were provided");const t=[],a=function(e){const t=new Set;return e.forEach((e=>{t.add(e.SOPClassUID)})),Array.from(t)}(e),n=[];if(e.forEach((e=>{if(!(0,Nt.O)(e.SOPClassUID)&&!e.Rows)return;let s;var i;Wt(e)?(s=Xt([e]),s.setAttributes({sopClassUids:a,isClip:!0,numImageFrames:e.NumberOfFrames,instanceNumber:e.InstanceNumber,acquisitionDatetime:e.AcquisitionDateTime}),t.push(s)):"CR"===(i=e.Modality)||"MG"===i||"DX"===i?(s=Xt([e]),s.setAttributes({sopClassUids:a,instanceNumber:e.InstanceNumber,acquisitionDatetime:e.AcquisitionDateTime}),t.push(s)):n.push(e)})),n.length){const s=Xt(n);s.setAttribute("studyInstanceUid",e[0].StudyInstanceUID),s.setAttributes({sopClassUids:a}),t.push(s)}return t}const Jt=[Rt.Z.ComputedRadiographyImageStorage,Rt.Z.DigitalXRayImageStorageForPresentation,Rt.Z.DigitalXRayImageStorageForProcessing,Rt.Z.DigitalMammographyXRayImageStorageForPresentation,Rt.Z.DigitalMammographyXRayImageStorageForProcessing,Rt.Z.DigitalIntraOralXRayImageStorageForPresentation,Rt.Z.DigitalIntraOralXRayImageStorageForProcessing,Rt.Z.CTImageStorage,Rt.Z.EnhancedCTImageStorage,Rt.Z.LegacyConvertedEnhancedCTImageStorage,Rt.Z.UltrasoundMultiframeImageStorage,Rt.Z.MRImageStorage,Rt.Z.EnhancedMRImageStorage,Rt.Z.EnhancedMRColorImageStorage,Rt.Z.LegacyConvertedEnhancedMRImageStorage,Rt.Z.UltrasoundImageStorage,Rt.Z.UltrasoundImageStorageRET,Rt.Z.SecondaryCaptureImageStorage,Rt.Z.MultiframeSingleBitSecondaryCaptureImageStorage,Rt.Z.MultiframeGrayscaleByteSecondaryCaptureImageStorage,Rt.Z.MultiframeGrayscaleWordSecondaryCaptureImageStorage,Rt.Z.MultiframeTrueColorSecondaryCaptureImageStorage,Rt.Z.XRayAngiographicImageStorage,Rt.Z.EnhancedXAImageStorage,Rt.Z.XRayRadiofluoroscopicImageStorage,Rt.Z.EnhancedXRFImageStorage,Rt.Z.XRay3DAngiographicImageStorage,Rt.Z.XRay3DCraniofacialImageStorage,Rt.Z.BreastTomosynthesisImageStorage,Rt.Z.BreastProjectionXRayImageStorageForPresentation,Rt.Z.BreastProjectionXRayImageStorageForProcessing,Rt.Z.IntravascularOpticalCoherenceTomographyImageStorageForPresentation,Rt.Z.IntravascularOpticalCoherenceTomographyImageStorageForProcessing,Rt.Z.NuclearMedicineImageStorage,Rt.Z.VLEndoscopicImageStorage,Rt.Z.VideoEndoscopicImageStorage,Rt.Z.VLMicroscopicImageStorage,Rt.Z.VideoMicroscopicImageStorage,Rt.Z.VLSlideCoordinatesMicroscopicImageStorage,Rt.Z.VLPhotographicImageStorage,Rt.Z.VideoPhotographicImageStorage,Rt.Z.OphthalmicPhotography8BitImageStorage,Rt.Z.OphthalmicPhotography16BitImageStorage,Rt.Z.OphthalmicTomographyImageStorage,Rt.Z.VLWholeSlideMicroscopyImageStorage,Rt.Z.PositronEmissionTomographyImageStorage,Rt.Z.EnhancedPETImageStorage,Rt.Z.LegacyConvertedEnhancedPETImageStorage,Rt.Z.RTImageStorage,Rt.Z.EnhancedUSVolumeStorage];const Kt=function(e){return Ht=e,[{name:Zt,sopClassUids:Jt,getDisplaySetsFromSeries:Qt},{name:"not-supported-display-sets-handler",sopClassUids:[],getDisplaySetsFromSeries:$t},{name:jt.name,sopClassUids:jt.sopClassUids,getDisplaySetsFromSeries:jt.getDisplaySetsFromSeries}]};function ea(){return ue.createElement("span",{className:"border-common-dark mx-2 h-8 w-4 self-center border-l"})}function ta(){return ta=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)({}).hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e},ta.apply(null,arguments)}const aa=[{icon:"layout-common-1x1",commandOptions:{numRows:1,numCols:1}},{icon:"layout-common-1x2",commandOptions:{numRows:1,numCols:2}},{icon:"layout-common-2x2",commandOptions:{numRows:2,numCols:2}},{icon:"layout-common-2x3",commandOptions:{numRows:2,numCols:3}}],na=({servicesManager:e})=>{const{hangingProtocolService:t,viewportGridService:a,displaySetService:n}=e.services,s=Array.from(t.protocols.values()),i=a.getActiveViewportId();if(!i)return[];const r=a.getDisplaySetsUIDsForViewport(i);if(!r)return[];const o=r.map((e=>n.getDisplaySetByUID(e)));return s.map((e=>{if(!e.isPreset)return null;const a=((e,t,a)=>!e.displaySetSelectors||0===Object.values(e.displaySetSelectors).length||a.areRequiredSelectorsValid(Object.values(e.displaySetSelectors),t[0]))(e,o,t);return{icon:e.icon,title:e.name,commandOptions:{protocolId:e.id},disabled:!a}})).filter((e=>null!==e))};function sa({rows:e=3,columns:t=4,onLayoutChange:a=()=>{},className:n,onSelection:s,onSelectionPreset:i,servicesManager:r,tooltipDisabled:o,...c}){const[l,u]=(0,ue.useState)(!1),d=(0,ue.useRef)(null),{customizationService:m}=r.services,p=m.get("commonPresets")||aa,g=m.get("advancedPresets")||na({servicesManager:r}),h=e=>{l&&d.current&&u(!1)};(0,ue.useEffect)((()=>{if(l)return setTimeout((()=>{window.addEventListener("click",h)}),0),()=>{window.removeEventListener("click",h),d.current=null}}),[l]);const f=l?pe.OF:null;return ue.createElement(pe.hA,{id:"Layout",label:"Layout",icon:"tool-layout",onInteraction:()=>{u(!l)},className:n,rounded:c.rounded,disableToolTip:o,dropdownContent:null!==f&&ue.createElement("div",{className:"flex",ref:d},ue.createElement("div",{className:"bg-secondary-dark flex flex-col gap-2.5 p-2"},ue.createElement("div",{className:"text-aqua-pale text-xs"},"Common"),ue.createElement("div",{className:"flex gap-4"},p.map(((e,t)=>ue.createElement(pe.W6,{key:t,classNames:"hover:bg-primary-dark group p-1 cursor-pointer",icon:e.icon,commandOptions:e.commandOptions,onSelection:s})))),ue.createElement("div",{className:"h-[2px] bg-black"}),ue.createElement("div",{className:"text-aqua-pale text-xs"},"Advanced"),ue.createElement("div",{className:"flex flex-col gap-2.5"},g.map(((e,t)=>ue.createElement(pe.W6,{key:t+p.length,classNames:"hover:bg-primary-dark group flex gap-2 p-1 cursor-pointer",icon:e.icon,title:e.title,disabled:e.disabled,commandOptions:e.commandOptions,onSelection:i}))))),ue.createElement("div",{className:"bg-primary-dark flex flex-col gap-2.5 border-l-2 border-solid border-black  p-2"},ue.createElement("div",{className:"text-aqua-pale text-xs"},"Custom"),ue.createElement(f,{rows:e,columns:t,onSelection:s}),ue.createElement("p",{className:"text-aqua-pale text-xs leading-tight"},"Hover to select ",ue.createElement("br",null),"rows and columns ",ue.createElement("br",null)," Click to apply"))),isActive:l,type:"toggle"})}sa.propTypes={rows:me().number,columns:me().number,onLayoutChange:me().func,servicesManager:me().object.isRequired};const ia=function({commandsManager:e,servicesManager:t,...a}){const[n,s]=(0,ue.useState)(!1),i=(0,ue.useCallback)((t=>{e.run({commandName:"setViewportGridLayout",commandOptions:{...t}}),s(!0)}),[]),r=(0,ue.useCallback)((t=>{e.run({commandName:"setHangingProtocol",commandOptions:{...t}}),s(!0)}),[]);return ue.createElement("div",{onMouseEnter:()=>{s(!1)}},ue.createElement(sa,ta({},a,{onSelection:i,onSelectionPreset:r,servicesManager:t,tooltipDisabled:n})))};function ra(){return ra=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)({}).hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e},ra.apply(null,arguments)}function oa({groupId:e,primary:t,secondary:a,items:n,renderer:s,onInteraction:i,servicesManager:r}){const{toolbarService:o}=r?.services,c=(0,ue.useCallback)((t=>t.map(((t,a)=>({...t,index:a,onClick:()=>{i({groupId:e,itemId:t.id,commands:t.commands})}})))),[]),l=o?.getButtonComponentForUIType(t.uiType)??pe.hA,u=s;return ue.createElement(pe.aW,{primary:t,secondary:a,items:c(n),groupId:e,renderer:u,onInteraction:i,Component:e=>ue.createElement(l,ra({},e,{servicesManager:r}))})}oa.propTypes={groupId:me().string,primary:me().shape({id:me().string.isRequired,uiType:me().string}),secondary:me().shape({id:me().string,icon:me().string.isRequired,label:me().string,tooltip:me().string.isRequired,disabled:me().bool,className:me().string}),items:me().arrayOf(me().shape({id:me().string.isRequired,icon:me().string,label:me().string,tooltip:me().string,disabled:me().bool,className:me().string})),renderer:me().func,onInteraction:me().func.isRequired,servicesManager:me().shape({services:me().shape({toolbarService:me().object})})};const ca=oa;const la=function({groupId:e,items:t,onInteraction:a,size:n}){const s=(0,ue.useCallback)((t=>t.map(((t,s)=>ue.createElement(pe.hA,{key:t.id,icon:t.icon,label:t.label,disabled:t.disabled,className:t.className,disabledText:t.disabledText,id:t.id,size:n,onClick:()=>{a({groupId:e,itemId:t.id,commands:t.commands})},toolTipClassName:""})))),[a,e]);return ue.createElement(pe.hE,null,s(t))},ua=(e=[])=>e.map((e=>({label:e.name,value:e.id,info:e.info,activated:!1,completed:!1})));function da({servicesManager:e}){const{workflowStepsService:t}=e.services,[a,n]=(0,ue.useState)(t.activeWorkflowStep?.id),[s,i]=(0,ue.useState)(ua(t.workflowSteps)),r=(0,ue.useCallback)((e=>{e.completed||i((t=>{const a=[...t];for(let t=a.findIndex((t=>t.value===e.value));t>=0;t--){const e=a[t];if(e.completed)break;a[t]={...e,completed:!0}}return a}))}),[]),o=(0,ue.useCallback)((({selectedOption:e})=>{e&&(r(e),n(e.value))}),[r]);return(0,ue.useEffect)((()=>(a&&t.setActiveWorkflowStep(a),()=>clearTimeout(undefined))),[a,t]),(0,ue.useEffect)((()=>{const{unsubscribe:e}=t.subscribe(t.EVENTS.STEPS_CHANGED,(()=>i(ua(t.workflowSteps)))),{unsubscribe:a}=t.subscribe(t.EVENTS.ACTIVE_STEP_CHANGED,(()=>n(t.activeWorkflowStep.id)));return()=>{e(),a()}}),[e,t]),ue.createElement(pe.LU,{options:s,value:a,onChange:o})}function ma(e,t,a,n){const s={selectorProps:e,event:t},i=function(e,t,a){const{subMenu:n}=t,s=function*(){yield function(e,t){if(t)return e.find((e=>e.id===t))}(e,a||n),yield function(e,t){return e?e.find((e=>!e.selector||e.selector(t.selectorProps))):null}(e,t)}();let i=s.next(),r=i.value;for(;!i.done;)r=i.value,r&&s.return(),i=s.next();return r}(a,s,n);if(!i)return;if(!i.items)return console.warn("Must define items in menu",i),[];let r=[];return i.items.forEach((n=>{const{delegating:i,selector:o,subMenu:c}=n;if(!o||o(e))if(i)r=[...r,...ma(e,t,a,c)];else{const e=function(e,t){const a={...e,value:t.selectorProps?.value};"ShowSubMenu"!==e.actionType||a.iconRight||(a.iconRight="chevron-menu");e.action||(a.action=(e,n)=>{const{event:s={}}=n,{detail:i={}}=s;a.element=i.element,n.onClose();const r=n[`on${e.actionType||"Default"}`];r?r.call(n,a,e,t):console.warn("No action defined for",e)});return a}(n,s);r.push(e)}})),r}var pa,ga=a(58705),ha=a(93725);class fa{constructor(e,t){this.commandsManager=void 0,this.services=void 0,this.menuItems=void 0,this.services=e.services,this.commandsManager=t}closeContextMenu(){this.services.uiDialogService.dismiss({id:"context-menu"})}showContextMenu(e,t,a){if(!this.services.uiDialogService)return void console.warn("Unable to show dialog; no UI Dialog Service available.");const{event:n,subMenu:s,menuId:i,menus:r,selectorProps:o}=e,c=ha.annotation.state.getAnnotationManager(),{locking:l}=ha.annotation,u=o?.nearbyToolData?.annotationUID;if(l.isAnnotationLocked(c.getAnnotation(u)))return void console.warn("Annotation is locked.");const d=ma(o||e,n,r,i);this.services.uiDialogService.dismiss({id:"context-menu"}),this.services.uiDialogService.create({id:"context-menu",isDraggable:!1,preservePosition:!1,preventCutOf:!0,defaultPosition:fa._getDefaultPosition(a,n?.detail,t),event:n,content:ga.Z,onClickOutside:()=>this.services.uiDialogService.dismiss({id:"context-menu"}),contentProps:{items:d,selectorProps:o,menus:r,event:n,subMenu:s,eventData:n?.detail,onClose:()=>{this.services.uiDialogService.dismiss({id:"context-menu"})},onShowSubMenu:(n,s,i)=>{s.subMenu?this.showContextMenu({...e,menuId:s.subMenu},t,a):console.warn("No submenu defined for",n,s,i)},onDefault:(e,t,a)=>{this.commandsManager.run(e,{...o,...t,subProps:a})}}})}}pa=fa,fa.getDefaultPosition=()=>({x:0,y:0}),fa._getEventDefaultPosition=e=>({x:e&&e.currentPoints.client[0],y:e&&e.currentPoints.client[1]}),fa._getElementDefaultPosition=e=>{if(e){const t=e.getBoundingClientRect();return{x:t.x,y:t.y}}return{x:void 0,y:void 0}},fa._getCanvasPointsPosition=(e=[],t)=>{const a=pa._getElementDefaultPosition(t);for(let t=0;t<e.length;t++){const n={x:e[t][0]||e[t].x,y:e[t][1]||e[t].y};if(pa._isValidPosition(n)&&pa._isValidPosition(a))return{x:n.x+a.x,y:n.y+a.y}}},fa._isValidPosition=e=>e&&"number"==typeof e.x&&"number"==typeof e.y,fa._getDefaultPosition=(e,t,a)=>{const n=function*(){yield pa._getCanvasPointsPosition(e,a),yield pa._getEventDefaultPosition(t),yield pa._getElementDefaultPosition(a),yield pa.getDefaultPosition()}();let s=n.next(),i=s.value;for(;!s.done;)i=s.value,pa._isValidPosition(i)&&n.return(),s=n.next();return i};const ya={id:"measurementsContextMenu",customizationType:"ohif.contextMenu",menus:[{id:"forExistingMeasurement",selector:({nearbyToolData:e})=>!!e,items:[{label:"Delete curve",commands:[{commandName:"deleteMeasurement",context:"CORNERSTONE"}]},{label:"Add comment",commands:[{commandName:"setMeasurementLabel"}]},{label:"Validate curve",commands:[{commandName:"closeContextMenu"}]}]}]};var Sa=a(71271),Ia=a.n(Sa),va=a(94614),Da=a(33901),wa=a.n(Da);const ba={padding:"10px 0"},Ea={borderBottomWidth:"1px",...ba};function Ca({tagRef:e,vrRef:t,keywordRef:a,valueRef:n}){return ue.createElement("div",{className:wa()("bg-secondary-dark ohif-scrollbar flex w-full flex-row overflow-y-scroll"),style:ba},ue.createElement("div",{className:"w-4/24 px-3"},ue.createElement("label",{ref:e,className:"flex flex-1 select-none flex-col pl-1 text-lg text-white"},ue.createElement("span",{className:"flex flex-row items-center focus:outline-none"},"Tag"))),ue.createElement("div",{className:"w-2/24 px-3"},ue.createElement("label",{ref:t,className:"flex flex-1 select-none flex-col pl-1 text-lg text-white"},ue.createElement("span",{className:"flex flex-row items-center focus:outline-none"},"VR"))),ue.createElement("div",{className:"w-6/24 px-3"},ue.createElement("label",{ref:a,className:"flex flex-1 select-none flex-col pl-1 text-lg text-white"},ue.createElement("span",{className:"flex flex-row items-center focus:outline-none"},"Keyword"))),ue.createElement("div",{className:"w-5/24 grow px-3"},ue.createElement("label",{ref:n,className:"flex flex-1 select-none flex-col pl-1 text-lg text-white"},ue.createElement("span",{className:"flex flex-row items-center focus:outline-none"},"Value"))))}const xa=function({rows:e}){const t=(0,ue.useRef)(),a=(0,ue.useRef)(),[n,s]=(0,ue.useState)(null),[i,r]=(0,ue.useState)(null),[o,c]=(0,ue.useState)(null),[l,u]=(0,ue.useState)(null);(0,ue.useEffect)((()=>{t?.current&&(t.current.scrollTo(0),t.current.resetAfterIndex(0))}),[e]),(0,ue.useEffect)((()=>{const e=Ge()((()=>t.current.resetAfterIndex(0)),100);return window.addEventListener("resize",e),()=>{e.cancel(),window.removeEventListener("resize",e)}}),[]);const d=(0,ue.useCallback)((({index:t,style:a})=>{const n=e[t];return ue.createElement("div",{style:{...a,...Ea},className:wa()("hover:bg-secondary-main border-secondary-light flex w-full flex-row items-center break-all bg-black text-base transition duration-300","leading-[20px]"),key:`DICOMTagRow-${t}`},ue.createElement("div",{className:"w-4/24 px-3"},n[0]),ue.createElement("div",{className:"w-2/24 px-3"},n[1]),ue.createElement("div",{className:"w-6/24 px-3"},n[2]),ue.createElement("div",{className:"w-5/24 grow px-3"},n[3]))}),[e]),m=(0,ue.useCallback)((()=>null!==n),[n]),p=(0,ue.useCallback)((t=>{const s=[n.offsetWidth,i.offsetWidth,o.offsetWidth,l.offsetWidth],r=a.current.getContext("2d");return r.font=getComputedStyle(a.current).font,e[t].map(((e,t)=>{const a=r.measureText(e).width;return 20*Math.ceil(a/s[t])+20+1})).reduce(((e,t)=>Math.max(e,t)))}),[e,o,n,l,i]);return ue.createElement("div",null,ue.createElement("canvas",{style:{visibility:"hidden",position:"absolute"},className:"text-base",ref:a}),ue.createElement(Ca,{tagRef:e=>{e&&s(e)},vrRef:e=>{e&&r(e)},keywordRef:e=>{e&&c(e)},valueRef:e=>{e&&u(e)}}),ue.createElement("div",{className:"relative m-auto border-2 border-black bg-black",style:{height:"32rem"}},m()&&ue.createElement(va.S_,{ref:t,height:500,itemCount:e.length,itemSize:p,width:"100%",className:"ohif-scrollbar"},d)))},{ImageSet:Pa}=r.classes,{DicomMetaDictionary:Ma}=h.default.data,{nameMap:Na}=Ma;function Ra(e,t){const a=[];return e.forEach((e=>{if("SQ"===e.vr){a.push([`${e.tagIndent}${e.tag}`,e.vr,e.keyword,""]);const{values:n}=e;n.forEach(((e,n)=>{const s=Ra(e,t);a.push([`${e[0].tagIndent}(FFFE,E000)`,"",`Item #${n}`,""]),a.push(...s)}))}else{if("xs"===e.vr)try{const a=h.default.data.Tag.fromPString(e.tag).toCleanString(),n=t[a];e.vr=n.vr}catch(t){console.error(`Failed to parse value representation for tag '${e.keyword}'`)}a.push([`${e.tagIndent}${e.tag}`,e.vr,e.keyword,e.value])}})),a}function Ua(e,t=0){const a=Object.keys(e);let n="";for(let e=0;e<t;e++)n+=">";t>0&&(n+=" ");const s=[];for(let r=0;r<a.length;r++){let o=a[r];if("_vrMap"===o)continue;const c=Na[o];let l=e[o];if(c&&"SQ"===c.vr){const e=(i=l,Array.isArray(i)?i:[i]),a={tag:c.tag,tagIndent:n,vr:c.vr,keyword:o,values:[]};if(s.push(a),null===l)continue;e.forEach((e=>{const n=Ua(e,t+1);n.length&&(Aa(n),a.values.push(n))}))}else if(Array.isArray(l)&&l.length>0&&"object"!=typeof l[0]&&(l=l.join("\\")),"number"==typeof l&&(l=l.toString()),"string"!=typeof l&&(null===l?l=" ":"object"==typeof l?l.InlineBinary?l="Inline Binary":l.BulkDataURI?l="Bulk Data URI":l.Alphabetic?l=l.Alphabetic:(console.warn(`Unrecognised Value: ${l} for ${o}:`),console.warn(l),l=" "):(console.warn(`Unrecognised Value: ${l} for ${o}:`),l=" ")),o=o.replace("RETIRED_",""),c)s.push({tag:c.tag,tagIndent:n,vr:c.vr,keyword:o,value:l});else{const e=/[0-9A-Fa-f]{6}/g;if(o.match(e)){const e=`(${o.substring(0,4)},${o.substring(4,8)})`;s.push({tag:e,tagIndent:n,vr:"",keyword:"Private Tag",value:l})}}}var i;return s}function Aa(e){e.sort(((e,t)=>e.tag<t.tag?-1:1))}const Oa=({displaySets:e,displaySetInstanceUID:t})=>{const a=new Set([1]),[n,s]=(0,ue.useState)(t),[i,r]=(0,ue.useState)(1),[o,c]=(0,ue.useState)(""),l=e.find((e=>e.displaySetInstanceUID===n)),u=l instanceof Pa;const d=u&&l.images.length>1,m=(0,ue.useMemo)((()=>(e.sort(((e,t)=>e.SeriesNumber-t.SeriesNumber)),e.map((e=>{const{displaySetInstanceUID:t,SeriesDate:a,SeriesTime:n,SeriesNumber:s,SeriesDescription:i,Modality:r}=e,o=`${a}:${n}`.split(".")[0];return{value:t,label:`${s} (${r}): ${i}`,description:Ia()(o,"YYYYMMDD:HHmmss").format("ddd, MMM Do YYYY")}})))),[e]),p=(0,ue.useMemo)((()=>{let e;e=u?l.images[i-1]:l.instance||l;const t=function(e){const t=Ua(e);return Aa(t),t}(e);return Ra(t,e)}),[i,n]),g=(0,ue.useMemo)((()=>{if(!o)return p;const e=o.toLowerCase();return p.filter((t=>t.reduce(((t,n,s)=>t||(a.has(s)?t:t||n.toLowerCase().includes(e))),!1)))}),[p,o]),h=(0,ue.useMemo)((()=>Ge()(c,200)),[]);return(0,ue.useEffect)((()=>()=>{h?.cancel()}),[]),ue.createElement("div",{className:"dicom-tag-browser-content"},ue.createElement("div",{className:"mb-6 flex flex-row items-center pl-1"},ue.createElement("div",{className:"flex w-1/2 flex-row items-center"},ue.createElement(pe.ZT,{variant:"subtitle",className:"mr-4"},"Series"),ue.createElement("div",{className:"mr-8 grow"},ue.createElement(pe.Ph,{id:"display-set-selector",isClearable:!1,onChange:e=>{s(e.value),r(1)},options:m,value:m.find((e=>e.value===n)),className:"text-white"}))),ue.createElement("div",{className:"flex w-1/2 flex-row items-center"},d&&ue.createElement(pe.ZT,{variant:"subtitle",className:"mr-4"},"Instance Number"),d&&ue.createElement("div",{className:"grow"},ue.createElement(pe.OX,{value:i,key:n,onChange:e=>{r(parseInt(e))},minValue:1,maxValue:l.images.length,step:1,inputClassName:"w-full",labelPosition:"left",trackColor:"#3a3f99"})))),ue.createElement("div",{className:"h-1 w-full bg-black"}),ue.createElement("div",{className:"my-3 flex w-1/2 flex-row"},ue.createElement(pe.Xe,{className:"mr-8 block w-full",placeholder:"Search metadata...",onDebounceChange:c})),ue.createElement(xa,{rows:g}))},Ta=(e,t,a,n)=>{console.log("HP - REUSE CACHED LAYOUT",e,t,a,n);const{activeViewportId:s}=e,{protocol:i}=t.getActiveProtocol();if(!i)return;const r=t.getState(),{protocolId:o,stageIndex:c,activeStudyUID:l}=r,u=a.getState(),d={...u.viewportGridStore},m={...u.displaySetSelectorMap},p=i.stages[c],g=`${l}:${o}:${c}`,h=`${l}:${o}`,f={...u.hangingProtocolStageIndexMap},{rows:y,columns:S}=p.viewportStructure.properties,I=p.viewports.length!==e.viewports.size||e.layout.numRows!==y||e.layout.numCols!==S;return f[h]=r,g&&I&&(d[g]={...e}),e.viewports.forEach(((e,t)=>{const{displaySetOptions:a,displaySetInstanceUIDs:i}=e;if(a)for(let e=0;e<a.length;e++){const r=i[e];r&&n.includes(r)&&(t===s&&0===e&&(m[`${l}:activeDisplaySet:0`]=r),a[e]?.id&&(m[`${l}:${a[e].id}:${a[e].matchedDisplaySetsIndex||0}`]=r))}})),{hangingProtocolStageIndexMap:f,viewportGridStore:d,displaySetSelectorMap:m}},La=(e,t,a,n,s,i)=>{const r=a?.[s];if(r)return{...r};const{protocolId:o,stageIndex:c}=e.getState();i.inDisplay||(i.inDisplay=[...a.initialInDisplay]);const l=e.getMissingViewport(t?o:"default",c,i);if(l){const e=l.displaySetsInfo.map((e=>e.displaySetInstanceUID));return i.inDisplay.push(...e),{displaySetInstanceUIDs:e,displaySetOptions:l.displaySetsInfo.map((e=>e.displaySetOptions)),viewportOptions:{...l.viewportOptions}}}return{}},Va=(e,{numRows:t,numCols:a},n)=>{const{viewports:s}=e,i={...n.getState().viewportsByPosition},r=[];s.forEach((e=>{if(e.positionId){const t={...e,viewportOptions:{...e.viewportOptions}};i[e.positionId]=t}}));for(let e=0;e<t;e++)for(let t=0;t<a;t++){const a=i[`${t}-${e}`];a?.displaySetInstanceUIDs&&r.push(...a.displaySetInstanceUIDs)}return i.initialInDisplay=r,{viewportsByPosition:i}};var ka=a(33098);const{subscribeToNextViewportGridChange:Fa}=r.utils,_a=({servicesManager:e,commandsManager:t})=>{const{customizationService:a,measurementService:n,hangingProtocolService:s,uiNotificationService:i,viewportGridService:r,displaySetService:o,stateSyncService:c}=e.services,l=new fa(e,t),u={showContextMenu:e=>{const{menuCustomizationId:t,element:n,event:i,selectorProps:r,defaultPointsPosition:o=[]}=e,c={...e};t&&Object.assign(c,a.get(t,ya));const{protocol:u,stage:d}=s.getActiveProtocol();c.selectorProps={event:i,protocol:u,stage:d,...r},l.showContextMenu(c,n,o)},closeContextMenu:()=>{l.closeContextMenu()},displayNotification:({text:e,title:t,type:a})=>{i.show({title:t,message:e,type:a})},clearMeasurements:()=>{n.clear()},setHangingProtocol:({activeStudyUID:e="",protocolId:t,stageId:a,stageIndex:n,reset:l=!1})=>{try{const i=r.getState(),u=s.getState(),d=Array.from(o.getDisplaySetCache().entries()).map((e=>e[0])),m=Ta(i,s,c,d);console.log("HP - STATE SYNC REDUCE",m);const{hangingProtocolStageIndexMap:p,viewportGridStore:g,displaySetSelectorMap:h}=m;if(t){if(void 0===n&&void 0===a){const a=`${e||u.activeStudyUID}:${t}`;n=p[a]?.stageIndex}}else t=u.protocolId,void 0===a&&void 0===n&&(n=u.stageIndex);const f=n??s.getStageIndex(t,{stageId:a,stageIndex:n});e&&s.setActiveStudyUID(e);const y=`${s.getState().activeStudyUID}:${t}:${f||0}`,S=!l&&g[y];return t!==u.protocolId||f!==u.stageIndex||e?(s.setProtocol(t,{displaySetSelectorMap:h,stageId:a,stageIndex:f,restoreProtocol:S}),S&&r.set(g[y])):s.setProtocol(t,{stageId:a,stageIndex:f}),delete h[`${e||u.activeStudyUID}:activeDisplaySet:0`],c.store(m),!0}catch(e){return console.error(e),i.show({title:"Apply Hanging Protocol",message:"The hanging protocol could not be applied.",type:"error",duration:3e3}),!1}},toggleHangingProtocol:({protocolId:e,stageIndex:t})=>{const{protocol:a,stageIndex:n,activeStudy:i}=s.getActiveProtocol(),{toggleHangingProtocol:r}=c.getState(),o=`${i.StudyInstanceUID}:${e}:${0|t}`;if(a.id!==e||void 0!==t&&t!==n)return c.store({toggleHangingProtocol:{...r,[o]:{protocolId:a.id,stageIndex:n}}}),u.setHangingProtocol({protocolId:e,stageIndex:t,reset:!0});{const e=r[o]||{protocolId:"default"};return u.setHangingProtocol(e)}},deltaStage:({direction:e})=>{const{protocolId:t,stageIndex:a}=s.getState(),{protocol:n}=s.getActiveProtocol();for(let s=a+e;s>=0&&s<n.stages.length;s+=e)if("disabled"!==n.stages[s].status)return u.setHangingProtocol({protocolId:t,stageIndex:s});i.show({title:"Change Stage",message:"The hanging protocol has no more applicable stages",type:"info",duration:3e3})},setViewportGridLayout:({numRows:e,numCols:a,isHangingProtocolLayout:n=!1})=>{const{protocol:i}=s.getActiveProtocol(),o=i.callbacks?.onLayoutChange;if(!1===t.run(o,{numRows:e,numCols:a}))return void console.log("setViewportGridLayout running",o,e,a);window.setTimeout((()=>{const t=r.getState(),i=Va(t,{numRows:e,numCols:a},c),o=La.bind(null,s,n,i.viewportsByPosition);r.setLayout({numRows:e,numCols:a,findOrCreateViewport:o,isHangingProtocolLayout:n}),c.store(i)}),0)},toggleOneUp(){const e=r.getState(),{activeViewportId:t,viewports:a,layout:n,isHangingProtocolLayout:i}=e,{displaySetInstanceUIDs:o,displaySetOptions:l,viewportOptions:u}=a.get(t);if(1===n.numCols&&1===n.numRows){const{toggleOneUpViewportGridStore:e}=c.getState();if(!e.layout)return;const t=e.activeViewportId,a=o.length>1?[]:o.map((e=>s.getViewportsRequireUpdate(t,e,i))).flat(),n=(t,n)=>{const s=Array.from(e.viewports.values()).find((e=>e.positionId===n)),i=a.find((e=>e.viewportId===s.viewportId));return i?{viewportOptions:u,displaySetOptions:l,...i}:s},d=r.getLayoutOptionsFromState(e);r.setLayout({numRows:e.layout.numRows,numCols:e.layout.numCols,activeViewportId:t,layoutOptions:d,findOrCreateViewport:n,isHangingProtocolLayout:!0})}else{c.store({toggleOneUpViewportGridStore:e});const t=()=>({displaySetInstanceUIDs:o,displaySetOptions:l,viewportOptions:u});r.setLayout({numRows:1,numCols:1,findOrCreateViewport:t,isHangingProtocolLayout:!0});Fa(r,(()=>{c.store({toggleOneUpViewportGridStore:{}})}))}},navigateHistory(e){ka.m.navigate(e.to,e.options)},openDICOMTagViewer(){const{activeViewportId:t,viewports:a}=r.getState(),n=a.get(t),{displaySetInstanceUIDs:s}=n,i=o.activeDisplaySets,{UIModalService:c}=e.services,l=s[0];c.show({content:Oa,contentProps:{displaySets:i,displaySetInstanceUID:l,onClose:c.hide},containerDimensions:"w-[70%] max-w-[900px]",title:"DICOM Tag Browser"})},toggleOverlays:()=>{const e=document.getElementsByClassName("viewport-overlay");for(let t=0;t<e.length;t++)e.item(t).classList.toggle("hidden")},scrollActiveThumbnailIntoView:()=>{const{activeViewportId:e,viewports:t}=r.getState(),a=t.get(e).displaySetInstanceUIDs[0],n=document.querySelector("#ohif-thumbnail-list");if(!n)return;const s=n.getBoundingClientRect(),i=document.querySelector(`#thumbnail-${a}`);if(!i)return;const o=i.getBoundingClientRect();o.top>=s.top&&o.top<=s.bottom||i.scrollIntoView({behavior:"smooth"})},updateViewportDisplaySet:({direction:e,excludeNonImageModalities:t})=>{const a=["SR","SEG","SM","RTSTRUCT","RTPLAN","RTDOSE"],n=[...o.activeDisplaySets],{activeViewportId:c,viewports:l,isHangingProtocolLayout:d}=r.getState(),{displaySetInstanceUIDs:m}=l.get(c);let p;for(p=n.findIndex((e=>m.includes(e.displaySetInstanceUID)))+e;p>-1&&p<n.length&&(t&&a.includes(n[p].Modality));p+=e);if(p<0||p>=n.length)return;const{displaySetInstanceUID:g}=n[p];let h=[];try{h=s.getViewportsRequireUpdate(c,g,d)}catch(e){console.warn(e),i.show({title:"Navigate Viewport Display Set",message:"The requested display sets could not be added to the viewport due to a mismatch in the Hanging Protocol rules.",type:"info",duration:3e3})}r.setDisplaySetsForViewports(h),setTimeout((()=>u.scrollActiveThumbnailIntoView()),0)}},d={showContextMenu:{commandFn:u.showContextMenu},closeContextMenu:{commandFn:u.closeContextMenu},clearMeasurements:{commandFn:u.clearMeasurements},displayNotification:{commandFn:u.displayNotification},setHangingProtocol:{commandFn:u.setHangingProtocol},toggleHangingProtocol:{commandFn:u.toggleHangingProtocol},navigateHistory:{commandFn:u.navigateHistory},nextStage:{commandFn:u.deltaStage,options:{direction:1}},previousStage:{commandFn:u.deltaStage,options:{direction:-1}},setViewportGridLayout:{commandFn:u.setViewportGridLayout},toggleOneUp:{commandFn:u.toggleOneUp},openDICOMTagViewer:{commandFn:u.openDICOMTagViewer},updateViewportDisplaySet:{commandFn:u.updateViewportDisplaySet}};return{actions:u,definitions:d,defaultContext:"DEFAULT"}},qa={id:"@ohif/mnGrid",description:"Has various hanging protocol grid layouts",name:"2x2",protocolMatchingRules:[{id:"OneOrMoreSeries",weight:25,attribute:"numberOfDisplaySetsWithImages",constraint:{greaterThan:0}}],toolGroupIds:["default"],displaySetSelectors:{defaultDisplaySetId:{seriesMatchingRules:[{attribute:"numImageFrames",constraint:{greaterThan:{value:0}},required:!0},{attribute:"isDisplaySetFromUrl",weight:10,constraint:{equals:!0}}]}},defaultViewport:{viewportOptions:{viewportType:"stack",toolGroupId:"default",allowUnmatchedView:!0},displaySets:[{id:"defaultDisplaySetId",matchedDisplaySetsIndex:-1}]},stages:[{id:"2x2",stageActivation:{enabled:{minViewportsMatched:4}},viewportStructure:{layoutType:"grid",properties:{rows:2,columns:2}},viewports:[{viewportOptions:{toolGroupId:"default",allowUnmatchedView:!0},displaySets:[{id:"defaultDisplaySetId"}]},{viewportOptions:{toolGroupId:"default",allowUnmatchedView:!0},displaySets:[{matchedDisplaySetsIndex:1,id:"defaultDisplaySetId"}]},{viewportOptions:{toolGroupId:"default",allowUnmatchedView:!0},displaySets:[{matchedDisplaySetsIndex:2,id:"defaultDisplaySetId"}]},{viewportOptions:{toolGroupId:"default",allowUnmatchedView:!0},displaySets:[{matchedDisplaySetsIndex:3,id:"defaultDisplaySetId"}]}]},{id:"3x1",requiredViewports:1,preferredViewports:3,stageActivation:{enabled:{minViewportsMatched:3}},viewportStructure:{layoutType:"grid",properties:{rows:1,columns:3}},viewports:[{viewportOptions:{toolGroupId:"default",allowUnmatchedView:!0},displaySets:[{id:"defaultDisplaySetId"}]},{viewportOptions:{toolGroupId:"default",allowUnmatchedView:!0},displaySets:[{id:"defaultDisplaySetId",matchedDisplaySetsIndex:1}]},{viewportOptions:{toolGroupId:"default",allowUnmatchedView:!0},displaySets:[{id:"defaultDisplaySetId",matchedDisplaySetsIndex:2}]}]},{id:"2x1",requiredViewports:1,preferredViewports:2,stageActivation:{enabled:{minViewportsMatched:2}},viewportStructure:{layoutType:"grid",properties:{rows:1,columns:2}},viewports:[{viewportOptions:{toolGroupId:"default",allowUnmatchedView:!0},displaySets:[{id:"defaultDisplaySetId"}]},{viewportOptions:{toolGroupId:"default",allowUnmatchedView:!0},displaySets:[{matchedDisplaySetsIndex:1,id:"defaultDisplaySetId"}]}]},{id:"1x1",requiredViewports:1,preferredViewports:1,stageActivation:{enabled:{minViewportsMatched:1}},viewportStructure:{layoutType:"grid",properties:{rows:1,columns:1}},viewports:[{viewportOptions:{toolGroupId:"default",allowUnmatchedView:!0},displaySets:[{id:"defaultDisplaySetId"}]}]}],numberOfPriorsReferenced:-1},$a={id:"defaultDisplaySetId"},Ga={id:"priorDisplaySetId"},za={viewportOptions:{toolGroupId:"default",allowUnmatchedView:!0},displaySets:[$a]},Ba={...za,displaySets:[{...$a,matchedDisplaySetsIndex:1}]},ja={...za,displaySets:[Ga]},Za={id:"@ohif/hpCompare",description:"Compare two studies in various layouts",name:"Compare Two Studies",numberOfPriorsReferenced:1,protocolMatchingRules:[{id:"Two Studies",weight:1e3,attribute:"StudyInstanceUID",from:"prior",required:!0,constraint:{notNull:!0}}],toolGroupIds:["default"],displaySetSelectors:{defaultDisplaySetId:{studyMatchingRules:[{attribute:"studyInstanceUIDsIndex",from:"options",required:!0,constraint:{equals:{value:0}}}],seriesMatchingRules:[{attribute:"numImageFrames",constraint:{greaterThan:{value:0}}},{attribute:"isDisplaySetFromUrl",weight:10,constraint:{equals:!0}}]},priorDisplaySetId:{studyMatchingRules:[{attribute:"studyInstanceUIDsIndex",from:"options",required:!0,constraint:{equals:{value:1}}}],seriesMatchingRules:[{attribute:"numImageFrames",constraint:{greaterThan:{value:0}}},{attribute:"isDisplaySetFromUrl",weight:10,constraint:{equals:!0}}]}},defaultViewport:{viewportOptions:{viewportType:"stack",toolGroupId:"default",allowUnmatchedView:!0},displaySets:[{id:"defaultDisplaySetId",matchedDisplaySetsIndex:-1}]},stages:[{name:"2x2",stageActivation:{enabled:{minViewportsMatched:4}},viewportStructure:{layoutType:"grid",properties:{rows:2,columns:2}},viewports:[za,ja,Ba,{...ja,displaySets:[{...Ga,matchedDisplaySetsIndex:1}]}]},{name:"2x1",stageActivation:{enabled:{minViewportsMatched:2}},viewportStructure:{layoutType:"grid",properties:{rows:1,columns:2}},viewports:[za,ja]}]},Ha=[{attribute:"studyInstanceUIDsIndex",from:"options",required:!0,constraint:{equals:{value:1}}}],Wa=[{attribute:"studyInstanceUIDsIndex",from:"options",required:!0,constraint:{equals:{value:0}}}],Ya=[{weight:10,attribute:"ViewCode",constraint:{contains:"SCT:399162004"}},{weight:5,attribute:"PatientOrientation",constraint:{contains:"L"}},{weight:20,attribute:"SeriesDescription",constraint:{contains:"L CC"}}],Xa=[{weight:10,attribute:"ViewCode",constraint:{contains:"SCT:399162004"}},{weight:5,attribute:"PatientOrientation",constraint:{equals:["P","L"]}},{attribute:"PatientOrientation",constraint:{doesNotEqual:["A","R"]},required:!0},{weight:20,attribute:"SeriesDescription",constraint:{contains:"CC"}}],Qa=[{weight:10,attribute:"ViewCode",constraint:{contains:"SCT:399368009"}},{weight:0,attribute:"ViewCode",constraint:{doesNotEqual:"SCT:399162004"},required:!0},{weight:5,attribute:"PatientOrientation",constraint:{equals:["A","R"]}},{weight:20,attribute:"SeriesDescription",constraint:{contains:"L MLO"}}],Ja=[{weight:10,attribute:"ViewCode",constraint:{contains:"SCT:399368009"}},{attribute:"ViewCode",constraint:{doesNotEqual:"SCT:399162004"},required:!0},{attribute:"PatientOrientation",constraint:{doesNotContain:["P","FL"]},required:!0},{weight:5,attribute:"PatientOrientation",constraint:{equals:["P","L"]}},{weight:5,attribute:"PatientOrientation",constraint:{equals:["A","FR"]}},{weight:20,attribute:"SeriesDescription",constraint:{contains:"R MLO"}},{attribute:"SeriesDescription",required:!0,constraint:{doesNotContain:"CC"}},{attribute:"SeriesDescription",required:!0,constraint:{doesNotEqual:"L MLO"},required:!0}],Ka={storeAsInitialCamera:!0,imageArea:[.8,.8],imageCanvasPoint:{imagePoint:[0,.5],canvasPoint:[0,.5]}},en={storeAsInitialCamera:!0,imageArea:[.8,.8],imageCanvasPoint:{imagePoint:[1,.5],canvasPoint:[1,.5]}},tn={id:"@ohif/hpMammo",hasUpdatedPriorsInformation:!1,name:"Mammography Breast Screening",protocolMatchingRules:[{id:"Mammography",weight:150,attribute:"ModalitiesInStudy",constraint:{contains:"MG"},required:!0},{id:"numberOfImages",attribute:"numberOfDisplaySetsWithImages",constraint:{greaterThan:2},required:!0}],toolGroupIds:["default"],displaySetSelectors:{RCC:{seriesMatchingRules:Xa,studyMatchingRules:Wa},LCC:{seriesMatchingRules:Ya,studyMatchingRules:Wa},RMLO:{seriesMatchingRules:Ja,studyMatchingRules:Wa},LMLO:{seriesMatchingRules:Qa,studyMatchingRules:Wa},RCCPrior:{seriesMatchingRules:Xa,studyMatchingRules:Ha},LCCPrior:{seriesMatchingRules:Ya,studyMatchingRules:Ha},RMLOPrior:{seriesMatchingRules:Ja,studyMatchingRules:Ha},LMLOPrior:{seriesMatchingRules:Qa,studyMatchingRules:Ha}},stages:[{name:"CC/MLO",viewportStructure:{type:"grid",layoutType:"grid",properties:{rows:2,columns:2}},viewports:[{viewportOptions:{toolGroupId:"default",displayArea:en,allowUnmatchedView:!0},displaySets:[{id:"RCC"}]},{viewportOptions:{toolGroupId:"default",displayArea:Ka,allowUnmatchedView:!0},displaySets:[{id:"LCC"}]},{viewportOptions:{toolGroupId:"default",displayArea:en,allowUnmatchedView:!0},displaySets:[{id:"RMLO"}]},{viewportOptions:{toolGroupId:"default",displayArea:Ka,allowUnmatchedView:!0},displaySets:[{id:"LMLO"}]}]},{name:"CC compare",viewportStructure:{type:"grid",layoutType:"grid",properties:{rows:2,columns:2}},viewports:[{viewportOptions:{toolGroupId:"default",displayArea:en,flipHorizontal:!0,rotation:180},displaySets:[{id:"RCC"}]},{viewportOptions:{toolGroupId:"default",flipHorizontal:!0,displayArea:Ka},displaySets:[{id:"LCC"}]},{viewportOptions:{toolGroupId:"default",displayArea:en,flipHorizontal:!0},displaySets:[{id:"RCCPrior"}]},{viewportOptions:{toolGroupId:"default",displayArea:Ka},displaySets:[{id:"LCCPrior"}]}]}],numberOfPriorsReferenced:0},an={type:"SCALE",scale:1,storeAsInitialCamera:!0},nn={id:"@ohif/hpScale",description:"Has various hanging protocol grid layouts",name:"Scale Images",protocolMatchingRules:[{id:"OneOrMoreSeries",weight:25,attribute:"numberOfDisplaySetsWithImages",constraint:{greaterThan:0}}],toolGroupIds:["default"],displaySetSelectors:{defaultDisplaySetId:{seriesMatchingRules:[{weight:1,attribute:"numImageFrames",constraint:{greaterThan:{value:0}},required:!0},{attribute:"isDisplaySetFromUrl",weight:10,constraint:{equals:!0}}]}},defaultViewport:{viewportOptions:{viewportType:"stack",toolGroupId:"default",displayArea:an,allowUnmatchedView:!0},displaySets:[{id:"defaultDisplaySetId",matchedDisplaySetsIndex:-1}]},stages:[{name:"Scale 1:1",stageActivation:{enabled:{minViewportsMatched:1}},viewportStructure:{layoutType:"grid",properties:{rows:1,columns:1}},viewports:[{viewportOptions:{toolGroupId:"default",allowUnmatchedView:!0,displayArea:an},displaySets:[{id:"defaultDisplaySetId"}]}]},{name:"Scale 1:15",stageActivation:{enabled:{minViewportsMatched:1}},viewportStructure:{layoutType:"grid",properties:{rows:1,columns:1}},viewports:[{viewportOptions:{toolGroupId:"default",allowUnmatchedView:!0,displayArea:{...an,scale:15}},displaySets:[{id:"defaultDisplaySetId"}]}]}],numberOfPriorsReferenced:-1},sn={id:"default",locked:!0,name:"Default",createdDate:"2021-02-23T19:22:08.894Z",modifiedDate:"2023-04-01",availableTo:{},editableBy:{},protocolMatchingRules:[],toolGroupIds:["default"],numberOfPriorsReferenced:0,defaultViewport:{viewportOptions:{viewportType:"stack",toolGroupId:"default",allowUnmatchedView:!0},displaySets:[{id:"defaultDisplaySetId",matchedDisplaySetsIndex:-1}]},displaySetSelectors:{defaultDisplaySetId:{seriesMatchingRules:[{weight:10,attribute:"numImageFrames",constraint:{greaterThan:{value:0}}},{attribute:"isSeriesUIDFromURL",weight:10,constraint:{equals:!0}}]}},stages:[{name:"default",viewportStructure:{layoutType:"grid",properties:{rows:1,columns:1}},viewports:[{viewportOptions:{viewportType:"stack",viewportId:"default",toolGroupId:"default",initialImageOptions:{custom:"sopInstanceLocation"}},displaySets:[{id:"defaultDisplaySetId"}]}],createdDate:"2021-02-23T18:32:42.850Z"}]};const rn=function(){return[{name:sn.id,protocol:sn},{name:Za.id,protocol:Za},{name:tn.id,protocol:tn},{name:nn.id,protocol:nn},{name:qa.id,protocol:qa}]};const on=function(){const[e]=(0,ge.M)(),t=(0,he.s0)(),a=e.dataSources;return ue.createElement("div",{style:{width:"100%",height:"100%"}},ue.createElement("div",{className:"flex h-screen w-screen items-center justify-center "},ue.createElement("div",{className:"bg-secondary-dark mx-auto space-y-2 rounded-lg py-8 px-8 drop-shadow-md"},ue.createElement("img",{className:"mx-auto block h-14",src:"./wdx-logo.svg",alt:"WeDiagnostiX"}),ue.createElement("div",{className:"space-y-2 pt-4 text-center"},a.filter((e=>"dicomjson"!==e.sourceName&&"dicomlocal"!==e.sourceName)).map((e=>ue.createElement("div",{key:e.sourceName},ue.createElement("h1",{className:"text-white"},e.configuration?.friendlyName||e.friendlyName),ue.createElement(pe.zx,{type:pe.LZ.dt.primary,className:wa()("ml-2"),onClick:()=>{t({pathname:"/",search:`datasources=${e.sourceName}`})}},e.sourceName),ue.createElement("br",null))))))))};const cn=function({itemLabel:e,itemList:t,onItemClicked:a}){const{t:n}=(0,fe.$G)("DataSourceConfiguration"),[s,i]=(0,ue.useState)("");return(0,ue.useEffect)((()=>{i("")}),[t]),ue.createElement("div",{className:"flex min-h-[1px] grow flex-col gap-4"},ue.createElement("div",{className:"flex items-center justify-between"},ue.createElement("div",{className:"text-primary-light text-[20px]"},n(`Select ${e}`)),ue.createElement(pe.Xe,{className:"max-w-[40%] grow",value:s,onDebounceChange:i,placeholder:n(`Search ${e} list`)})),ue.createElement("div",{className:"relative flex min-h-[1px] grow flex-col bg-black text-[14px]"},null==t?ue.createElement(pe.LE,{className:"h-full w-full"}):0===t.length?ue.createElement("div",{className:"text-primary-light flex h-full flex-col items-center justify-center px-6 py-4"},ue.createElement(pe.JO,{name:"magnifier",className:"mb-4"}),ue.createElement("span",null,n(`No ${e} available`))):ue.createElement(ue.Fragment,null,ue.createElement("div",{className:"bg-secondary-dark px-3 py-1.5 text-white"},n(e)),ue.createElement("div",{className:"ohif-scrollbar overflow-auto"},t.filter((e=>!s||e.name.toLowerCase().includes(s.toLowerCase()))).map((e=>ue.createElement("div",{className:wa()("hover:text-primary-light hover:bg-primary-dark group mx-2 flex items-center justify-between px-6 py-2","rounded border-transparent border-b-secondary-light border-[1px] hover:border-primary-light"),key:e.id},ue.createElement("div",null,e.name),ue.createElement(pe.zx,{onClick:()=>a(e),className:"invisible group-hover:visible",endIcon:ue.createElement(pe.JO,{name:"arrow-left"})},n("Select")))))))))},ln="text-ellipsis whitespace-nowrap overflow-hidden";const un=function({configurationAPI:e,configuredItems:t,onHide:a}){const{t:n}=(0,fe.$G)("DataSourceConfiguration"),[s,i]=(0,ue.useState)(),[r,o]=(0,ue.useState)(t),[c,l]=(0,ue.useState)(),[u]=(0,ue.useState)(e.getItemLabels()),[d,m]=(0,ue.useState)(u.length===t.length),p=d?r.length-2:r.length-1;(0,ue.useEffect)((()=>{let t=!0;return l(null),i(null),0===r.length?e.initialize().then((e=>{t&&i(e)})).catch((e=>l(e.message))):d||r.length!==u.length?e.setCurrentItem(r[p]).then((e=>{t&&i(e)})).catch((e=>l(e.message))):(e.setCurrentItem(r[r.length-1]),a()),()=>{t=!1}}),[r,e,a,u,d,p]);const g=e=>e<r.length?wa()("bg-black/[.4]",e!==u.length-1?"hover:bg-transparent active:bg-secondary-dark":""):"bg-transparent",h=e=>e===p+1?wa()("border-2","border-solid","border-primary-light"):e<r.length?"border border-solid border-primary-active hover:border-primary-light active:border-white":"border border-dashed border-secondary-light",f=e=>e<=r.length?"text-primary-light":"text-primary-active";return ue.createElement("div",{className:"flex h-[calc(100vh-300px)] select-none flex-col gap-4 pt-0.5"},ue.createElement("div",{className:"flex gap-4"},u.map(((e,t)=>{return ue.createElement("div",{key:e,className:wa()("flex min-w-[1px] shrink basis-[200px] flex-col gap-1 rounded-md p-3.5",(a=t,a!==u.length-1&&a<r.length?"cursor-pointer":"cursor-auto"),g(t),h(t),f(t)),onClick:d&&t<p||t<=p?()=>{m(!1),o((e=>e.slice(0,t)))}:void 0},ue.createElement("div",{className:"text- flex items-center gap-2"},t<r.length?ue.createElement(pe.JO,{name:"status-tracked"}):ue.createElement(pe.JO,{name:"status-untracked"}),ue.createElement("div",{className:wa()(ln)},n(e))),t<r.length?ue.createElement("div",{className:wa()("text-[14px] text-white",ln)},r[t].name):ue.createElement("br",null));var a}))),ue.createElement("div",{className:"h-0.5 w-full shrink-0 bg-black"}),c?ue.createElement("div",{className:"flex min-h-[1px] grow flex-col gap-4"},ue.createElement("div",{className:"text-primary-light text-[20px]"},n(`Error fetching ${u[r.length]} list`)),ue.createElement("div",{className:"grow bg-black p-4 text-[14px]"},c)):ue.createElement(cn,{itemLabel:u[p+1],itemList:s,onItemClicked:e=>{m(!1),o((t=>[...t.slice(0,p+1),e]))}}))};const dn=function({servicesManager:e,extensionManager:t}){const{t:a}=(0,fe.$G)("DataSourceConfiguration"),{show:n,hide:s}=(0,pe.dd)(),{customizationService:i}=e.services,[r,o]=(0,ue.useState)(),[c,l]=(0,ue.useState)();(0,ue.useEffect)((()=>{let e=!0;const a=async()=>{const a=t.getActiveDataSourceDefinition();if(!a.configuration.configurationAPI)return;const{factory:n}=i.get(a.configuration.configurationAPI)??{};if(!n)return;const s=n(a.sourceName);o(s),l(null),s.getConfiguredItems().then((t=>{e&&l(t)}))},n=t.subscribe(t.EVENTS.ACTIVE_DATA_SOURCE_CHANGED,a);return a(),()=>{e=!1,n.unsubscribe()}}),[]);const u=(0,ue.useCallback)((()=>{n({content:un,title:a("Configure Data Source"),contentProps:{configurationAPI:r,configuredItems:c,onHide:s}})}),[r,c]);return(0,ue.useEffect)((()=>{r&&c&&c.length!==r.getItemLabels().length&&u()}),[r,c,u]),c?ue.createElement("div",{className:"text-aqua-pale flex items-center overflow-hidden"},ue.createElement(pe.JO,{name:"settings",className:"mr-2.5 h-3.5 w-3.5 shrink-0 cursor-pointer",onClick:u}),c.map(((e,t)=>ue.createElement("div",{key:t,className:"flex overflow-hidden"},ue.createElement("div",{key:t,className:"overflow-hidden text-ellipsis whitespace-nowrap"},e.name),t!==c.length-1&&ue.createElement("div",{className:"px-2.5"},"|"))))):ue.createElement(ue.Fragment,null)};var mn=function(e){return e[e.projects=0]="projects",e[e.locations=1]="locations",e[e.datasets=2]="datasets",e[e.dicomStores=3]="dicomStores",e}(mn||{});const pn="https://cloudresourcemanager.googleapis.com/v1",gn="https://healthcare.googleapis.com/v1";class hn{constructor(e,t,a){this._extensionManager=void 0,this._fetchOptions=void 0,this._dataSourceName=void 0,this.getItemLabels=()=>["Project","Location","Data set","DICOM store"],this._dataSourceName=e,this._extensionManager=a;const n=t.services.userAuthenticationService;this._fetchOptions={method:"GET",headers:n.getAuthorizationHeader()}}async initialize(){const e=`${pn}/projects`,t=await hn._doFetch(e,mn.projects,this._fetchOptions);if(!t?.length)return[];return t.map((e=>({id:e.projectId,name:e.name,itemType:mn.projects,url:`${gn}/projects/${e.projectId}`})))}async setCurrentItem(e){const t=e;if(t.itemType===mn.dicomStores){const e=`${t.url}/dicomWeb`,a=JSON.parse(JSON.stringify(this._extensionManager.getDataSourceDefinition(this._dataSourceName)));return a.configuration={...a.configuration,wadoUriRoot:e,qidoRoot:e,wadoRoot:e},this._extensionManager.updateDataSourceConfiguration(a.sourceName,a.configuration),[]}const a=t.itemType+1,n=`${mn[a]}`,s=`${t.url}/${n}`,i=await hn._doFetch(s,a,this._fetchOptions);if(!i?.length)return[];return i.map((e=>{const t=e.name.split("/");return{id:e.name,name:t[t.length-1],itemType:a,url:`${gn}/${e.name}`}}))}async getConfiguredItems(){const e=this._extensionManager.getDataSourceDefinition(this._dataSourceName).configuration.wadoUriRoot,t=e.indexOf("projects"),a=e.substring(t).split("/"),n=[];for(let e=0;e<4&&2*(e+1)<a.length;e+=1)if(e===mn.projects){const t=a[1],s=`${pn}/projects/${t}`,i=(await hn._doFetch(s,mn.projects,this._fetchOptions))[0];n.push({id:i.projectId,name:i.name,itemType:e,url:`${gn}/projects/${i.projectId}`})}else{const t=a.slice(0,2*e+2).join("/");n.push({id:t,name:a[2*e+1],itemType:e,url:`${gn}/${t}`})}return n}static async _doFetch(e,t,a={},n={}){try{const s=new URL(e);s.search=new URLSearchParams(n).toString();const i=await fetch(s,a),r=await i.json();if(i.status>=200&&i.status<300&&null!=r){if(null!=r.nextPageToken){n.pageToken=r.nextPageToken;const s=await this._doFetch(e,t,a,n);r[mn[t]]=r[mn[t]].concat(s)}return r[mn[t]]?r[mn[t]]:r.name?[r]:[]}{const e=r?.error?.message||`Error returned from Google Cloud Healthcare: ${i.status} - ${i.statusText}`;throw new Error(e)}}catch(e){throw new Error(e?.message||"Error occurred during fetch request.")}}}const fn=r.utils.formatDate;const yn=({displaySets:e})=>{const t=e[0],{axis:a,series:n}=t.instance.chartData;return ue.createElement(pe.wW,{showLegend:!0,legendWidth:150,axis:{x:{label:a.x.label,indexRef:0,type:"x",range:{min:0}},y:{label:a.y.label,indexRef:1,type:"y"}},series:n})};var Sn=a(15747);const In=r.default.classes.MetadataProvider;const vn=e=>{const t=e?.images[0]?.ViewCodeSequence[0];if(!t)return;const{CodingSchemeDesignator:a,CodeValue:n}=t;return a&&n?`${a}:${n}`:void 0},Dn=e=>{const t=e?.images?.[0]?.SharedFunctionalGroupsSequence?.[0]?.FrameAnatomySequence?.[0];if(!t)return;const a=t?.FrameLaterality;return a};const wn=[{ColorSpace:"RGB",Name:"hot_iron",RGBPoints:[0,.0039215686,.0039215686,.0156862745,.00392156862745098,.0039215686,.0039215686,.0156862745,.00784313725490196,.0039215686,.0039215686,.031372549,.011764705882352941,.0039215686,.0039215686,.0470588235,.01568627450980392,.0039215686,.0039215686,.062745098,.0196078431372549,.0039215686,.0039215686,.0784313725,.023529411764705882,.0039215686,.0039215686,.0941176471,.027450980392156862,.0039215686,.0039215686,.1098039216,.03137254901960784,.0039215686,.0039215686,.1254901961,.03529411764705882,.0039215686,.0039215686,.1411764706,.0392156862745098,.0039215686,.0039215686,.1568627451,.043137254901960784,.0039215686,.0039215686,.1725490196,.047058823529411764,.0039215686,.0039215686,.1882352941,.050980392156862744,.0039215686,.0039215686,.2039215686,.054901960784313725,.0039215686,.0039215686,.2196078431,.05882352941176471,.0039215686,.0039215686,.2352941176,.06274509803921569,.0039215686,.0039215686,.2509803922,.06666666666666667,.0039215686,.0039215686,.262745098,.07058823529411765,.0039215686,.0039215686,.2784313725,.07450980392156863,.0039215686,.0039215686,.2941176471,.0784313725490196,.0039215686,.0039215686,.3098039216,.08235294117647059,.0039215686,.0039215686,.3254901961,.08627450980392157,.0039215686,.0039215686,.3411764706,.09019607843137255,.0039215686,.0039215686,.3568627451,.09411764705882353,.0039215686,.0039215686,.3725490196,.09803921568627451,.0039215686,.0039215686,.3882352941,.10196078431372549,.0039215686,.0039215686,.4039215686,.10588235294117647,.0039215686,.0039215686,.4196078431,.10980392156862745,.0039215686,.0039215686,.4352941176,.11372549019607843,.0039215686,.0039215686,.4509803922,.11764705882352942,.0039215686,.0039215686,.4666666667,.12156862745098039,.0039215686,.0039215686,.4823529412,.12549019607843137,.0039215686,.0039215686,.4980392157,.12941176470588237,.0039215686,.0039215686,.5137254902,.13333333333333333,.0039215686,.0039215686,.5294117647,.13725490196078433,.0039215686,.0039215686,.5450980392,.1411764705882353,.0039215686,.0039215686,.5607843137,.1450980392156863,.0039215686,.0039215686,.5764705882,.14901960784313725,.0039215686,.0039215686,.5921568627,.15294117647058825,.0039215686,.0039215686,.6078431373,.1568627450980392,.0039215686,.0039215686,.6235294118,.1607843137254902,.0039215686,.0039215686,.6392156863,.16470588235294117,.0039215686,.0039215686,.6549019608,.16862745098039217,.0039215686,.0039215686,.6705882353,.17254901960784313,.0039215686,.0039215686,.6862745098,.17647058823529413,.0039215686,.0039215686,.7019607843,.1803921568627451,.0039215686,.0039215686,.7176470588,.1843137254901961,.0039215686,.0039215686,.7333333333,.18823529411764706,.0039215686,.0039215686,.7490196078,.19215686274509805,.0039215686,.0039215686,.7607843137,.19607843137254902,.0039215686,.0039215686,.7764705882,.2,.0039215686,.0039215686,.7921568627,.20392156862745098,.0039215686,.0039215686,.8078431373,.20784313725490197,.0039215686,.0039215686,.8235294118,.21176470588235294,.0039215686,.0039215686,.8392156863,.21568627450980393,.0039215686,.0039215686,.8549019608,.2196078431372549,.0039215686,.0039215686,.8705882353,.2235294117647059,.0039215686,.0039215686,.8862745098,.22745098039215686,.0039215686,.0039215686,.9019607843,.23137254901960785,.0039215686,.0039215686,.9176470588,.23529411764705885,.0039215686,.0039215686,.9333333333,.23921568627450984,.0039215686,.0039215686,.9490196078,.24313725490196078,.0039215686,.0039215686,.9647058824,.24705882352941178,.0039215686,.0039215686,.9803921569,.25098039215686274,.0039215686,.0039215686,.9960784314,.2549019607843137,.0039215686,.0039215686,.9960784314,.25882352941176473,.0156862745,.0039215686,.9803921569,.2627450980392157,.031372549,.0039215686,.9647058824,.26666666666666666,.0470588235,.0039215686,.9490196078,.27058823529411763,.062745098,.0039215686,.9333333333,.27450980392156865,.0784313725,.0039215686,.9176470588,.2784313725490196,.0941176471,.0039215686,.9019607843,.2823529411764706,.1098039216,.0039215686,.8862745098,.28627450980392155,.1254901961,.0039215686,.8705882353,.2901960784313726,.1411764706,.0039215686,.8549019608,.29411764705882354,.1568627451,.0039215686,.8392156863,.2980392156862745,.1725490196,.0039215686,.8235294118,.30196078431372547,.1882352941,.0039215686,.8078431373,.3058823529411765,.2039215686,.0039215686,.7921568627,.30980392156862746,.2196078431,.0039215686,.7764705882,.3137254901960784,.2352941176,.0039215686,.7607843137,.3176470588235294,.2509803922,.0039215686,.7490196078,.3215686274509804,.262745098,.0039215686,.7333333333,.3254901960784314,.2784313725,.0039215686,.7176470588,.32941176470588235,.2941176471,.0039215686,.7019607843,.3333333333333333,.3098039216,.0039215686,.6862745098,.33725490196078434,.3254901961,.0039215686,.6705882353,.3411764705882353,.3411764706,.0039215686,.6549019608,.34509803921568627,.3568627451,.0039215686,.6392156863,.34901960784313724,.3725490196,.0039215686,.6235294118,.35294117647058826,.3882352941,.0039215686,.6078431373,.3568627450980392,.4039215686,.0039215686,.5921568627,.3607843137254902,.4196078431,.0039215686,.5764705882,.36470588235294116,.4352941176,.0039215686,.5607843137,.3686274509803922,.4509803922,.0039215686,.5450980392,.37254901960784315,.4666666667,.0039215686,.5294117647,.3764705882352941,.4823529412,.0039215686,.5137254902,.3803921568627451,.4980392157,.0039215686,.4980392157,.3843137254901961,.5137254902,.0039215686,.4823529412,.38823529411764707,.5294117647,.0039215686,.4666666667,.39215686274509803,.5450980392,.0039215686,.4509803922,.396078431372549,.5607843137,.0039215686,.4352941176,.4,.5764705882,.0039215686,.4196078431,.403921568627451,.5921568627,.0039215686,.4039215686,.40784313725490196,.6078431373,.0039215686,.3882352941,.4117647058823529,.6235294118,.0039215686,.3725490196,.41568627450980394,.6392156863,.0039215686,.3568627451,.4196078431372549,.6549019608,.0039215686,.3411764706,.4235294117647059,.6705882353,.0039215686,.3254901961,.42745098039215684,.6862745098,.0039215686,.3098039216,.43137254901960786,.7019607843,.0039215686,.2941176471,.43529411764705883,.7176470588,.0039215686,.2784313725,.4392156862745098,.7333333333,.0039215686,.262745098,.44313725490196076,.7490196078,.0039215686,.2509803922,.4470588235294118,.7607843137,.0039215686,.2352941176,.45098039215686275,.7764705882,.0039215686,.2196078431,.4549019607843137,.7921568627,.0039215686,.2039215686,.4588235294117647,.8078431373,.0039215686,.1882352941,.4627450980392157,.8235294118,.0039215686,.1725490196,.4666666666666667,.8392156863,.0039215686,.1568627451,.4705882352941177,.8549019608,.0039215686,.1411764706,.4745098039215686,.8705882353,.0039215686,.1254901961,.4784313725490197,.8862745098,.0039215686,.1098039216,.48235294117647065,.9019607843,.0039215686,.0941176471,.48627450980392156,.9176470588,.0039215686,.0784313725,.49019607843137253,.9333333333,.0039215686,.062745098,.49411764705882355,.9490196078,.0039215686,.0470588235,.4980392156862745,.9647058824,.0039215686,.031372549,.5019607843137255,.9803921569,.0039215686,.0156862745,.5058823529411764,.9960784314,.0039215686,.0039215686,.5098039215686274,.9960784314,.0156862745,.0039215686,.5137254901960784,.9960784314,.031372549,.0039215686,.5176470588235295,.9960784314,.0470588235,.0039215686,.5215686274509804,.9960784314,.062745098,.0039215686,.5254901960784314,.9960784314,.0784313725,.0039215686,.5294117647058824,.9960784314,.0941176471,.0039215686,.5333333333333333,.9960784314,.1098039216,.0039215686,.5372549019607843,.9960784314,.1254901961,.0039215686,.5411764705882353,.9960784314,.1411764706,.0039215686,.5450980392156862,.9960784314,.1568627451,.0039215686,.5490196078431373,.9960784314,.1725490196,.0039215686,.5529411764705883,.9960784314,.1882352941,.0039215686,.5568627450980392,.9960784314,.2039215686,.0039215686,.5607843137254902,.9960784314,.2196078431,.0039215686,.5647058823529412,.9960784314,.2352941176,.0039215686,.5686274509803921,.9960784314,.2509803922,.0039215686,.5725490196078431,.9960784314,.262745098,.0039215686,.5764705882352941,.9960784314,.2784313725,.0039215686,.5803921568627451,.9960784314,.2941176471,.0039215686,.5843137254901961,.9960784314,.3098039216,.0039215686,.5882352941176471,.9960784314,.3254901961,.0039215686,.592156862745098,.9960784314,.3411764706,.0039215686,.596078431372549,.9960784314,.3568627451,.0039215686,.6,.9960784314,.3725490196,.0039215686,.6039215686274509,.9960784314,.3882352941,.0039215686,.6078431372549019,.9960784314,.4039215686,.0039215686,.611764705882353,.9960784314,.4196078431,.0039215686,.615686274509804,.9960784314,.4352941176,.0039215686,.6196078431372549,.9960784314,.4509803922,.0039215686,.6235294117647059,.9960784314,.4666666667,.0039215686,.6274509803921569,.9960784314,.4823529412,.0039215686,.6313725490196078,.9960784314,.4980392157,.0039215686,.6352941176470588,.9960784314,.5137254902,.0039215686,.6392156862745098,.9960784314,.5294117647,.0039215686,.6431372549019608,.9960784314,.5450980392,.0039215686,.6470588235294118,.9960784314,.5607843137,.0039215686,.6509803921568628,.9960784314,.5764705882,.0039215686,.6549019607843137,.9960784314,.5921568627,.0039215686,.6588235294117647,.9960784314,.6078431373,.0039215686,.6627450980392157,.9960784314,.6235294118,.0039215686,.6666666666666666,.9960784314,.6392156863,.0039215686,.6705882352941176,.9960784314,.6549019608,.0039215686,.6745098039215687,.9960784314,.6705882353,.0039215686,.6784313725490196,.9960784314,.6862745098,.0039215686,.6823529411764706,.9960784314,.7019607843,.0039215686,.6862745098039216,.9960784314,.7176470588,.0039215686,.6901960784313725,.9960784314,.7333333333,.0039215686,.6941176470588235,.9960784314,.7490196078,.0039215686,.6980392156862745,.9960784314,.7607843137,.0039215686,.7019607843137254,.9960784314,.7764705882,.0039215686,.7058823529411765,.9960784314,.7921568627,.0039215686,.7098039215686275,.9960784314,.8078431373,.0039215686,.7137254901960784,.9960784314,.8235294118,.0039215686,.7176470588235294,.9960784314,.8392156863,.0039215686,.7215686274509804,.9960784314,.8549019608,.0039215686,.7254901960784313,.9960784314,.8705882353,.0039215686,.7294117647058823,.9960784314,.8862745098,.0039215686,.7333333333333333,.9960784314,.9019607843,.0039215686,.7372549019607844,.9960784314,.9176470588,.0039215686,.7411764705882353,.9960784314,.9333333333,.0039215686,.7450980392156863,.9960784314,.9490196078,.0039215686,.7490196078431373,.9960784314,.9647058824,.0039215686,.7529411764705882,.9960784314,.9803921569,.0039215686,.7568627450980392,.9960784314,.9960784314,.0039215686,.7607843137254902,.9960784314,.9960784314,.0196078431,.7647058823529411,.9960784314,.9960784314,.0352941176,.7686274509803922,.9960784314,.9960784314,.0509803922,.7725490196078432,.9960784314,.9960784314,.0666666667,.7764705882352941,.9960784314,.9960784314,.0823529412,.7803921568627451,.9960784314,.9960784314,.0980392157,.7843137254901961,.9960784314,.9960784314,.1137254902,.788235294117647,.9960784314,.9960784314,.1294117647,.792156862745098,.9960784314,.9960784314,.1450980392,.796078431372549,.9960784314,.9960784314,.1607843137,.8,.9960784314,.9960784314,.1764705882,.803921568627451,.9960784314,.9960784314,.1921568627,.807843137254902,.9960784314,.9960784314,.2078431373,.8117647058823529,.9960784314,.9960784314,.2235294118,.8156862745098039,.9960784314,.9960784314,.2392156863,.8196078431372549,.9960784314,.9960784314,.2509803922,.8235294117647058,.9960784314,.9960784314,.2666666667,.8274509803921568,.9960784314,.9960784314,.2823529412,.8313725490196079,.9960784314,.9960784314,.2980392157,.8352941176470589,.9960784314,.9960784314,.3137254902,.8392156862745098,.9960784314,.9960784314,.3333333333,.8431372549019608,.9960784314,.9960784314,.3490196078,.8470588235294118,.9960784314,.9960784314,.3647058824,.8509803921568627,.9960784314,.9960784314,.3803921569,.8549019607843137,.9960784314,.9960784314,.3960784314,.8588235294117647,.9960784314,.9960784314,.4117647059,.8627450980392157,.9960784314,.9960784314,.4274509804,.8666666666666667,.9960784314,.9960784314,.4431372549,.8705882352941177,.9960784314,.9960784314,.4588235294,.8745098039215686,.9960784314,.9960784314,.4745098039,.8784313725490196,.9960784314,.9960784314,.4901960784,.8823529411764706,.9960784314,.9960784314,.5058823529,.8862745098039215,.9960784314,.9960784314,.5215686275,.8901960784313725,.9960784314,.9960784314,.537254902,.8941176470588236,.9960784314,.9960784314,.5529411765,.8980392156862745,.9960784314,.9960784314,.568627451,.9019607843137255,.9960784314,.9960784314,.5843137255,.9058823529411765,.9960784314,.9960784314,.6,.9098039215686274,.9960784314,.9960784314,.6156862745,.9137254901960784,.9960784314,.9960784314,.631372549,.9176470588235294,.9960784314,.9960784314,.6470588235,.9215686274509803,.9960784314,.9960784314,.6666666667,.9254901960784314,.9960784314,.9960784314,.6823529412,.9294117647058824,.9960784314,.9960784314,.6980392157,.9333333333333333,.9960784314,.9960784314,.7137254902,.9372549019607843,.9960784314,.9960784314,.7294117647,.9411764705882354,.9960784314,.9960784314,.7450980392,.9450980392156864,.9960784314,.9960784314,.7568627451,.9490196078431372,.9960784314,.9960784314,.7725490196,.9529411764705882,.9960784314,.9960784314,.7882352941,.9568627450980394,.9960784314,.9960784314,.8039215686,.9607843137254903,.9960784314,.9960784314,.8196078431,.9647058823529413,.9960784314,.9960784314,.8352941176,.9686274509803922,.9960784314,.9960784314,.8509803922,.9725490196078431,.9960784314,.9960784314,.8666666667,.9764705882352941,.9960784314,.9960784314,.8823529412,.9803921568627451,.9960784314,.9960784314,.8980392157,.984313725490196,.9960784314,.9960784314,.9137254902,.9882352941176471,.9960784314,.9960784314,.9294117647,.9921568627450981,.9960784314,.9960784314,.9450980392,.996078431372549,.9960784314,.9960784314,.9607843137,1,.9960784314,.9960784314,.9607843137]},{ColorSpace:"RGB",Name:"red_hot",RGBPoints:[0,0,0,0,.00392156862745098,0,0,0,.00784313725490196,0,0,0,.011764705882352941,0,0,0,.01568627450980392,.0039215686,.0039215686,.0039215686,.0196078431372549,.0039215686,.0039215686,.0039215686,.023529411764705882,.0039215686,.0039215686,.0039215686,.027450980392156862,.0039215686,.0039215686,.0039215686,.03137254901960784,.0039215686,.0039215686,.0039215686,.03529411764705882,.0156862745,0,0,.0392156862745098,.0274509804,0,0,.043137254901960784,.0392156863,0,0,.047058823529411764,.0509803922,0,0,.050980392156862744,.062745098,0,0,.054901960784313725,.0784313725,0,0,.05882352941176471,.0901960784,0,0,.06274509803921569,.1058823529,0,0,.06666666666666667,.1176470588,0,0,.07058823529411765,.1294117647,0,0,.07450980392156863,.1411764706,0,0,.0784313725490196,.1529411765,0,0,.08235294117647059,.1647058824,0,0,.08627450980392157,.1764705882,0,0,.09019607843137255,.1882352941,0,0,.09411764705882353,.2039215686,0,0,.09803921568627451,.2156862745,0,0,.10196078431372549,.2274509804,0,0,.10588235294117647,.2392156863,0,0,.10980392156862745,.2549019608,0,0,.11372549019607843,.2666666667,0,0,.11764705882352942,.2784313725,0,0,.12156862745098039,.2901960784,0,0,.12549019607843137,.3058823529,0,0,.12941176470588237,.3176470588,0,0,.13333333333333333,.3294117647,0,0,.13725490196078433,.3411764706,0,0,.1411764705882353,.3529411765,0,0,.1450980392156863,.3647058824,0,0,.14901960784313725,.3764705882,0,0,.15294117647058825,.3882352941,0,0,.1568627450980392,.4039215686,0,0,.1607843137254902,.4156862745,0,0,.16470588235294117,.431372549,0,0,.16862745098039217,.4431372549,0,0,.17254901960784313,.4588235294,0,0,.17647058823529413,.4705882353,0,0,.1803921568627451,.4823529412,0,0,.1843137254901961,.4941176471,0,0,.18823529411764706,.5098039216,0,0,.19215686274509805,.5215686275,0,0,.19607843137254902,.5333333333,0,0,.2,.5450980392,0,0,.20392156862745098,.5568627451,0,0,.20784313725490197,.568627451,0,0,.21176470588235294,.5803921569,0,0,.21568627450980393,.5921568627,0,0,.2196078431372549,.6078431373,0,0,.2235294117647059,.6196078431,0,0,.22745098039215686,.631372549,0,0,.23137254901960785,.6431372549,0,0,.23529411764705885,.6588235294,0,0,.23921568627450984,.6705882353,0,0,.24313725490196078,.6823529412,0,0,.24705882352941178,.6941176471,0,0,.25098039215686274,.7098039216,0,0,.2549019607843137,.7215686275,0,0,.25882352941176473,.7333333333,0,0,.2627450980392157,.7450980392,0,0,.26666666666666666,.7568627451,0,0,.27058823529411763,.768627451,0,0,.27450980392156865,.7843137255,0,0,.2784313725490196,.7960784314,0,0,.2823529411764706,.8117647059,0,0,.28627450980392155,.8235294118,0,0,.2901960784313726,.8352941176,0,0,.29411764705882354,.8470588235,0,0,.2980392156862745,.862745098,0,0,.30196078431372547,.8745098039,0,0,.3058823529411765,.8862745098,0,0,.30980392156862746,.8980392157,0,0,.3137254901960784,.9137254902,0,0,.3176470588235294,.9254901961,0,0,.3215686274509804,.937254902,0,0,.3254901960784314,.9490196078,0,0,.32941176470588235,.9607843137,0,0,.3333333333333333,.968627451,0,0,.33725490196078434,.9803921569,.0039215686,0,.3411764705882353,.9882352941,.0078431373,0,.34509803921568627,1,.0117647059,0,.34901960784313724,1,.0235294118,0,.35294117647058826,1,.0352941176,0,.3568627450980392,1,.0470588235,0,.3607843137254902,1,.062745098,0,.36470588235294116,1,.0745098039,0,.3686274509803922,1,.0862745098,0,.37254901960784315,1,.0980392157,0,.3764705882352941,1,.1137254902,0,.3803921568627451,1,.1254901961,0,.3843137254901961,1,.137254902,0,.38823529411764707,1,.1490196078,0,.39215686274509803,1,.1647058824,0,.396078431372549,1,.1764705882,0,.4,1,.1882352941,0,.403921568627451,1,.2,0,.40784313725490196,1,.2156862745,0,.4117647058823529,1,.2274509804,0,.41568627450980394,1,.2392156863,0,.4196078431372549,1,.2509803922,0,.4235294117647059,1,.2666666667,0,.42745098039215684,1,.2784313725,0,.43137254901960786,1,.2901960784,0,.43529411764705883,1,.3019607843,0,.4392156862745098,1,.3176470588,0,.44313725490196076,1,.3294117647,0,.4470588235294118,1,.3411764706,0,.45098039215686275,1,.3529411765,0,.4549019607843137,1,.368627451,0,.4588235294117647,1,.3803921569,0,.4627450980392157,1,.3921568627,0,.4666666666666667,1,.4039215686,0,.4705882352941177,1,.4156862745,0,.4745098039215686,1,.4274509804,0,.4784313725490197,1,.4392156863,0,.48235294117647065,1,.4509803922,0,.48627450980392156,1,.4666666667,0,.49019607843137253,1,.4784313725,0,.49411764705882355,1,.4941176471,0,.4980392156862745,1,.5058823529,0,.5019607843137255,1,.5215686275,0,.5058823529411764,1,.5333333333,0,.5098039215686274,1,.5450980392,0,.5137254901960784,1,.5568627451,0,.5176470588235295,1,.568627451,0,.5215686274509804,1,.5803921569,0,.5254901960784314,1,.5921568627,0,.5294117647058824,1,.6039215686,0,.5333333333333333,1,.6196078431,0,.5372549019607843,1,.631372549,0,.5411764705882353,1,.6431372549,0,.5450980392156862,1,.6549019608,0,.5490196078431373,1,.6705882353,0,.5529411764705883,1,.6823529412,0,.5568627450980392,1,.6941176471,0,.5607843137254902,1,.7058823529,0,.5647058823529412,1,.7215686275,0,.5686274509803921,1,.7333333333,0,.5725490196078431,1,.7450980392,0,.5764705882352941,1,.7568627451,0,.5803921568627451,1,.7725490196,0,.5843137254901961,1,.7843137255,0,.5882352941176471,1,.7960784314,0,.592156862745098,1,.8078431373,0,.596078431372549,1,.8196078431,0,.6,1,.831372549,0,.6039215686274509,1,.8470588235,0,.6078431372549019,1,.8588235294,0,.611764705882353,1,.8745098039,0,.615686274509804,1,.8862745098,0,.6196078431372549,1,.8980392157,0,.6235294117647059,1,.9098039216,0,.6274509803921569,1,.9254901961,0,.6313725490196078,1,.937254902,0,.6352941176470588,1,.9490196078,0,.6392156862745098,1,.9607843137,0,.6431372549019608,1,.9764705882,0,.6470588235294118,1,.9803921569,.0039215686,.6509803921568628,1,.9882352941,.0117647059,.6549019607843137,1,.9921568627,.0156862745,.6588235294117647,1,1,.0235294118,.6627450980392157,1,1,.0352941176,.6666666666666666,1,1,.0470588235,.6705882352941176,1,1,.0588235294,.6745098039215687,1,1,.0745098039,.6784313725490196,1,1,.0862745098,.6823529411764706,1,1,.0980392157,.6862745098039216,1,1,.1098039216,.6901960784313725,1,1,.1254901961,.6941176470588235,1,1,.137254902,.6980392156862745,1,1,.1490196078,.7019607843137254,1,1,.1607843137,.7058823529411765,1,1,.1764705882,.7098039215686275,1,1,.1882352941,.7137254901960784,1,1,.2,.7176470588235294,1,1,.2117647059,.7215686274509804,1,1,.2274509804,.7254901960784313,1,1,.2392156863,.7294117647058823,1,1,.2509803922,.7333333333333333,1,1,.262745098,.7372549019607844,1,1,.2784313725,.7411764705882353,1,1,.2901960784,.7450980392156863,1,1,.3019607843,.7490196078431373,1,1,.3137254902,.7529411764705882,1,1,.3294117647,.7568627450980392,1,1,.3411764706,.7607843137254902,1,1,.3529411765,.7647058823529411,1,1,.3647058824,.7686274509803922,1,1,.3803921569,.7725490196078432,1,1,.3921568627,.7764705882352941,1,1,.4039215686,.7803921568627451,1,1,.4156862745,.7843137254901961,1,1,.431372549,.788235294117647,1,1,.4431372549,.792156862745098,1,1,.4549019608,.796078431372549,1,1,.4666666667,.8,1,1,.4784313725,.803921568627451,1,1,.4901960784,.807843137254902,1,1,.5019607843,.8117647058823529,1,1,.5137254902,.8156862745098039,1,1,.5294117647,.8196078431372549,1,1,.5411764706,.8235294117647058,1,1,.5568627451,.8274509803921568,1,1,.568627451,.8313725490196079,1,1,.5843137255,.8352941176470589,1,1,.5960784314,.8392156862745098,1,1,.6078431373,.8431372549019608,1,1,.6196078431,.8470588235294118,1,1,.631372549,.8509803921568627,1,1,.6431372549,.8549019607843137,1,1,.6549019608,.8588235294117647,1,1,.6666666667,.8627450980392157,1,1,.6823529412,.8666666666666667,1,1,.6941176471,.8705882352941177,1,1,.7058823529,.8745098039215686,1,1,.7176470588,.8784313725490196,1,1,.7333333333,.8823529411764706,1,1,.7450980392,.8862745098039215,1,1,.7568627451,.8901960784313725,1,1,.768627451,.8941176470588236,1,1,.7843137255,.8980392156862745,1,1,.7960784314,.9019607843137255,1,1,.8078431373,.9058823529411765,1,1,.8196078431,.9098039215686274,1,1,.8352941176,.9137254901960784,1,1,.8470588235,.9176470588235294,1,1,.8588235294,.9215686274509803,1,1,.8705882353,.9254901960784314,1,1,.8823529412,.9294117647058824,1,1,.8941176471,.9333333333333333,1,1,.9098039216,.9372549019607843,1,1,.9215686275,.9411764705882354,1,1,.937254902,.9450980392156864,1,1,.9490196078,.9490196078431372,1,1,.9607843137,.9529411764705882,1,1,.9725490196,.9568627450980394,1,1,.9882352941,.9607843137254903,1,1,.9882352941,.9647058823529413,1,1,.9921568627,.9686274509803922,1,1,.9960784314,.9725490196078431,1,1,1,.9764705882352941,1,1,1,.9803921568627451,1,1,1,.984313725490196,1,1,1,.9882352941176471,1,1,1,.9921568627450981,1,1,1,.996078431372549,1,1,1,1,1,1,1]},{ColorSpace:"RGB",Name:"s_pet",RGBPoints:[0,.0156862745,.0039215686,.0156862745,.00392156862745098,.0156862745,.0039215686,.0156862745,.00784313725490196,.0274509804,.0039215686,.031372549,.011764705882352941,.0352941176,.0039215686,.0509803922,.01568627450980392,.0392156863,.0039215686,.0666666667,.0196078431372549,.0509803922,.0039215686,.0823529412,.023529411764705882,.062745098,.0039215686,.0980392157,.027450980392156862,.0705882353,.0039215686,.1176470588,.03137254901960784,.0745098039,.0039215686,.1333333333,.03529411764705882,.0862745098,.0039215686,.1490196078,.0392156862745098,.0980392157,.0039215686,.1647058824,.043137254901960784,.1058823529,.0039215686,.1843137255,.047058823529411764,.1098039216,.0039215686,.2,.050980392156862744,.1215686275,.0039215686,.2156862745,.054901960784313725,.1333333333,.0039215686,.231372549,.05882352941176471,.137254902,.0039215686,.2509803922,.06274509803921569,.1490196078,.0039215686,.262745098,.06666666666666667,.1607843137,.0039215686,.2784313725,.07058823529411765,.168627451,.0039215686,.2941176471,.07450980392156863,.1725490196,.0039215686,.3137254902,.0784313725490196,.1843137255,.0039215686,.3294117647,.08235294117647059,.1960784314,.0039215686,.3450980392,.08627450980392157,.2039215686,.0039215686,.3607843137,.09019607843137255,.2078431373,.0039215686,.3803921569,.09411764705882353,.2196078431,.0039215686,.3960784314,.09803921568627451,.231372549,.0039215686,.4117647059,.10196078431372549,.2392156863,.0039215686,.4274509804,.10588235294117647,.2431372549,.0039215686,.4470588235,.10980392156862745,.2509803922,.0039215686,.462745098,.11372549019607843,.262745098,.0039215686,.4784313725,.11764705882352942,.2666666667,.0039215686,.4980392157,.12156862745098039,.2666666667,.0039215686,.4980392157,.12549019607843137,.262745098,.0039215686,.5137254902,.12941176470588237,.2509803922,.0039215686,.5294117647,.13333333333333333,.2431372549,.0039215686,.5450980392,.13725490196078433,.2392156863,.0039215686,.5607843137,.1411764705882353,.231372549,.0039215686,.5764705882,.1450980392156863,.2196078431,.0039215686,.5921568627,.14901960784313725,.2078431373,.0039215686,.6078431373,.15294117647058825,.2039215686,.0039215686,.6235294118,.1568627450980392,.1960784314,.0039215686,.6392156863,.1607843137254902,.1843137255,.0039215686,.6549019608,.16470588235294117,.1725490196,.0039215686,.6705882353,.16862745098039217,.168627451,.0039215686,.6862745098,.17254901960784313,.1607843137,.0039215686,.7019607843,.17647058823529413,.1490196078,.0039215686,.7176470588,.1803921568627451,.137254902,.0039215686,.7333333333,.1843137254901961,.1333333333,.0039215686,.7490196078,.18823529411764706,.1215686275,.0039215686,.7607843137,.19215686274509805,.1098039216,.0039215686,.7764705882,.19607843137254902,.1058823529,.0039215686,.7921568627,.2,.0980392157,.0039215686,.8078431373,.20392156862745098,.0862745098,.0039215686,.8235294118,.20784313725490197,.0745098039,.0039215686,.8392156863,.21176470588235294,.0705882353,.0039215686,.8549019608,.21568627450980393,.062745098,.0039215686,.8705882353,.2196078431372549,.0509803922,.0039215686,.8862745098,.2235294117647059,.0392156863,.0039215686,.9019607843,.22745098039215686,.0352941176,.0039215686,.9176470588,.23137254901960785,.0274509804,.0039215686,.9333333333,.23529411764705885,.0156862745,.0039215686,.9490196078,.23921568627450984,.0078431373,.0039215686,.9647058824,.24313725490196078,.0039215686,.0039215686,.9960784314,.24705882352941178,.0039215686,.0039215686,.9960784314,.25098039215686274,.0039215686,.0196078431,.9647058824,.2549019607843137,.0039215686,.0392156863,.9490196078,.25882352941176473,.0039215686,.0549019608,.9333333333,.2627450980392157,.0039215686,.0745098039,.9176470588,.26666666666666666,.0039215686,.0901960784,.9019607843,.27058823529411763,.0039215686,.1098039216,.8862745098,.27450980392156865,.0039215686,.1254901961,.8705882353,.2784313725490196,.0039215686,.1450980392,.8549019608,.2823529411764706,.0039215686,.1607843137,.8392156863,.28627450980392155,.0039215686,.1803921569,.8235294118,.2901960784313726,.0039215686,.1960784314,.8078431373,.29411764705882354,.0039215686,.2156862745,.7921568627,.2980392156862745,.0039215686,.231372549,.7764705882,.30196078431372547,.0039215686,.2509803922,.7607843137,.3058823529411765,.0039215686,.262745098,.7490196078,.30980392156862746,.0039215686,.2823529412,.7333333333,.3137254901960784,.0039215686,.2980392157,.7176470588,.3176470588235294,.0039215686,.3176470588,.7019607843,.3215686274509804,.0039215686,.3333333333,.6862745098,.3254901960784314,.0039215686,.3529411765,.6705882353,.32941176470588235,.0039215686,.368627451,.6549019608,.3333333333333333,.0039215686,.3882352941,.6392156863,.33725490196078434,.0039215686,.4039215686,.6235294118,.3411764705882353,.0039215686,.4235294118,.6078431373,.34509803921568627,.0039215686,.4392156863,.5921568627,.34901960784313724,.0039215686,.4588235294,.5764705882,.35294117647058826,.0039215686,.4745098039,.5607843137,.3568627450980392,.0039215686,.4941176471,.5450980392,.3607843137254902,.0039215686,.5098039216,.5294117647,.36470588235294116,.0039215686,.5294117647,.5137254902,.3686274509803922,.0039215686,.5450980392,.4980392157,.37254901960784315,.0039215686,.5647058824,.4784313725,.3764705882352941,.0039215686,.5803921569,.462745098,.3803921568627451,.0039215686,.6,.4470588235,.3843137254901961,.0039215686,.6156862745,.4274509804,.38823529411764707,.0039215686,.6352941176,.4117647059,.39215686274509803,.0039215686,.6509803922,.3960784314,.396078431372549,.0039215686,.6705882353,.3803921569,.4,.0039215686,.6862745098,.3607843137,.403921568627451,.0039215686,.7058823529,.3450980392,.40784313725490196,.0039215686,.7215686275,.3294117647,.4117647058823529,.0039215686,.7411764706,.3137254902,.41568627450980394,.0039215686,.7529411765,.2941176471,.4196078431372549,.0039215686,.7960784314,.2784313725,.4235294117647059,.0039215686,.7960784314,.262745098,.42745098039215684,.0392156863,.8039215686,.2509803922,.43137254901960786,.0745098039,.8117647059,.231372549,.43529411764705883,.1098039216,.8196078431,.2156862745,.4392156862745098,.1450980392,.8274509804,.2,.44313725490196076,.1803921569,.8352941176,.1843137255,.4470588235294118,.2156862745,.8431372549,.1647058824,.45098039215686275,.2509803922,.8509803922,.1490196078,.4549019607843137,.2823529412,.8588235294,.1333333333,.4588235294117647,.3176470588,.8666666667,.1176470588,.4627450980392157,.3529411765,.8745098039,.0980392157,.4666666666666667,.3882352941,.8823529412,.0823529412,.4705882352941177,.4235294118,.8901960784,.0666666667,.4745098039215686,.4588235294,.8980392157,.0509803922,.4784313725490197,.4941176471,.9058823529,.0431372549,.48235294117647065,.5294117647,.9137254902,.031372549,.48627450980392156,.5647058824,.9215686275,.0196078431,.49019607843137253,.6,.9294117647,.0078431373,.49411764705882355,.6352941176,.937254902,.0039215686,.4980392156862745,.6705882353,.9450980392,.0039215686,.5019607843137255,.7058823529,.9490196078,.0039215686,.5058823529411764,.7411764706,.9568627451,.0039215686,.5098039215686274,.7725490196,.9607843137,.0039215686,.5137254901960784,.8078431373,.968627451,.0039215686,.5176470588235295,.8431372549,.9725490196,.0039215686,.5215686274509804,.8784313725,.9803921569,.0039215686,.5254901960784314,.9137254902,.9843137255,.0039215686,.5294117647058824,.9490196078,.9921568627,.0039215686,.5333333333333333,.9960784314,.9960784314,.0039215686,.5372549019607843,.9960784314,.9960784314,.0039215686,.5411764705882353,.9960784314,.9921568627,.0039215686,.5450980392156862,.9960784314,.9843137255,.0039215686,.5490196078431373,.9960784314,.9764705882,.0039215686,.5529411764705883,.9960784314,.968627451,.0039215686,.5568627450980392,.9960784314,.9607843137,.0039215686,.5607843137254902,.9960784314,.9529411765,.0039215686,.5647058823529412,.9960784314,.9450980392,.0039215686,.5686274509803921,.9960784314,.937254902,.0039215686,.5725490196078431,.9960784314,.9294117647,.0039215686,.5764705882352941,.9960784314,.9215686275,.0039215686,.5803921568627451,.9960784314,.9137254902,.0039215686,.5843137254901961,.9960784314,.9058823529,.0039215686,.5882352941176471,.9960784314,.8980392157,.0039215686,.592156862745098,.9960784314,.8901960784,.0039215686,.596078431372549,.9960784314,.8823529412,.0039215686,.6,.9960784314,.8745098039,.0039215686,.6039215686274509,.9960784314,.8666666667,.0039215686,.6078431372549019,.9960784314,.8588235294,.0039215686,.611764705882353,.9960784314,.8509803922,.0039215686,.615686274509804,.9960784314,.8431372549,.0039215686,.6196078431372549,.9960784314,.8352941176,.0039215686,.6235294117647059,.9960784314,.8274509804,.0039215686,.6274509803921569,.9960784314,.8196078431,.0039215686,.6313725490196078,.9960784314,.8117647059,.0039215686,.6352941176470588,.9960784314,.8039215686,.0039215686,.6392156862745098,.9960784314,.7960784314,.0039215686,.6431372549019608,.9960784314,.7882352941,.0039215686,.6470588235294118,.9960784314,.7803921569,.0039215686,.6509803921568628,.9960784314,.7725490196,.0039215686,.6549019607843137,.9960784314,.7647058824,.0039215686,.6588235294117647,.9960784314,.7568627451,.0039215686,.6627450980392157,.9960784314,.7490196078,.0039215686,.6666666666666666,.9960784314,.7450980392,.0039215686,.6705882352941176,.9960784314,.737254902,.0039215686,.6745098039215687,.9960784314,.7294117647,.0039215686,.6784313725490196,.9960784314,.7215686275,.0039215686,.6823529411764706,.9960784314,.7137254902,.0039215686,.6862745098039216,.9960784314,.7058823529,.0039215686,.6901960784313725,.9960784314,.6980392157,.0039215686,.6941176470588235,.9960784314,.6901960784,.0039215686,.6980392156862745,.9960784314,.6823529412,.0039215686,.7019607843137254,.9960784314,.6745098039,.0039215686,.7058823529411765,.9960784314,.6666666667,.0039215686,.7098039215686275,.9960784314,.6588235294,.0039215686,.7137254901960784,.9960784314,.6509803922,.0039215686,.7176470588235294,.9960784314,.6431372549,.0039215686,.7215686274509804,.9960784314,.6352941176,.0039215686,.7254901960784313,.9960784314,.6274509804,.0039215686,.7294117647058823,.9960784314,.6196078431,.0039215686,.7333333333333333,.9960784314,.6117647059,.0039215686,.7372549019607844,.9960784314,.6039215686,.0039215686,.7411764705882353,.9960784314,.5960784314,.0039215686,.7450980392156863,.9960784314,.5882352941,.0039215686,.7490196078431373,.9960784314,.5803921569,.0039215686,.7529411764705882,.9960784314,.5725490196,.0039215686,.7568627450980392,.9960784314,.5647058824,.0039215686,.7607843137254902,.9960784314,.5568627451,.0039215686,.7647058823529411,.9960784314,.5490196078,.0039215686,.7686274509803922,.9960784314,.5411764706,.0039215686,.7725490196078432,.9960784314,.5333333333,.0039215686,.7764705882352941,.9960784314,.5254901961,.0039215686,.7803921568627451,.9960784314,.5176470588,.0039215686,.7843137254901961,.9960784314,.5098039216,.0039215686,.788235294117647,.9960784314,.5019607843,.0039215686,.792156862745098,.9960784314,.4941176471,.0039215686,.796078431372549,.9960784314,.4862745098,.0039215686,.8,.9960784314,.4784313725,.0039215686,.803921568627451,.9960784314,.4705882353,.0039215686,.807843137254902,.9960784314,.462745098,.0039215686,.8117647058823529,.9960784314,.4549019608,.0039215686,.8156862745098039,.9960784314,.4470588235,.0039215686,.8196078431372549,.9960784314,.4392156863,.0039215686,.8235294117647058,.9960784314,.431372549,.0039215686,.8274509803921568,.9960784314,.4235294118,.0039215686,.8313725490196079,.9960784314,.4156862745,.0039215686,.8352941176470589,.9960784314,.4078431373,.0039215686,.8392156862745098,.9960784314,.4,.0039215686,.8431372549019608,.9960784314,.3921568627,.0039215686,.8470588235294118,.9960784314,.3843137255,.0039215686,.8509803921568627,.9960784314,.3764705882,.0039215686,.8549019607843137,.9960784314,.368627451,.0039215686,.8588235294117647,.9960784314,.3607843137,.0039215686,.8627450980392157,.9960784314,.3529411765,.0039215686,.8666666666666667,.9960784314,.3450980392,.0039215686,.8705882352941177,.9960784314,.337254902,.0039215686,.8745098039215686,.9960784314,.3294117647,.0039215686,.8784313725490196,.9960784314,.3215686275,.0039215686,.8823529411764706,.9960784314,.3137254902,.0039215686,.8862745098039215,.9960784314,.3058823529,.0039215686,.8901960784313725,.9960784314,.2980392157,.0039215686,.8941176470588236,.9960784314,.2901960784,.0039215686,.8980392156862745,.9960784314,.2823529412,.0039215686,.9019607843137255,.9960784314,.2705882353,.0039215686,.9058823529411765,.9960784314,.2588235294,.0039215686,.9098039215686274,.9960784314,.2509803922,.0039215686,.9137254901960784,.9960784314,.2431372549,.0039215686,.9176470588235294,.9960784314,.231372549,.0039215686,.9215686274509803,.9960784314,.2196078431,.0039215686,.9254901960784314,.9960784314,.2117647059,.0039215686,.9294117647058824,.9960784314,.2,.0039215686,.9333333333333333,.9960784314,.1882352941,.0039215686,.9372549019607843,.9960784314,.1764705882,.0039215686,.9411764705882354,.9960784314,.168627451,.0039215686,.9450980392156864,.9960784314,.1568627451,.0039215686,.9490196078431372,.9960784314,.1450980392,.0039215686,.9529411764705882,.9960784314,.1333333333,.0039215686,.9568627450980394,.9960784314,.1254901961,.0039215686,.9607843137254903,.9960784314,.1137254902,.0039215686,.9647058823529413,.9960784314,.1019607843,.0039215686,.9686274509803922,.9960784314,.0901960784,.0039215686,.9725490196078431,.9960784314,.0823529412,.0039215686,.9764705882352941,.9960784314,.0705882353,.0039215686,.9803921568627451,.9960784314,.0588235294,.0039215686,.984313725490196,.9960784314,.0470588235,.0039215686,.9882352941176471,.9960784314,.0392156863,.0039215686,.9921568627450981,.9960784314,.0274509804,.0039215686,.996078431372549,.9960784314,.0156862745,.0039215686,1,.9960784314,.0156862745,.0039215686]},{ColorSpace:"RGB",Name:"perfusion",RGBPoints:[0,0,0,0,.00392156862745098,.0078431373,.0235294118,.0235294118,.00784313725490196,.0078431373,.031372549,.0470588235,.011764705882352941,.0078431373,.0392156863,.062745098,.01568627450980392,.0078431373,.0470588235,.0862745098,.0196078431372549,.0078431373,.0549019608,.1019607843,.023529411764705882,.0078431373,.0549019608,.1254901961,.027450980392156862,.0078431373,.062745098,.1411764706,.03137254901960784,.0078431373,.0705882353,.1647058824,.03529411764705882,.0078431373,.0784313725,.1803921569,.0392156862745098,.0078431373,.0862745098,.2039215686,.043137254901960784,.0078431373,.0862745098,.2196078431,.047058823529411764,.0078431373,.0941176471,.2431372549,.050980392156862744,.0078431373,.1019607843,.2666666667,.054901960784313725,.0078431373,.1098039216,.2823529412,.05882352941176471,.0078431373,.1176470588,.3058823529,.06274509803921569,.0078431373,.1176470588,.3215686275,.06666666666666667,.0078431373,.1254901961,.3450980392,.07058823529411765,.0078431373,.1333333333,.3607843137,.07450980392156863,.0078431373,.1411764706,.3843137255,.0784313725490196,.0078431373,.1490196078,.4,.08235294117647059,.0078431373,.1490196078,.4235294118,.08627450980392157,.0078431373,.1568627451,.4392156863,.09019607843137255,.0078431373,.1647058824,.462745098,.09411764705882353,.0078431373,.1725490196,.4784313725,.09803921568627451,.0078431373,.1803921569,.5019607843,.10196078431372549,.0078431373,.1803921569,.5254901961,.10588235294117647,.0078431373,.1882352941,.5411764706,.10980392156862745,.0078431373,.1960784314,.5647058824,.11372549019607843,.0078431373,.2039215686,.5803921569,.11764705882352942,.0078431373,.2117647059,.6039215686,.12156862745098039,.0078431373,.2117647059,.6196078431,.12549019607843137,.0078431373,.2196078431,.6431372549,.12941176470588237,.0078431373,.2274509804,.6588235294,.13333333333333333,.0078431373,.2352941176,.6823529412,.13725490196078433,.0078431373,.2431372549,.6980392157,.1411764705882353,.0078431373,.2431372549,.7215686275,.1450980392156863,.0078431373,.2509803922,.737254902,.14901960784313725,.0078431373,.2588235294,.7607843137,.15294117647058825,.0078431373,.2666666667,.7843137255,.1568627450980392,.0078431373,.2745098039,.8,.1607843137254902,.0078431373,.2745098039,.8235294118,.16470588235294117,.0078431373,.2823529412,.8392156863,.16862745098039217,.0078431373,.2901960784,.862745098,.17254901960784313,.0078431373,.2980392157,.8784313725,.17647058823529413,.0078431373,.3058823529,.9019607843,.1803921568627451,.0078431373,.3058823529,.9176470588,.1843137254901961,.0078431373,.2980392157,.9411764706,.18823529411764706,.0078431373,.3058823529,.9568627451,.19215686274509805,.0078431373,.2980392157,.9803921569,.19607843137254902,.0078431373,.2980392157,.9882352941,.2,.0078431373,.2901960784,.9803921569,.20392156862745098,.0078431373,.2901960784,.9647058824,.20784313725490197,.0078431373,.2823529412,.9568627451,.21176470588235294,.0078431373,.2823529412,.9411764706,.21568627450980393,.0078431373,.2745098039,.9333333333,.2196078431372549,.0078431373,.2666666667,.9176470588,.2235294117647059,.0078431373,.2666666667,.9098039216,.22745098039215686,.0078431373,.2588235294,.9019607843,.23137254901960785,.0078431373,.2588235294,.8862745098,.23529411764705885,.0078431373,.2509803922,.8784313725,.23921568627450984,.0078431373,.2509803922,.862745098,.24313725490196078,.0078431373,.2431372549,.8549019608,.24705882352941178,.0078431373,.2352941176,.8392156863,.25098039215686274,.0078431373,.2352941176,.831372549,.2549019607843137,.0078431373,.2274509804,.8235294118,.25882352941176473,.0078431373,.2274509804,.8078431373,.2627450980392157,.0078431373,.2196078431,.8,.26666666666666666,.0078431373,.2196078431,.7843137255,.27058823529411763,.0078431373,.2117647059,.7764705882,.27450980392156865,.0078431373,.2039215686,.7607843137,.2784313725490196,.0078431373,.2039215686,.7529411765,.2823529411764706,.0078431373,.1960784314,.7450980392,.28627450980392155,.0078431373,.1960784314,.7294117647,.2901960784313726,.0078431373,.1882352941,.7215686275,.29411764705882354,.0078431373,.1882352941,.7058823529,.2980392156862745,.0078431373,.1803921569,.6980392157,.30196078431372547,.0078431373,.1803921569,.6823529412,.3058823529411765,.0078431373,.1725490196,.6745098039,.30980392156862746,.0078431373,.1647058824,.6666666667,.3137254901960784,.0078431373,.1647058824,.6509803922,.3176470588235294,.0078431373,.1568627451,.6431372549,.3215686274509804,.0078431373,.1568627451,.6274509804,.3254901960784314,.0078431373,.1490196078,.6196078431,.32941176470588235,.0078431373,.1490196078,.6039215686,.3333333333333333,.0078431373,.1411764706,.5960784314,.33725490196078434,.0078431373,.1333333333,.5882352941,.3411764705882353,.0078431373,.1333333333,.5725490196,.34509803921568627,.0078431373,.1254901961,.5647058824,.34901960784313724,.0078431373,.1254901961,.5490196078,.35294117647058826,.0078431373,.1176470588,.5411764706,.3568627450980392,.0078431373,.1176470588,.5254901961,.3607843137254902,.0078431373,.1098039216,.5176470588,.36470588235294116,.0078431373,.1019607843,.5098039216,.3686274509803922,.0078431373,.1019607843,.4941176471,.37254901960784315,.0078431373,.0941176471,.4862745098,.3764705882352941,.0078431373,.0941176471,.4705882353,.3803921568627451,.0078431373,.0862745098,.462745098,.3843137254901961,.0078431373,.0862745098,.4470588235,.38823529411764707,.0078431373,.0784313725,.4392156863,.39215686274509803,.0078431373,.0705882353,.431372549,.396078431372549,.0078431373,.0705882353,.4156862745,.4,.0078431373,.062745098,.4078431373,.403921568627451,.0078431373,.062745098,.3921568627,.40784313725490196,.0078431373,.0549019608,.3843137255,.4117647058823529,.0078431373,.0549019608,.368627451,.41568627450980394,.0078431373,.0470588235,.3607843137,.4196078431372549,.0078431373,.0470588235,.3529411765,.4235294117647059,.0078431373,.0392156863,.337254902,.42745098039215684,.0078431373,.031372549,.3294117647,.43137254901960786,.0078431373,.031372549,.3137254902,.43529411764705883,.0078431373,.0235294118,.3058823529,.4392156862745098,.0078431373,.0235294118,.2901960784,.44313725490196076,.0078431373,.0156862745,.2823529412,.4470588235294118,.0078431373,.0156862745,.2745098039,.45098039215686275,.0078431373,.0078431373,.2588235294,.4549019607843137,.0235294118,.0078431373,.2509803922,.4588235294117647,.0078431373,.0078431373,.2352941176,.4627450980392157,.0078431373,.0078431373,.2274509804,.4666666666666667,.0078431373,.0078431373,.2117647059,.4705882352941177,.0078431373,.0078431373,.2039215686,.4745098039215686,.0078431373,.0078431373,.1960784314,.4784313725490197,.0078431373,.0078431373,.1803921569,.48235294117647065,.0078431373,.0078431373,.1725490196,.48627450980392156,.0078431373,.0078431373,.1568627451,.49019607843137253,.0078431373,.0078431373,.1490196078,.49411764705882355,.0078431373,.0078431373,.1333333333,.4980392156862745,.0078431373,.0078431373,.1254901961,.5019607843137255,.0078431373,.0078431373,.1176470588,.5058823529411764,.0078431373,.0078431373,.1019607843,.5098039215686274,.0078431373,.0078431373,.0941176471,.5137254901960784,.0078431373,.0078431373,.0784313725,.5176470588235295,.0078431373,.0078431373,.0705882353,.5215686274509804,.0078431373,.0078431373,.0549019608,.5254901960784314,.0078431373,.0078431373,.0470588235,.5294117647058824,.0235294118,.0078431373,.0392156863,.5333333333333333,.031372549,.0078431373,.0235294118,.5372549019607843,.0392156863,.0078431373,.0156862745,.5411764705882353,.0549019608,.0078431373,0,.5450980392156862,.062745098,.0078431373,0,.5490196078431373,.0705882353,.0078431373,0,.5529411764705883,.0862745098,.0078431373,0,.5568627450980392,.0941176471,.0078431373,0,.5607843137254902,.1019607843,.0078431373,0,.5647058823529412,.1098039216,.0078431373,0,.5686274509803921,.1254901961,.0078431373,0,.5725490196078431,.1333333333,.0078431373,0,.5764705882352941,.1411764706,.0078431373,0,.5803921568627451,.1568627451,.0078431373,0,.5843137254901961,.1647058824,.0078431373,0,.5882352941176471,.1725490196,.0078431373,0,.592156862745098,.1882352941,.0078431373,0,.596078431372549,.1960784314,.0078431373,0,.6,.2039215686,.0078431373,0,.6039215686274509,.2117647059,.0078431373,0,.6078431372549019,.2274509804,.0078431373,0,.611764705882353,.2352941176,.0078431373,0,.615686274509804,.2431372549,.0078431373,0,.6196078431372549,.2588235294,.0078431373,0,.6235294117647059,.2666666667,.0078431373,0,.6274509803921569,.2745098039,0,0,.6313725490196078,.2901960784,.0156862745,0,.6352941176470588,.2980392157,.0235294118,0,.6392156862745098,.3058823529,.0392156863,0,.6431372549019608,.3137254902,.0470588235,0,.6470588235294118,.3294117647,.0549019608,0,.6509803921568628,.337254902,.0705882353,0,.6549019607843137,.3450980392,.0784313725,0,.6588235294117647,.3607843137,.0862745098,0,.6627450980392157,.368627451,.1019607843,0,.6666666666666666,.3764705882,.1098039216,0,.6705882352941176,.3843137255,.1176470588,0,.6745098039215687,.4,.1333333333,0,.6784313725490196,.4078431373,.1411764706,0,.6823529411764706,.4156862745,.1490196078,0,.6862745098039216,.431372549,.1647058824,0,.6901960784313725,.4392156863,.1725490196,0,.6941176470588235,.4470588235,.1803921569,0,.6980392156862745,.462745098,.1960784314,0,.7019607843137254,.4705882353,.2039215686,0,.7058823529411765,.4784313725,.2117647059,0,.7098039215686275,.4862745098,.2274509804,0,.7137254901960784,.5019607843,.2352941176,0,.7176470588235294,.5098039216,.2431372549,0,.7215686274509804,.5176470588,.2588235294,0,.7254901960784313,.5333333333,.2666666667,0,.7294117647058823,.5411764706,.2745098039,0,.7333333333333333,.5490196078,.2901960784,0,.7372549019607844,.5647058824,.2980392157,0,.7411764705882353,.5725490196,.3058823529,0,.7450980392156863,.5803921569,.3215686275,0,.7490196078431373,.5882352941,.3294117647,0,.7529411764705882,.6039215686,.337254902,0,.7568627450980392,.6117647059,.3529411765,0,.7607843137254902,.6196078431,.3607843137,0,.7647058823529411,.6352941176,.368627451,0,.7686274509803922,.6431372549,.3843137255,0,.7725490196078432,.6509803922,.3921568627,0,.7764705882352941,.6588235294,.4,0,.7803921568627451,.6745098039,.4156862745,0,.7843137254901961,.6823529412,.4235294118,0,.788235294117647,.6901960784,.431372549,0,.792156862745098,.7058823529,.4470588235,0,.796078431372549,.7137254902,.4549019608,0,.8,.7215686275,.462745098,0,.803921568627451,.737254902,.4784313725,0,.807843137254902,.7450980392,.4862745098,0,.8117647058823529,.7529411765,.4941176471,0,.8156862745098039,.7607843137,.5098039216,0,.8196078431372549,.7764705882,.5176470588,0,.8235294117647058,.7843137255,.5254901961,0,.8274509803921568,.7921568627,.5411764706,0,.8313725490196079,.8078431373,.5490196078,0,.8352941176470589,.8156862745,.5568627451,0,.8392156862745098,.8235294118,.5725490196,0,.8431372549019608,.8392156863,.5803921569,0,.8470588235294118,.8470588235,.5882352941,0,.8509803921568627,.8549019608,.6039215686,0,.8549019607843137,.862745098,.6117647059,0,.8588235294117647,.8784313725,.6196078431,0,.8627450980392157,.8862745098,.6352941176,0,.8666666666666667,.8941176471,.6431372549,0,.8705882352941177,.9098039216,.6509803922,0,.8745098039215686,.9176470588,.6666666667,0,.8784313725490196,.9254901961,.6745098039,0,.8823529411764706,.9411764706,.6823529412,0,.8862745098039215,.9490196078,.6980392157,0,.8901960784313725,.9568627451,.7058823529,0,.8941176470588236,.9647058824,.7137254902,0,.8980392156862745,.9803921569,.7294117647,0,.9019607843137255,.9882352941,.737254902,0,.9058823529411765,.9960784314,.7450980392,0,.9098039215686274,.9960784314,.7607843137,0,.9137254901960784,.9960784314,.768627451,0,.9176470588235294,.9960784314,.7764705882,0,.9215686274509803,.9960784314,.7921568627,0,.9254901960784314,.9960784314,.8,0,.9294117647058824,.9960784314,.8078431373,0,.9333333333333333,.9960784314,.8235294118,0,.9372549019607843,.9960784314,.831372549,0,.9411764705882354,.9960784314,.8392156863,0,.9450980392156864,.9960784314,.8549019608,0,.9490196078431372,.9960784314,.862745098,.0549019608,.9529411764705882,.9960784314,.8705882353,.1098039216,.9568627450980394,.9960784314,.8862745098,.1647058824,.9607843137254903,.9960784314,.8941176471,.2196078431,.9647058823529413,.9960784314,.9019607843,.2666666667,.9686274509803922,.9960784314,.9176470588,.3215686275,.9725490196078431,.9960784314,.9254901961,.3764705882,.9764705882352941,.9960784314,.9333333333,.431372549,.9803921568627451,.9960784314,.9490196078,.4862745098,.984313725490196,.9960784314,.9568627451,.5333333333,.9882352941176471,.9960784314,.9647058824,.5882352941,.9921568627450981,.9960784314,.9803921569,.6431372549,.996078431372549,.9960784314,.9882352941,.6980392157,1,.9960784314,.9960784314,.7450980392]},{ColorSpace:"RGB",Name:"rainbow_2",RGBPoints:[0,0,0,0,.00392156862745098,.0156862745,0,.0117647059,.00784313725490196,.0352941176,0,.0274509804,.011764705882352941,.0509803922,0,.0392156863,.01568627450980392,.0705882353,0,.0549019608,.0196078431372549,.0862745098,0,.0745098039,.023529411764705882,.1058823529,0,.0901960784,.027450980392156862,.1215686275,0,.1098039216,.03137254901960784,.1411764706,0,.1254901961,.03529411764705882,.1568627451,0,.1490196078,.0392156862745098,.1764705882,0,.168627451,.043137254901960784,.1960784314,0,.1882352941,.047058823529411764,.2117647059,0,.2078431373,.050980392156862744,.2274509804,0,.231372549,.054901960784313725,.2392156863,0,.2470588235,.05882352941176471,.2509803922,0,.2666666667,.06274509803921569,.2666666667,0,.2823529412,.06666666666666667,.2705882353,0,.3019607843,.07058823529411765,.2823529412,0,.3176470588,.07450980392156863,.2901960784,0,.337254902,.0784313725490196,.3019607843,0,.3568627451,.08235294117647059,.3098039216,0,.3725490196,.08627450980392157,.3137254902,0,.3921568627,.09019607843137255,.3215686275,0,.4078431373,.09411764705882353,.3254901961,0,.4274509804,.09803921568627451,.3333333333,0,.4431372549,.10196078431372549,.3294117647,0,.462745098,.10588235294117647,.337254902,0,.4784313725,.10980392156862745,.3411764706,0,.4980392157,.11372549019607843,.3450980392,0,.5176470588,.11764705882352942,.337254902,0,.5333333333,.12156862745098039,.3411764706,0,.5529411765,.12549019607843137,.3411764706,0,.568627451,.12941176470588237,.3411764706,0,.5882352941,.13333333333333333,.3333333333,0,.6039215686,.13725490196078433,.3294117647,0,.6235294118,.1411764705882353,.3294117647,0,.6392156863,.1450980392156863,.3294117647,0,.6588235294,.14901960784313725,.3254901961,0,.6784313725,.15294117647058825,.3098039216,0,.6941176471,.1568627450980392,.3058823529,0,.7137254902,.1607843137254902,.3019607843,0,.7294117647,.16470588235294117,.2980392157,0,.7490196078,.16862745098039217,.2784313725,0,.7647058824,.17254901960784313,.2745098039,0,.7843137255,.17647058823529413,.2666666667,0,.8,.1803921568627451,.2588235294,0,.8196078431,.1843137254901961,.2352941176,0,.8392156863,.18823529411764706,.2274509804,0,.8549019608,.19215686274509805,.2156862745,0,.8745098039,.19607843137254902,.2078431373,0,.8901960784,.2,.1803921569,0,.9098039216,.20392156862745098,.168627451,0,.9254901961,.20784313725490197,.1568627451,0,.9450980392,.21176470588235294,.1411764706,0,.9607843137,.21568627450980393,.1294117647,0,.9803921569,.2196078431372549,.0980392157,0,1,.2235294117647059,.0823529412,0,1,.22745098039215686,.062745098,0,1,.23137254901960785,.0470588235,0,1,.23529411764705885,.0156862745,0,1,.23921568627450984,0,0,1,.24313725490196078,0,.0156862745,1,.24705882352941178,0,.031372549,1,.25098039215686274,0,.062745098,1,.2549019607843137,0,.0823529412,1,.25882352941176473,0,.0980392157,1,.2627450980392157,0,.1137254902,1,.26666666666666666,0,.1490196078,1,.27058823529411763,0,.1647058824,1,.27450980392156865,0,.1803921569,1,.2784313725490196,0,.2,1,.2823529411764706,0,.2156862745,1,.28627450980392155,0,.2470588235,1,.2901960784313726,0,.262745098,1,.29411764705882354,0,.2823529412,1,.2980392156862745,0,.2980392157,1,.30196078431372547,0,.3294117647,1,.3058823529411765,0,.3490196078,1,.30980392156862746,0,.3647058824,1,.3137254901960784,0,.3803921569,1,.3176470588235294,0,.4156862745,1,.3215686274509804,0,.431372549,1,.3254901960784314,0,.4470588235,1,.32941176470588235,0,.4666666667,1,.3333333333333333,0,.4980392157,1,.33725490196078434,0,.5137254902,1,.3411764705882353,0,.5294117647,1,.34509803921568627,0,.5490196078,1,.34901960784313724,0,.5647058824,1,.35294117647058826,0,.5960784314,1,.3568627450980392,0,.6156862745,1,.3607843137254902,0,.631372549,1,.36470588235294116,0,.6470588235,1,.3686274509803922,0,.6823529412,1,.37254901960784315,0,.6980392157,1,.3764705882352941,0,.7137254902,1,.3803921568627451,0,.7333333333,1,.3843137254901961,0,.7647058824,1,.38823529411764707,0,.7803921569,1,.39215686274509803,0,.7960784314,1,.396078431372549,0,.8156862745,1,.4,0,.8470588235,1,.403921568627451,0,.862745098,1,.40784313725490196,0,.8823529412,1,.4117647058823529,0,.8980392157,1,.41568627450980394,0,.9137254902,1,.4196078431372549,0,.9490196078,1,.4235294117647059,0,.9647058824,1,.42745098039215684,0,.9803921569,1,.43137254901960786,0,1,1,.43529411764705883,0,1,.9647058824,.4392156862745098,0,1,.9490196078,.44313725490196076,0,1,.9333333333,.4470588235294118,0,1,.9137254902,.45098039215686275,0,1,.8823529412,.4549019607843137,0,1,.862745098,.4588235294117647,0,1,.8470588235,.4627450980392157,0,1,.831372549,.4666666666666667,0,1,.7960784314,.4705882352941177,0,1,.7803921569,.4745098039215686,0,1,.7647058824,.4784313725490197,0,1,.7490196078,.48235294117647065,0,1,.7333333333,.48627450980392156,0,1,.6980392157,.49019607843137253,0,1,.6823529412,.49411764705882355,0,1,.6666666667,.4980392156862745,0,1,.6470588235,.5019607843137255,0,1,.6156862745,.5058823529411764,0,1,.5960784314,.5098039215686274,0,1,.5803921569,.5137254901960784,0,1,.5647058824,.5176470588235295,0,1,.5294117647,.5215686274509804,0,1,.5137254902,.5254901960784314,0,1,.4980392157,.5294117647058824,0,1,.4823529412,.5333333333333333,0,1,.4470588235,.5372549019607843,0,1,.431372549,.5411764705882353,0,1,.4156862745,.5450980392156862,0,1,.4,.5490196078431373,0,1,.3803921569,.5529411764705883,0,1,.3490196078,.5568627450980392,0,1,.3294117647,.5607843137254902,0,1,.3137254902,.5647058823529412,0,1,.2980392157,.5686274509803921,0,1,.262745098,.5725490196078431,0,1,.2470588235,.5764705882352941,0,1,.231372549,.5803921568627451,0,1,.2156862745,.5843137254901961,0,1,.1803921569,.5882352941176471,0,1,.1647058824,.592156862745098,0,1,.1490196078,.596078431372549,0,1,.1333333333,.6,0,1,.0980392157,.6039215686274509,0,1,.0823529412,.6078431372549019,0,1,.062745098,.611764705882353,0,1,.0470588235,.615686274509804,0,1,.031372549,.6196078431372549,0,1,0,.6235294117647059,.0156862745,1,0,.6274509803921569,.031372549,1,0,.6313725490196078,.0470588235,1,0,.6352941176470588,.0823529412,1,0,.6392156862745098,.0980392157,1,0,.6431372549019608,.1137254902,1,0,.6470588235294118,.1294117647,1,0,.6509803921568628,.1647058824,1,0,.6549019607843137,.1803921569,1,0,.6588235294117647,.2,1,0,.6627450980392157,.2156862745,1,0,.6666666666666666,.2470588235,1,0,.6705882352941176,.262745098,1,0,.6745098039215687,.2823529412,1,0,.6784313725490196,.2980392157,1,0,.6823529411764706,.3137254902,1,0,.6862745098039216,.3490196078,1,0,.6901960784313725,.3647058824,1,0,.6941176470588235,.3803921569,1,0,.6980392156862745,.3960784314,1,0,.7019607843137254,.431372549,1,0,.7058823529411765,.4470588235,1,0,.7098039215686275,.4666666667,1,0,.7137254901960784,.4823529412,1,0,.7176470588235294,.5137254902,1,0,.7215686274509804,.5294117647,1,0,.7254901960784313,.5490196078,1,0,.7294117647058823,.5647058824,1,0,.7333333333333333,.6,1,0,.7372549019607844,.6156862745,1,0,.7411764705882353,.631372549,1,0,.7450980392156863,.6470588235,1,0,.7490196078431373,.662745098,1,0,.7529411764705882,.6980392157,1,0,.7568627450980392,.7137254902,1,0,.7607843137254902,.7333333333,1,0,.7647058823529411,.7490196078,1,0,.7686274509803922,.7803921569,1,0,.7725490196078432,.7960784314,1,0,.7764705882352941,.8156862745,1,0,.7803921568627451,.831372549,1,0,.7843137254901961,.8666666667,1,0,.788235294117647,.8823529412,1,0,.792156862745098,.8980392157,1,0,.796078431372549,.9137254902,1,0,.8,.9490196078,1,0,.803921568627451,.9647058824,1,0,.807843137254902,.9803921569,1,0,.8117647058823529,1,1,0,.8156862745098039,1,.9803921569,0,.8196078431372549,1,.9490196078,0,.8235294117647058,1,.9333333333,0,.8274509803921568,1,.9137254902,0,.8313725490196079,1,.8980392157,0,.8352941176470589,1,.8666666667,0,.8392156862745098,1,.8470588235,0,.8431372549019608,1,.831372549,0,.8470588235294118,1,.8156862745,0,.8509803921568627,1,.7803921569,0,.8549019607843137,1,.7647058824,0,.8588235294117647,1,.7490196078,0,.8627450980392157,1,.7333333333,0,.8666666666666667,1,.6980392157,0,.8705882352941177,1,.6823529412,0,.8745098039215686,1,.6666666667,0,.8784313725490196,1,.6470588235,0,.8823529411764706,1,.631372549,0,.8862745098039215,1,.6,0,.8901960784313725,1,.5803921569,0,.8941176470588236,1,.5647058824,0,.8980392156862745,1,.5490196078,0,.9019607843137255,1,.5137254902,0,.9058823529411765,1,.4980392157,0,.9098039215686274,1,.4823529412,0,.9137254901960784,1,.4666666667,0,.9176470588235294,1,.431372549,0,.9215686274509803,1,.4156862745,0,.9254901960784314,1,.4,0,.9294117647058824,1,.3803921569,0,.9333333333333333,1,.3490196078,0,.9372549019607843,1,.3333333333,0,.9411764705882354,1,.3137254902,0,.9450980392156864,1,.2980392157,0,.9490196078431372,1,.2823529412,0,.9529411764705882,1,.2470588235,0,.9568627450980394,1,.231372549,0,.9607843137254903,1,.2156862745,0,.9647058823529413,1,.2,0,.9686274509803922,1,.1647058824,0,.9725490196078431,1,.1490196078,0,.9764705882352941,1,.1333333333,0,.9803921568627451,1,.1137254902,0,.984313725490196,1,.0823529412,0,.9882352941176471,1,.0666666667,0,.9921568627450981,1,.0470588235,0,.996078431372549,1,.031372549,0,1,1,0,0]},{ColorSpace:"RGB",Name:"suv",RGBPoints:[0,1,1,1,.00392156862745098,1,1,1,.00784313725490196,1,1,1,.011764705882352941,1,1,1,.01568627450980392,1,1,1,.0196078431372549,1,1,1,.023529411764705882,1,1,1,.027450980392156862,1,1,1,.03137254901960784,1,1,1,.03529411764705882,1,1,1,.0392156862745098,1,1,1,.043137254901960784,1,1,1,.047058823529411764,1,1,1,.050980392156862744,1,1,1,.054901960784313725,1,1,1,.05882352941176471,1,1,1,.06274509803921569,1,1,1,.06666666666666667,1,1,1,.07058823529411765,1,1,1,.07450980392156863,1,1,1,.0784313725490196,1,1,1,.08235294117647059,1,1,1,.08627450980392157,1,1,1,.09019607843137255,1,1,1,.09411764705882353,1,1,1,.09803921568627451,1,1,1,.10196078431372549,.737254902,.737254902,.737254902,.10588235294117647,.737254902,.737254902,.737254902,.10980392156862745,.737254902,.737254902,.737254902,.11372549019607843,.737254902,.737254902,.737254902,.11764705882352942,.737254902,.737254902,.737254902,.12156862745098039,.737254902,.737254902,.737254902,.12549019607843137,.737254902,.737254902,.737254902,.12941176470588237,.737254902,.737254902,.737254902,.13333333333333333,.737254902,.737254902,.737254902,.13725490196078433,.737254902,.737254902,.737254902,.1411764705882353,.737254902,.737254902,.737254902,.1450980392156863,.737254902,.737254902,.737254902,.14901960784313725,.737254902,.737254902,.737254902,.15294117647058825,.737254902,.737254902,.737254902,.1568627450980392,.737254902,.737254902,.737254902,.1607843137254902,.737254902,.737254902,.737254902,.16470588235294117,.737254902,.737254902,.737254902,.16862745098039217,.737254902,.737254902,.737254902,.17254901960784313,.737254902,.737254902,.737254902,.17647058823529413,.737254902,.737254902,.737254902,.1803921568627451,.737254902,.737254902,.737254902,.1843137254901961,.737254902,.737254902,.737254902,.18823529411764706,.737254902,.737254902,.737254902,.19215686274509805,.737254902,.737254902,.737254902,.19607843137254902,.737254902,.737254902,.737254902,.2,.737254902,.737254902,.737254902,.20392156862745098,.431372549,0,.568627451,.20784313725490197,.431372549,0,.568627451,.21176470588235294,.431372549,0,.568627451,.21568627450980393,.431372549,0,.568627451,.2196078431372549,.431372549,0,.568627451,.2235294117647059,.431372549,0,.568627451,.22745098039215686,.431372549,0,.568627451,.23137254901960785,.431372549,0,.568627451,.23529411764705885,.431372549,0,.568627451,.23921568627450984,.431372549,0,.568627451,.24313725490196078,.431372549,0,.568627451,.24705882352941178,.431372549,0,.568627451,.25098039215686274,.431372549,0,.568627451,.2549019607843137,.431372549,0,.568627451,.25882352941176473,.431372549,0,.568627451,.2627450980392157,.431372549,0,.568627451,.26666666666666666,.431372549,0,.568627451,.27058823529411763,.431372549,0,.568627451,.27450980392156865,.431372549,0,.568627451,.2784313725490196,.431372549,0,.568627451,.2823529411764706,.431372549,0,.568627451,.28627450980392155,.431372549,0,.568627451,.2901960784313726,.431372549,0,.568627451,.29411764705882354,.431372549,0,.568627451,.2980392156862745,.431372549,0,.568627451,.30196078431372547,.431372549,0,.568627451,.3058823529411765,.2509803922,.3333333333,.6509803922,.30980392156862746,.2509803922,.3333333333,.6509803922,.3137254901960784,.2509803922,.3333333333,.6509803922,.3176470588235294,.2509803922,.3333333333,.6509803922,.3215686274509804,.2509803922,.3333333333,.6509803922,.3254901960784314,.2509803922,.3333333333,.6509803922,.32941176470588235,.2509803922,.3333333333,.6509803922,.3333333333333333,.2509803922,.3333333333,.6509803922,.33725490196078434,.2509803922,.3333333333,.6509803922,.3411764705882353,.2509803922,.3333333333,.6509803922,.34509803921568627,.2509803922,.3333333333,.6509803922,.34901960784313724,.2509803922,.3333333333,.6509803922,.35294117647058826,.2509803922,.3333333333,.6509803922,.3568627450980392,.2509803922,.3333333333,.6509803922,.3607843137254902,.2509803922,.3333333333,.6509803922,.36470588235294116,.2509803922,.3333333333,.6509803922,.3686274509803922,.2509803922,.3333333333,.6509803922,.37254901960784315,.2509803922,.3333333333,.6509803922,.3764705882352941,.2509803922,.3333333333,.6509803922,.3803921568627451,.2509803922,.3333333333,.6509803922,.3843137254901961,.2509803922,.3333333333,.6509803922,.38823529411764707,.2509803922,.3333333333,.6509803922,.39215686274509803,.2509803922,.3333333333,.6509803922,.396078431372549,.2509803922,.3333333333,.6509803922,.4,.2509803922,.3333333333,.6509803922,.403921568627451,.2509803922,.3333333333,.6509803922,.40784313725490196,0,.8,1,.4117647058823529,0,.8,1,.41568627450980394,0,.8,1,.4196078431372549,0,.8,1,.4235294117647059,0,.8,1,.42745098039215684,0,.8,1,.43137254901960786,0,.8,1,.43529411764705883,0,.8,1,.4392156862745098,0,.8,1,.44313725490196076,0,.8,1,.4470588235294118,0,.8,1,.45098039215686275,0,.8,1,.4549019607843137,0,.8,1,.4588235294117647,0,.8,1,.4627450980392157,0,.8,1,.4666666666666667,0,.8,1,.4705882352941177,0,.8,1,.4745098039215686,0,.8,1,.4784313725490197,0,.8,1,.48235294117647065,0,.8,1,.48627450980392156,0,.8,1,.49019607843137253,0,.8,1,.49411764705882355,0,.8,1,.4980392156862745,0,.8,1,.5019607843137255,0,.8,1,.5058823529411764,0,.6666666667,.5333333333,.5098039215686274,0,.6666666667,.5333333333,.5137254901960784,0,.6666666667,.5333333333,.5176470588235295,0,.6666666667,.5333333333,.5215686274509804,0,.6666666667,.5333333333,.5254901960784314,0,.6666666667,.5333333333,.5294117647058824,0,.6666666667,.5333333333,.5333333333333333,0,.6666666667,.5333333333,.5372549019607843,0,.6666666667,.5333333333,.5411764705882353,0,.6666666667,.5333333333,.5450980392156862,0,.6666666667,.5333333333,.5490196078431373,0,.6666666667,.5333333333,.5529411764705883,0,.6666666667,.5333333333,.5568627450980392,0,.6666666667,.5333333333,.5607843137254902,0,.6666666667,.5333333333,.5647058823529412,0,.6666666667,.5333333333,.5686274509803921,0,.6666666667,.5333333333,.5725490196078431,0,.6666666667,.5333333333,.5764705882352941,0,.6666666667,.5333333333,.5803921568627451,0,.6666666667,.5333333333,.5843137254901961,0,.6666666667,.5333333333,.5882352941176471,0,.6666666667,.5333333333,.592156862745098,0,.6666666667,.5333333333,.596078431372549,0,.6666666667,.5333333333,.6,0,.6666666667,.5333333333,.6039215686274509,0,.6666666667,.5333333333,.6078431372549019,.4,1,.4,.611764705882353,.4,1,.4,.615686274509804,.4,1,.4,.6196078431372549,.4,1,.4,.6235294117647059,.4,1,.4,.6274509803921569,.4,1,.4,.6313725490196078,.4,1,.4,.6352941176470588,.4,1,.4,.6392156862745098,.4,1,.4,.6431372549019608,.4,1,.4,.6470588235294118,.4,1,.4,.6509803921568628,.4,1,.4,.6549019607843137,.4,1,.4,.6588235294117647,.4,1,.4,.6627450980392157,.4,1,.4,.6666666666666666,.4,1,.4,.6705882352941176,.4,1,.4,.6745098039215687,.4,1,.4,.6784313725490196,.4,1,.4,.6823529411764706,.4,1,.4,.6862745098039216,.4,1,.4,.6901960784313725,.4,1,.4,.6941176470588235,.4,1,.4,.6980392156862745,.4,1,.4,.7019607843137254,.4,1,.4,.7058823529411765,1,.9490196078,0,.7098039215686275,1,.9490196078,0,.7137254901960784,1,.9490196078,0,.7176470588235294,1,.9490196078,0,.7215686274509804,1,.9490196078,0,.7254901960784313,1,.9490196078,0,.7294117647058823,1,.9490196078,0,.7333333333333333,1,.9490196078,0,.7372549019607844,1,.9490196078,0,.7411764705882353,1,.9490196078,0,.7450980392156863,1,.9490196078,0,.7490196078431373,1,.9490196078,0,.7529411764705882,1,.9490196078,0,.7568627450980392,1,.9490196078,0,.7607843137254902,1,.9490196078,0,.7647058823529411,1,.9490196078,0,.7686274509803922,1,.9490196078,0,.7725490196078432,1,.9490196078,0,.7764705882352941,1,.9490196078,0,.7803921568627451,1,.9490196078,0,.7843137254901961,1,.9490196078,0,.788235294117647,1,.9490196078,0,.792156862745098,1,.9490196078,0,.796078431372549,1,.9490196078,0,.8,1,.9490196078,0,.803921568627451,1,.9490196078,0,.807843137254902,.9490196078,.6509803922,.2509803922,.8117647058823529,.9490196078,.6509803922,.2509803922,.8156862745098039,.9490196078,.6509803922,.2509803922,.8196078431372549,.9490196078,.6509803922,.2509803922,.8235294117647058,.9490196078,.6509803922,.2509803922,.8274509803921568,.9490196078,.6509803922,.2509803922,.8313725490196079,.9490196078,.6509803922,.2509803922,.8352941176470589,.9490196078,.6509803922,.2509803922,.8392156862745098,.9490196078,.6509803922,.2509803922,.8431372549019608,.9490196078,.6509803922,.2509803922,.8470588235294118,.9490196078,.6509803922,.2509803922,.8509803921568627,.9490196078,.6509803922,.2509803922,.8549019607843137,.9490196078,.6509803922,.2509803922,.8588235294117647,.9490196078,.6509803922,.2509803922,.8627450980392157,.9490196078,.6509803922,.2509803922,.8666666666666667,.9490196078,.6509803922,.2509803922,.8705882352941177,.9490196078,.6509803922,.2509803922,.8745098039215686,.9490196078,.6509803922,.2509803922,.8784313725490196,.9490196078,.6509803922,.2509803922,.8823529411764706,.9490196078,.6509803922,.2509803922,.8862745098039215,.9490196078,.6509803922,.2509803922,.8901960784313725,.9490196078,.6509803922,.2509803922,.8941176470588236,.9490196078,.6509803922,.2509803922,.8980392156862745,.9490196078,.6509803922,.2509803922,.9019607843137255,.9490196078,.6509803922,.2509803922,.9058823529411765,.9490196078,.6509803922,.2509803922,.9098039215686274,1,0,0,.9137254901960784,1,0,0,.9176470588235294,1,0,0,.9215686274509803,1,0,0,.9254901960784314,1,0,0,.9294117647058824,1,0,0,.9333333333333333,1,0,0,.9372549019607843,1,0,0,.9411764705882354,1,0,0,.9450980392156864,1,0,0,.9490196078431372,1,0,0,.9529411764705882,1,0,0,.9568627450980394,1,0,0,.9607843137254903,1,0,0,.9647058823529413,1,0,0,.9686274509803922,1,0,0,.9725490196078431,1,0,0,.9764705882352941,1,0,0,.9803921568627451,1,0,0,.984313725490196,1,0,0,.9882352941176471,1,0,0,.9921568627450981,1,0,0,.996078431372549,1,0,0,1,1,0,0]},{ColorSpace:"RGB",Name:"ge_256",RGBPoints:[0,.0039215686,.0078431373,.0078431373,.00392156862745098,.0039215686,.0078431373,.0078431373,.00784313725490196,.0039215686,.0078431373,.0117647059,.011764705882352941,.0039215686,.0117647059,.0156862745,.01568627450980392,.0039215686,.0117647059,.0196078431,.0196078431372549,.0039215686,.0156862745,.0235294118,.023529411764705882,.0039215686,.0156862745,.0274509804,.027450980392156862,.0039215686,.0196078431,.031372549,.03137254901960784,.0039215686,.0196078431,.0352941176,.03529411764705882,.0039215686,.0235294118,.0392156863,.0392156862745098,.0039215686,.0235294118,.0431372549,.043137254901960784,.0039215686,.0274509804,.0470588235,.047058823529411764,.0039215686,.0274509804,.0509803922,.050980392156862744,.0039215686,.031372549,.0549019608,.054901960784313725,.0039215686,.031372549,.0588235294,.05882352941176471,.0039215686,.0352941176,.062745098,.06274509803921569,.0039215686,.0352941176,.0666666667,.06666666666666667,.0039215686,.0392156863,.0705882353,.07058823529411765,.0039215686,.0392156863,.0745098039,.07450980392156863,.0039215686,.0431372549,.0784313725,.0784313725490196,.0039215686,.0431372549,.0823529412,.08235294117647059,.0039215686,.0470588235,.0862745098,.08627450980392157,.0039215686,.0470588235,.0901960784,.09019607843137255,.0039215686,.0509803922,.0941176471,.09411764705882353,.0039215686,.0509803922,.0980392157,.09803921568627451,.0039215686,.0549019608,.1019607843,.10196078431372549,.0039215686,.0549019608,.1058823529,.10588235294117647,.0039215686,.0588235294,.1098039216,.10980392156862745,.0039215686,.0588235294,.1137254902,.11372549019607843,.0039215686,.062745098,.1176470588,.11764705882352942,.0039215686,.062745098,.1215686275,.12156862745098039,.0039215686,.0666666667,.1254901961,.12549019607843137,.0039215686,.0666666667,.1294117647,.12941176470588237,.0039215686,.0705882353,.1333333333,.13333333333333333,.0039215686,.0705882353,.137254902,.13725490196078433,.0039215686,.0745098039,.1411764706,.1411764705882353,.0039215686,.0745098039,.1450980392,.1450980392156863,.0039215686,.0784313725,.1490196078,.14901960784313725,.0039215686,.0784313725,.1529411765,.15294117647058825,.0039215686,.0823529412,.1568627451,.1568627450980392,.0039215686,.0823529412,.1607843137,.1607843137254902,.0039215686,.0862745098,.1647058824,.16470588235294117,.0039215686,.0862745098,.168627451,.16862745098039217,.0039215686,.0901960784,.1725490196,.17254901960784313,.0039215686,.0901960784,.1764705882,.17647058823529413,.0039215686,.0941176471,.1803921569,.1803921568627451,.0039215686,.0941176471,.1843137255,.1843137254901961,.0039215686,.0980392157,.1882352941,.18823529411764706,.0039215686,.0980392157,.1921568627,.19215686274509805,.0039215686,.1019607843,.1960784314,.19607843137254902,.0039215686,.1019607843,.2,.2,.0039215686,.1058823529,.2039215686,.20392156862745098,.0039215686,.1058823529,.2078431373,.20784313725490197,.0039215686,.1098039216,.2117647059,.21176470588235294,.0039215686,.1098039216,.2156862745,.21568627450980393,.0039215686,.1137254902,.2196078431,.2196078431372549,.0039215686,.1137254902,.2235294118,.2235294117647059,.0039215686,.1176470588,.2274509804,.22745098039215686,.0039215686,.1176470588,.231372549,.23137254901960785,.0039215686,.1215686275,.2352941176,.23529411764705885,.0039215686,.1215686275,.2392156863,.23921568627450984,.0039215686,.1254901961,.2431372549,.24313725490196078,.0039215686,.1254901961,.2470588235,.24705882352941178,.0039215686,.1294117647,.2509803922,.25098039215686274,.0039215686,.1294117647,.2509803922,.2549019607843137,.0078431373,.1254901961,.2549019608,.25882352941176473,.0156862745,.1254901961,.2588235294,.2627450980392157,.0235294118,.1215686275,.262745098,.26666666666666666,.031372549,.1215686275,.2666666667,.27058823529411763,.0392156863,.1176470588,.2705882353,.27450980392156865,.0470588235,.1176470588,.2745098039,.2784313725490196,.0549019608,.1137254902,.2784313725,.2823529411764706,.062745098,.1137254902,.2823529412,.28627450980392155,.0705882353,.1098039216,.2862745098,.2901960784313726,.0784313725,.1098039216,.2901960784,.29411764705882354,.0862745098,.1058823529,.2941176471,.2980392156862745,.0941176471,.1058823529,.2980392157,.30196078431372547,.1019607843,.1019607843,.3019607843,.3058823529411765,.1098039216,.1019607843,.3058823529,.30980392156862746,.1176470588,.0980392157,.3098039216,.3137254901960784,.1254901961,.0980392157,.3137254902,.3176470588235294,.1333333333,.0941176471,.3176470588,.3215686274509804,.1411764706,.0941176471,.3215686275,.3254901960784314,.1490196078,.0901960784,.3254901961,.32941176470588235,.1568627451,.0901960784,.3294117647,.3333333333333333,.1647058824,.0862745098,.3333333333,.33725490196078434,.1725490196,.0862745098,.337254902,.3411764705882353,.1803921569,.0823529412,.3411764706,.34509803921568627,.1882352941,.0823529412,.3450980392,.34901960784313724,.1960784314,.0784313725,.3490196078,.35294117647058826,.2039215686,.0784313725,.3529411765,.3568627450980392,.2117647059,.0745098039,.3568627451,.3607843137254902,.2196078431,.0745098039,.3607843137,.36470588235294116,.2274509804,.0705882353,.3647058824,.3686274509803922,.2352941176,.0705882353,.368627451,.37254901960784315,.2431372549,.0666666667,.3725490196,.3764705882352941,.2509803922,.0666666667,.3764705882,.3803921568627451,.2549019608,.062745098,.3803921569,.3843137254901961,.262745098,.062745098,.3843137255,.38823529411764707,.2705882353,.0588235294,.3882352941,.39215686274509803,.2784313725,.0588235294,.3921568627,.396078431372549,.2862745098,.0549019608,.3960784314,.4,.2941176471,.0549019608,.4,.403921568627451,.3019607843,.0509803922,.4039215686,.40784313725490196,.3098039216,.0509803922,.4078431373,.4117647058823529,.3176470588,.0470588235,.4117647059,.41568627450980394,.3254901961,.0470588235,.4156862745,.4196078431372549,.3333333333,.0431372549,.4196078431,.4235294117647059,.3411764706,.0431372549,.4235294118,.42745098039215684,.3490196078,.0392156863,.4274509804,.43137254901960786,.3568627451,.0392156863,.431372549,.43529411764705883,.3647058824,.0352941176,.4352941176,.4392156862745098,.3725490196,.0352941176,.4392156863,.44313725490196076,.3803921569,.031372549,.4431372549,.4470588235294118,.3882352941,.031372549,.4470588235,.45098039215686275,.3960784314,.0274509804,.4509803922,.4549019607843137,.4039215686,.0274509804,.4549019608,.4588235294117647,.4117647059,.0235294118,.4588235294,.4627450980392157,.4196078431,.0235294118,.462745098,.4666666666666667,.4274509804,.0196078431,.4666666667,.4705882352941177,.4352941176,.0196078431,.4705882353,.4745098039215686,.4431372549,.0156862745,.4745098039,.4784313725490197,.4509803922,.0156862745,.4784313725,.48235294117647065,.4588235294,.0117647059,.4823529412,.48627450980392156,.4666666667,.0117647059,.4862745098,.49019607843137253,.4745098039,.0078431373,.4901960784,.49411764705882355,.4823529412,.0078431373,.4941176471,.4980392156862745,.4901960784,.0039215686,.4980392157,.5019607843137255,.4980392157,.0117647059,.4980392157,.5058823529411764,.5058823529,.0156862745,.4901960784,.5098039215686274,.5137254902,.0235294118,.4823529412,.5137254901960784,.5215686275,.0274509804,.4745098039,.5176470588235295,.5294117647,.0352941176,.4666666667,.5215686274509804,.537254902,.0392156863,.4588235294,.5254901960784314,.5450980392,.0470588235,.4509803922,.5294117647058824,.5529411765,.0509803922,.4431372549,.5333333333333333,.5607843137,.0588235294,.4352941176,.5372549019607843,.568627451,.062745098,.4274509804,.5411764705882353,.5764705882,.0705882353,.4196078431,.5450980392156862,.5843137255,.0745098039,.4117647059,.5490196078431373,.5921568627,.0823529412,.4039215686,.5529411764705883,.6,.0862745098,.3960784314,.5568627450980392,.6078431373,.0941176471,.3882352941,.5607843137254902,.6156862745,.0980392157,.3803921569,.5647058823529412,.6235294118,.1058823529,.3725490196,.5686274509803921,.631372549,.1098039216,.3647058824,.5725490196078431,.6392156863,.1176470588,.3568627451,.5764705882352941,.6470588235,.1215686275,.3490196078,.5803921568627451,.6549019608,.1294117647,.3411764706,.5843137254901961,.662745098,.1333333333,.3333333333,.5882352941176471,.6705882353,.1411764706,.3254901961,.592156862745098,.6784313725,.1450980392,.3176470588,.596078431372549,.6862745098,.1529411765,.3098039216,.6,.6941176471,.1568627451,.3019607843,.6039215686274509,.7019607843,.1647058824,.2941176471,.6078431372549019,.7098039216,.168627451,.2862745098,.611764705882353,.7176470588,.1764705882,.2784313725,.615686274509804,.7254901961,.1803921569,.2705882353,.6196078431372549,.7333333333,.1882352941,.262745098,.6235294117647059,.7411764706,.1921568627,.2549019608,.6274509803921569,.7490196078,.2,.2509803922,.6313725490196078,.7529411765,.2039215686,.2431372549,.6352941176470588,.7607843137,.2117647059,.2352941176,.6392156862745098,.768627451,.2156862745,.2274509804,.6431372549019608,.7764705882,.2235294118,.2196078431,.6470588235294118,.7843137255,.2274509804,.2117647059,.6509803921568628,.7921568627,.2352941176,.2039215686,.6549019607843137,.8,.2392156863,.1960784314,.6588235294117647,.8078431373,.2470588235,.1882352941,.6627450980392157,.8156862745,.2509803922,.1803921569,.6666666666666666,.8235294118,.2549019608,.1725490196,.6705882352941176,.831372549,.2588235294,.1647058824,.6745098039215687,.8392156863,.2666666667,.1568627451,.6784313725490196,.8470588235,.2705882353,.1490196078,.6823529411764706,.8549019608,.2784313725,.1411764706,.6862745098039216,.862745098,.2823529412,.1333333333,.6901960784313725,.8705882353,.2901960784,.1254901961,.6941176470588235,.8784313725,.2941176471,.1176470588,.6980392156862745,.8862745098,.3019607843,.1098039216,.7019607843137254,.8941176471,.3058823529,.1019607843,.7058823529411765,.9019607843,.3137254902,.0941176471,.7098039215686275,.9098039216,.3176470588,.0862745098,.7137254901960784,.9176470588,.3254901961,.0784313725,.7176470588235294,.9254901961,.3294117647,.0705882353,.7215686274509804,.9333333333,.337254902,.062745098,.7254901960784313,.9411764706,.3411764706,.0549019608,.7294117647058823,.9490196078,.3490196078,.0470588235,.7333333333333333,.9568627451,.3529411765,.0392156863,.7372549019607844,.9647058824,.3607843137,.031372549,.7411764705882353,.9725490196,.3647058824,.0235294118,.7450980392156863,.9803921569,.3725490196,.0156862745,.7490196078431373,.9882352941,.3725490196,.0039215686,.7529411764705882,.9960784314,.3843137255,.0156862745,.7568627450980392,.9960784314,.3921568627,.031372549,.7607843137254902,.9960784314,.4039215686,.0470588235,.7647058823529411,.9960784314,.4117647059,.062745098,.7686274509803922,.9960784314,.4235294118,.0784313725,.7725490196078432,.9960784314,.431372549,.0941176471,.7764705882352941,.9960784314,.4431372549,.1098039216,.7803921568627451,.9960784314,.4509803922,.1254901961,.7843137254901961,.9960784314,.462745098,.1411764706,.788235294117647,.9960784314,.4705882353,.1568627451,.792156862745098,.9960784314,.4823529412,.1725490196,.796078431372549,.9960784314,.4901960784,.1882352941,.8,.9960784314,.5019607843,.2039215686,.803921568627451,.9960784314,.5098039216,.2196078431,.807843137254902,.9960784314,.5215686275,.2352941176,.8117647058823529,.9960784314,.5294117647,.2509803922,.8156862745098039,.9960784314,.5411764706,.262745098,.8196078431372549,.9960784314,.5490196078,.2784313725,.8235294117647058,.9960784314,.5607843137,.2941176471,.8274509803921568,.9960784314,.568627451,.3098039216,.8313725490196079,.9960784314,.5803921569,.3254901961,.8352941176470589,.9960784314,.5882352941,.3411764706,.8392156862745098,.9960784314,.6,.3568627451,.8431372549019608,.9960784314,.6078431373,.3725490196,.8470588235294118,.9960784314,.6196078431,.3882352941,.8509803921568627,.9960784314,.6274509804,.4039215686,.8549019607843137,.9960784314,.6392156863,.4196078431,.8588235294117647,.9960784314,.6470588235,.4352941176,.8627450980392157,.9960784314,.6588235294,.4509803922,.8666666666666667,.9960784314,.6666666667,.4666666667,.8705882352941177,.9960784314,.6784313725,.4823529412,.8745098039215686,.9960784314,.6862745098,.4980392157,.8784313725490196,.9960784314,.6980392157,.5137254902,.8823529411764706,.9960784314,.7058823529,.5294117647,.8862745098039215,.9960784314,.7176470588,.5450980392,.8901960784313725,.9960784314,.7254901961,.5607843137,.8941176470588236,.9960784314,.737254902,.5764705882,.8980392156862745,.9960784314,.7450980392,.5921568627,.9019607843137255,.9960784314,.7529411765,.6078431373,.9058823529411765,.9960784314,.7607843137,.6235294118,.9098039215686274,.9960784314,.7725490196,.6392156863,.9137254901960784,.9960784314,.7803921569,.6549019608,.9176470588235294,.9960784314,.7921568627,.6705882353,.9215686274509803,.9960784314,.8,.6862745098,.9254901960784314,.9960784314,.8117647059,.7019607843,.9294117647058824,.9960784314,.8196078431,.7176470588,.9333333333333333,.9960784314,.831372549,.7333333333,.9372549019607843,.9960784314,.8392156863,.7490196078,.9411764705882354,.9960784314,.8509803922,.7607843137,.9450980392156864,.9960784314,.8588235294,.7764705882,.9490196078431372,.9960784314,.8705882353,.7921568627,.9529411764705882,.9960784314,.8784313725,.8078431373,.9568627450980394,.9960784314,.8901960784,.8235294118,.9607843137254903,.9960784314,.8980392157,.8392156863,.9647058823529413,.9960784314,.9098039216,.8549019608,.9686274509803922,.9960784314,.9176470588,.8705882353,.9725490196078431,.9960784314,.9294117647,.8862745098,.9764705882352941,.9960784314,.937254902,.9019607843,.9803921568627451,.9960784314,.9490196078,.9176470588,.984313725490196,.9960784314,.9568627451,.9333333333,.9882352941176471,.9960784314,.968627451,.9490196078,.9921568627450981,.9960784314,.9764705882,.9647058824,.996078431372549,.9960784314,.9882352941,.9803921569,1,.9960784314,.9882352941,.9803921569]},{ColorSpace:"RGB",Name:"ge",RGBPoints:[0,.0078431373,.0078431373,.0078431373,.00392156862745098,.0078431373,.0078431373,.0078431373,.00784313725490196,.0078431373,.0078431373,.0078431373,.011764705882352941,.0078431373,.0078431373,.0078431373,.01568627450980392,.0078431373,.0078431373,.0078431373,.0196078431372549,.0078431373,.0078431373,.0078431373,.023529411764705882,.0078431373,.0078431373,.0078431373,.027450980392156862,.0078431373,.0078431373,.0078431373,.03137254901960784,.0078431373,.0078431373,.0078431373,.03529411764705882,.0078431373,.0078431373,.0078431373,.0392156862745098,.0078431373,.0078431373,.0078431373,.043137254901960784,.0078431373,.0078431373,.0078431373,.047058823529411764,.0078431373,.0078431373,.0078431373,.050980392156862744,.0078431373,.0078431373,.0078431373,.054901960784313725,.0078431373,.0078431373,.0078431373,.05882352941176471,.0117647059,.0078431373,.0078431373,.06274509803921569,.0078431373,.0156862745,.0156862745,.06666666666666667,.0078431373,.0235294118,.0235294118,.07058823529411765,.0078431373,.031372549,.031372549,.07450980392156863,.0078431373,.0392156863,.0392156863,.0784313725490196,.0078431373,.0470588235,.0470588235,.08235294117647059,.0078431373,.0549019608,.0549019608,.08627450980392157,.0078431373,.062745098,.062745098,.09019607843137255,.0078431373,.0705882353,.0705882353,.09411764705882353,.0078431373,.0784313725,.0784313725,.09803921568627451,.0078431373,.0901960784,.0862745098,.10196078431372549,.0078431373,.0980392157,.0941176471,.10588235294117647,.0078431373,.1058823529,.1019607843,.10980392156862745,.0078431373,.1137254902,.1098039216,.11372549019607843,.0078431373,.1215686275,.1176470588,.11764705882352942,.0078431373,.1294117647,.1254901961,.12156862745098039,.0078431373,.137254902,.1333333333,.12549019607843137,.0078431373,.1450980392,.1411764706,.12941176470588237,.0078431373,.1529411765,.1490196078,.13333333333333333,.0078431373,.1647058824,.1568627451,.13725490196078433,.0078431373,.1725490196,.1647058824,.1411764705882353,.0078431373,.1803921569,.1725490196,.1450980392156863,.0078431373,.1882352941,.1803921569,.14901960784313725,.0078431373,.1960784314,.1882352941,.15294117647058825,.0078431373,.2039215686,.1960784314,.1568627450980392,.0078431373,.2117647059,.2039215686,.1607843137254902,.0078431373,.2196078431,.2117647059,.16470588235294117,.0078431373,.2274509804,.2196078431,.16862745098039217,.0078431373,.2352941176,.2274509804,.17254901960784313,.0078431373,.2470588235,.2352941176,.17647058823529413,.0078431373,.2509803922,.2431372549,.1803921568627451,.0078431373,.2549019608,.2509803922,.1843137254901961,.0078431373,.262745098,.2509803922,.18823529411764706,.0078431373,.2705882353,.2588235294,.19215686274509805,.0078431373,.2784313725,.2666666667,.19607843137254902,.0078431373,.2862745098,.2745098039,.2,.0078431373,.2941176471,.2823529412,.20392156862745098,.0078431373,.3019607843,.2901960784,.20784313725490197,.0078431373,.3137254902,.2980392157,.21176470588235294,.0078431373,.3215686275,.3058823529,.21568627450980393,.0078431373,.3294117647,.3137254902,.2196078431372549,.0078431373,.337254902,.3215686275,.2235294117647059,.0078431373,.3450980392,.3294117647,.22745098039215686,.0078431373,.3529411765,.337254902,.23137254901960785,.0078431373,.3607843137,.3450980392,.23529411764705885,.0078431373,.368627451,.3529411765,.23921568627450984,.0078431373,.3764705882,.3607843137,.24313725490196078,.0078431373,.3843137255,.368627451,.24705882352941178,.0078431373,.3960784314,.3764705882,.25098039215686274,.0078431373,.4039215686,.3843137255,.2549019607843137,.0078431373,.4117647059,.3921568627,.25882352941176473,.0078431373,.4196078431,.4,.2627450980392157,.0078431373,.4274509804,.4078431373,.26666666666666666,.0078431373,.4352941176,.4156862745,.27058823529411763,.0078431373,.4431372549,.4235294118,.27450980392156865,.0078431373,.4509803922,.431372549,.2784313725490196,.0078431373,.4588235294,.4392156863,.2823529411764706,.0078431373,.4705882353,.4470588235,.28627450980392155,.0078431373,.4784313725,.4549019608,.2901960784313726,.0078431373,.4862745098,.462745098,.29411764705882354,.0078431373,.4941176471,.4705882353,.2980392156862745,.0078431373,.5019607843,.4784313725,.30196078431372547,.0117647059,.5098039216,.4862745098,.3058823529411765,.0196078431,.5019607843,.4941176471,.30980392156862746,.0274509804,.4941176471,.5058823529,.3137254901960784,.0352941176,.4862745098,.5137254902,.3176470588235294,.0431372549,.4784313725,.5215686275,.3215686274509804,.0509803922,.4705882353,.5294117647,.3254901960784314,.0588235294,.462745098,.537254902,.32941176470588235,.0666666667,.4549019608,.5450980392,.3333333333333333,.0745098039,.4470588235,.5529411765,.33725490196078434,.0823529412,.4392156863,.5607843137,.3411764705882353,.0901960784,.431372549,.568627451,.34509803921568627,.0980392157,.4235294118,.5764705882,.34901960784313724,.1058823529,.4156862745,.5843137255,.35294117647058826,.1137254902,.4078431373,.5921568627,.3568627450980392,.1215686275,.4,.6,.3607843137254902,.1294117647,.3921568627,.6078431373,.36470588235294116,.137254902,.3843137255,.6156862745,.3686274509803922,.1450980392,.3764705882,.6235294118,.37254901960784315,.1529411765,.368627451,.631372549,.3764705882352941,.1607843137,.3607843137,.6392156863,.3803921568627451,.168627451,.3529411765,.6470588235,.3843137254901961,.1764705882,.3450980392,.6549019608,.38823529411764707,.1843137255,.337254902,.662745098,.39215686274509803,.1921568627,.3294117647,.6705882353,.396078431372549,.2,.3215686275,.6784313725,.4,.2078431373,.3137254902,.6862745098,.403921568627451,.2156862745,.3058823529,.6941176471,.40784313725490196,.2235294118,.2980392157,.7019607843,.4117647058823529,.231372549,.2901960784,.7098039216,.41568627450980394,.2392156863,.2823529412,.7176470588,.4196078431372549,.2470588235,.2745098039,.7254901961,.4235294117647059,.2509803922,.2666666667,.7333333333,.42745098039215684,.2509803922,.2588235294,.7411764706,.43137254901960786,.2588235294,.2509803922,.7490196078,.43529411764705883,.2666666667,.2509803922,.7490196078,.4392156862745098,.2745098039,.2431372549,.7568627451,.44313725490196076,.2823529412,.2352941176,.7647058824,.4470588235294118,.2901960784,.2274509804,.7725490196,.45098039215686275,.2980392157,.2196078431,.7803921569,.4549019607843137,.3058823529,.2117647059,.7882352941,.4588235294117647,.3137254902,.2039215686,.7960784314,.4627450980392157,.3215686275,.1960784314,.8039215686,.4666666666666667,.3294117647,.1882352941,.8117647059,.4705882352941177,.337254902,.1803921569,.8196078431,.4745098039215686,.3450980392,.1725490196,.8274509804,.4784313725490197,.3529411765,.1647058824,.8352941176,.48235294117647065,.3607843137,.1568627451,.8431372549,.48627450980392156,.368627451,.1490196078,.8509803922,.49019607843137253,.3764705882,.1411764706,.8588235294,.49411764705882355,.3843137255,.1333333333,.8666666667,.4980392156862745,.3921568627,.1254901961,.8745098039,.5019607843137255,.4,.1176470588,.8823529412,.5058823529411764,.4078431373,.1098039216,.8901960784,.5098039215686274,.4156862745,.1019607843,.8980392157,.5137254901960784,.4235294118,.0941176471,.9058823529,.5176470588235295,.431372549,.0862745098,.9137254902,.5215686274509804,.4392156863,.0784313725,.9215686275,.5254901960784314,.4470588235,.0705882353,.9294117647,.5294117647058824,.4549019608,.062745098,.937254902,.5333333333333333,.462745098,.0549019608,.9450980392,.5372549019607843,.4705882353,.0470588235,.9529411765,.5411764705882353,.4784313725,.0392156863,.9607843137,.5450980392156862,.4862745098,.031372549,.968627451,.5490196078431373,.4941176471,.0235294118,.9764705882,.5529411764705883,.4980392157,.0156862745,.9843137255,.5568627450980392,.5058823529,.0078431373,.9921568627,.5607843137254902,.5137254902,.0156862745,.9803921569,.5647058823529412,.5215686275,.0235294118,.9647058824,.5686274509803921,.5294117647,.0352941176,.9490196078,.5725490196078431,.537254902,.0431372549,.9333333333,.5764705882352941,.5450980392,.0509803922,.9176470588,.5803921568627451,.5529411765,.062745098,.9019607843,.5843137254901961,.5607843137,.0705882353,.8862745098,.5882352941176471,.568627451,.0784313725,.8705882353,.592156862745098,.5764705882,.0901960784,.8549019608,.596078431372549,.5843137255,.0980392157,.8392156863,.6,.5921568627,.1098039216,.8235294118,.6039215686274509,.6,.1176470588,.8078431373,.6078431372549019,.6078431373,.1254901961,.7921568627,.611764705882353,.6156862745,.137254902,.7764705882,.615686274509804,.6235294118,.1450980392,.7607843137,.6196078431372549,.631372549,.1529411765,.7490196078,.6235294117647059,.6392156863,.1647058824,.737254902,.6274509803921569,.6470588235,.1725490196,.7215686275,.6313725490196078,.6549019608,.1843137255,.7058823529,.6352941176470588,.662745098,.1921568627,.6901960784,.6392156862745098,.6705882353,.2,.6745098039,.6431372549019608,.6784313725,.2117647059,.6588235294,.6470588235294118,.6862745098,.2196078431,.6431372549,.6509803921568628,.6941176471,.2274509804,.6274509804,.6549019607843137,.7019607843,.2392156863,.6117647059,.6588235294117647,.7098039216,.2470588235,.5960784314,.6627450980392157,.7176470588,.2509803922,.5803921569,.6666666666666666,.7254901961,.2588235294,.5647058824,.6705882352941176,.7333333333,.2666666667,.5490196078,.6745098039215687,.7411764706,.2784313725,.5333333333,.6784313725490196,.7490196078,.2862745098,.5176470588,.6823529411764706,.7490196078,.2941176471,.5019607843,.6862745098039216,.7529411765,.3058823529,.4862745098,.6901960784313725,.7607843137,.3137254902,.4705882353,.6941176470588235,.768627451,.3215686275,.4549019608,.6980392156862745,.7764705882,.3333333333,.4392156863,.7019607843137254,.7843137255,.3411764706,.4235294118,.7058823529411765,.7921568627,.3529411765,.4078431373,.7098039215686275,.8,.3607843137,.3921568627,.7137254901960784,.8078431373,.368627451,.3764705882,.7176470588235294,.8156862745,.3803921569,.3607843137,.7215686274509804,.8235294118,.3882352941,.3450980392,.7254901960784313,.831372549,.3960784314,.3294117647,.7294117647058823,.8392156863,.4078431373,.3137254902,.7333333333333333,.8470588235,.4156862745,.2980392157,.7372549019607844,.8549019608,.4274509804,.2823529412,.7411764705882353,.862745098,.4352941176,.2666666667,.7450980392156863,.8705882353,.4431372549,.2509803922,.7490196078431373,.8784313725,.4549019608,.2431372549,.7529411764705882,.8862745098,.462745098,.2274509804,.7568627450980392,.8941176471,.4705882353,.2117647059,.7607843137254902,.9019607843,.4823529412,.1960784314,.7647058823529411,.9098039216,.4901960784,.1803921569,.7686274509803922,.9176470588,.4980392157,.1647058824,.7725490196078432,.9254901961,.5098039216,.1490196078,.7764705882352941,.9333333333,.5176470588,.1333333333,.7803921568627451,.9411764706,.5294117647,.1176470588,.7843137254901961,.9490196078,.537254902,.1019607843,.788235294117647,.9568627451,.5450980392,.0862745098,.792156862745098,.9647058824,.5568627451,.0705882353,.796078431372549,.9725490196,.5647058824,.0549019608,.8,.9803921569,.5725490196,.0392156863,.803921568627451,.9882352941,.5843137255,.0235294118,.807843137254902,.9921568627,.5921568627,.0078431373,.8117647058823529,.9921568627,.6039215686,.0274509804,.8156862745098039,.9921568627,.6117647059,.0509803922,.8196078431372549,.9921568627,.6196078431,.0745098039,.8235294117647058,.9921568627,.631372549,.0980392157,.8274509803921568,.9921568627,.6392156863,.1215686275,.8313725490196079,.9921568627,.6470588235,.1411764706,.8352941176470589,.9921568627,.6588235294,.1647058824,.8392156862745098,.9921568627,.6666666667,.1882352941,.8431372549019608,.9921568627,.6784313725,.2117647059,.8470588235294118,.9921568627,.6862745098,.2352941176,.8509803921568627,.9921568627,.6941176471,.2509803922,.8549019607843137,.9921568627,.7058823529,.2705882353,.8588235294117647,.9921568627,.7137254902,.2941176471,.8627450980392157,.9921568627,.7215686275,.3176470588,.8666666666666667,.9921568627,.7333333333,.3411764706,.8705882352941177,.9921568627,.7411764706,.3647058824,.8745098039215686,.9921568627,.7490196078,.3843137255,.8784313725490196,.9921568627,.7529411765,.4078431373,.8823529411764706,.9921568627,.7607843137,.431372549,.8862745098039215,.9921568627,.7725490196,.4549019608,.8901960784313725,.9921568627,.7803921569,.4784313725,.8941176470588236,.9921568627,.7882352941,.4980392157,.8980392156862745,.9921568627,.8,.5215686275,.9019607843137255,.9921568627,.8078431373,.5450980392,.9058823529411765,.9921568627,.8156862745,.568627451,.9098039215686274,.9921568627,.8274509804,.5921568627,.9137254901960784,.9921568627,.8352941176,.6156862745,.9176470588235294,.9921568627,.8470588235,.6352941176,.9215686274509803,.9921568627,.8549019608,.6588235294,.9254901960784314,.9921568627,.862745098,.6823529412,.9294117647058824,.9921568627,.8745098039,.7058823529,.9333333333333333,.9921568627,.8823529412,.7294117647,.9372549019607843,.9921568627,.8901960784,.7490196078,.9411764705882354,.9921568627,.9019607843,.7647058824,.9450980392156864,.9921568627,.9098039216,.7882352941,.9490196078431372,.9921568627,.9215686275,.8117647059,.9529411764705882,.9921568627,.9294117647,.8352941176,.9568627450980394,.9921568627,.937254902,.8588235294,.9607843137254903,.9921568627,.9490196078,.8784313725,.9647058823529413,.9921568627,.9568627451,.9019607843,.9686274509803922,.9921568627,.9647058824,.9254901961,.9725490196078431,.9921568627,.9764705882,.9490196078,.9764705882352941,.9921568627,.9843137255,.9725490196,.9803921568627451,.9921568627,.9921568627,.9921568627,.984313725490196,.9921568627,.9921568627,.9921568627,.9882352941176471,.9921568627,.9921568627,.9921568627,.9921568627450981,.9921568627,.9921568627,.9921568627,.996078431372549,.9921568627,.9921568627,.9921568627,1,.9921568627,.9921568627,.9921568627]},{ColorSpace:"RGB",Name:"siemens",RGBPoints:[0,.0078431373,.0039215686,.1254901961,.00392156862745098,.0078431373,.0039215686,.1254901961,.00784313725490196,.0078431373,.0039215686,.1882352941,.011764705882352941,.0117647059,.0039215686,.2509803922,.01568627450980392,.0117647059,.0039215686,.3098039216,.0196078431372549,.0156862745,.0039215686,.3725490196,.023529411764705882,.0156862745,.0039215686,.3725490196,.027450980392156862,.0156862745,.0039215686,.3725490196,.03137254901960784,.0156862745,.0039215686,.3725490196,.03529411764705882,.0156862745,.0039215686,.3725490196,.0392156862745098,.0156862745,.0039215686,.3725490196,.043137254901960784,.0156862745,.0039215686,.3725490196,.047058823529411764,.0156862745,.0039215686,.3725490196,.050980392156862744,.0156862745,.0039215686,.3725490196,.054901960784313725,.0156862745,.0039215686,.3725490196,.05882352941176471,.0156862745,.0039215686,.3725490196,.06274509803921569,.0156862745,.0039215686,.3882352941,.06666666666666667,.0156862745,.0039215686,.4078431373,.07058823529411765,.0156862745,.0039215686,.4235294118,.07450980392156863,.0156862745,.0039215686,.4431372549,.0784313725490196,.0156862745,.0039215686,.462745098,.08235294117647059,.0156862745,.0039215686,.4784313725,.08627450980392157,.0156862745,.0039215686,.4980392157,.09019607843137255,.0196078431,.0039215686,.5137254902,.09411764705882353,.0196078431,.0039215686,.5333333333,.09803921568627451,.0196078431,.0039215686,.5529411765,.10196078431372549,.0196078431,.0039215686,.568627451,.10588235294117647,.0196078431,.0039215686,.5882352941,.10980392156862745,.0196078431,.0039215686,.6039215686,.11372549019607843,.0196078431,.0039215686,.6235294118,.11764705882352942,.0196078431,.0039215686,.6431372549,.12156862745098039,.0235294118,.0039215686,.6588235294,.12549019607843137,.0235294118,.0039215686,.6784313725,.12941176470588237,.0235294118,.0039215686,.6980392157,.13333333333333333,.0235294118,.0039215686,.7137254902,.13725490196078433,.0235294118,.0039215686,.7333333333,.1411764705882353,.0235294118,.0039215686,.7490196078,.1450980392156863,.0235294118,.0039215686,.7647058824,.14901960784313725,.0235294118,.0039215686,.7843137255,.15294117647058825,.0274509804,.0039215686,.8,.1568627450980392,.0274509804,.0039215686,.8196078431,.1607843137254902,.0274509804,.0039215686,.8352941176,.16470588235294117,.0274509804,.0039215686,.8549019608,.16862745098039217,.0274509804,.0039215686,.8745098039,.17254901960784313,.0274509804,.0039215686,.8901960784,.17647058823529413,.0274509804,.0039215686,.9098039216,.1803921568627451,.031372549,.0039215686,.9294117647,.1843137254901961,.031372549,.0039215686,.9254901961,.18823529411764706,.0509803922,.0039215686,.9098039216,.19215686274509805,.0705882353,.0039215686,.8901960784,.19607843137254902,.0901960784,.0039215686,.8705882353,.2,.1137254902,.0039215686,.8509803922,.20392156862745098,.1333333333,.0039215686,.831372549,.20784313725490197,.1529411765,.0039215686,.8117647059,.21176470588235294,.1725490196,.0039215686,.7921568627,.21568627450980393,.1960784314,.0039215686,.7725490196,.2196078431372549,.2156862745,.0039215686,.7529411765,.2235294117647059,.2352941176,.0039215686,.737254902,.22745098039215686,.2509803922,.0039215686,.7176470588,.23137254901960785,.2745098039,.0039215686,.6980392157,.23529411764705885,.2941176471,.0039215686,.6784313725,.23921568627450984,.3137254902,.0039215686,.6588235294,.24313725490196078,.3333333333,.0039215686,.6392156863,.24705882352941178,.3568627451,.0039215686,.6196078431,.25098039215686274,.3764705882,.0039215686,.6,.2549019607843137,.3960784314,.0039215686,.5803921569,.25882352941176473,.4156862745,.0039215686,.5607843137,.2627450980392157,.4392156863,.0039215686,.5411764706,.26666666666666666,.4588235294,.0039215686,.5215686275,.27058823529411763,.4784313725,.0039215686,.5019607843,.27450980392156865,.4980392157,.0039215686,.4823529412,.2784313725490196,.5215686275,.0039215686,.4666666667,.2823529411764706,.5411764706,.0039215686,.4470588235,.28627450980392155,.5607843137,.0039215686,.4274509804,.2901960784313726,.5803921569,.0039215686,.4078431373,.29411764705882354,.6039215686,.0039215686,.3882352941,.2980392156862745,.6235294118,.0039215686,.368627451,.30196078431372547,.6431372549,.0039215686,.3490196078,.3058823529411765,.662745098,.0039215686,.3294117647,.30980392156862746,.6862745098,.0039215686,.3098039216,.3137254901960784,.7058823529,.0039215686,.2901960784,.3176470588235294,.7254901961,.0039215686,.2705882353,.3215686274509804,.7450980392,.0039215686,.2509803922,.3254901960784314,.7647058824,.0039215686,.2352941176,.32941176470588235,.7843137255,.0039215686,.2156862745,.3333333333333333,.8039215686,.0039215686,.1960784314,.33725490196078434,.8235294118,.0039215686,.1764705882,.3411764705882353,.8470588235,.0039215686,.1568627451,.34509803921568627,.8666666667,.0039215686,.137254902,.34901960784313724,.8862745098,.0039215686,.1176470588,.35294117647058826,.9058823529,.0039215686,.0980392157,.3568627450980392,.9294117647,.0039215686,.0784313725,.3607843137254902,.9490196078,.0039215686,.0588235294,.36470588235294116,.968627451,.0039215686,.0392156863,.3686274509803922,.9921568627,.0039215686,.0235294118,.37254901960784315,.9529411765,.0039215686,.0588235294,.3764705882352941,.9529411765,.0078431373,.0549019608,.3803921568627451,.9529411765,.0156862745,.0549019608,.3843137254901961,.9529411765,.0235294118,.0549019608,.38823529411764707,.9529411765,.031372549,.0549019608,.39215686274509803,.9529411765,.0352941176,.0549019608,.396078431372549,.9529411765,.0431372549,.0549019608,.4,.9529411765,.0509803922,.0549019608,.403921568627451,.9529411765,.0588235294,.0549019608,.40784313725490196,.9529411765,.062745098,.0549019608,.4117647058823529,.9529411765,.0705882353,.0549019608,.41568627450980394,.9529411765,.0784313725,.0509803922,.4196078431372549,.9529411765,.0862745098,.0509803922,.4235294117647059,.9568627451,.0941176471,.0509803922,.42745098039215684,.9568627451,.0980392157,.0509803922,.43137254901960786,.9568627451,.1058823529,.0509803922,.43529411764705883,.9568627451,.1137254902,.0509803922,.4392156862745098,.9568627451,.1215686275,.0509803922,.44313725490196076,.9568627451,.1254901961,.0509803922,.4470588235294118,.9568627451,.1333333333,.0509803922,.45098039215686275,.9568627451,.1411764706,.0509803922,.4549019607843137,.9568627451,.1490196078,.0470588235,.4588235294117647,.9568627451,.1568627451,.0470588235,.4627450980392157,.9568627451,.1607843137,.0470588235,.4666666666666667,.9568627451,.168627451,.0470588235,.4705882352941177,.9607843137,.1764705882,.0470588235,.4745098039215686,.9607843137,.1843137255,.0470588235,.4784313725490197,.9607843137,.1882352941,.0470588235,.48235294117647065,.9607843137,.1960784314,.0470588235,.48627450980392156,.9607843137,.2039215686,.0470588235,.49019607843137253,.9607843137,.2117647059,.0470588235,.49411764705882355,.9607843137,.2196078431,.0431372549,.4980392156862745,.9607843137,.2235294118,.0431372549,.5019607843137255,.9607843137,.231372549,.0431372549,.5058823529411764,.9607843137,.2392156863,.0431372549,.5098039215686274,.9607843137,.2470588235,.0431372549,.5137254901960784,.9607843137,.2509803922,.0431372549,.5176470588235295,.9647058824,.2549019608,.0431372549,.5215686274509804,.9647058824,.262745098,.0431372549,.5254901960784314,.9647058824,.2705882353,.0431372549,.5294117647058824,.9647058824,.2745098039,.0431372549,.5333333333333333,.9647058824,.2823529412,.0392156863,.5372549019607843,.9647058824,.2901960784,.0392156863,.5411764705882353,.9647058824,.2980392157,.0392156863,.5450980392156862,.9647058824,.3058823529,.0392156863,.5490196078431373,.9647058824,.3098039216,.0392156863,.5529411764705883,.9647058824,.3176470588,.0392156863,.5568627450980392,.9647058824,.3254901961,.0392156863,.5607843137254902,.9647058824,.3333333333,.0392156863,.5647058823529412,.9647058824,.337254902,.0392156863,.5686274509803921,.968627451,.3450980392,.0392156863,.5725490196078431,.968627451,.3529411765,.0352941176,.5764705882352941,.968627451,.3607843137,.0352941176,.5803921568627451,.968627451,.368627451,.0352941176,.5843137254901961,.968627451,.3725490196,.0352941176,.5882352941176471,.968627451,.3803921569,.0352941176,.592156862745098,.968627451,.3882352941,.0352941176,.596078431372549,.968627451,.3960784314,.0352941176,.6,.968627451,.4,.0352941176,.6039215686274509,.968627451,.4078431373,.0352941176,.6078431372549019,.968627451,.4156862745,.0352941176,.611764705882353,.968627451,.4235294118,.031372549,.615686274509804,.9725490196,.431372549,.031372549,.6196078431372549,.9725490196,.4352941176,.031372549,.6235294117647059,.9725490196,.4431372549,.031372549,.6274509803921569,.9725490196,.4509803922,.031372549,.6313725490196078,.9725490196,.4588235294,.031372549,.6352941176470588,.9725490196,.462745098,.031372549,.6392156862745098,.9725490196,.4705882353,.031372549,.6431372549019608,.9725490196,.4784313725,.031372549,.6470588235294118,.9725490196,.4862745098,.031372549,.6509803921568628,.9725490196,.4941176471,.0274509804,.6549019607843137,.9725490196,.4980392157,.0274509804,.6588235294117647,.9725490196,.5058823529,.0274509804,.6627450980392157,.9764705882,.5137254902,.0274509804,.6666666666666666,.9764705882,.5215686275,.0274509804,.6705882352941176,.9764705882,.5254901961,.0274509804,.6745098039215687,.9764705882,.5333333333,.0274509804,.6784313725490196,.9764705882,.5411764706,.0274509804,.6823529411764706,.9764705882,.5490196078,.0274509804,.6862745098039216,.9764705882,.5529411765,.0274509804,.6901960784313725,.9764705882,.5607843137,.0235294118,.6941176470588235,.9764705882,.568627451,.0235294118,.6980392156862745,.9764705882,.5764705882,.0235294118,.7019607843137254,.9764705882,.5843137255,.0235294118,.7058823529411765,.9764705882,.5882352941,.0235294118,.7098039215686275,.9764705882,.5960784314,.0235294118,.7137254901960784,.9803921569,.6039215686,.0235294118,.7176470588235294,.9803921569,.6117647059,.0235294118,.7215686274509804,.9803921569,.6156862745,.0235294118,.7254901960784313,.9803921569,.6235294118,.0235294118,.7294117647058823,.9803921569,.631372549,.0196078431,.7333333333333333,.9803921569,.6392156863,.0196078431,.7372549019607844,.9803921569,.6470588235,.0196078431,.7411764705882353,.9803921569,.6509803922,.0196078431,.7450980392156863,.9803921569,.6588235294,.0196078431,.7490196078431373,.9803921569,.6666666667,.0196078431,.7529411764705882,.9803921569,.6745098039,.0196078431,.7568627450980392,.9803921569,.6784313725,.0196078431,.7607843137254902,.9843137255,.6862745098,.0196078431,.7647058823529411,.9843137255,.6941176471,.0196078431,.7686274509803922,.9843137255,.7019607843,.0156862745,.7725490196078432,.9843137255,.7098039216,.0156862745,.7764705882352941,.9843137255,.7137254902,.0156862745,.7803921568627451,.9843137255,.7215686275,.0156862745,.7843137254901961,.9843137255,.7294117647,.0156862745,.788235294117647,.9843137255,.737254902,.0156862745,.792156862745098,.9843137255,.7411764706,.0156862745,.796078431372549,.9843137255,.7490196078,.0156862745,.8,.9843137255,.7529411765,.0156862745,.803921568627451,.9843137255,.7607843137,.0156862745,.807843137254902,.9882352941,.768627451,.0156862745,.8117647058823529,.9882352941,.768627451,.0156862745,.8156862745098039,.9843137255,.7843137255,.0117647059,.8196078431372549,.9843137255,.8,.0117647059,.8235294117647058,.9843137255,.8156862745,.0117647059,.8274509803921568,.9803921569,.831372549,.0117647059,.8313725490196079,.9803921569,.8431372549,.0117647059,.8352941176470589,.9803921569,.8588235294,.0078431373,.8392156862745098,.9803921569,.8745098039,.0078431373,.8431372549019608,.9764705882,.8901960784,.0078431373,.8470588235294118,.9764705882,.9058823529,.0078431373,.8509803921568627,.9764705882,.9176470588,.0078431373,.8549019607843137,.9764705882,.9333333333,.0039215686,.8588235294117647,.9725490196,.9490196078,.0039215686,.8627450980392157,.9725490196,.9647058824,.0039215686,.8666666666666667,.9725490196,.9803921569,.0039215686,.8705882352941177,.9725490196,.9960784314,.0039215686,.8745098039215686,.9725490196,.9960784314,.0039215686,.8784313725490196,.9725490196,.9960784314,.0352941176,.8823529411764706,.9725490196,.9960784314,.0666666667,.8862745098039215,.9725490196,.9960784314,.0980392157,.8901960784313725,.9725490196,.9960784314,.1294117647,.8941176470588236,.9725490196,.9960784314,.1647058824,.8980392156862745,.9764705882,.9960784314,.1960784314,.9019607843137255,.9764705882,.9960784314,.2274509804,.9058823529411765,.9764705882,.9960784314,.2549019608,.9098039215686274,.9764705882,.9960784314,.2901960784,.9137254901960784,.9764705882,.9960784314,.3215686275,.9176470588235294,.9803921569,.9960784314,.3529411765,.9215686274509803,.9803921569,.9960784314,.3843137255,.9254901960784314,.9803921569,.9960784314,.4156862745,.9294117647058824,.9803921569,.9960784314,.4509803922,.9333333333333333,.9803921569,.9960784314,.4823529412,.9372549019607843,.9843137255,.9960784314,.5137254902,.9411764705882354,.9843137255,.9960784314,.5450980392,.9450980392156864,.9843137255,.9960784314,.5803921569,.9490196078431372,.9843137255,.9960784314,.6117647059,.9529411764705882,.9843137255,.9960784314,.6431372549,.9568627450980394,.9882352941,.9960784314,.6745098039,.9607843137254903,.9882352941,.9960784314,.7058823529,.9647058823529413,.9882352941,.9960784314,.7411764706,.9686274509803922,.9882352941,.9960784314,.768627451,.9725490196078431,.9882352941,.9960784314,.8,.9764705882352941,.9921568627,.9960784314,.831372549,.9803921568627451,.9921568627,.9960784314,.8666666667,.984313725490196,.9921568627,.9960784314,.8980392157,.9882352941176471,.9921568627,.9960784314,.9294117647,.9921568627450981,.9921568627,.9960784314,.9607843137,.996078431372549,.9960784314,.9960784314,.9607843137,1,.9960784314,.9960784314,.9607843137]}],{registerColormap:bn}=Ke.utilities.colormap,En=r.classes.MetadataProvider;const Cn=({SeriesInstanceUID:e,StudyInstanceUID:t})=>{const{instances:a}=r.DicomMetadataStore.getSeries(t,e);if(!a?.length)return;const n=a[0].Modality;if(!n||"PT"!==n)return;const s=a.map((e=>e.imageId)),i=[];try{if(s.forEach((e=>{const t=function(e){const t=In.get("instance",e);if(!t)throw new Error("dicom metadata are required");if(void 0===t.SeriesDate||void 0===t.SeriesTime||void 0===t.CorrectedImage||void 0===t.Units||!t.RadiopharmaceuticalInformationSequence||void 0===t.RadiopharmaceuticalInformationSequence.RadionuclideHalfLife||void 0===t.RadiopharmaceuticalInformationSequence.RadionuclideTotalDose||void 0===t.DecayCorrection||void 0===t.AcquisitionDate||void 0===t.AcquisitionTime||void 0===t.RadiopharmaceuticalInformationSequence.RadiopharmaceuticalStartDateTime&&void 0===t.RadiopharmaceuticalInformationSequence.RadiopharmaceuticalStartTime)throw new Error("required metadata are missing");void 0===t.PatientWeight&&console.warn("PatientWeight missing from PT instance metadata");const a={CorrectedImage:t.CorrectedImage,Units:t.Units,RadionuclideHalfLife:t.RadiopharmaceuticalInformationSequence.RadionuclideHalfLife,RadionuclideTotalDose:t.RadiopharmaceuticalInformationSequence.RadionuclideTotalDose,RadiopharmaceuticalStartDateTime:t.RadiopharmaceuticalInformationSequence.RadiopharmaceuticalStartDateTime,RadiopharmaceuticalStartTime:t.RadiopharmaceuticalInformationSequence.RadiopharmaceuticalStartTime,DecayCorrection:t.DecayCorrection,PatientWeight:t.PatientWeight,SeriesDate:t.SeriesDate,SeriesTime:t.SeriesTime,AcquisitionDate:t.AcquisitionDate,AcquisitionTime:t.AcquisitionTime};if(t[70531e3]||void 0!==t[70531e3]||t[70531009]||void 0!==t[70531009]){const e={SUVScaleFactor:t[70531e3],ActivityConcentrationScaleFactor:t[70531009]};a.PhilipsPETPrivateGroup=e}return t["0009100d"]&&void 0!==t["0009100d"]&&(a.GEPrivatePostInjectionDateTime=t["0009100d"]),t.FrameReferenceTime&&void 0!==t.FrameReferenceTime&&(a.FrameReferenceTime=t.FrameReferenceTime),t.ActualFrameDuration&&void 0!==t.ActualFrameDuration&&(a.ActualFrameDuration=t.ActualFrameDuration),t.PatientSex&&void 0!==t.PatientSex&&(a.PatientSex=t.PatientSex),t.PatientSize&&void 0!==t.PatientSize&&(a.PatientSize=t.PatientSize),a}(e);t&&i.push(t)})),!i.length)return;const e=(0,Sn.d)(i);i.forEach(((t,a)=>{En.addCustomMetadata(s[a],"scalingModule",e[a])})),wn.forEach(bn)}catch(e){console.log(e)}},xn={id:Ot,preRegistration:function({servicesManager:e,configuration:t={},commandsManager:a}){const{stateSyncService:n,toolbarService:s,cineService:i,viewportGridService:o}=e.services;s.registerEventForToolbarUpdate(i,[i.EVENTS.CINE_STATE_CHANGED]),r.DicomMetadataStore.subscribe(r.DicomMetadataStore.EVENTS.INSTANCES_ADDED,Cn),r.DicomMetadataStore.subscribe(r.DicomMetadataStore.EVENTS.SERIES_UPDATED,Cn),n.register("viewportGridStore",{clearOnModeExit:!0}),n.register("uiStateStore",{clearOnModeExit:!0}),n.register("displaySetSelectorMap",{clearOnModeExit:!0}),n.register("hangingProtocolStageIndexMap",{clearOnModeExit:!0}),n.register("toggleHangingProtocol",{clearOnModeExit:!0}),n.register("viewportsByPosition",{clearOnModeExit:!0}),function({servicesManager:e}){const{hangingProtocolService:t}=e.services;t.addCustomAttribute("ViewCode","View Code Designator:Value",vn),t.addCustomAttribute("Laterality","Laterality of object",Dn)}({servicesManager:e});const c=e=>{Object.entries(e).forEach((([e,t])=>{[o.EVENTS.ACTIVE_VIEWPORT_ID_CHANGED,o.EVENTS.VIEWPORTS_READY].includes(e)&&o.subscribe(e,(e=>{const n=e?.viewportId??o.getActiveViewportId();a.run(t,{viewportId:n})}))}))};s.subscribe(s.EVENTS.TOOL_BAR_MODIFIED,(e=>{const{buttons:t}=e;for(const[e,a]of Object.entries(t)){const{groupId:e,items:t,listeners:n}=a.props||{};e&&t&&t.forEach((e=>{e.listeners&&c(e.listeners)})),n&&c(n)}}))},getDataSourcesModule:le,getViewportModule:({servicesManager:e,commandsManager:t,extensionManager:a})=>[{name:"chartViewport",component:yn}],getLayoutTemplateModule:function({servicesManager:e,extensionManager:t,commandsManager:a,hotkeysManager:n}){return[{name:"viewerLayout",id:"viewerLayout",component:function(s){return Me({servicesManager:e,extensionManager:t,commandsManager:a,hotkeysManager:n,...s})}}]},getPanelModule:Mt,getHangingProtocolModule:rn,getSopClassHandlerModule:Kt,getToolbarModule:function({commandsManager:e,servicesManager:t}){const{cineService:a}=t.services;return[{name:"ohif.radioGroup",defaultComponent:pe.hA},{name:"ohif.divider",defaultComponent:ea},{name:"ohif.splitButton",defaultComponent:ca},{name:"ohif.layoutSelector",defaultComponent:a=>ia({...a,commandsManager:e,servicesManager:t})},{name:"ohif.buttonGroup",defaultComponent:la},{name:"ohif.progressDropdown",defaultComponent:da},{name:"evaluate.group.promoteToPrimary",evaluate:({viewportId:e,button:t,itemId:a})=>{const{items:n}=t.props;if(!a)return{primary:t.props.primary,items:n};return{primary:n.find((e=>e.id===a||e.itemId===a)),items:n}}},{name:"evaluate.cine",evaluate:()=>(e=>({className:e?"!text-primary-active":"!text-common-bright hover:!bg-primary-dark hover:text-primary-light"}))(a.getState().isCineEnabled)}]},getCommandsModule:_a,getUtilityModule:({servicesManager:e})=>[{name:"common",exports:{getStudiesForPatientByMRN:ke}}],getCustomizationModule:function({servicesManager:e,extensionManager:t}){return[{name:"helloPage",merge:"Append",value:{id:"customRoutes",routes:[{path:"/custom",children:()=>ue.createElement("h1",{style:{color:"white"}},"Hello Custom Route")}]}},{name:"datasources",merge:"Append",value:{id:"customRoutes",routes:[{path:"/datasources",children:on}]}},{name:"default",value:[{id:"ohif.overlayItem",content:function(e){if(this.condition&&!this.condition(e))return null;const{instance:t}=e,a=t&&this.attribute?t[this.attribute]:this.contentF&&"function"==typeof this.contentF?this.contentF(e):null;return a?ue.createElement("span",{className:"overlay-item flex flex-row",style:{color:this.color||void 0},title:this.title||""},this.label&&ue.createElement("span",{className:"mr-1 shrink-0"},this.label),ue.createElement("span",{className:"font-light"},a)):null}},{id:"ohif.contextMenu",transform:function(e){const t={...this};t.menus=this.menus.map((e=>({...e})));for(const a of t.menus){const{items:t}=a;a.items=[];for(const n of t)a.items.push(e.transform(n))}return t}},{id:"ohif.dataSourceConfigurationComponent",component:dn.bind(null,{servicesManager:e,extensionManager:t})},{id:"ohif.dataSourceConfigurationAPI.google",factory:a=>new hn(a,e,t)},{id:"progressDropdownWithServiceComponent",component:da},{id:"studyBrowser.sortFunctions",values:[{label:"Series Number",sortFunction:(e,t)=>e?.SeriesNumber-t?.SeriesNumber},{label:"Series Date",sortFunction:(e,t)=>{const a=new Date(fn(e?.SeriesDate));return new Date(fn(t?.SeriesDate)).getTime()-a.getTime()}}]}]}]}},Pn=xn}}]);
//# sourceMappingURL=968.bundle.733110c021a16950e021.js.map