"use strict";(globalThis.webpackChunk=globalThis.webpackChunk||[]).push([[552,757],{3094:(e,t,i)=>{i.r(t),i.d(t,{default:()=>I});var n=i(43001),r=i(3827),o=i.n(r),s=i(47316),a=i(33901),c=i.n(a);const d=e=>{const{list:t,itemGenerator:i}=e;if(t)return t.map((t=>{if(!t)return;const n=t.generator||i;if(!n)throw new Error(`No generator for ${t}`);return n({...e,item:t})}))};i(71271),i(62709);const l=(({topLeft:e=[],topRight:t=[],bottomLeft:i=[],bottomRight:r=[],itemGenerator:o=()=>{}})=>s=>{const a="absolute pointer-events-none microscopy-viewport-overlay";return n.createElement(n.Fragment,null,e&&e.length>0&&n.createElement("div",{"data-cy":"viewport-overlay-top-left",className:c()(a,"top-viewport left-viewport text-primary-light")},d({...s,list:e,itemGenerator:o})),t&&t.length>0&&n.createElement("div",{"data-cy":"viewport-overlay-top-right",className:c()(a,"top-viewport right-viewport-scrollbar text-primary-light")},d({...s,list:t,itemGenerator:o})),r&&r.length>0&&n.createElement("div",{"data-cy":"viewport-overlay-bottom-right",className:c()(a,"bottom-viewport right-viewport-scrollbar text-primary-light")},d({...s,list:r,itemGenerator:o})),i&&i.length>0&&n.createElement("div",{"data-cy":"viewport-overlay-bottom-left",className:c()(a,"bottom-viewport left-viewport text-primary-light")},d({...s,list:i,itemGenerator:o})))})({});var u=i(84793),h=i(68968);var m=i(67540);function p(e){return!("object"==typeof e||Array.isArray(e))}const g=["DS","FL","FD","IS","OD","OF","OL","OV","SL","SS","SV","UL","US","UV"];function v(e,t){if(Array.isArray(e)){return e.map((e=>p(e)?e:v(e,t)))}return p(e)||Object.keys(e).forEach((i=>{null===e[i].Value&&e[i].vr?delete e[i].Value:Array.isArray(e[i].Value)&&e[i].vr&&(1===e[i].Value.length&&e[i].Value[0].BulkDataURI?(h.dicomWebUtils.fixBulkDataURI(e[i].Value[0],t,t.dataSourceConfig),e[i].BulkDataURI=e[i].Value[0].BulkDataURI,"https:"===window.location.protocol&&e[i].BulkDataURI.startsWith("http:")&&(e[i].BulkDataURI=e[i].BulkDataURI.replace("http:","https:")),delete e[i].Value):g.includes(e[i].vr)?e[i].Value=e[i].Value.map((e=>+e)):e[i].Value=e[i].Value.map((e=>v(e,t))))})),e}class f extends n.Component{constructor(e){super(e),this.state={error:null,isLoaded:!1},this.microscopyService=void 0,this.viewer=null,this.managedViewer=null,this.container=n.createRef(),this.overlayElement=n.createRef(),this.setViewportActiveHandler=()=>{const{setViewportActive:e,viewportId:t,activeViewportId:i}=this.props;t!==i&&e(t)};const{microscopyService:t}=this.props.servicesManager.services;this.microscopyService=t}static getImportPath(){return"/dicom-microscopy-viewer/dicomMicroscopyViewer.min.js"}getNearbyROI(e,t=!0){const i=Object.getOwnPropertySymbols(this.viewer),n=i.find((e=>"drawingSource"===e.description)),r=i.find((e=>"pyramid"===e.description)),o=i.find((e=>"map"===e.description)),s=i.find((e=>"affine"===e.description)),a=this.viewer[n].getClosestFeatureToCoordinate(this.viewer[o].getEventCoordinate(e));if(!a)return null;const c=this.viewer._getROIFromFeature(a,this.viewer[r].metadata,this.viewer[s]);return c&&t&&this.microscopyService.selectAnnotation(c),c}async installOpenLayersRenderer(e,t){this.microscopyService.clearAnnotations();let i=t;"SR"===t.Modality&&(i=t.getSourceDisplaySet()),console.log("Loading viewer metadata",i),await(async i=>{await import(f.getImportPath());const{viewer:n,metadata:r}=window.dicomMicroscopyViewer,o=n.VolumeImageViewer,s=function({extensionManager:e,servicesManager:t}){const i=window.config.dataSources.find((t=>t.sourceName===e.activeDataSource)),{userAuthenticationService:n}=t.services,{wadoRoot:r,staticWado:o,singlepart:s}=i.configuration,a={url:r||"/dicomlocal",staticWado:o,singlepart:s,headers:n.getAuthorizationHeader(),errorInterceptor:u.Po.getHTTPErrorHandler()},c=new h.StaticWadoClient(a);return c.wadoURL=a.url,"dicomlocal"===e.activeDataSource&&(c.retrieveInstanceFrames=async e=>{if(!("studyInstanceUID"in e))throw new Error("Study Instance UID is required for retrieval of instance frames");if(!("seriesInstanceUID"in e))throw new Error("Series Instance UID is required for retrieval of instance frames");if(!("sopInstanceUID"in e))throw new Error("SOP Instance UID is required for retrieval of instance frames");if(!("frameNumbers"in e))throw new Error("frame numbers are required for retrieval of instance frames");console.log(`retrieve frames ${e.frameNumbers.toString()} of instance ${e.sopInstanceUID}`);const t=u.DicomMetadataStore.getInstance(e.studyInstanceUID,e.seriesInstanceUID,e.sopInstanceUID);return(Array.isArray(e.frameNumbers)?e.frameNumbers:e.frameNumbers.split(",")).map((e=>Array.isArray(t.PixelData)?t.PixelData[+e-1]:t.PixelData))}),c}({extensionManager:this.props.extensionManager,servicesManager:this.props.servicesManager}),a=[];i.forEach((e=>{e.ImageType="string"==typeof e.ImageType?e.ImageType.split("\\"):e.ImageType;const t=v(m.default.data.DicomMetaDictionary.denaturalizeDataset(e),{StudyInstanceUID:e.StudyInstanceUID,SeriesInstanceUID:e.SeriesInstanceUID,dataSourceConfig:this.props.dataSource.getConfig()});t["00480105"]||(t["00480105"]={vr:"SQ",Value:[{"00480106":{vr:"SH",Value:["1"]}}]});const i=new r.VLWholeSlideMicroscopyImage({metadata:t}),n=i.ImageType[2];"VOLUME"!==n&&"THUMBNAIL"!==n||a.push(i)}));const c={client:s,metadata:a,retrieveRendered:!1,controls:["overview","position"]};this.viewer=new o(c),this.overlayElement&&this.overlayElement.current&&this.viewer.addViewportOverlay&&this.viewer.addViewportOverlay({element:this.overlayElement.current,coordinates:[0,0],navigate:!0,className:"OpenLayersOverlay"}),this.viewer.render({container:e});const{StudyInstanceUID:d,SeriesInstanceUID:l}=t;this.managedViewer=this.microscopyService.addViewer(this.viewer,this.props.viewportId,e,d,l),this.managedViewer.addContextMenuCallback((e=>{}))})(i.others),"SR"===t.Modality&&t.load(i)}componentDidMount(){const{displaySets:e,viewportOptions:t}=this.props,i=e[0];this.installOpenLayersRenderer(this.container.current,i).then((()=>{this.setState({isLoaded:!0})}))}componentDidUpdate(e,t,i){if(this.managedViewer&&e.displaySets!==this.props.displaySets){const{displaySets:e}=this.props,t=e[0];if(this.microscopyService.clearAnnotations(),"SR"===t.Modality){const e=t.getSourceDisplaySet();t.load(e)}}}componentWillUnmount(){this.microscopyService.removeViewer(this.viewer)}render(){const e={width:"100%",height:"100%"},t=this.props.displaySets[0],i=t.firstInstance||t.instance;return n.createElement("div",{className:"DicomMicroscopyViewer",style:e,onClick:this.setViewportActiveHandler},n.createElement("div",{style:{...e,display:"none"}},n.createElement("div",{style:{...e},ref:this.overlayElement},n.createElement("div",{style:{position:"relative",height:"100%",width:"100%"}},t&&i.imageId&&n.createElement(l,{displaySet:t,instance:t.instance,metadata:t.metadata})))),this.state.error?n.createElement("h2",null,JSON.stringify(this.state.error)):n.createElement("div",{style:e,ref:e=>{this.container.current=e,this.props.resizeRef.current=e}}),this.state.isLoaded?null:n.createElement(s.LE,{className:"h-full w-full bg-black"}))}}f.propTypes={viewportData:o().object,activeViewportId:o().string,setViewportActive:o().func,displaySets:o().array,viewportId:o().string,viewportLabel:o().string,dataSource:o().object,viewportOptions:o().object,displaySetOptions:o().array,servicesManager:o().object,extensionManager:o().object,commandsManager:o().object,resizeRef:o().oneOfType([o().func,o().shape({current:o().any})])};const I=f},82065:(e,t,i)=>{i.r(t),i.d(t,{default:()=>J});const n=JSON.parse('{"u2":"@ohif/extension-dicom-microscopy"}').u2;var r=i(43001),o=i(47316),s=i(84793),a=i(69190),c=i(71837);function d(e,t){let i=!1;Array.isArray(e[0])||(e=[e],i=!0);const n=t[t.length-1],r=n.ImageOrientationSlide,o=function(e){if(e.PixelSpacing)return e.PixelSpacing;const t=e.SharedFunctionalGroupsSequence[0];return t.PixelMeasuresSequence[0].PixelSpacing}(n),s=n.TotalPixelMatrixOriginSequence[0],a=[Number(s.XOffsetInSlideCoordinateSystem),Number(s.YOffsetInSlideCoordinateSystem)];return e=e.map((e=>{const t=[e[0],e[1]],i=function(e){if(!("offset"in e))throw new Error('Option "offset" is required.');if(!Array.isArray(e.offset))throw new Error('Option "offset" must be an array.');if(2!==e.offset.length)throw new Error('Option "offset" must be an array with 2 elements.');const t=e.offset;if(!("orientation"in e))throw new Error('Option "orientation" is required.');if(!Array.isArray(e.orientation))throw new Error('Option "orientation" must be an array.');if(6!==e.orientation.length)throw new Error('Option "orientation" must be an array with 6 elements.');const i=e.orientation;if(!("spacing"in e))throw new Error('Option "spacing" is required.');if(!Array.isArray(e.spacing))throw new Error('Option "spacing" must be an array.');if(2!==e.spacing.length)throw new Error('Option "spacing" must be an array with 2 elements.');const n=e.spacing;if(!("point"in e))throw new Error('Option "point" is required.');if(!Array.isArray(e.point))throw new Error('Option "point" must be an array.');if(2!==e.point.length)throw new Error('Option "point" must be an array with 2 elements.');const r=e.point,o=[[i[0]*n[1],i[3]*n[0],t[0]],[i[1]*n[1],i[4]*n[0],t[1]],[0,0,1]],s=(0,c.JBn)(o),a=[[r[0]],[r[1]],[1]],d=(0,c.JpY)(s,a),l=Number(d[1][0].toFixed(4));return[Number(d[0][0].toFixed(4)),l]}({offset:a,orientation:r,spacing:o,point:t});return[i[0],-(i[1]+1),0]})),i?e[0]:e}const l={color:"rgba(255,255,255,0.4)"},u={color:"rgba(255,255,255,0.0)"},h={color:"rgb(0,255,0)",width:1.5},m={color:"rgb(255,255,0)",width:1.5},p={active:{image:{circle:{fill:l,stroke:m,radius:5}},fill:l,stroke:m},default:{image:{circle:{fill:u,stroke:h,radius:5}},fill:u,stroke:h}},g={ROI_ADDED:"dicommicroscopyviewer_roi_added",ROI_MODIFIED:"dicommicroscopyviewer_roi_modified",ROI_REMOVED:"dicommicroscopyviewer_roi_removed",ROI_DRAWN:"dicommicroscopyviewer_roi_drawn",ROI_SELECTED:"dicommicroscopyviewer_roi_selected",MOVE_STARTED:"dicommicroscopyviewer_move_started",MOVE_ENDED:"dicommicroscopyviewer_move_ended",LOADING_STARTED:"dicommicroscopyviewer_loading_started",LOADING_ENDED:"dicommicroscopyviewer_loading_ended",LOADING_ERROR:"dicommicroscopyviewer_loading_error",FRAME_LOADING_STARTED:"dicommicroscopyviewer_frame_loading_started",FRAME_LOADING_ENDED:"dicommicroscopyviewer_frame_loading_ended",FRAME_LOADING_ERROR:"dicommicroscopyviewer_frame_loading_ended"},v={ADDED:"added",MODIFIED:"modified",REMOVED:"removed",UPDATED:"updated",SELECTED:"selected"};class f extends s.hC{constructor(e,t,i,n,r){super(v),this.viewer=e,this.viewportId=t,this.container=i,this.studyInstanceUID=n,this.seriesInstanceUID=r,this.onRoiAdded=this.roiAddedHandler.bind(this),this.onRoiModified=this.roiModifiedHandler.bind(this),this.onRoiRemoved=this.roiRemovedHandler.bind(this),this.onRoiSelected=this.roiSelectedHandler.bind(this),this.contextMenuCallback=()=>{};const o=Object.getOwnPropertySymbols(this.viewer);this._drawingSource=o.find((e=>"drawingSource"===e.description)),this._pyramid=o.find((e=>"pyramid"===e.description)),this._map=o.find((e=>"map"===e.description)),this._affine=o.find((e=>"affine"===e.description)),this.registerEvents(),this.activateDefaultInteractions()}addContextMenuCallback(e){this.contextMenuCallback=e}destroy(){this.unregisterEvents()}publish(e,t){this._broadcastEvent(e,{roiGraphic:t,managedViewer:this})}registerEvents(){this.container.addEventListener(g.ROI_ADDED,this.onRoiAdded),this.container.addEventListener(g.ROI_MODIFIED,this.onRoiModified),this.container.addEventListener(g.ROI_REMOVED,this.onRoiRemoved),this.container.addEventListener(g.ROI_SELECTED,this.onRoiSelected)}unregisterEvents(){this.container.removeEventListener(g.ROI_ADDED,this.onRoiAdded),this.container.removeEventListener(g.ROI_MODIFIED,this.onRoiModified),this.container.removeEventListener(g.ROI_REMOVED,this.onRoiRemoved),this.container.removeEventListener(g.ROI_SELECTED,this.onRoiSelected)}roiAddedHandler(e){const t=e.detail.payload;this.publish(v.ADDED,t),this.publish(v.UPDATED,t)}roiModifiedHandler(e){const t=e.detail.payload;this.publish(v.MODIFIED,t),this.publish(v.UPDATED,t)}roiRemovedHandler(e){const t=e.detail.payload;this.publish(v.REMOVED,t),this.publish(v.UPDATED,t)}roiSelectedHandler(e){const t=e.detail.payload;this.publish(v.SELECTED,t)}runSilently(e){this.unregisterEvents(),e(),this.registerEvents()}clearRoiGraphics(){this.runSilently((()=>this.viewer.removeAllROIs()))}showROIs(){this.viewer.showROIs()}hideROIs(){this.viewer.hideROIs()}addRoiGraphic(e){this.runSilently((()=>this.viewer.addROI(e,p.default)))}addRoiGraphicWithLabel(e,t){this.runSilently((()=>this.viewer.addROI(e,p.default))),this._broadcastEvent(v.ADDED,{roiGraphic:e,managedViewer:this,label:t})}setROIStyle(e,t){this.viewer.setROIStyle(e,t)}removeRoiGraphic(e){this.viewer.removeROI(e)}updateROIProperties({uid:e,properties:t}){this.viewer.updateROI({uid:e,properties:t})}toggleOverviewMap(){this.viewer.toggleOverviewMap()}activateDefaultInteractions(){document.querySelector(".DicomMicroscopyViewer").addEventListener("contextmenu",(e=>{e.preventDefault()}),!1);this.activateInteractions([["dragPan",{bindings:{mouseButtons:["middle"]}}],["dragZoom",{bindings:{mouseButtons:["right"]}}],["modify",{}]])}activateInteractions(e){const t={draw:e=>e?"activateDrawInteraction":"deactivateDrawInteraction",modify:e=>e?"activateModifyInteraction":"deactivateModifyInteraction",translate:e=>e?"activateTranslateInteraction":"deactivateTranslateInteraction",snap:e=>e?"activateSnapInteraction":"deactivateSnapInteraction",dragPan:e=>e?"activateDragPanInteraction":"deactivateDragPanInteraction",dragZoom:e=>e?"activateDragZoomInteraction":"deactivateDragZoomInteraction",select:e=>e?"activateSelectInteraction":"deactivateSelectInteraction"};Object.keys(t).forEach((i=>{const n=e.find((e=>e[0]===i));if(n){const[e,i]=n,r=t[e](!0);this.viewer[r](i)}else{const e=t[i](!1);this.viewer[e]()}}))}_getMapView(){return this._getMap().getView()}_getMap(){const e=Object.getOwnPropertySymbols(this.viewer).find((e=>"Symbol(map)"===String(e)));return window.map=this.viewer[e],this.viewer[e]}getViewState(){const e=this._getMapView();return{center:e.getCenter(),resolution:e.getResolution(),zoom:e.getZoom()}}setViewState(e){const t=this._getMapView();t.setZoom(e.zoom),t.setResolution(e.resolution),t.setCenter(e.center)}setViewStateByExtent(e){const t=e.getCoordinates();Array.isArray(t[0])&&!t[2]?this._jumpToPolyline(t):Array.isArray(t[0])?this._jumpToPolygonOrEllipse(t):this._jumpToPoint(t)}_jumpToPoint(e){const t=d(e,this.viewer[this._pyramid].metadata);this._getMapView().setCenter(t)}_jumpToPolyline(e){const t=d(e,this.viewer[this._pyramid].metadata),i=this._getMapView(),n=t[0],r=t[1],o=[(n[0]+r[0])/2,(n[1]+r[1])/2];i.setCenter(o)}_jumpToPolygonOrEllipse(e){const t=this.viewer[this._pyramid].metadata;let i=1/0,n=-1/0,r=1/0,o=-1/0;e.forEach((e=>{let s=d(e,t);const[a,c]=s;a<i?i=a:a>n&&(n=a),c<r?r=c:c>o&&(o=c)}));const s=n-i,a=o-r;i-=.5*s,n+=.5*s,r-=.5*a,o+=.5*a;const c=this._getMap();c.getView().fit([i,r,n,o],c.getSize())}}const I=f;const S={LABEL_UPDATED:"labelUpdated",GRAPHIC_UPDATED:"graphicUpdated",VIEW_UPDATED:"viewUpdated",REMOVED:"removed"};class y extends s.hC{constructor(e,t,i,n="",r=null){super(S),this.uid=e.uid,this.roiGraphic=e,this.studyInstanceUID=t,this.seriesInstanceUID=i,this.label=n,this.viewState=r,this.setMeasurements(e)}getScoord3d(){const e=this.roiGraphic;return e[Object.getOwnPropertySymbols(e).find((e=>"Symbol(scoord3d)"===String(e)))]}getCoordinates(){const e=this.getScoord3d();return e[Object.getOwnPropertySymbols(e).find((e=>"Symbol(coordinates)"===String(e)))]}destroy(){this._broadcastEvent(S.REMOVED,this)}setRoiGraphic(e){this.roiGraphic=e,this.setMeasurements(),this._broadcastEvent(S.GRAPHIC_UPDATED,this)}setMeasurements(){const e=this.roiGraphic.scoord3d.graphicType,t=this.roiGraphic.scoord3d.graphicData;switch(e){case"ELLIPSE":const e=t[0],i=t[1];let n=i[0]-e[0],r=i[1]-e[1];n*=n,r*=r;const o=Math.sqrt(n+r)/2,s=Math.PI*o*o;this._area=s,this._length=void 0;break;case"POLYGON":const a=function(e){const t=e.length;let i=0,n=t-1;for(let r=0;r<t;r++)i+=(e[n][0]+e[r][0])*(e[n][1]-e[r][1]),n=r;return Math.abs(i/2)}(t);this._area=a,this._length=void 0;break;case"POINT":this._area=void 0,this._length=void 0;break;case"POLYLINE":let c=0;for(let e=1;e<t.length;e++){const i=t[e-1],n=t[e];let r=n[0]-i[0],o=n[1]-i[1];r*=r,o*=o,c+=Math.sqrt(r+o)}this._area=void 0,this._length=c}}setViewState(e){this.viewState=e,this._broadcastEvent(S.VIEW_UPDATED,this)}setLabel(e,t){this.label=e||t&&t.CodeMeaning,this.finding=t||{CodingSchemeDesignator:"@ohif/extension-dicom-microscopy",CodeValue:e,CodeMeaning:e},this._broadcastEvent(S.LABEL_UPDATED,this)}getLabel(){return this.label?`${this.label}`:""}getDetailedLabel(){return this.label?`${this.label}`:"(empty)"}getLength(){return this._length}getArea(){return this._area}}const w=y;var E;const D={ANNOTATION_UPDATED:"annotationUpdated",ANNOTATION_SELECTED:"annotationSelected",ANNOTATION_REMOVED:"annotationRemoved",RELABEL:"relabel",DELETE:"delete"};class b extends s.hC{constructor(e){super(D),this.servicesManager=void 0,this.managedViewers=new Set,this.roiUids=new Set,this.annotations={},this.selectedAnnotation=null,this.pendingFocus=!1,this.servicesManager=e,this._onRoiAdded=this._onRoiAdded.bind(this),this._onRoiModified=this._onRoiModified.bind(this),this._onRoiRemoved=this._onRoiRemoved.bind(this),this._onRoiUpdated=this._onRoiUpdated.bind(this),this._onRoiSelected=this._onRoiSelected.bind(this),this.isROIsVisible=!0}clear(){this.managedViewers.forEach((e=>e.destroy())),this.managedViewers.clear();for(const e in this.annotations)delete this.annotations[e];this.roiUids.clear(),this.selectedAnnotation=null,this.pendingFocus=!1}clearAnnotations(){Object.keys(this.annotations).forEach((e=>{this.removeAnnotation(this.annotations[e])}))}_onRoiAdded(e){const{roiGraphic:t,managedViewer:i,label:n}=e,{studyInstanceUID:r,seriesInstanceUID:o}=i,s=i.getViewState(),a=new w(t,r,o,"",s);if(this.roiUids.add(t.uid),this.annotations[t.uid]=a,a.subscribe(S.LABEL_UPDATED,(()=>{this._broadcastEvent(D.ANNOTATION_UPDATED,a)})),void 0!==n)a.setLabel(n);else{const e=e=>i.updateROIProperties({uid:t.uid,properties:{label:e.label,finding:e.finding}});this.triggerRelabel(a,!0,e)}}_onRoiModified(e){const{roiGraphic:t,managedViewer:i}=e,n=this.getAnnotation(t.uid);n&&(n.setRoiGraphic(t),n.setViewState(i.getViewState()))}_onRoiRemoved(e){const{roiGraphic:t}=e;this.roiUids.delete(t.uid),this.annotations[t.uid].destroy(),delete this.annotations[t.uid],this._broadcastEvent(D.ANNOTATION_REMOVED,t)}_onRoiUpdated(e){const{roiGraphic:t,managedViewer:i}=e;this.synchronizeViewers(i),this._broadcastEvent(D.ANNOTATION_UPDATED,this.getAnnotation(t.uid))}_onRoiSelected(e){const{roiGraphic:t}=e,i=this.getAnnotation(t.uid);i&&i!==this.getSelectedAnnotation()&&(this.selectedAnnotation&&this.clearSelection(),this.selectedAnnotation=i,this._broadcastEvent(D.ANNOTATION_SELECTED,i))}_addManagedViewerSubscriptions(e){e._roiAddedSubscription=e.subscribe(v.ADDED,this._onRoiAdded),e._roiModifiedSubscription=e.subscribe(v.MODIFIED,this._onRoiModified),e._roiRemovedSubscription=e.subscribe(v.REMOVED,this._onRoiRemoved),e._roiUpdatedSubscription=e.subscribe(v.UPDATED,this._onRoiUpdated),e._roiSelectedSubscription=e.subscribe(v.UPDATED,this._onRoiSelected)}_removeManagedViewerSubscriptions(e){e._roiAddedSubscription&&e._roiAddedSubscription.unsubscribe(),e._roiModifiedSubscription&&e._roiModifiedSubscription.unsubscribe(),e._roiRemovedSubscription&&e._roiRemovedSubscription.unsubscribe(),e._roiUpdatedSubscription&&e._roiUpdatedSubscription.unsubscribe(),e._roiSelectedSubscription&&e._roiSelectedSubscription.unsubscribe(),e._roiAddedSubscription=null,e._roiModifiedSubscription=null,e._roiRemovedSubscription=null,e._roiUpdatedSubscription=null,e._roiSelectedSubscription=null}_getManagedViewersForSeries(e,t){return Array.from(this.managedViewers).filter((i=>i.studyInstanceUID===e&&i.seriesInstanceUID===t))}getManagedViewersForStudy(e){return Array.from(this.managedViewers).filter((t=>t.studyInstanceUID===e))}_restoreAnnotations(e){const{studyInstanceUID:t,seriesInstanceUID:i}=e;this.getAnnotationsForSeries(t,i).forEach((t=>{e.addRoiGraphic(t.roiGraphic)}))}addViewer(e,t,i,n,r){const o=new I(e,t,i,n,r);return this._restoreAnnotations(o),e._manager=o,this.managedViewers.add(o),this._addManagedViewerSubscriptions(o),this.pendingFocus&&(this.pendingFocus=!1,this.focusAnnotation(this.selectedAnnotation,t)),o}_potentiallyLoadSR(e,t){const i=s.DicomMetadataStore.getStudy(e),n=t.find((e=>"SM"===e.Modality)),{FrameOfReferenceUID:r,othersFrameOfReferenceUID:o}=n;if(!i)return;let a=r?t.filter((e=>e.ReferencedFrameOfReferenceUID===r||o.includes(e.ReferencedFrameOfReferenceUID))):[];if(!a.length)return;if(a=a.filter((e=>"SR"===e.Modality)),a.some((e=>!0===e.isLoaded)))return;let c=0,d=a[0];a.forEach((e=>{const t=Number(`${e.SeriesDate}${e.SeriesTime}`);t>c&&(c=t,d=e)})),d.isLoading=!0,d.load(n)}removeViewer(e){const t=e._manager;this._removeManagedViewerSubscriptions(t),t.destroy(),this.managedViewers.delete(t)}toggleROIsVisibility(){this.isROIsVisible?this.hideROIs():this.showROIs,this.isROIsVisible=!this.isROIsVisible}hideROIs(){this.managedViewers.forEach((e=>e.hideROIs()))}showROIs(){this.managedViewers.forEach((e=>e.showROIs()))}getAnnotation(e){return this.annotations[e]}getAnnotations(){const e=[];return Object.keys(this.annotations).forEach((t=>{e.push(this.getAnnotation(t))})),e}getAnnotationsForStudy(e){return this.getAnnotations().filter((t=>t.studyInstanceUID===e))}getAnnotationsForSeries(e,t){return this.getAnnotations().filter((i=>i.studyInstanceUID===e&&i.seriesInstanceUID===t))}getSelectedAnnotation(){return this.selectedAnnotation}clearSelection(){this.selectedAnnotation&&this.setROIStyle(this.selectedAnnotation.uid,{stroke:{color:"#00ff00"}}),this.selectedAnnotation=null}selectAnnotation(e){this.selectedAnnotation&&this.clearSelection(),this.selectedAnnotation=e,this._broadcastEvent(D.ANNOTATION_SELECTED,e),this.setROIStyle(e.uid,p.active)}toggleOverviewMap(e){const t=Array.from(this.managedViewers).find((t=>t.viewportId===e));t&&t.toggleOverviewMap()}removeAnnotation(e){const{uid:t,studyInstanceUID:i,seriesInstanceUID:n}=e;Array.from(this.managedViewers).filter((e=>e.studyInstanceUID===i&&e.seriesInstanceUID===n)).forEach((e=>e.removeRoiGraphic(t))),this.annotations[t]&&(this.roiUids.delete(t),this.annotations[t].destroy(),delete this.annotations[t],this._broadcastEvent(D.ANNOTATION_REMOVED,e))}focusAnnotation(e,t){const i=Array.from(this.managedViewers).find((e=>e.viewportId===t));i?i.setViewStateByExtent(e):this.pendingFocus=!0}synchronizeViewers(e){const{studyInstanceUID:t,seriesInstanceUID:i}=e,n=this._getManagedViewersForSeries(t,i);n.forEach((e=>this._removeManagedViewerSubscriptions(e))),n.forEach((n=>{if(n===e)return;const r=this.getAnnotationsForSeries(t,i);n.clearRoiGraphics(),r.forEach((e=>{n.addRoiGraphic(e.roiGraphic)}))})),n.forEach((e=>this._addManagedViewerSubscriptions(e)))}activateInteractions(e){this.managedViewers.forEach((t=>t.activateInteractions(e))),this.activeInteractions=e}getActiveInteractions(){return this.activeInteractions}triggerRelabel(e,t=!1,i){i||(i=({label:t})=>this.managedViewers.forEach((i=>i.updateROIProperties({uid:e.uid,properties:{label:t}})))),this._broadcastEvent(D.RELABEL,{roiAnnotation:e,deleteCallback:()=>this.removeAnnotation(e),successCallback:i,newAnnotation:t})}triggerDelete(e){this._broadcastEvent(D.DELETE,e)}setROIStyle(e,t){this.managedViewers.forEach((i=>i.setROIStyle(e,t)))}getAllManagedViewers(){return Array.from(this.managedViewers)}}E=b,b.REGISTRATION=e=>({name:"microscopyService",altName:"MicroscopyService",create:({configuration:t={}})=>new E(e)});var O=i(67540);function R({uiDialogService:e,title:t="Annotation",defaultValue:i="",callback:n=(e,t)=>{}}){const s="microscopy-input-dialog",a=({action:t,value:i})=>{switch(t.id){case"save":n(i.value,t.id);break;case"cancel":n("",t.id)}e.dismiss({id:s})};e&&e.create({id:s,centralize:!0,isDraggable:!1,showOverlay:!0,content:o.Vq,contentProps:{title:t,value:{value:i},noCloseButton:!0,onClose:()=>e.dismiss({id:s}),actions:[{id:"cancel",text:"Cancel",type:o.LZ.dt.secondary},{id:"save",text:"Save",type:o.LZ.dt.primary}],onSubmit:a,body:({value:e,setValue:t})=>r.createElement(o.II,{label:"Enter your annotation",labelClassName:"text-white text-[14px] leading-[1.2]",autoFocus:!0,className:"border-primary-main bg-black",type:"text",value:e.defaultValue,onChange:e=>{e.persist(),t((t=>({...t,value:e.target.value})))},onKeyPress:t=>{"Enter"===t.key&&a({value:e,action:{id:"save"}})}})}})}const{datasetToBuffer:A}=O.default.data,M=(e,t)=>{let i=1;if("km"==t||!t&&e>1e6)t="km",i=1e-6;else if("m"==t||!t&&e>1e3)t="m",i=.001;else if("μm"==t||!t&&e<1)t="μm",i=1e3;else{if(t&&"mm"!=t)throw new Error(`Unknown length unit ${t}`);t="mm"}return`${(e*i).toFixed(2)} ${t}`};const _=(0,a.Zh)(["MicroscopyTable","Common"])((function(e){const{microscopyService:t}=e.servicesManager.services,[i,n]=(0,r.useState)(null),[s,a]=(0,r.useState)([]),[c,d]=(0,r.useState)(null),{servicesManager:l,extensionManager:u}=e,{uiDialogService:h,displaySetService:m}=l.services;(0,r.useEffect)((()=>{const t=e.viewports.get(e.activeViewportId);if(t?.displaySetInstanceUIDs[0]){const e=m.getDisplaySetByUID(t.displaySetInstanceUIDs[0]);e&&n(e.StudyInstanceUID)}}),[e.viewports,e.activeViewportId]),(0,r.useEffect)((()=>{const e=()=>{const e=t.getAnnotationsForStudy(i);a(e)},n=()=>{const e=t.getSelectedAnnotation();d(e)},{unsubscribe:r}=t.subscribe(D.ANNOTATION_UPDATED,e),{unsubscribe:o}=t.subscribe(D.ANNOTATION_SELECTED,n),{unsubscribe:s}=t.subscribe(D.ANNOTATION_REMOVED,(()=>{e()}));return e(),n(),()=>{r(),o(),s()}}),[i]);const p=s.map(((e,t)=>{const i=e.getDetailedLabel(),n=e.getArea(),r=e.getLength(),o=e.roiGraphic.properties.shortAxisLength,s=c===e,{uid:a}=e,d=[];return void 0!==n?d.push((e=>{let t=1,i="mm";return e>1e6?(i="m",t=1e-6):e<1&&(i="μm",t=1e6),`${(e*t).toFixed(2)} ${i}²`})(n)):void 0!==r&&d.push(o?`${M(r,"μm")} x ${M(o,"μm")}`:`${M(r,"μm")}`),{uid:a,index:t,label:i,isActive:s,displayText:d,roiAnnotation:e}}));return r.createElement(r.Fragment,null,r.createElement("div",{className:"ohif-scrollbar overflow-y-auto overflow-x-hidden","data-cy":"measurements-panel"},r.createElement(o.wt,{title:"Measurements",servicesManager:e.servicesManager,data:p,onClick:({uid:i})=>{const n=t.getAnnotation(i);t.selectAnnotation(n),t.focusAnnotation(n,e.activeViewportId)},onEdit:({uid:t,isActive:i})=>{e.commandsManager.runCommand("setLabel",{uid:t},"MICROSCOPY")},onDelete:({uid:e,isActive:i})=>{const n=t.getAnnotation(e);t.removeAnnotation(n)}})))})),U=_;const{utils:V}=s.default,C="1.2.840.10008.5.1.4.1.1.77.1.6";function N({servicesManager:e,extensionManager:t}){return{name:"DicomMicroscopySopClassHandler",sopClassUids:[C],getDisplaySetsFromSeries:e=>function(e,t,i){if(!e||!e.length)throw new Error("No instances were provided");const n=e[0];let r=n,o=+r.NumberOfFrames||1;for(const t of e){const e=+t.NumberOfFrames||1;e<o&&(r=t,o=e)}let s=null;r&&(1==o&&(s=r.imageId),!s)&&(s=i.getActiveDataSource()[0].getImageIdsForInstance({instance:r,thumbnail:!0}));const{FrameOfReferenceUID:a,SeriesDescription:c,ContentDate:d,ContentTime:l,SeriesNumber:u,StudyInstanceUID:h,SeriesInstanceUID:m,SOPInstanceUID:p,SOPClassUID:g}=n,v=(e=e.map((e=>(e.FrameOfReferenceUID=n.FrameOfReferenceUID,e)))).filter((e=>e)).map((e=>e.FrameOfReferenceUID)).filter(((e,t,i)=>i.indexOf(e)===t));return v.length>1&&console.warn("Expected FrameOfReferenceUID of difference instances within a series to be the same, found multiple different values",v),[{plugin:"microscopy",Modality:"SM",altImageText:"Microscopy",displaySetInstanceUID:V.guid(),SOPInstanceUID:p,SeriesInstanceUID:m,StudyInstanceUID:h,FrameOfReferenceUID:a,SOPClassHandlerId:"@ohif/extension-dicom-microscopy.sopClassHandlerModule.DicomMicroscopySopClassHandler",SOPClassUID:g,SeriesDescription:c||"Microscopy Data",SeriesDate:d,SeriesTime:l,SeriesNumber:u,firstInstance:r,instance:n,numImageFrames:0,numInstances:1,imageIdForThumbnail:s,others:e,othersFrameOfReferenceUID:v}]}(e,0,t)}}const T={IMAGING_MEASUREMENTS:"126010",MEASUREMENT_GROUP:"125007",IMAGE_REGION:"111030",FINDING:"121071",TRACKING_UNIQUE_IDENTIFIER:"112039",LENGTH:"410668003",AREA:"42798000",SHORT_AXIS:"G-A186",LONG_AXIS:"G-A185",ELLIPSE_AREA:"G-D7FE"};function L(e){return Array.isArray(e)?e:[e]}var P=i(3094);const F=O.default.adapters.DICOMMicroscopyViewer.MeasurementReport;async function x(e,t,i){const n=t.metadata,{StudyInstanceUID:r,FrameOfReferenceUID:o}=i,s=e.getManagedViewersForStudy(r);if(!s||!s.length)return;t.isLoaded=!0;const{rois:a,labels:c}=await async function(e,t){const i=F.generateToolState(e),n=Object.getOwnPropertyNames(i);await import(P.default.getImportPath());const r=window.dicomMicroscopyViewer,o=function(e){const{ContentSequence:t}=e,i=L(t.find((e=>e.ConceptNameCodeSequence.CodeValue===T.IMAGING_MEASUREMENTS)).ContentSequence).filter((e=>e.ConceptNameCodeSequence.CodeValue===T.MEASUREMENT_GROUP));return i}(e),s=[],a=[];return n.forEach((e=>{const n=i[e];let c;const d=e.toUpperCase(),l=o.filter((e=>L(e.ContentSequence).find((e=>e.ConceptNameCodeSequence.CodeValue===T.IMAGE_REGION)).GraphicType===d));n.forEach(((i,n)=>{const o={},d={coordinates:i,frameOfReferenceUID:t};if("Polygon"===e)c=new r.scoord3d.Polygon(d);else if("Polyline"===e)c=new r.scoord3d.Polyline(d);else if("Point"===e)c=new r.scoord3d.Point(d);else{if("Ellipse"!==e)throw new Error("Unsupported tool type");c=new r.scoord3d.Ellipse(d)}const u=l[n],h=L(u.ContentSequence).find((e=>e.ConceptNameCodeSequence.CodeValue===T.FINDING)),m=L(u.ContentSequence).find((e=>e.ConceptNameCodeSequence.CodeValue===T.TRACKING_UNIQUE_IDENTIFIER));if(m){const e=/\(([^)]+)\)/.exec(m.TextValue);e&&e[1]&&(o.presentationState=JSON.parse(e[1]),o.marker=o.presentationState.marker)}let p=L(u.ContentSequence).filter((e=>[T.LENGTH,T.AREA,T.SHORT_AXIS,T.LONG_AXIS,T.ELLIPSE_AREA].includes(e.ConceptNameCodeSequence.CodeValue))),g=L(u.ContentSequence).filter((e=>[T.TRACKING_UNIQUE_IDENTIFIER].includes(e.ConceptNameCodeSequence.CodeValue)));g=g.map((e=>{const t={...e};return t.ConceptNameCodeSequence=L(t.ConceptNameCodeSequence),t})),p=p.map((e=>{const t={...e};return t.ConceptNameCodeSequence=L(t.ConceptNameCodeSequence),t})),p&&p.length&&(o.measurements=p,console.log("[SR] retrieving measurements...",p)),g&&g.length&&(o.evaluations=g,console.log("[SR] retrieving evaluations...",g));const v=new r.roi.ROI({scoord3d:c,properties:o});s.push(v),h?a.push(h.ConceptCodeSequence.CodeValue):a.push("")}))})),{rois:s,labels:a}}(n,o),d=s[0];for(let e=0;e<a.length;e++){const t=a[e];t[Object.getOwnPropertySymbols(t).find((e=>"properties"===e.description))].evaluations=[],d.addRoiGraphicWithLabel(t,c[e])}}const{utils:G}=s.default,k="1.2.840.10008.5.1.4.1.1.88.34";function q(e,t,i){if(!e||!e.length)throw new Error("No instances were provided");const{displaySetService:n,microscopyService:r}=t.services,o=e[0],a=s.DicomMetadataStore.getSeries(o.StudyInstanceUID,o.SeriesInstanceUID).instances[0],c=function(e){const{ContentSequence:t}=e,i=L(t.find((e=>e.ConceptNameCodeSequence.CodeValue===T.IMAGING_MEASUREMENTS)).ContentSequence).find((e=>e.ConceptNameCodeSequence.CodeValue===T.MEASUREMENT_GROUP));return L(i.ContentSequence).find((e=>e.ConceptNameCodeSequence.CodeValue===T.IMAGE_REGION)).ReferencedFrameOfReferenceUID}(a),{FrameOfReferenceUID:d,SeriesDescription:l,ContentDate:u,ContentTime:h,SeriesNumber:m,StudyInstanceUID:p,SeriesInstanceUID:g,SOPInstanceUID:v,SOPClassUID:f}=o,I={plugin:"microscopy",Modality:"SR",altImageText:"Microscopy SR",displaySetInstanceUID:G.guid(),SOPInstanceUID:v,SeriesInstanceUID:g,StudyInstanceUID:p,ReferencedFrameOfReferenceUID:c,SOPClassHandlerId:"@ohif/extension-dicom-microscopy.sopClassHandlerModule.DicomMicroscopySRSopClassHandler",SOPClassUID:f,SeriesDescription:l,SeriesDate:u,SeriesTime:h,SeriesNumber:m,instance:o,metadata:a,isDerived:!0,isLoading:!1,isLoaded:!1,loadError:!1,load:function(e){return x(r,I,e).catch((e=>{throw I.isLoaded=!1,I.loadError=!0,new Error(e)}))}};return I.getSourceDisplaySet=function(){let e=[];return s.DicomMetadataStore.getStudy(p).series.forEach((t=>{const i=n.getDisplaySetsForSeries(t.SeriesInstanceUID);e=e.concat(i)})),function(e,t){const{ReferencedFrameOfReferenceUID:i}=t,n=e.filter((e=>e.displaySetInstanceUID!==t.displaySetInstanceUID)),r=n.find((e=>"SM"===e.Modality&&(e.FrameOfReferenceUID===i||e.othersFrameOfReferenceUID.includes(i))));return!r&&n.length>=1?(console.warn("No display set with FrameOfReferenceUID",i,"single series, assuming data error, defaulting to only series."),n.find((e=>"SM"===e.Modality))):r}(e,I)},[I]}function H({servicesManager:e,extensionManager:t}){return{name:"DicomMicroscopySRSopClassHandler",sopClassUids:[k],getDisplaySetsFromSeries:t=>q(t,e)}}var j=i(7023),B=i(8324),$=i.n(B);function z(){return z=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var n in i)({}).hasOwnProperty.call(i,n)&&(e[n]=i[n])}return e},z.apply(null,arguments)}const W=r.lazy((()=>Promise.resolve().then(i.bind(i,3094)))),Z=e=>r.createElement(r.Suspense,{fallback:r.createElement("div",null,"Loading...")},r.createElement(W,e)),Y={id:n,async preRegistration({servicesManager:e}){e.registerService(b.REGISTRATION(e))},getViewportModule:({servicesManager:e,extensionManager:t,commandsManager:i})=>[{name:"microscopy-dicom",component:n=>{const{viewportOptions:s}=n,[a,c]=(0,o.O_)(),{activeViewportId:d}=a,l=(0,r.useMemo)((()=>n.displaySets.map((e=>e.displaySetInstanceUID)).join("-")),[n.displaySets]),u=$()((()=>{const{microscopyService:t}=e.services,i=t.getAllManagedViewers();i&&i.length>0&&i[0].viewer.resize()}),100),{ref:h}=(0,j.N)({onResize:u,handleHeight:!0,handleWidth:!0});return r.createElement(Z,z({key:l,servicesManager:e,extensionManager:t,commandsManager:i,activeViewportId:d,setViewportActive:e=>{c.setActiveViewportId(e)},viewportData:s,resizeRef:h},n))}}],getToolbarModule:({servicesManager:e})=>[{name:"evaluate.microscopyTool",evaluate:({button:t})=>{const{microscopyService:i}=e.services,n=i.getActiveInteractions();if(!n)return!1;const r=n.find((e=>{if(!e[1].bindings.mouseButtons.includes("left"))return!1;return"draw"!==e[0]?e[0]===t.id:e[1].geometryType===t.id}));return{disabled:!1,className:r?"!text-black bg-primary-light":"!text-common-bright hover:!bg-primary-dark hover:!text-primary-light",isActive:r}}}],getSopClassHandlerModule:({servicesManager:e,commandsManager:t,extensionManager:i})=>[N({servicesManager:e,extensionManager:i}),H({servicesManager:e,extensionManager:i})],getPanelModule:function({commandsManager:e,extensionManager:t,servicesManager:i}){return[{name:"measure",iconName:"tab-linear",iconLabel:"Measure",label:"Measurements",secondaryLabel:"Measurements",component:()=>{const[{activeViewportId:n,viewports:s}]=(0,o.O_)();return r.createElement(U,{viewports:s,activeViewportId:n,onSaveComplete:()=>{},onRejectComplete:()=>{},commandsManager:e,servicesManager:i,extensionManager:t})}}]},getCommandsModule:function({servicesManager:e,commandsManager:t,extensionManager:i}){const{viewportGridService:n,uiDialogService:r,microscopyService:o}=e.services,s={deleteMeasurement:({uid:e})=>{if(e){const t=o.getAnnotation(e);t&&o.removeAnnotation(t)}},setLabel:({uid:e})=>{const t=o.getAnnotation(e);R({uiDialogService:r,defaultValue:"",callback:(e,i)=>{if("save"===i)t.setLabel(e),o.triggerRelabel(t)}})},setToolActive:({toolName:e,toolGroupId:t="MICROSCOPY"})=>{const i=["dragPan",{bindings:{mouseButtons:["middle"]}}],n=["dragZoom",{bindings:{mouseButtons:["right"]}}];if(["line","box","circle","point","polygon","freehandpolygon","freehandline"].indexOf(e)>=0){const t={geometryType:e,vertexEnabled:!0,styleOptions:p.default,bindings:{mouseButtons:["left"]}};"line"===e?(t.minPoints=2,t.maxPoints=2):"point"===e&&(delete t.styleOptions,delete t.vertexEnabled),o.activateInteractions([["draw",t],i,n])}else"dragPan"==e?o.activateInteractions([["dragPan",{bindings:{mouseButtons:["left","middle"]}}],n]):o.activateInteractions([[e,{bindings:{mouseButtons:["left"]}}],i,n])},toggleOverlays:()=>{const e=document.getElementsByClassName("microscopy-viewport-overlay");let t=!1;for(let i=0;i<e.length;i++)0===i&&(t=e.item(0).classList.contains("hidden")),e.item(i).classList.toggle("hidden");const{activeViewportId:i}=n.getState();o.toggleOverviewMap(i)},toggleAnnotations:()=>{o.toggleROIsVisibility()}};return{actions:s,definitions:{deleteMeasurement:{commandFn:s.deleteMeasurement},setLabel:{commandFn:s.setLabel},setToolActive:{commandFn:s.setToolActive},toggleOverlays:{commandFn:s.toggleOverlays},toggleAnnotations:{commandFn:s.toggleAnnotations}},defaultContext:"MICROSCOPY"}}},J=Y}}]);
//# sourceMappingURL=552.bundle.87999c32ad28548bbb75.js.map