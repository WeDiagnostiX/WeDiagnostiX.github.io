{"version":3,"file":"170.bundle.6ec60df541c9b4361a89.js","mappings":"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","sources":["webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/VideoViewport.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/addImageSlicesToViewports.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/addVolumesToViewports.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/colors/colormap.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/drawImageSync.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/calculateTransform.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/canvasToPixel.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/correctShift.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/getDefaultViewport.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/getImageFitScale.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/getImageSize.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/getTransform.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/pixelToCanvas.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/resetCamera.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/resize.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/fitToWindow.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/createVolumeActor.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/setDefaultVolumeVOI.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/vtkClasses/vtkSharedVolumeMapper.js","webpack:///../../../node_modules/@cornerstonejs/core/src/Settings.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/cache/cache.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/constants/epsilon.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/constants/rendering.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/enums/RequestType.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/enums/ViewportStatus.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/enums/BlendModes.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/enums/GeometryType.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/enums/DynamicOperatorType.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/enums/CalibrationTypes.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/getEnabledElement.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/loaders/imageLoader.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/loaders/volumeLoader.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/requestPool/imageLoadPoolManager.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/requestPool/requestPoolManager.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/utilities/cacheUtils.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/utilities/colormap.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/utilities/createLinearRGBTransferFunction.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/utilities/getImageSliceDataForVolumeViewport.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/utilities/transferFunctionUtils.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/utilities/transformWorldToIndex.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/utilities/triggerEvent.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/webWorkerManager/webWorkerManager.js","webpack:///../../../node_modules/@cornerstonejs/tools/src/cursors/SVGCursorDescriptor.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/tools/annotation/BidirectionalTool.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/tools/base/AnnotationTool.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/tools/displayTools/Labelmap/labelmapConfig.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/tools/segmentation/RectangleROIThresholdTool.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/tools/segmentation/RectangleROIStartEndThresholdTool.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/annotationFrameRange.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/annotationHydration.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/boundingBox/getBoundingBoxAroundShape.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/calibrateImageSpacing.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/cine/events.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/cine/playClip.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/clip.js","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/contourSegmentation/addContourSegmentationAnnotation.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/contourSegmentation/removeContourSegmentationAnnotation.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/contours/calculatePerimeter.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/contours/findHandlePolylineIndex.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/contours/generateContourSetsFromLabelmap.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/contours/AnnotationToPointData.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/contours/getContourHolesDataCanvas.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/contours/getContourHolesDataWorld.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/contours/updateContourPolyline.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/debounce.js","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/drawing/getTextBoxCoordsCanvas.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/getCalibratedUnits.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/getSphereBoundsInfo.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/getViewportForAnnotation.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/index.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/isObject.js","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/aabb/intersectAABB.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/aabb/distanceToPointSquared.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/aabb/distanceToPoint.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/basic/Calculator.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/basic/BasicStatsCalculator.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/ellipse/pointInEllipse.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/ellipse/getCanvasEllipseCorners.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/line/distanceToPointSquaredInfo.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/line/distanceToPointSquared.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/line/distanceToPoint.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/line/intersectLine.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/line/isPointOnLineSegment.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/point/distanceToPoint.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/point/distanceToPointSquared.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/point/mirror.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/isClosed.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/containsPoint.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/containsPoints.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/getArea.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/getSignedArea.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/getWindingDirection.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/getNormal3.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/getNormal2.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/areLineSegmentsIntersecting.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/getLineSegmentIntersectionsIndexes.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/getLinesIntersection.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/combinePolyline.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/getFirstLineSegmentIntersectionIndexes.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/intersectPolyline.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/decimate.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/getLineSegmentIntersectionsCoordinates.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/getClosestLineSegmentIntersection.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/getSubPixelSpacingAndXYDirections.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/pointsAreWithinCloseContourProximity.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/addCanvasPointsToArray.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/pointCanProjectOnLine.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/projectTo2D.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/isPointInsidePolyline3D.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/rectangle/distanceToPoint.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/sphere/pointInSphere.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/vec2/liangBarksyClip.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/planar/index.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/planarFreehandROITool/index.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/pointInShapeCallback.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/pointInSurroundingSphereCallback.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/pointToString.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/polyData/utils.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/rectangleROITool/isAxisAlignedRectangle.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/scroll.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/segmentation/InterpolationManager/InterpolationManager.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/segmentation/contourAndFindLargestBidirectional.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/segmentation/createImageIdReferenceMap.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/segmentation/floodFill.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/segmentation/getHoveredContourSegmentationAnnotation.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/segmentation/getSegmentAtLabelmapBorder.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/segmentation/getSegmentAtWorldPoint.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/segmentation/invalidateBrushCursor.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/segmentation/utilities.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/throttle.js","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/touch/index.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/triggerAnnotationRenderForToolGroupIds.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/viewport/isViewportPreScaled.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/viewport/jumpToWorld.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/viewportFilters/filterViewportsWithToolEnabled.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/viewportFilters/filterViewportsWithParallelNormals.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/viewportFilters/getViewportIdsWithToolToRender.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/viewportFilters/filterViewportsWithFrameOfReferenceUID.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/vec3/interpolateVec3.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/voi/colorbar/ColorbarCanvas.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/voi/colorbar/Colorbar.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/voi/colorbar/ViewportColorbar.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/voi/colorbar/enums/ColorbarRangeTextPosition.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/voi/windowlevel/getLuminanceFromRegion.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/voi/windowlevel/calculateMinMaxMean.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/voi/windowlevel/extractWindowLevelRegionToolData.ts","webpack:///../../../node_modules/@icr/polyseg-wasm/dist/ICRPolySeg.js","webpack:///../../../node_modules/@icr/polyseg-wasm/dist/index.js","webpack:///../../../node_modules/@kitware/vtk.js/Filters/General/ContourLoopExtraction.js","webpack:///../../../node_modules/@cornerstonejs/tools/src/workers/polySegConverters.js","webpack:///../../../node_modules/@kitware/vtk.js/Common/DataModel/ImageData.js","webpack:///../../../node_modules/@kitware/vtk.js/Common/DataModel/PiecewiseFunction.js","webpack:///../../../node_modules/@kitware/vtk.js/Common/DataModel/Plane.js","webpack:///../../../node_modules/@kitware/vtk.js/Filters/General/ImageMarchingSquares.js","webpack:///../../../node_modules/@kitware/vtk.js/Rendering/Core/Camera.js","webpack:///../../../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction.js","webpack:///../../../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps.js","webpack:///../../../node_modules/@kitware/vtk.js/Rendering/Core/ImageMapper.js","webpack:///../../../node_modules/@kitware/vtk.js/Rendering/Core/ImageSlice.js","webpack:///../../../node_modules/@kitware/vtk.js/Rendering/Core/Volume.js","webpack:///../../../node_modules/comlink/dist/esm/comlink.mjs","webpack:///../../../node_modules/d3-array/src/bisector.js"],"sourcesContent":["import { vec3 } from 'gl-matrix';\nimport {\n  Events as EVENTS,\n  VideoEnums as VideoViewportEnum,\n  MetadataModules,\n} from '../enums';\nimport type {\n  IVideoViewport,\n  VideoViewportProperties,\n  Point3,\n  Point2,\n  ICamera,\n  InternalVideoCamera,\n  VideoViewportInput,\n  VOIRange,\n  ICanvasActor,\n  IImage,\n  ViewReferenceSpecifier,\n  ViewReference,\n  ReferenceCompatibleOptions,\n  ImageSetOptions,\n} from '../types';\nimport * as metaData from '../metaData';\nimport { Transform } from './helpers/cpuFallback/rendering/transform';\nimport { triggerEvent } from '../utilities';\nimport Viewport from './Viewport';\nimport { getOrCreateCanvas } from './helpers';\nimport CanvasActor from './CanvasActor';\nimport cache from '../cache';\n\n/**\n * A data type for the scalar data for video data.\n */\nexport type CanvasScalarData = Uint8ClampedArray & {\n  frameNumber?: number;\n  getRange?: () => [number, number];\n};\n\n/**\n * An object representing a single stack viewport, which is a camera\n * looking into an internal scene, and an associated target output `canvas`.\n */\nclass VideoViewport extends Viewport implements IVideoViewport {\n  public static frameRangeExtractor = /(\\/frames\\/|[&?]frameNumber=)([^/&?]*)/i;\n\n  public modality;\n  // Viewport Data\n  protected imageId: string;\n  readonly uid;\n  readonly renderingEngineId: string;\n  readonly canvasContext: CanvasRenderingContext2D;\n  private videoElement?: HTMLVideoElement;\n  private videoWidth = 0;\n  private videoHeight = 0;\n\n  private loop = true;\n  private mute = true;\n  private isPlaying = false;\n  private scrollSpeed = 1;\n  private playbackRate = 1;\n  private scalarData: CanvasScalarData;\n\n  /**\n   * This is used to pause initially so that we get at least one render to allow\n   * navigating frames.  Otherwise the viewport is blank initially until the user\n   * hits play manually.\n   */\n  private initialRender: () => void;\n\n  /**\n   * The range is the set of frames to play\n   */\n  private frameRange: [number, number] = [0, 0];\n\n  protected metadata;\n\n  /**\n   * The fps, frames per second is used to calculate time/frame mapping values.\n   * It is provided by the CINE Module in the metadata, defaulting to 30 if not\n   * provided.\n   */\n  private fps = 30;\n\n  /** The number of frames in the video */\n  private numberOfFrames: number;\n\n  private videoCamera: InternalVideoCamera = {\n    panWorld: [0, 0],\n    parallelScale: 1,\n  };\n\n  /**\n   * feFilter is an inline string value for the CSS filter on the video\n   * CSS filters can reference SVG filters, so for the typical use case here\n   * the CSS filter is actually an link link to a SVG filter.\n   */\n  private feFilter: string;\n\n  /**\n   * An average white point value, used to color balance the image so that\n   * the given white is mapped to [255,255,255] via multiplication per channel.\n   */\n  private averageWhite: [number, number, number];\n\n  /**\n   * The VOI Range is used to apply contrast/brightness adjustments to the image.\n   */\n  private voiRange: VOIRange = {\n    lower: 0,\n    upper: 255,\n  };\n\n  constructor(props: VideoViewportInput) {\n    super({\n      ...props,\n      canvas: props.canvas || getOrCreateCanvas(props.element),\n    });\n    this.canvasContext = this.canvas.getContext('2d');\n    this.renderingEngineId = props.renderingEngineId;\n\n    this.element.setAttribute('data-viewport-uid', this.id);\n    this.element.setAttribute(\n      'data-rendering-engine-uid',\n      this.renderingEngineId\n    );\n\n    this.videoElement = document.createElement('video');\n    this.videoElement.muted = this.mute;\n    this.videoElement.loop = this.loop;\n    this.videoElement.autoplay = true;\n    this.videoElement.crossOrigin = 'anonymous';\n\n    this.addEventListeners();\n    this.resize();\n  }\n\n  public static get useCustomRenderingPipeline() {\n    return true;\n  }\n\n  private addEventListeners() {\n    this.canvas.addEventListener(\n      EVENTS.ELEMENT_DISABLED,\n      this.elementDisabledHandler\n    );\n  }\n\n  private removeEventListeners() {\n    this.canvas.removeEventListener(\n      EVENTS.ELEMENT_DISABLED,\n      this.elementDisabledHandler\n    );\n  }\n\n  private elementDisabledHandler() {\n    this.removeEventListeners();\n    this.videoElement.remove();\n  }\n\n  public getImageDataMetadata(image: IImage | string) {\n    const imageId = typeof image === 'string' ? image : image.imageId;\n    const imagePlaneModule = metaData.get(MetadataModules.IMAGE_PLANE, imageId);\n\n    let rowCosines = <Point3>imagePlaneModule.rowCosines;\n    let columnCosines = <Point3>imagePlaneModule.columnCosines;\n\n    // if null or undefined\n    if (rowCosines == null || columnCosines == null) {\n      rowCosines = <Point3>[1, 0, 0];\n      columnCosines = <Point3>[0, 1, 0];\n    }\n\n    const rowCosineVec = vec3.fromValues(\n      rowCosines[0],\n      rowCosines[1],\n      rowCosines[2]\n    );\n    const colCosineVec = vec3.fromValues(\n      columnCosines[0],\n      columnCosines[1],\n      columnCosines[2]\n    );\n\n    const { rows, columns } = imagePlaneModule;\n    const scanAxisNormal = vec3.create();\n    vec3.cross(scanAxisNormal, rowCosineVec, colCosineVec);\n\n    let origin = imagePlaneModule.imagePositionPatient;\n    // if null or undefined\n    if (origin == null) {\n      origin = [0, 0, 0];\n    }\n\n    const xSpacing = imagePlaneModule.columnPixelSpacing || 1;\n    const ySpacing = imagePlaneModule.rowPixelSpacing || 1;\n    const xVoxels = imagePlaneModule.columns;\n    const yVoxels = imagePlaneModule.rows;\n\n    const zSpacing = 1;\n    const zVoxels = 1;\n\n    this.hasPixelSpacing = !!imagePlaneModule.columnPixelSpacing;\n    return {\n      bitsAllocated: 8,\n      numComps: 3,\n      origin,\n      rows,\n      columns,\n      direction: [...rowCosineVec, ...colCosineVec, ...scanAxisNormal],\n      dimensions: [xVoxels, yVoxels, zVoxels],\n      spacing: [xSpacing, ySpacing, zSpacing],\n      hasPixelSpacing: this.hasPixelSpacing,\n      numVoxels: xVoxels * yVoxels * zVoxels,\n      imagePlaneModule,\n    };\n  }\n\n  /**\n   * This is a wrapper for setVideo to allow generic behaviour\n   *\n   * @param _groupId - the id for the overall set of image ids.  Unused for video viewport.\n   * @param imageIds - a singleton list containing the imageId of a video.\n   */\n  public setDataIds(imageIds: string[], options?: ImageSetOptions) {\n    this.setVideo(\n      imageIds[0],\n      (options?.viewReference?.sliceIndex as number) || 1\n    );\n  }\n\n  /**\n   * Sets the video image id to show and hte frame number.\n   * Requirements are to have the imageUrlModule in the metadata\n   * with the rendered endpoint being the raw video in video/mp4 format.\n   */\n  public setVideo(imageId: string, frameNumber?: number): Promise<unknown> {\n    this.imageId = Array.isArray(imageId) ? imageId[0] : imageId;\n    const imageUrlModule = metaData.get(MetadataModules.IMAGE_URL, imageId);\n    if (!imageUrlModule?.rendered) {\n      throw new Error(\n        `Video Image ID ${imageId} does not have a rendered video view`\n      );\n    }\n    const { rendered } = imageUrlModule;\n    const generalSeries = metaData.get(MetadataModules.GENERAL_SERIES, imageId);\n    this.modality = generalSeries?.Modality;\n    this.metadata = this.getImageDataMetadata(imageId);\n    let { cineRate, numberOfFrames } = metaData.get(\n      MetadataModules.CINE,\n      imageId\n    );\n    this.numberOfFrames = numberOfFrames;\n\n    return this.setVideoURL(rendered).then(() => {\n      if (!numberOfFrames || numberOfFrames === 1) {\n        numberOfFrames = Math.round(\n          this.videoElement.duration * (cineRate || 30)\n        );\n      }\n      if (!cineRate) {\n        cineRate = Math.round(numberOfFrames / this.videoElement.duration);\n      }\n      this.fps = cineRate;\n      this.numberOfFrames = numberOfFrames;\n      // 1 based range setting\n      this.setFrameRange([1, numberOfFrames]);\n      // The initial render allows us to set the frame position - rendering needs\n      // to start already playing\n      this.initialRender = () => {\n        this.initialRender = null;\n        this.pause();\n        this.setFrameNumber(frameNumber || 1);\n      };\n\n      // This is ugly, but without it, the video often fails to render initially\n      // so having a play, followed by a pause fixes things.\n      // 25 ms is a tested value that seems to work to prevent exceptions\n      return new Promise((resolve) => {\n        window.setTimeout(() => {\n          this.setFrameNumber(frameNumber || 1);\n          resolve(this);\n        }, 25);\n      });\n    });\n  }\n\n  public async setVideoURL(videoURL: string) {\n    return new Promise((resolve) => {\n      this.videoElement.src = videoURL;\n      this.videoElement.preload = 'auto';\n\n      const loadedMetadataEventHandler = () => {\n        this.videoWidth = this.videoElement.videoWidth;\n        this.videoHeight = this.videoElement.videoHeight;\n        this.videoElement.removeEventListener(\n          'loadedmetadata',\n          loadedMetadataEventHandler\n        );\n\n        this.refreshRenderValues();\n\n        resolve(true);\n      };\n\n      this.videoElement.addEventListener(\n        'loadedmetadata',\n        loadedMetadataEventHandler\n      );\n    });\n  }\n\n  /**\n   * Gets all the image ids associated with this video element.  This will\n   * have # of frames elements.\n   */\n  public getImageIds(): string[] {\n    const imageIds = new Array<string>(this.numberOfFrames);\n    const baseImageId = this.imageId.replace(/[0-9]+$/, '');\n    for (let i = 0; i < this.numberOfFrames; i++) {\n      imageIds[i] = `${baseImageId}${i + 1}`;\n    }\n    return imageIds;\n  }\n\n  public togglePlayPause(): boolean {\n    if (this.isPlaying) {\n      this.pause();\n      return false;\n    } else {\n      this.play();\n      return true;\n    }\n  }\n\n  public async play() {\n    try {\n      if (!this.isPlaying) {\n        // Play returns a promise that is true when playing completes.\n        await this.videoElement.play();\n        this.isPlaying = true;\n        this.renderWhilstPlaying();\n      }\n    } catch (e) {\n      // No-op, an exception sometimes gets thrown on the initial play, not\n      // quite sure why.  Catching it prevents displaying an error\n    }\n  }\n\n  public async pause() {\n    try {\n      await this.videoElement.pause();\n      this.isPlaying = false;\n    } catch (e) {\n      // No-op - sometimes this happens on startup\n    }\n  }\n\n  public async scroll(delta = 1) {\n    await this.pause();\n\n    const videoElement = this.videoElement;\n    const renderFrame = this.renderFrame;\n\n    const currentTime = videoElement.currentTime;\n    const newTime = currentTime + (delta * this.scrollSpeed) / this.fps;\n\n    videoElement.currentTime = newTime;\n\n    // Need to wait for seek update\n    const seekEventListener = (evt) => {\n      renderFrame();\n\n      videoElement.removeEventListener('seeked', seekEventListener);\n    };\n\n    videoElement.addEventListener('seeked', seekEventListener);\n  }\n\n  public async start() {\n    const videoElement = this.videoElement;\n    const renderFrame = this.renderFrame;\n\n    videoElement.currentTime = 0;\n\n    if (videoElement.paused) {\n      // Need to wait for seek update\n      const seekEventListener = (evt) => {\n        renderFrame();\n\n        videoElement.removeEventListener('seeked', seekEventListener);\n      };\n\n      videoElement.addEventListener('seeked', seekEventListener);\n    }\n  }\n\n  public async end() {\n    const videoElement = this.videoElement;\n    const renderFrame = this.renderFrame;\n\n    videoElement.currentTime = videoElement.duration;\n\n    if (videoElement.paused) {\n      // Need to wait for seek update\n      const seekEventListener = (evt) => {\n        renderFrame();\n\n        videoElement.removeEventListener('seeked', seekEventListener);\n      };\n\n      videoElement.addEventListener('seeked', seekEventListener);\n    }\n  }\n\n  public async setTime(timeInSeconds: number) {\n    const videoElement = this.videoElement;\n    const renderFrame = this.renderFrame;\n\n    videoElement.currentTime = timeInSeconds;\n\n    if (videoElement.paused) {\n      // Need to wait for seek update\n      const seekEventListener = (evt) => {\n        renderFrame();\n\n        videoElement.removeEventListener('seeked', seekEventListener);\n      };\n\n      videoElement.addEventListener('seeked', seekEventListener);\n    }\n  }\n\n  // Sets the frame number - note according to DICOM, this is 1 based\n  public async setFrameNumber(frame: number) {\n    this.setTime((frame - 1) / this.fps);\n  }\n\n  /**\n   * Sets the playback frame range.  The video will play over the given set\n   * of frames (assuming it is playing).\n   * @param frameRange - the minimum to maximum (inclusive) frames to play over\n   * @returns\n   */\n  public setFrameRange(frameRange: number[]) {\n    if (!frameRange) {\n      this.frameRange = [1, this.numberOfFrames];\n      return;\n    }\n    if (frameRange.length !== 2 || frameRange[0] === frameRange[1]) {\n      return;\n    }\n    this.frameRange = [frameRange[0], frameRange[1]];\n  }\n\n  public getFrameRange(): [number, number] {\n    return this.frameRange;\n  }\n\n  public setProperties(props: VideoViewportProperties) {\n    if (props.loop !== undefined) {\n      this.videoElement.loop = props.loop;\n    }\n\n    if (props.muted !== undefined) {\n      this.videoElement.muted = props.muted;\n    }\n\n    if (props.playbackRate !== undefined) {\n      this.setPlaybackRate(props.playbackRate);\n    }\n\n    if (props.scrollSpeed !== undefined) {\n      this.setScrollSpeed(props.scrollSpeed);\n    }\n\n    if (props.voiRange) {\n      this.setVOI(props.voiRange);\n    }\n  }\n\n  public setPlaybackRate(rate = 1) {\n    this.playbackRate = rate;\n    // Minimum playback speed in chrome is 0.0625 compared to normal\n    if (rate < 0.0625) {\n      this.pause();\n      return;\n    }\n    if (!this.videoElement) {\n      return;\n    }\n    this.videoElement.playbackRate = rate;\n    this.play();\n  }\n\n  public setScrollSpeed(\n    scrollSpeed = 1,\n    unit = VideoViewportEnum.SpeedUnit.FRAME\n  ) {\n    this.scrollSpeed =\n      unit === VideoViewportEnum.SpeedUnit.SECOND\n        ? scrollSpeed * this.fps\n        : scrollSpeed;\n  }\n\n  public getProperties = (): VideoViewportProperties => {\n    return {\n      loop: this.videoElement.loop,\n      muted: this.videoElement.muted,\n      playbackRate: this.playbackRate,\n      scrollSpeed: this.scrollSpeed,\n      voiRange: { ...this.voiRange },\n    };\n  };\n\n  public resetProperties() {\n    this.setProperties({\n      loop: false,\n      muted: true,\n    });\n  }\n\n  protected getScalarData(): CanvasScalarData {\n    if (this.scalarData?.frameNumber === this.getFrameNumber()) {\n      return this.scalarData;\n    }\n    const canvas = document.createElement('canvas');\n    canvas.width = this.videoWidth;\n    canvas.height = this.videoHeight;\n    const context = canvas.getContext('2d');\n    context.drawImage(this.videoElement, 0, 0);\n    const canvasData = context.getImageData(\n      0,\n      0,\n      this.videoWidth,\n      this.videoHeight\n    );\n    const scalarData = canvasData.data as CanvasScalarData;\n    scalarData.getRange = () => [0, 255];\n    scalarData.frameNumber = this.getFrameNumber();\n    this.scalarData = scalarData;\n    return scalarData;\n  }\n\n  public getImageData() {\n    const { metadata } = this;\n\n    const spacing = metadata.spacing;\n\n    const imageData = {\n      dimensions: metadata.dimensions,\n      spacing,\n      origin: metadata.origin,\n      direction: metadata.direction,\n      metadata: { Modality: this.modality },\n      getScalarData: () => this.getScalarData(),\n      imageData: {\n        getDirection: () => metadata.direction,\n        getDimensions: () => metadata.dimensions,\n        getRange: () => [0, 255],\n        getScalarData: () => this.getScalarData(),\n        getSpacing: () => metadata.spacing,\n        worldToIndex: (point: Point3) => {\n          const canvasPoint = this.worldToCanvas(point);\n          const pixelCoord = this.canvasToIndex(canvasPoint);\n          return [pixelCoord[0], pixelCoord[1], 0];\n        },\n        indexToWorld: (point: Point2, destPoint?: Point3) => {\n          const canvasPoint = this.indexToCanvas([point[0], point[1]]);\n          return this.canvasToWorld(canvasPoint, destPoint);\n        },\n      },\n      hasPixelSpacing: this.hasPixelSpacing,\n      calibration: this.calibration,\n      preScale: {\n        scaled: false,\n      },\n    };\n    Object.defineProperty(imageData, 'scalarData', {\n      get: () => this.getScalarData(),\n      enumerable: true,\n    });\n    return imageData;\n  }\n\n  /**\n   * Checks to see if the imageURI is currently being displayed.  The imageURI\n   * may contain frame numbers according to the DICOM standard format, which\n   * will be stripped to compare the base image URI, and then the values used\n   * to check if that frame is currently being displayed.\n   *\n   * The DICOM standard allows for comma separated values as well, however,\n   * this is not supported here, with only a single range or single value\n   * being tested.\n   *\n   * For a single value, the time range +/- 5 frames is permitted to allow\n   * the detection to actually succeed when nearby without requiring an exact\n   * time frame to be matched.\n   *\n   * @param imageURI - containing frame number or range.\n   * @returns\n   */\n  public hasImageURI(imageURI: string): boolean {\n    // TODO - move annotationFrameRange into core so it can be used here.\n    const framesMatch = imageURI.match(VideoViewport.frameRangeExtractor);\n    const testURI = framesMatch\n      ? imageURI.substring(0, framesMatch.index)\n      : imageURI;\n    return this.imageId.indexOf(testURI) !== -1;\n  }\n\n  public setVOI(voiRange: VOIRange): void {\n    this.voiRange = voiRange;\n    this.setColorTransform();\n  }\n\n  public setWindowLevel(windowWidth = 256, windowCenter = 128) {\n    const lower = windowCenter - windowWidth / 2;\n    const upper = windowCenter + windowWidth / 2 - 1;\n    this.setVOI({ lower, upper });\n    this.setColorTransform();\n  }\n\n  public setAverageWhite(averageWhite: [number, number, number]) {\n    this.averageWhite = averageWhite;\n    this.setColorTransform();\n  }\n\n  protected setColorTransform() {\n    if (!this.voiRange && !this.averageWhite) {\n      this.feFilter = null;\n      return;\n    }\n    const white = this.averageWhite || [255, 255, 255];\n    const maxWhite = Math.max(...white);\n    const scaleWhite = white.map((c) => maxWhite / c);\n    const { lower = 0, upper = 255 } = this.voiRange || {};\n    const wlScale = (upper - lower + 1) / 255;\n    const wlDelta = lower / 255;\n    this.feFilter = `url('data:image/svg+xml,\\\n      <svg xmlns=\"http://www.w3.org/2000/svg\">\\\n        <filter id=\"colour\" color-interpolation-filters=\"linearRGB\">\\\n        <feColorMatrix type=\"matrix\" \\\n        values=\"\\\n          ${scaleWhite[0] * wlScale} 0 0 0 ${wlDelta} \\\n          0 ${scaleWhite[1] * wlScale} 0 0 ${wlDelta} \\\n          0 0 ${scaleWhite[2] * wlScale} 0 ${wlDelta} \\\n          0 0 0 1 0\" />\\\n        </filter>\\\n      </svg>#colour')`;\n\n    this.canvas.style.filter = this.feFilter;\n  }\n\n  public setCamera(camera: ICamera): void {\n    const { parallelScale, focalPoint } = camera;\n\n    // NOTE: the parallel scale should be done first\n    // because it affects the focal point later\n    if (parallelScale) {\n      this.videoCamera.parallelScale =\n        this.element.clientHeight / 2 / parallelScale;\n    }\n\n    if (focalPoint !== undefined) {\n      const focalPointCanvas = this.worldToCanvas(focalPoint);\n      const canvasCenter: Point2 = [\n        this.element.clientWidth / 2,\n        this.element.clientHeight / 2,\n      ];\n\n      const panWorldDelta: Point2 = [\n        (focalPointCanvas[0] - canvasCenter[0]) /\n          this.videoCamera.parallelScale,\n        (focalPointCanvas[1] - canvasCenter[1]) /\n          this.videoCamera.parallelScale,\n      ];\n\n      this.videoCamera.panWorld = [\n        this.videoCamera.panWorld[0] - panWorldDelta[0],\n        this.videoCamera.panWorld[1] - panWorldDelta[1],\n      ];\n    }\n\n    this.canvasContext.fillStyle = 'rgba(0,0,0,1)';\n    this.canvasContext.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n    if (this.isPlaying === false) {\n      this.renderFrame();\n    }\n  }\n\n  /**\n   * This function returns the imageID associated with either the current\n   * frame being displayed, or the range of frames being played.  This may not\n   * correspond to any particular imageId that has imageId metadata, as the\n   * format is one of:\n   * `<DICOMweb URI>/frames/<Start Frame>(-<End Frame>)?`\n   * or\n   * `<Other URI>[?&]frameNumber=<Start Frame>(-<EndFrame>)?`\n   * for a URL parameter.\n   *\n   * @returns an imageID for video\n   */\n  public getCurrentImageId() {\n    const current = this.imageId.replace(\n      '/frames/1',\n      this.isPlaying\n        ? `/frames/${this.frameRange[0]}-${this.frameRange[1]}`\n        : `/frames/${this.getFrameNumber()}`\n    );\n    return current;\n  }\n\n  /**\n   *  Gets a target id that can be used to specify how to show this\n   */\n  public getReferenceId(specifier: ViewReferenceSpecifier = {}): string {\n    const { sliceIndex: sliceIndex } = specifier;\n    if (sliceIndex === undefined) {\n      return `videoId:${this.getCurrentImageId()}`;\n    }\n    if (Array.isArray(sliceIndex)) {\n      // Just remove the 1 from the end of the base URL - TODO, handle other types\n      return `videoId:${this.imageId.substring(0, this.imageId.length - 1)}${\n        sliceIndex[0] + 1\n      }-${sliceIndex[1] + 1}`;\n    }\n    const baseTarget = this.imageId.replace(\n      '/frames/1',\n      `/frames/${1 + sliceIndex}`\n    );\n    return `videoId:${baseTarget}`;\n  }\n\n  /**\n   * Figure out if a given view can be shown in the current viewport.\n   */\n  public isReferenceViewable(\n    viewRef: ViewReference,\n    options: ReferenceCompatibleOptions = {}\n  ): boolean {\n    let { imageURI } = options;\n    const { referencedImageId, sliceIndex: sliceIndex } = viewRef;\n    if (!super.isReferenceViewable(viewRef)) {\n      return false;\n    }\n\n    const imageId = this.getCurrentImageId();\n    if (!imageURI) {\n      // Remove the dataLoader scheme and frame number\n      // TODO - handle more imageURI types.\n      const colonIndex = imageId.indexOf(':');\n      imageURI = imageId.substring(colonIndex + 1, imageId.length - 1);\n    }\n\n    if (options.withNavigation) {\n      return true;\n    }\n    const currentIndex = this.getSliceIndex();\n    if (Array.isArray(sliceIndex)) {\n      return currentIndex >= sliceIndex[0] && currentIndex <= sliceIndex[1];\n    }\n    if (sliceIndex !== undefined) {\n      return currentIndex === sliceIndex;\n    }\n    if (!referencedImageId) {\n      return false;\n    }\n    const match = referencedImageId.match(VideoViewport.frameRangeExtractor);\n    if (!match || !match[2]) {\n      return true;\n    }\n    const range = match[2].split('-').map((it) => Number(it));\n    const frame = currentIndex + 1;\n    return range[0] <= frame && frame <= (range[1] ?? range[0]);\n  }\n\n  /**\n   * Gets a view target that species what type of view is required to show\n   * the current view, or the one specified in the forTarget modifiers.\n   */\n  public getViewReference(\n    viewRefSpecifier?: ViewReferenceSpecifier\n  ): ViewReference {\n    let sliceIndex = viewRefSpecifier?.sliceIndex;\n    if (!sliceIndex) {\n      sliceIndex = this.isPlaying\n        ? [this.frameRange[0] - 1, this.frameRange[1] - 1]\n        : this.getCurrentImageIdIndex();\n    }\n    return {\n      ...super.getViewReference(viewRefSpecifier),\n      referencedImageId: this.getReferenceId(viewRefSpecifier),\n      sliceIndex: sliceIndex,\n    };\n  }\n\n  /**\n   * Gets the 1 based frame number (ala DICOM value), eg `1+ currentImageIdIndex`\n   */\n  public getFrameNumber() {\n    // Need to round this as the fps/time isn't exact\n    return 1 + this.getCurrentImageIdIndex();\n  }\n\n  public getCurrentImageIdIndex() {\n    return Math.round(this.videoElement.currentTime * this.fps);\n  }\n\n  public getSliceIndex() {\n    return this.getCurrentImageIdIndex();\n  }\n\n  public getCamera(): ICamera {\n    const { parallelScale } = this.videoCamera;\n\n    const canvasCenter: Point2 = [\n      this.element.clientWidth / 2,\n      this.element.clientHeight / 2,\n    ];\n\n    // All other viewports have the focal point in canvas coordinates in the center\n    // of the canvas, so to make tools work the same, we need to do the same here\n    // and convert to the world coordinate system since focal point is in world coordinates.\n    const canvasCenterWorld = this.canvasToWorld(canvasCenter);\n\n    return {\n      parallelProjection: true,\n      focalPoint: canvasCenterWorld,\n      position: [0, 0, 0],\n      viewUp: [0, -1, 0],\n      parallelScale: this.element.clientHeight / 2 / parallelScale, // Reverse zoom direction back\n      viewPlaneNormal: [0, 0, 1],\n    };\n  }\n\n  public resetCamera = (): boolean => {\n    this.refreshRenderValues();\n\n    this.canvasContext.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n    if (this.isPlaying === false) {\n      // If its not replaying, just re-render the frame on move.\n      this.renderFrame();\n    }\n    return true;\n  };\n\n  public getNumberOfSlices = (): number => {\n    const computedSlices = Math.round(\n      (this.videoElement.duration * this.fps) / this.scrollSpeed\n    );\n    return isNaN(computedSlices) ? this.numberOfFrames : computedSlices;\n  };\n\n  public getFrameOfReferenceUID = (): string => {\n    // The video itself is the frame of reference.\n    return this.videoElement.src;\n  };\n\n  public resize = (): void => {\n    const canvas = this.canvas;\n    const { clientWidth, clientHeight } = canvas;\n\n    // Set the canvas to be same resolution as the client.\n    if (canvas.width !== clientWidth || canvas.height !== clientHeight) {\n      canvas.width = clientWidth;\n      canvas.height = clientHeight;\n    }\n\n    this.refreshRenderValues();\n\n    if (this.isPlaying === false) {\n      // If its not playing, just re-render on resize.\n      this.renderFrame();\n    }\n  };\n\n  /**\n   * Converts a VideoViewport canvas coordinate to a video coordinate.\n   *\n   * @param canvasPos - to convert to world\n   * @returns World position\n   */\n  public canvasToWorld = (\n    canvasPos: Point2,\n    destPos: Point3 = [0, 0, 0]\n  ): Point3 => {\n    const pan: Point2 = this.videoCamera.panWorld; // In world coordinates\n    const worldToCanvasRatio: number = this.getWorldToCanvasRatio();\n\n    const panOffsetCanvas: Point2 = [\n      pan[0] * worldToCanvasRatio,\n      pan[1] * worldToCanvasRatio,\n    ];\n\n    const subCanvasPos: Point2 = [\n      canvasPos[0] - panOffsetCanvas[0],\n      canvasPos[1] - panOffsetCanvas[1],\n    ];\n\n    // Replace the x,y values only in place in the world position\n    // as the z is unchanging for video display\n    destPos.splice(\n      0,\n      2,\n      subCanvasPos[0] / worldToCanvasRatio,\n      subCanvasPos[1] / worldToCanvasRatio\n    );\n    return destPos;\n  };\n\n  /**\n   * Converts `[x, y, 0]` world video coordinate to canvas CSS coordinates.\n   *\n   * @param  worldPos - world coord to convert to canvas\n   * @returns Canvas position\n   */\n  public worldToCanvas = (worldPos: Point3): Point2 => {\n    const pan: Point2 = this.videoCamera.panWorld;\n    const worldToCanvasRatio: number = this.getWorldToCanvasRatio();\n\n    const canvasPos: Point2 = [\n      (worldPos[0] + pan[0]) * worldToCanvasRatio,\n      (worldPos[1] + pan[1]) * worldToCanvasRatio,\n    ];\n\n    return canvasPos;\n  };\n\n  public getPan(): Point2 {\n    const panWorld = this.videoCamera.panWorld;\n    return [panWorld[0], panWorld[1]];\n  }\n\n  public getRotation = () => 0;\n\n  /**\n   * Uses the transform to convert canvas coordinates into index coordinates.\n   */\n  protected canvasToIndex = (canvasPos: Point2): Point2 => {\n    const transform = this.getTransform();\n    transform.invert();\n\n    return transform.transformPoint(\n      <Point2>canvasPos.map((it) => it * devicePixelRatio)\n    );\n  };\n\n  protected indexToCanvas = (indexPos: Point2): Point2 => {\n    const transform = this.getTransform();\n    return <Point2>(\n      transform.transformPoint(indexPos).map((it) => it / devicePixelRatio)\n    );\n  };\n\n  /**\n   * Sets  initial video camera to center the image area.  The values\n   * are set in canvas CSS pixel units and NOT in canvas index units.\n   */\n  private refreshRenderValues() {\n    // this means that each unit (pixel) in the world (video) would be\n    // represented by n pixels in the canvas, measured in css pixels\n    let worldToCanvasRatio = this.canvas.offsetWidth / this.videoWidth;\n\n    if (this.videoHeight * worldToCanvasRatio > this.canvas.height) {\n      // If by fitting the width, we exceed the height of the viewport, then we need to decrease the\n      // size of the viewport further by considering its verticality.\n      worldToCanvasRatio = this.canvas.offsetHeight / this.videoHeight;\n    }\n\n    // Set the width as big as possible, this is the portion of the canvas\n    // that the video will occupy.\n    const drawWidth = Math.floor(this.videoWidth * worldToCanvasRatio);\n    const drawHeight = Math.floor(this.videoHeight * worldToCanvasRatio);\n\n    // calculate x and y offset in order to center the image\n    const xOffsetCanvas = (this.canvas.offsetWidth - drawWidth) / 2;\n    const yOffsetCanvas = (this.canvas.offsetHeight - drawHeight) / 2;\n\n    const xOffsetWorld = xOffsetCanvas / worldToCanvasRatio;\n    const yOffsetWorld = yOffsetCanvas / worldToCanvasRatio;\n\n    this.videoCamera.panWorld = [xOffsetWorld, yOffsetWorld];\n    this.videoCamera.parallelScale = worldToCanvasRatio;\n  }\n\n  private getWorldToCanvasRatio() {\n    return this.videoCamera.parallelScale;\n  }\n\n  private getCanvasToWorldRatio() {\n    return 1.0 / this.videoCamera.parallelScale;\n  }\n\n  public customRenderViewportToCanvas = () => {\n    this.renderFrame();\n  };\n\n  /**\n   * Creates a transform from video index coordinates to canvas coordinates.\n   */\n  protected getTransform() {\n    const panWorld: Point2 = this.videoCamera.panWorld;\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    const worldToCanvasRatio: number = this.getWorldToCanvasRatio();\n    const canvasToWorldRatio: number = this.getCanvasToWorldRatio();\n    const halfCanvas = [\n      this.canvas.offsetWidth / 2,\n      this.canvas.offsetHeight / 2,\n    ];\n    const halfCanvasWorldCoordinates = [\n      halfCanvas[0] * canvasToWorldRatio,\n      halfCanvas[1] * canvasToWorldRatio,\n    ];\n    const transform = new Transform();\n\n    // Start by converting into canvas index coordinates FROM canvas css pixel coordinates\n    transform.scale(devicePixelRatio, devicePixelRatio);\n\n    // Translate to the center of the canvas (move origin of the transform\n    // to the center of the canvas)\n    transform.translate(halfCanvas[0], halfCanvas[1]);\n\n    // Scale\n    transform.scale(worldToCanvasRatio, worldToCanvasRatio);\n\n    // Apply the translation\n    transform.translate(panWorld[0], panWorld[1]);\n\n    // Translate back\n    transform.translate(\n      -halfCanvasWorldCoordinates[0],\n      -halfCanvasWorldCoordinates[1]\n    );\n    return transform;\n  }\n\n  /**\n   * Nothing to do for the clipping planes for video as they don't exist.\n   */\n  public updateCameraClippingPlanesAndRange() {\n    // No-op\n  }\n\n  public addImages(stackInputs: Array<any>) {\n    const actors = this.getActors();\n    stackInputs.forEach((stackInput) => {\n      const image = cache.getImage(stackInput.imageId);\n\n      const imageActor = this.createActorMapper(image);\n      if (imageActor) {\n        actors.push({ uid: stackInput.actorUID, actor: imageActor });\n        if (stackInput.callback) {\n          stackInput.callback({ imageActor, imageId: stackInput.imageId });\n        }\n      }\n    });\n    this.setActors(actors);\n  }\n\n  protected createActorMapper(image) {\n    return new CanvasActor(this, image);\n  }\n\n  /**\n   * Renders the video frame to the viewport.\n   */\n  private renderFrame = () => {\n    const transform = this.getTransform();\n    const transformationMatrix: number[] = transform.getMatrix();\n\n    const ctx = this.canvasContext;\n\n    ctx.resetTransform();\n\n    // Need to correct the transform for device pixel ratio scaling.\n    ctx.transform(\n      transformationMatrix[0],\n      transformationMatrix[1],\n      transformationMatrix[2],\n      transformationMatrix[3],\n      transformationMatrix[4],\n      transformationMatrix[5]\n    );\n\n    ctx.drawImage(\n      this.videoElement,\n      0,\n      0,\n      this.videoWidth || 1024,\n      this.videoHeight || 1024\n    );\n\n    for (const actor of this.getActors()) {\n      (actor.actor as ICanvasActor).render(this, this.canvasContext);\n    }\n    this.canvasContext.resetTransform();\n\n    // This is stack new image to agree with stack/non-volume viewports\n    triggerEvent(this.element, EVENTS.STACK_NEW_IMAGE, {\n      element: this.element,\n      viewportId: this.id,\n      viewport: this,\n      renderingEngineId: this.renderingEngineId,\n      time: this.videoElement.currentTime,\n      duration: this.videoElement.duration,\n    });\n    triggerEvent(this.element, EVENTS.IMAGE_RENDERED, {\n      element: this.element,\n      viewportId: this.id,\n      viewport: this,\n      renderingEngineId: this.renderingEngineId,\n      time: this.videoElement.currentTime,\n      duration: this.videoElement.duration,\n    });\n\n    this.initialRender?.();\n\n    const frame = this.getFrameNumber();\n    if (this.isPlaying) {\n      if (frame < this.frameRange[0]) {\n        this.setFrameNumber(this.frameRange[0]);\n      } else if (frame > this.frameRange[1]) {\n        if (this.loop) {\n          this.setFrameNumber(this.frameRange[0]);\n        } else {\n          this.pause();\n        }\n      }\n    }\n  };\n\n  private renderWhilstPlaying = () => {\n    this.renderFrame();\n\n    //wait approximately 16ms and run again\n    if (this.isPlaying) {\n      requestAnimationFrame(this.renderWhilstPlaying);\n    }\n  };\n}\n\nexport default VideoViewport;\n","import type {\n  IStackViewport,\n  IStackInput,\n  IRenderingEngine,\n} from '../../types';\n\n/**\n * For each provided viewport it adds a volume to the viewport using the\n * provided renderingEngine\n *\n *\n * @param renderingEngine - The rendering engine to use to get viewports from\n * @param volumeInputs - Array of volume inputs including volumeId. Other properties\n * such as visibility, callback, blendMode, slabThickness are optional\n * @param viewportIds - Array of viewport IDs to add the volume to\n * @param immediateRender - If true, the volumes will be rendered immediately\n * @returns A promise that resolves when all volumes have been added\n */\nasync function addImageSlicesToViewports(\n  renderingEngine: IRenderingEngine,\n  stackInputs: Array<IStackInput>,\n  viewportIds: Array<string>\n): Promise<void> {\n  // Check if all viewports are volumeViewports\n  for (const viewportId of viewportIds) {\n    const viewport = renderingEngine.getViewport(viewportId);\n\n    if (!viewport) {\n      throw new Error(`Viewport with Id ${viewportId} does not exist`);\n    }\n\n    // if not instance of BaseVolumeViewport, throw\n    if (!(viewport as IStackViewport).addImages) {\n      console.warn(\n        `Viewport with Id ${viewportId} does not have addImages. Cannot add image segmentation to this viewport.`\n      );\n\n      return;\n    }\n  }\n\n  const addStackPromises = viewportIds.map(async (viewportId) => {\n    const viewport = renderingEngine.getViewport(viewportId) as IStackViewport;\n\n    return viewport.addImages(stackInputs);\n  });\n\n  await Promise.all(addStackPromises);\n}\n\nexport default addImageSlicesToViewports;\n","import BaseVolumeViewport from '../BaseVolumeViewport';\nimport type {\n  IVolumeViewport,\n  IVolumeInput,\n  IRenderingEngine,\n} from '../../types';\n\n/**\n * For each provided viewport it adds a volume to the viewport using the\n * provided renderingEngine\n *\n *\n * @param renderingEngine - The rendering engine to use to get viewports from\n * @param volumeInputs - Array of volume inputs including volumeId. Other properties\n * such as visibility, callback, blendMode, slabThickness are optional\n * @param viewportIds - Array of viewport IDs to add the volume to\n * @param immediateRender - If true, the volumes will be rendered immediately\n * @returns A promise that resolves when all volumes have been added\n */\nasync function addVolumesToViewports(\n  renderingEngine: IRenderingEngine,\n  volumeInputs: Array<IVolumeInput>,\n  viewportIds: Array<string>,\n  immediateRender = false,\n  suppressEvents = false\n): Promise<void> {\n  // Check if all viewports are volumeViewports\n  for (const viewportId of viewportIds) {\n    const viewport = renderingEngine.getViewport(viewportId);\n\n    if (!viewport) {\n      throw new Error(`Viewport with Id ${viewportId} does not exist`);\n    }\n\n    // if not instance of BaseVolumeViewport, throw\n    if (!(viewport instanceof BaseVolumeViewport)) {\n      console.warn(\n        `Viewport with Id ${viewportId} is not a BaseVolumeViewport. Cannot add volume to this viewport.`\n      );\n\n      return;\n    }\n  }\n\n  const addVolumePromises = viewportIds.map(async (viewportId) => {\n    const viewport = renderingEngine.getViewport(viewportId) as IVolumeViewport;\n\n    await viewport.addVolumes(volumeInputs, immediateRender, suppressEvents);\n  });\n\n  await Promise.all(addVolumePromises);\n  return;\n}\n\nexport default addVolumesToViewports;\n","import LookupTable from './lookupTable';\nimport CPU_COLORMAPS from '../../../../constants/cpuColormaps';\nimport {\n  CPUFallbackColormap,\n  CPUFallbackColormapData,\n  Point4,\n} from '../../../../types';\n\nconst COLOR_TRANSPARENT: Point4 = [0, 0, 0, 0];\n\n/**\n *  Generate linearly spaced vectors\n *  http://cens.ioc.ee/local/man/matlab/techdoc/ref/linspace.html\n * @param {Number} a A number representing the first vector\n * @param {Number} b A number representing the second vector\n * @param {Number} n The number of linear spaced vectors to generate\n * @returns {Array} An array of points representing linear spaced vectors.\n * @memberof Colors\n */\nfunction linspace(a: number, b: number, n: number): number[] {\n  n = n === null ? 100 : n;\n\n  const increment = (b - a) / (n - 1);\n  const vector = [];\n\n  while (n-- > 0) {\n    vector.push(a);\n    a += increment;\n  }\n\n  // Make sure the last item will always be \"b\" because most of the\n  // Time we'll get numbers like 1.0000000000000002 instead of 1.\n  vector[vector.length - 1] = b;\n\n  return vector;\n}\n\n/**\n * Returns the \"rank/index\" of the element in a sorted array if found or the highest index if not. Uses (binary search)\n * @param {Array} array A sorted array to search in\n * @param {any} elem the element in the array to search for\n * @returns {number} The rank/index of the element in the given array\n * @memberof Colors\n */\nfunction getRank(array, elem) {\n  let left = 0;\n  let right = array.length - 1;\n\n  while (left <= right) {\n    const mid = left + Math.floor((right - left) / 2);\n    const midElem = array[mid];\n\n    if (midElem === elem) {\n      return mid;\n    } else if (elem < midElem) {\n      right = mid - 1;\n    } else {\n      left = mid + 1;\n    }\n  }\n\n  return left;\n}\n\n/**\n * Find the indices into a sorted array a such that, if the corresponding elements\n * In v were inserted before the indices, the order of a would be preserved.\n *  http://lagrange.univ-lyon1.fr/docs/numpy/1.11.0/reference/generated/numpy.searchsorted.html\n * @param {Array} inputArray The array where the values will be inserted\n * @param {Array} values An array of the values to be inserted into the inputArray\n * @returns {Array} The indices where elements should be inserted to maintain order.\n * @memberof Colors\n */\nfunction searchSorted(inputArray, values) {\n  let i;\n  const indexes = [];\n  const len = values.length;\n\n  inputArray.sort(function (a, b) {\n    return a - b;\n  });\n\n  for (i = 0; i < len; i++) {\n    indexes[i] = getRank(inputArray, values[i]);\n  }\n\n  return indexes;\n}\n\n/**\n * Creates an *N* -element 1-d lookup table\n * @param {Number} N The number of elements in the result lookup table\n * @param {Array} data represented by a list of x,y0,y1 mapping correspondences. Each element in this\n * List represents how a value between 0 and 1 (inclusive) represented by x is mapped to\n * A corresponding value between 0 and 1 (inclusive). The two values of y are to allow for\n * Discontinuous mapping functions (say as might be found in a sawtooth) where y0 represents\n * The value of y for values of x <= to that given, and y1 is the value to be used for x >\n * Than that given). The list must start with x=0, end with x=1, and all values of x must be\n * In increasing order. Values between the given mapping points are determined by simple linear\n * Interpolation.\n * @param {any} gamma value denotes a \"gamma curve\" value which adjusts the brightness\n * at the bottom and top of the map.\n * @returns {any[]} an array \"result\" where result[x*(N-1)] gives the closest value for\n * Values of x between 0 and 1.\n * @memberof Colors\n */\nfunction makeMappingArray(N, data, gamma) {\n  let i;\n  const x = [];\n  const y0 = [];\n  const y1 = [];\n  const lut = [];\n\n  gamma = gamma === null ? 1 : gamma;\n\n  for (i = 0; i < data.length; i++) {\n    const element = data[i];\n\n    x.push((N - 1) * element[0]);\n    y0.push(element[1]);\n    y1.push(element[1]);\n  }\n\n  const xLinSpace = linspace(0, 1, N);\n\n  for (i = 0; i < N; i++) {\n    xLinSpace[i] = (N - 1) * Math.pow(xLinSpace[i], gamma);\n  }\n\n  const xLinSpaceIndexes = searchSorted(x, xLinSpace);\n\n  for (i = 1; i < N - 1; i++) {\n    const index = xLinSpaceIndexes[i];\n    const colorPercent =\n      (xLinSpace[i] - x[index - 1]) / (x[index] - x[index - 1]);\n    const colorDelta = y0[index] - y1[index - 1];\n\n    lut[i] = colorPercent * colorDelta + y1[index - 1];\n  }\n\n  lut[0] = y1[0];\n  lut[N - 1] = y0[data.length - 1];\n\n  return lut;\n}\n\n/**\n * Creates a Colormap based on lookup tables using linear segments.\n * @param {{red:Array, green:Array, blue:Array}} segmentedData An object with a red, green and blue entries.\n * Each entry should be a list of x, y0, y1 tuples, forming rows in a table.\n * @param {Number} N The number of elements in the result Colormap\n * @param {any} gamma value denotes a \"gamma curve\" value which adjusts the brightness\n * at the bottom and top of the Colormap.\n * @returns {Array} The created Colormap object\n * @description The lookup table is generated using linear interpolation for each\n *  Primary color, with the 0-1 domain divided into any number of\n * Segments.\n * https://github.com/stefanv/matplotlib/blob/3f1a23755e86fef97d51e30e106195f34425c9e3/lib/matplotlib/colors.py#L663\n * @memberof Colors\n */\nfunction createLinearSegmentedColormap(segmentedData, N, gamma) {\n  let i;\n  const lut = [];\n\n  N = N === null ? 256 : N;\n  gamma = gamma === null ? 1 : gamma;\n\n  const redLut = makeMappingArray(N, segmentedData.red, gamma);\n  const greenLut = makeMappingArray(N, segmentedData.green, gamma);\n  const blueLut = makeMappingArray(N, segmentedData.blue, gamma);\n\n  for (i = 0; i < N; i++) {\n    const red = Math.round(redLut[i] * 255);\n    const green = Math.round(greenLut[i] * 255);\n    const blue = Math.round(blueLut[i] * 255);\n    const rgba = [red, green, blue, 255];\n\n    lut.push(rgba);\n  }\n\n  return lut;\n}\n\n/**\n * Return all available colormaps (id and name)\n * @returns {Array<{id,key}>} An array of colormaps with an object containing the \"id\" and display \"name\"\n * @memberof Colors\n */\nexport function getColormapsList() {\n  const colormaps = [];\n  const keys = Object.keys(CPU_COLORMAPS);\n\n  keys.forEach(function (key) {\n    if (CPU_COLORMAPS.hasOwnProperty(key)) {\n      const colormap = CPU_COLORMAPS[key];\n\n      colormaps.push({\n        id: key,\n        name: colormap.name,\n      });\n    }\n  });\n\n  colormaps.sort(function (a, b) {\n    const aName = a.name.toLowerCase();\n    const bName = b.name.toLowerCase();\n\n    if (aName === bName) {\n      return 0;\n    }\n\n    return aName < bName ? -1 : 1;\n  });\n\n  return colormaps;\n}\n\n/**\n * Return a colorMap object with the provided id and colormapData\n * if the Id matches existent colorMap objects (check colormapsData) the colormapData is ignored.\n * if the colormapData is not empty, the colorMap will be added to the colormapsData list. Otherwise, an empty colorMap object is returned.\n * @param {string} id The ID of the colormap\n * @param {Object} colormapData - An object that can contain a name, numColors, gama, segmentedData and/or colors\n * @returns {*} The Colormap Object\n * @memberof Colors\n */\nexport function getColormap(\n  id: string,\n  colormapData?: CPUFallbackColormapData\n): CPUFallbackColormap {\n  let colormap = CPU_COLORMAPS[id];\n\n  if (!colormap) {\n    colormap = CPU_COLORMAPS[id] = colormapData || {\n      name: '',\n      colors: [],\n    };\n  }\n\n  if (!colormap.colors && colormap.segmentedData) {\n    colormap.colors = createLinearSegmentedColormap(\n      colormap.segmentedData,\n      colormap.numColors,\n      colormap.gamma\n    );\n  }\n\n  const cpuFallbackColormap: CPUFallbackColormap = {\n    getId() {\n      return id;\n    },\n\n    getColorSchemeName() {\n      return colormap.name;\n    },\n\n    setColorSchemeName(name) {\n      colormap.name = name;\n    },\n\n    getNumberOfColors() {\n      return colormap.colors.length;\n    },\n\n    setNumberOfColors(numColors) {\n      while (colormap.colors.length < numColors) {\n        colormap.colors.push(COLOR_TRANSPARENT);\n      }\n\n      colormap.colors.length = numColors;\n    },\n\n    getColor(index) {\n      if (this.isValidIndex(index)) {\n        return colormap.colors[index];\n      }\n\n      return COLOR_TRANSPARENT;\n    },\n\n    getColorRepeating(index) {\n      const numColors = colormap.colors.length;\n\n      index = numColors ? index % numColors : 0;\n\n      return this.getColor(index);\n    },\n\n    setColor(index, rgba) {\n      if (this.isValidIndex(index)) {\n        colormap.colors[index] = rgba;\n      }\n    },\n\n    addColor(rgba) {\n      colormap.colors.push(rgba);\n    },\n\n    insertColor(index, rgba) {\n      if (this.isValidIndex(index)) {\n        colormap.colors.splice(index, 1, rgba);\n      }\n    },\n\n    removeColor(index) {\n      if (this.isValidIndex(index)) {\n        colormap.colors.splice(index, 1);\n      }\n    },\n\n    clearColors() {\n      colormap.colors = [];\n    },\n\n    buildLookupTable(lut) {\n      if (!lut) {\n        return;\n      }\n\n      const numColors = colormap.colors.length;\n\n      lut.setNumberOfTableValues(numColors);\n\n      for (let i = 0; i < numColors; i++) {\n        lut.setTableValue(i, colormap.colors[i]);\n      }\n    },\n\n    createLookupTable() {\n      const lut = new LookupTable();\n\n      this.buildLookupTable(lut);\n\n      return lut;\n    },\n\n    isValidIndex(index) {\n      return index >= 0 && index < colormap.colors.length;\n    },\n  };\n\n  return cpuFallbackColormap;\n}\n","import now from './rendering/now';\nimport { renderColorImage } from './rendering/renderColorImage';\nimport { renderGrayscaleImage } from './rendering/renderGrayscaleImage';\nimport { renderPseudoColorImage } from './rendering/renderPseudoColorImage';\nimport { CPUFallbackEnabledElement } from '../../../types';\n\n/**\n * Draw an image to a given enabled element synchronously\n *\n * @param enabledElement - An enabled element to draw into\n * @param invalidated - true if pixel data has been invalidated and cached rendering should not be used\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  invalidated: boolean\n): void {\n  const image = enabledElement.image;\n\n  // Check if enabledElement can be redrawn\n  if (!enabledElement.canvas || !enabledElement.image) {\n    return;\n  }\n\n  // Start measuring the time needed to draw the image.\n  const start = now();\n\n  image.stats = {\n    lastGetPixelDataTime: -1.0,\n    lastStoredPixelDataToCanvasImageDataTime: -1.0,\n    lastPutImageDataTime: -1.0,\n    lastRenderTime: -1.0,\n    lastLutGenerateTime: -1.0,\n  };\n\n  if (image) {\n    let render = image.render;\n\n    if (!render) {\n      if (enabledElement.viewport.colormap) {\n        render = renderPseudoColorImage;\n      } else if (image.color) {\n        render = renderColorImage;\n      } else {\n        render = renderGrayscaleImage;\n      }\n    }\n\n    render(enabledElement, invalidated);\n  }\n\n  // Calculate how long it took to draw the image/layers\n  const renderTimeInMs = now() - start;\n\n  image.stats.lastRenderTime = renderTimeInMs;\n\n  enabledElement.invalid = false;\n  enabledElement.needsRedraw = false;\n}\n","import { Transform } from './transform';\nimport {\n  CPUFallbackEnabledElement,\n  CPUFallbackTransform,\n} from '../../../../types';\n\n/**\n * Calculate the transform for a Cornerstone enabled element\n *\n * @param enabledElement - The Cornerstone Enabled Element\n * @param scale - The viewport scale\n * @returns The current transform\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  scale?: number\n): CPUFallbackTransform {\n  const transform = new Transform();\n\n  if (!enabledElement.viewport.displayedArea) {\n    return transform;\n  }\n\n  // Move to center of canvas\n  transform.translate(\n    enabledElement.canvas.width / 2,\n    enabledElement.canvas.height / 2\n  );\n\n  // Apply the rotation before scaling for non square pixels\n  const angle = enabledElement.viewport.rotation;\n\n  if (angle !== 0) {\n    transform.rotate((angle * Math.PI) / 180);\n  }\n\n  // Apply the scale\n  let widthScale = enabledElement.viewport.scale;\n  let heightScale = enabledElement.viewport.scale;\n\n  const width =\n    enabledElement.viewport.displayedArea.brhc.x -\n    (enabledElement.viewport.displayedArea.tlhc.x - 1);\n  const height =\n    enabledElement.viewport.displayedArea.brhc.y -\n    (enabledElement.viewport.displayedArea.tlhc.y - 1);\n\n  if (enabledElement.viewport.displayedArea.presentationSizeMode === 'NONE') {\n    if (\n      enabledElement.image.rowPixelSpacing <\n      enabledElement.image.columnPixelSpacing\n    ) {\n      widthScale *=\n        enabledElement.image.columnPixelSpacing /\n        enabledElement.image.rowPixelSpacing;\n    } else if (\n      enabledElement.image.columnPixelSpacing <\n      enabledElement.image.rowPixelSpacing\n    ) {\n      heightScale *=\n        enabledElement.image.rowPixelSpacing /\n        enabledElement.image.columnPixelSpacing;\n    }\n  } else {\n    // These should be good for \"TRUE SIZE\" and \"MAGNIFY\"\n    widthScale = enabledElement.viewport.displayedArea.columnPixelSpacing;\n    heightScale = enabledElement.viewport.displayedArea.rowPixelSpacing;\n\n    if (\n      enabledElement.viewport.displayedArea.presentationSizeMode ===\n      'SCALE TO FIT'\n    ) {\n      // Fit TRUE IMAGE image (width/height) to window\n      const verticalScale =\n        enabledElement.canvas.height / (height * heightScale);\n      const horizontalScale =\n        enabledElement.canvas.width / (width * widthScale);\n\n      // Apply new scale\n      widthScale = heightScale = Math.min(horizontalScale, verticalScale);\n\n      if (\n        enabledElement.viewport.displayedArea.rowPixelSpacing <\n        enabledElement.viewport.displayedArea.columnPixelSpacing\n      ) {\n        widthScale *=\n          enabledElement.viewport.displayedArea.columnPixelSpacing /\n          enabledElement.viewport.displayedArea.rowPixelSpacing;\n      } else if (\n        enabledElement.viewport.displayedArea.columnPixelSpacing <\n        enabledElement.viewport.displayedArea.rowPixelSpacing\n      ) {\n        heightScale *=\n          enabledElement.viewport.displayedArea.rowPixelSpacing /\n          enabledElement.viewport.displayedArea.columnPixelSpacing;\n      }\n    }\n  }\n\n  transform.scale(widthScale, heightScale);\n\n  // Unrotate to so we can translate unrotated\n  if (angle !== 0) {\n    transform.rotate((-angle * Math.PI) / 180);\n  }\n\n  // Apply the pan offset\n  transform.translate(\n    enabledElement.viewport.translation.x,\n    enabledElement.viewport.translation.y\n  );\n\n  // Rotate again so we can apply general scale\n  if (angle !== 0) {\n    transform.rotate((angle * Math.PI) / 180);\n  }\n\n  if (scale !== undefined) {\n    // Apply the font scale\n    transform.scale(scale, scale);\n  }\n\n  // Apply Flip if required\n  if (enabledElement.viewport.hflip) {\n    transform.scale(-1, 1);\n  }\n\n  if (enabledElement.viewport.vflip) {\n    transform.scale(1, -1);\n  }\n\n  // Move back from center of image\n  transform.translate(-width / 2, -height / 2);\n\n  return transform;\n}\n","import getTransform from './getTransform';\n\nimport { Point2, CPUFallbackEnabledElement } from '../../../../types';\n\n/**\n * Converts a point in the canvas coordinate system to the pixel coordinate system\n * system.  This can be used to reset tools' image coordinates after modifications\n * have been made in canvas space (e.g. moving a tool by a few cm, independent of\n * image resolution).\n *\n * @param element - The Cornerstone element within which the input point lies\n * @param pt - The input point in the canvas coordinate system\n *\n * @returns The transformed point in the pixel coordinate system\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  pt: Point2\n): Point2 {\n  const transform = getTransform(enabledElement);\n\n  transform.invert();\n\n  return transform.transformPoint(pt);\n}\n","import { CPUFallbackViewport, Point2 } from '../../../../types';\n\ntype Shift = {\n  x: number;\n  y: number;\n};\n/**\n * Corrects the shift by accounting for viewport rotation and flips.\n *\n * @param shift - The shift to correct.\n * @param viewportOrientation - Object containing information on the viewport orientation.\n */\nexport default function (\n  shift: Shift,\n  viewportOrientation: CPUFallbackViewport\n): Shift {\n  const { hflip, vflip, rotation } = viewportOrientation;\n\n  // Apply Flips\n  shift.x *= hflip ? -1 : 1;\n  shift.y *= vflip ? -1 : 1;\n\n  // Apply rotations\n  if (rotation !== 0) {\n    const angle = (rotation * Math.PI) / 180;\n\n    const cosA = Math.cos(angle);\n    const sinA = Math.sin(angle);\n\n    const newX = shift.x * cosA - shift.y * sinA;\n    const newY = shift.x * sinA + shift.y * cosA;\n\n    shift.x = newX;\n    shift.y = newY;\n  }\n\n  return shift;\n}\n","import createViewport from './createViewport';\nimport getImageFitScale from './getImageFitScale';\nimport {\n  IImage,\n  CPUFallbackColormap,\n  CPUFallbackViewport,\n} from '../../../../types';\n\n/**\n * Creates a new viewport object containing default values for the image and canvas\n *\n * @param canvas - A Canvas DOM element\n * @param image - A Cornerstone Image Object\n * @returns viewport - object\n */\nexport default function (\n  canvas: HTMLCanvasElement,\n  image: IImage,\n  modality?: string,\n  colormap?: CPUFallbackColormap\n): CPUFallbackViewport {\n  if (canvas === undefined) {\n    throw new Error(\n      'getDefaultViewport: parameter canvas must not be undefined'\n    );\n  }\n\n  if (image === undefined) {\n    return createViewport();\n  }\n\n  // Fit image to window\n  const scale = getImageFitScale(canvas, image, 0).scaleFactor;\n\n  let voi;\n\n  if (modality === 'PT' && image.isPreScaled) {\n    voi = {\n      windowWidth: 5,\n      windowCenter: 2.5,\n    };\n  } else if (\n    image.windowWidth !== undefined &&\n    image.windowCenter !== undefined\n  ) {\n    voi = {\n      windowWidth: Array.isArray(image.windowWidth)\n        ? image.windowWidth[0]\n        : image.windowWidth,\n      windowCenter: Array.isArray(image.windowCenter)\n        ? image.windowCenter[0]\n        : image.windowCenter,\n    };\n  }\n\n  return {\n    scale,\n    translation: {\n      x: 0,\n      y: 0,\n    },\n    voi,\n    invert: image.invert,\n    pixelReplication: false,\n    rotation: 0,\n    hflip: false,\n    vflip: false,\n    modalityLUT: image.modalityLUT,\n    modality,\n    voiLUT: image.voiLUT,\n    colormap: colormap !== undefined ? colormap : image.colormap,\n    displayedArea: {\n      tlhc: {\n        x: 1,\n        y: 1,\n      },\n      brhc: {\n        x: image.columns,\n        y: image.rows,\n      },\n      rowPixelSpacing:\n        image.rowPixelSpacing === undefined ? 1 : image.rowPixelSpacing,\n      columnPixelSpacing:\n        image.columnPixelSpacing === undefined ? 1 : image.columnPixelSpacing,\n      presentationSizeMode: 'NONE',\n    },\n  };\n}\n","import { validateParameterUndefinedOrNull } from './validator';\nimport getImageSize from './getImageSize';\nimport { IImage } from '../../../../types';\n\n/**\n * Calculates the horizontal, vertical and minimum scale factor for an image\n   @param canvas - The window size where the image is displayed. This can be any HTML element or structure with a width, height fields (e.g. canvas).\n * @param image - The cornerstone image object\n * @param rotation - The rotation angle of the image.\n * @returns The calculated horizontal, vertical and minimum scale factor\n */\nexport default function (\n  canvas: HTMLCanvasElement,\n  image: IImage,\n  rotation: number | null = null\n): {\n  verticalScale: number;\n  horizontalScale: number;\n  scaleFactor: number;\n} {\n  validateParameterUndefinedOrNull(\n    canvas,\n    'getImageScale: parameter canvas must not be undefined'\n  );\n  validateParameterUndefinedOrNull(\n    image,\n    'getImageScale: parameter image must not be undefined'\n  );\n\n  const imageSize = getImageSize(image, rotation);\n  const rowPixelSpacing = image.rowPixelSpacing || 1;\n  const columnPixelSpacing = image.columnPixelSpacing || 1;\n  let verticalRatio = 1;\n  let horizontalRatio = 1;\n\n  if (rowPixelSpacing < columnPixelSpacing) {\n    horizontalRatio = columnPixelSpacing / rowPixelSpacing;\n  } else {\n    // even if they are equal we want to calculate this ratio (the ration might be 0.5)\n    verticalRatio = rowPixelSpacing / columnPixelSpacing;\n  }\n\n  const verticalScale = canvas.height / imageSize.height / verticalRatio;\n  const horizontalScale = canvas.width / imageSize.width / horizontalRatio;\n\n  // Fit image to window\n  return {\n    verticalScale,\n    horizontalScale,\n    scaleFactor: Math.min(horizontalScale, verticalScale),\n  };\n}\n","import { validateParameterUndefinedOrNull } from './validator';\nimport { IImage } from '../../../../types';\n\n/**\n * Check if the angle is rotated\n * @param {Number} rotation the rotation angle\n * @returns {Boolean} true if the angle is rotated; Otherwise, false.\n * @memberof Internal\n */\nfunction isRotated(rotation?: number | null): boolean {\n  return !(\n    rotation === null ||\n    rotation === undefined ||\n    rotation === 0 ||\n    rotation === 180\n  );\n}\n\n/**\n * Retrieves the current image dimensions given an enabled element\n *\n * @param {any} image The Cornerstone image.\n * @param {Number} rotation Optional. The rotation angle of the image.\n * @return {{width:Number, height:Number}} The Image dimensions\n * @memberof Internal\n */\nexport default function (\n  image: IImage,\n  rotation = null\n): { height: number; width: number } {\n  validateParameterUndefinedOrNull(\n    image,\n    'getImageSize: parameter image must not be undefined'\n  );\n  validateParameterUndefinedOrNull(\n    image.width,\n    'getImageSize: parameter image must have width'\n  );\n  validateParameterUndefinedOrNull(\n    image.height,\n    'getImageSize: parameter image must have height'\n  );\n\n  if (isRotated(rotation)) {\n    return {\n      height: image.width,\n      width: image.height,\n    };\n  }\n\n  return {\n    width: image.width,\n    height: image.height,\n  };\n}\n","import calculateTransform from './calculateTransform';\nimport {\n  CPUFallbackEnabledElement,\n  CPUFallbackTransform,\n} from '../../../../types';\n\nexport default function (\n  enabledElement: CPUFallbackEnabledElement\n): CPUFallbackTransform {\n  // Todo: for some reason using the cached transfer after the first call\n  // does not give correct transform.\n  // if (enabledElement.transform) {\n  //   return enabledElement.transform;\n  // }\n\n  return calculateTransform(enabledElement);\n}\n","import getTransform from './getTransform';\nimport { CPUFallbackEnabledElement, Point2 } from '../../../../types';\n\n/**\n * Converts a point in the pixel coordinate system to the canvas coordinate system\n * system.  This can be used to render using canvas context without having the weird\n * side effects that come from scaling and non square pixels\n *\n * @param {HTMLDivElement} element An HTML Element enabled for Cornerstone\n * @param {{x: Number, y: Number}} pt The transformed point in the pixel coordinate system\n *\n * @returns {{x: Number, y: Number}} The input point in the canvas coordinate system\n * @memberof PixelCoordinateSystem\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  pt: Point2\n): Point2 {\n  const transform = getTransform(enabledElement);\n\n  return transform.transformPoint(pt);\n}\n","import getImageFitScale from './getImageFitScale';\nimport { CPUFallbackEnabledElement } from '../../../../types';\n\n/**\n * Resets the camera to the default position. which would be the center of the image.\n * with no translation, no flipping, no zoom and proper scale.\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  resetPan = true,\n  resetZoom = true\n): void {\n  const { canvas, image, viewport } = enabledElement;\n  const scale = getImageFitScale(canvas, image, 0).scaleFactor;\n\n  viewport.vflip = false;\n  viewport.hflip = false;\n\n  if (resetPan) {\n    viewport.translation.x = 0;\n    viewport.translation.y = 0;\n  }\n\n  if (resetZoom) {\n    viewport.displayedArea.tlhc.x = 1;\n    viewport.displayedArea.tlhc.y = 1;\n    viewport.displayedArea.brhc.x = image.columns;\n    viewport.displayedArea.brhc.y = image.rows;\n\n    viewport.scale = scale;\n  }\n}\n","import fitToWindow from './fitToWindow';\nimport getImageSize from './getImageSize';\nimport { CPUFallbackEnabledElement } from '../../../../types';\n\n/**\n * This module is responsible for enabling an element to display images with cornerstone\n *\n * @param {HTMLDivElement} element The DOM element enabled for Cornerstone\n * @param {HTMLDivElement} canvas The Canvas DOM element within the DOM element enabled for Cornerstone\n * @returns {void}\n */\nfunction setCanvasSize(enabledElement: CPUFallbackEnabledElement) {\n  const { canvas } = enabledElement;\n  const { clientWidth, clientHeight } = canvas;\n\n  // Set the canvas to be same resolution as the client.\n  if (canvas.width !== clientWidth || canvas.height !== clientHeight) {\n    canvas.width = clientWidth;\n    canvas.height = clientHeight;\n  }\n}\n\n/**\n * Checks if the image of a given enabled element fitted the window\n * before the resize\n *\n * @param {EnabledElement} enabledElement The Cornerstone Enabled Element\n * @param {number} oldCanvasWidth The width of the canvas before the resize\n * @param {number} oldCanvasHeight The height of the canvas before the resize\n * @return {Boolean} true if it fitted the windows, false otherwise\n */\nfunction wasFitToWindow(\n  enabledElement: CPUFallbackEnabledElement,\n  oldCanvasWidth: number,\n  oldCanvasHeight: number\n): boolean {\n  const scale = enabledElement.viewport.scale;\n  const imageSize = getImageSize(\n    enabledElement.image,\n    enabledElement.viewport.rotation\n  );\n  const imageWidth = Math.round(imageSize.width * scale);\n  const imageHeight = Math.round(imageSize.height * scale);\n  const x = enabledElement.viewport.translation.x;\n  const y = enabledElement.viewport.translation.y;\n\n  return (\n    (imageWidth === oldCanvasWidth && imageHeight <= oldCanvasHeight) ||\n    (imageWidth <= oldCanvasWidth &&\n      imageHeight === oldCanvasHeight &&\n      x === 0 &&\n      y === 0)\n  );\n}\n\n/**\n * Rescale the image relative to the changed size of the canvas\n *\n * @param {EnabledElement} enabledElement The Cornerstone Enabled Element\n * @param {number} oldCanvasWidth The width of the canvas before the resize\n * @param {number} oldCanvasHeight The height of the canvas before the resize\n * @return {void}\n */\nfunction relativeRescale(\n  enabledElement: CPUFallbackEnabledElement,\n  oldCanvasWidth: number,\n  oldCanvasHeight: number\n): void {\n  const scale = enabledElement.viewport.scale;\n  const canvasWidth = enabledElement.canvas.width;\n  const canvasHeight = enabledElement.canvas.height;\n  const relWidthChange = canvasWidth / oldCanvasWidth;\n  const relHeightChange = canvasHeight / oldCanvasHeight;\n  const relChange = Math.sqrt(relWidthChange * relHeightChange);\n\n  enabledElement.viewport.scale = relChange * scale;\n}\n\n/**\n * Resizes an enabled element and optionally fits the image to window\n *\n * @param {HTMLDivElement} element The DOM element enabled for Cornerstone\n * @param {Boolean} forceFitToWindow true to to force a refit, false to rescale accordingly\n * @returns {void}\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  forceFitToWindow = false\n): void {\n  const oldCanvasWidth = enabledElement.canvas.width;\n  const oldCanvasHeight = enabledElement.canvas.height;\n\n  setCanvasSize(enabledElement);\n\n  if (enabledElement.image === undefined) {\n    return;\n  }\n\n  if (\n    forceFitToWindow ||\n    wasFitToWindow(enabledElement, oldCanvasWidth, oldCanvasHeight)\n  ) {\n    // Fit the image to the window again if it fitted before the resize\n    fitToWindow(enabledElement);\n  } else {\n    // Adapt the scale of a zoomed or panned image relative to the size change\n    relativeRescale(enabledElement, oldCanvasWidth, oldCanvasHeight);\n  }\n}\n","import getImageFitScale from './getImageFitScale';\nimport { CPUFallbackEnabledElement } from '../../../../types';\n\n/**\n * Adjusts an image's scale and translation so the image is centered and all pixels\n * in the image are viewable.\n *\n * @param element - The Cornerstone element to update\n */\nexport default function (enabledElement: CPUFallbackEnabledElement): void {\n  const { image } = enabledElement;\n\n  // The new scale is the minimum of the horizontal and vertical scale values\n  enabledElement.viewport.scale = getImageFitScale(\n    enabledElement.canvas,\n    image,\n    enabledElement.viewport.rotation\n  ).scaleFactor;\n\n  enabledElement.viewport.translation.x = 0;\n  enabledElement.viewport.translation.y = 0;\n}\n","import vtkVolume from '@kitware/vtk.js/Rendering/Core/Volume';\n\nimport { VolumeActor } from './../../types/IActor';\nimport { VoiModifiedEventDetail } from './../../types/EventTypes';\nimport { loadVolume } from '../../loaders/volumeLoader';\nimport createVolumeMapper from './createVolumeMapper';\nimport BlendModes from '../../enums/BlendModes';\nimport { triggerEvent } from '../../utilities';\nimport { Events } from '../../enums';\nimport setDefaultVolumeVOI from './setDefaultVolumeVOI';\n\ninterface createVolumeActorInterface {\n  volumeId: string;\n  callback?: ({\n    volumeActor,\n    volumeId,\n  }: {\n    volumeActor: VolumeActor;\n    volumeId: string;\n  }) => void;\n  blendMode?: BlendModes;\n}\n\n/**\n * Given a volumeId, it creates a vtk volume actor and returns it. If\n * callback is provided, it will be called with the volume actor and the\n * volumeId. If blendMode is provided, it will be set on the volume actor.\n *\n * @param props - createVolumeActorInterface\n * @returns A promise that resolves to a VolumeActor.\n */\nasync function createVolumeActor(\n  props: createVolumeActorInterface,\n  element: HTMLDivElement,\n  viewportId: string,\n  suppressEvents = false,\n  useNativeDataType = false\n): Promise<VolumeActor> {\n  const { volumeId, callback, blendMode } = props;\n\n  const imageVolume = await loadVolume(volumeId);\n\n  if (!imageVolume) {\n    throw new Error(\n      `imageVolume with id: ${imageVolume.volumeId} does not exist`\n    );\n  }\n\n  const { imageData, vtkOpenGLTexture } = imageVolume;\n\n  const volumeMapper = createVolumeMapper(imageData, vtkOpenGLTexture);\n\n  if (blendMode) {\n    volumeMapper.setBlendMode(blendMode);\n  }\n\n  const volumeActor = vtkVolume.newInstance();\n  volumeActor.setMapper(volumeMapper);\n\n  const numberOfComponents = imageData\n    .getPointData()\n    .getScalars()\n    .getNumberOfComponents();\n\n  if (numberOfComponents === 3) {\n    volumeActor.getProperty().setIndependentComponents(false);\n  }\n\n  await setDefaultVolumeVOI(volumeActor, imageVolume, useNativeDataType);\n\n  if (callback) {\n    callback({ volumeActor, volumeId });\n  }\n\n  if (!suppressEvents) {\n    triggerVOIModified(element, viewportId, volumeActor, volumeId);\n  }\n\n  return volumeActor;\n}\n\nfunction triggerVOIModified(\n  element: HTMLDivElement,\n  viewportId: string,\n  volumeActor: VolumeActor,\n  volumeId: string\n) {\n  const voiRange = volumeActor\n    .getProperty()\n    .getRGBTransferFunction(0)\n    .getRange();\n\n  const voiModifiedEventDetail: VoiModifiedEventDetail = {\n    viewportId,\n    range: {\n      lower: voiRange[0],\n      upper: voiRange[1],\n    },\n    volumeId,\n  };\n\n  triggerEvent(element, Events.VOI_MODIFIED, voiModifiedEventDetail);\n}\n\nexport default createVolumeActor;\n","import {\n  VolumeActor,\n  IImageVolume,\n  VOIRange,\n  ScalingParameters,\n} from '../../types';\nimport { loadAndCacheImage } from '../../loaders/imageLoader';\nimport * as metaData from '../../metaData';\nimport { getMinMax, windowLevel } from '../../utilities';\nimport { RequestType } from '../../enums';\nimport cache from '../../cache';\n\nconst PRIORITY = 0;\nconst REQUEST_TYPE = RequestType.Prefetch;\n\n/**\n * It sets the default window level of an image volume based on the VOI.\n * It first look for the VOI in the metadata and if it is not found, it\n * loads the middle slice image (middle imageId) and based on its min\n * and max pixel values, it calculates the VOI.\n * Finally it sets the VOI on the volumeActor transferFunction\n * @param volumeActor - The volume actor\n * @param imageVolume - The image volume that we want to set the VOI for.\n * @param useNativeDataType -  The image data type is native or Float32Array\n */\nasync function setDefaultVolumeVOI(\n  volumeActor: VolumeActor,\n  imageVolume: IImageVolume,\n  useNativeDataType: boolean\n): Promise<void> {\n  let voi = getVOIFromMetadata(imageVolume);\n\n  if (!voi && imageVolume?.imageIds?.length) {\n    voi = await getVOIFromMinMax(imageVolume, useNativeDataType);\n    voi = handlePreScaledVolume(imageVolume, voi);\n  }\n  // if (!voi || voi.lower === undefined || voi.upper === undefined) {\n  //   throw new Error(\n  //     'Could not get VOI from metadata, nor from the min max of the image middle slice'\n  //   );\n  // }\n  if (\n    (voi?.lower === 0 && voi?.upper === 0) ||\n    voi?.lower === undefined ||\n    voi?.upper === undefined\n  ) {\n    return;\n  }\n\n  volumeActor\n    .getProperty()\n    .getRGBTransferFunction(0)\n    .setMappingRange(voi.lower, voi.upper);\n}\n\nfunction handlePreScaledVolume(imageVolume: IImageVolume, voi: VOIRange) {\n  const imageIds = imageVolume.imageIds;\n  const imageIdIndex = Math.floor(imageIds.length / 2);\n  const imageId = imageIds[imageIdIndex];\n\n  const generalSeriesModule =\n    metaData.get('generalSeriesModule', imageId) || {};\n\n  /**\n   * If the volume is prescaled and the modality is PT Sometimes you get super high\n   * values at the peak and it skews the min/max so nothing useful is displayed\n   * Therefore, we follow the majority of other viewers and we set the min/max\n   * for the scaled PT to be 0, 5\n   */\n  if (_isCurrentImagePTPrescaled(generalSeriesModule.modality, imageVolume)) {\n    return {\n      lower: 0,\n      upper: 5,\n    };\n  }\n\n  return voi;\n}\n\n/**\n * Get the VOI from the metadata of the middle slice of the image volume or the metadata of the image volume\n * It checks the metadata for the VOI and if it is not found, it returns null\n *\n * @param imageVolume - The image volume that we want to get the VOI from.\n * @returns VOIRange with lower and upper values\n */\nfunction getVOIFromMetadata(imageVolume: IImageVolume): VOIRange {\n  const { imageIds, metadata } = imageVolume;\n  let voi;\n  if (imageIds.length) {\n    const imageIdIndex = Math.floor(imageIds.length / 2);\n    const imageId = imageIds[imageIdIndex];\n    const voiLutModule = metaData.get('voiLutModule', imageId);\n    if (voiLutModule && voiLutModule.windowWidth && voiLutModule.windowCenter) {\n      const { windowWidth, windowCenter } = voiLutModule;\n      voi = {\n        windowWidth: Array.isArray(windowWidth) ? windowWidth[0] : windowWidth,\n        windowCenter: Array.isArray(windowCenter)\n          ? windowCenter[0]\n          : windowCenter,\n      };\n    }\n  } else {\n    voi = metadata?.voiLut?.[0];\n  }\n  if (voi) {\n    const { lower, upper } = windowLevel.toLowHighRange(\n      Number(voi.windowWidth),\n      Number(voi.windowCenter)\n    );\n    return {\n      lower,\n      upper,\n    };\n  }\n}\n\n/**\n * It loads the middle slice image (middle imageId) and based on its min\n * and max pixel values, it calculates the VOI.\n *\n * @param imageVolume - The image volume that we want to get the VOI from.\n * @param useNativeDataType -  The image data type is native or Float32Array\n * @returns The VOIRange with lower and upper values\n */\nasync function getVOIFromMinMax(\n  imageVolume: IImageVolume,\n  useNativeDataType: boolean\n): Promise<VOIRange> {\n  const { imageIds } = imageVolume;\n  const scalarData = imageVolume.getScalarData();\n\n  // Get the middle image from the list of imageIds\n  const imageIdIndex = Math.floor(imageIds.length / 2);\n  const imageId = imageVolume.imageIds[imageIdIndex];\n  const generalSeriesModule =\n    metaData.get('generalSeriesModule', imageId) || {};\n  const { modality } = generalSeriesModule;\n  const modalityLutModule = metaData.get('modalityLutModule', imageId) || {};\n\n  const numImages = imageIds.length;\n  const bytesPerImage = scalarData.byteLength / numImages;\n  const voxelsPerImage = scalarData.length / numImages;\n  const bytePerPixel = scalarData.BYTES_PER_ELEMENT;\n\n  const scalingParameters: ScalingParameters = {\n    rescaleSlope: modalityLutModule.rescaleSlope,\n    rescaleIntercept: modalityLutModule.rescaleIntercept,\n    modality,\n  };\n\n  let scalingParametersToUse;\n  if (modality === 'PT') {\n    const suvFactor = metaData.get('scalingModule', imageId);\n\n    if (suvFactor) {\n      scalingParametersToUse = {\n        ...scalingParameters,\n        suvbw: suvFactor.suvbw,\n      };\n    }\n  }\n\n  const byteOffset = imageIdIndex * bytesPerImage;\n\n  const options = {\n    targetBuffer: {\n      type: useNativeDataType ? undefined : 'Float32Array',\n    },\n    priority: PRIORITY,\n    requestType: REQUEST_TYPE,\n    useNativeDataType,\n    preScale: {\n      enabled: true,\n      scalingParameters: scalingParametersToUse,\n    },\n  };\n\n  // Loading the middle slice image for a volume has two scenarios, the first one is that\n  // uses the same volumeLoader which might not resolve to an image (since for performance\n  // reasons volumes' pixelData is set via offset and length on the volume arrayBuffer\n  // when each slice is loaded). The second scenario is that the image might not reach\n  // to the volumeLoader, and an already cached image (with Image object) is used\n  // instead. For the first scenario, we use the arrayBuffer of the volume to get the correct\n  // slice for the imageScalarData, and for the second scenario we use the getPixelData\n  // on the Cornerstone IImage object to get the pixel data.\n  // Note: we don't want to use the derived or generated images for setting the\n  // default VOI, because they are not the original. This is ugly but don't\n  // know how to do it better.\n  let image = cache.getImage(imageId);\n\n  if (!imageVolume.referencedImageIds?.length) {\n    // we should ignore the cache here,\n    // since we want to load the image from with the most\n    // recent prescale settings\n    image = await loadAndCacheImage(imageId, { ...options, ignoreCache: true });\n  }\n\n  const imageScalarData = image\n    ? image.getPixelData()\n    : _getImageScalarDataFromImageVolume(\n        imageVolume,\n        byteOffset,\n        bytePerPixel,\n        voxelsPerImage\n      );\n\n  // Get the min and max pixel values of the middle slice\n  const { min, max } = getMinMax(imageScalarData);\n\n  return {\n    lower: min,\n    upper: max,\n  };\n}\n\nfunction _getImageScalarDataFromImageVolume(\n  imageVolume,\n  byteOffset,\n  bytePerPixel,\n  voxelsPerImage\n) {\n  const { scalarData } = imageVolume;\n  const { buffer } = scalarData;\n  if (scalarData.BYTES_PER_ELEMENT !== bytePerPixel) {\n    byteOffset *= scalarData.BYTES_PER_ELEMENT / bytePerPixel;\n  }\n\n  const TypedArray = scalarData.constructor;\n  const imageScalarData = new TypedArray(voxelsPerImage);\n\n  const volumeBufferView = new TypedArray(buffer, byteOffset, voxelsPerImage);\n\n  imageScalarData.set(volumeBufferView);\n\n  return imageScalarData;\n}\n\nfunction _isCurrentImagePTPrescaled(modality, imageVolume) {\n  if (modality !== 'PT' || !imageVolume.isPreScaled) {\n    return false;\n  }\n\n  if (!imageVolume.scaling?.PT.suvbw) {\n    return false;\n  }\n\n  return true;\n}\n\nexport default setDefaultVolumeVOI;\n","import macro from '@kitware/vtk.js/macros';\nimport vtkVolumeMapper from '@kitware/vtk.js/Rendering/Core/VolumeMapper';\n\n/**\n * vtkSharedVolumeMapper - A derived class of the core vtkVolumeMapper class\n * the scalar texture in as an argument. This is so we can share the same texture\n * memory across different mappers/actors, so we don't duplicate memory usage.\n *\n *\n *\n * @param {*} publicAPI The public API to extend\n * @param {*} model The private model to extend.\n * @hidden\n */\nfunction vtkSharedVolumeMapper(publicAPI, model) {\n  model.classHierarchy.push('vtkSharedVolumeMapper');\n\n  const superDelete = publicAPI.delete;\n  publicAPI.delete = () => {\n    model.scalarTexture = null;\n    superDelete();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  scalarTexture: null,\n};\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  vtkVolumeMapper.extend(publicAPI, model, initialValues);\n\n  macro.setGet(publicAPI, model, ['scalarTexture']);\n\n  // Object methods\n  vtkSharedVolumeMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkSharedVolumeMapper');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","/*\n * Constants\n */\n\nconst DEFAULT_SETTINGS = Symbol('DefaultSettings');\nconst RUNTIME_SETTINGS = Symbol('RuntimeSettings');\nconst OBJECT_SETTINGS_MAP = Symbol('ObjectSettingsMap');\nconst DICTIONARY = Symbol('Dictionary');\n\n/**\n * Settings\n */\nexport default class Settings {\n  constructor(base?: Settings) {\n    const dictionary = Object.create(\n      (base instanceof Settings && DICTIONARY in base\n        ? base[DICTIONARY]\n        : null) as object\n    );\n    Object.seal(\n      Object.defineProperty(this, DICTIONARY, {\n        value: dictionary,\n      })\n    );\n  }\n\n  set(key: string, value: unknown): boolean {\n    return set(this[DICTIONARY], key, value, null);\n  }\n\n  get(key: string): unknown {\n    return get(this[DICTIONARY], key);\n  }\n\n  /**\n   * Unset a specific key or a set of keys within a namespace when the key ends with a dot (ASCII #46).\n   * If the key is \".\", all keys will be removed and this command works as a reset.\n   * @param key - name The key to be unset or a namespace.\n   * @returns boolean\n   */\n  unset(key: string): boolean {\n    return unset(this[DICTIONARY], key + '');\n  }\n\n  forEach(callback: (key: string, value: unknown) => void): void {\n    iterate(this[DICTIONARY], callback);\n  }\n\n  extend(): Settings {\n    return new Settings(this);\n  }\n\n  /**\n   * Recursively import all properties from the given plain JavaScript object.\n   * This method has the opposite effect of the `dump` method.\n   * @param root - The root object whose properties will\n   * be imported.\n   */\n  import(root: Record<string, unknown>): void {\n    if (isPlainObject(root)) {\n      Object.keys(root).forEach((key) => {\n        set(this[DICTIONARY], key, root[key], null);\n      });\n    }\n  }\n\n  /**\n   * Build a JSON representation of the current internal state of this settings\n   * object. The returned object can be safely passed to `JSON.stringify`\n   * function.\n   * @returns The JSON representation of the current\n   * state of this settings instance\n   */\n  dump(): Record<string, unknown> {\n    const context = {};\n    iterate(this[DICTIONARY], (key, value) => {\n      if (typeof value !== 'undefined') {\n        deepSet(context, key, value);\n      }\n    });\n    return context;\n  }\n\n  static assert(subject: Settings): Settings {\n    return subject instanceof Settings\n      ? subject\n      : Settings.getRuntimeSettings();\n  }\n\n  static getDefaultSettings(subfield = null): Settings | any {\n    let defaultSettings = Settings[DEFAULT_SETTINGS];\n    if (!(defaultSettings instanceof Settings)) {\n      defaultSettings = new Settings();\n      Settings[DEFAULT_SETTINGS] = defaultSettings;\n    }\n\n    // Given subfield of 'segmentation' it will return all settings\n    // that starts with segmentation.*\n    if (subfield) {\n      const settingObj = {};\n      defaultSettings.forEach((name: string) => {\n        if (name.startsWith(subfield)) {\n          const setting = name.split(`${subfield}.`)[1];\n          settingObj[setting] = defaultSettings.get(name);\n        }\n      });\n      return settingObj;\n    }\n\n    return defaultSettings;\n  }\n\n  static getRuntimeSettings(): Settings {\n    let runtimeSettings = Settings[RUNTIME_SETTINGS];\n    if (!(runtimeSettings instanceof Settings)) {\n      runtimeSettings = new Settings(Settings.getDefaultSettings());\n      Settings[RUNTIME_SETTINGS] = runtimeSettings;\n    }\n    return runtimeSettings;\n  }\n\n  static getObjectSettings(subject: unknown, from?: unknown): Settings {\n    let settings = null;\n    if (subject instanceof Settings) {\n      settings = subject;\n    } else if (typeof subject === 'object' && subject !== null) {\n      let objectSettingsMap = Settings[OBJECT_SETTINGS_MAP];\n      if (!(objectSettingsMap instanceof WeakMap)) {\n        objectSettingsMap = new WeakMap();\n        Settings[OBJECT_SETTINGS_MAP] = objectSettingsMap;\n      }\n      settings = objectSettingsMap.get(subject);\n      if (!(settings instanceof Settings)) {\n        settings = new Settings(\n          Settings.assert(Settings.getObjectSettings(from))\n        );\n        objectSettingsMap.set(subject, settings);\n      }\n    }\n    return settings;\n  }\n\n  static extendRuntimeSettings(): Settings {\n    return Settings.getRuntimeSettings().extend();\n  }\n}\n\n/*\n * Local Helpers\n */\n\nfunction unset(dictionary: Record<string, unknown>, name: string): boolean {\n  if (name.endsWith('.')) {\n    let deleteCount = 0;\n    const namespace = name;\n    const base = namespace.slice(0, -1);\n    const deleteAll = base.length === 0;\n    for (const key in dictionary) {\n      if (\n        Object.prototype.hasOwnProperty.call(dictionary, key) &&\n        (deleteAll || key.startsWith(namespace) || key === base)\n      ) {\n        delete dictionary[key];\n        ++deleteCount;\n      }\n    }\n    return deleteCount > 0;\n  }\n  return delete dictionary[name];\n}\n\nfunction iterate(\n  dictionary: Record<string, unknown>,\n  callback: (key: string, value: unknown) => void\n): void {\n  for (const key in dictionary) {\n    callback(key, dictionary[key]);\n  }\n}\n\nfunction setAll(\n  dictionary: Record<string, unknown>,\n  prefix: string,\n  record: Record<string, unknown>,\n  references: WeakSet<Record<string, unknown>>\n): boolean {\n  let failCount: number;\n  if (references.has(record)) {\n    return set(dictionary, prefix, null, references);\n  }\n  references.add(record);\n  failCount = 0;\n  for (const field in record) {\n    if (Object.prototype.hasOwnProperty.call(record, field)) {\n      const key = field.length === 0 ? prefix : `${prefix}.${field}`;\n      if (!set(dictionary, key, record[field], references)) {\n        ++failCount;\n      }\n    }\n  }\n  references.delete(record);\n  return failCount === 0;\n}\n\n/**\n * Set the key-value pair on a given dictionary. If the given value is a\n * plain javascript object, every property of that object will also be set.\n * @param dictionary {Record<string, unknown>} The target dictionary\n * @param key {string} The given key\n * @param value {unknown} The given value\n * @param references {WeakSet<Record<string, unknown>>} references is a WeakSet\n *  instance used to keep track of which objects have already been iterated\n *  through preventing thus possible stack overflows caused by cyclic references\n * @returns {boolean} Returns true if every given key-value pair has been\n * successfully set\n */\nfunction set(\n  dictionary: Record<string, unknown>,\n  key: string,\n  value: unknown,\n  references: WeakSet<Record<string, unknown>>\n): boolean {\n  if (isValidKey(key)) {\n    if (isPlainObject(value)) {\n      return setAll(\n        dictionary,\n        key,\n        value as Record<string, unknown>,\n        references instanceof WeakSet ? references : new WeakSet()\n      );\n    }\n    dictionary[key] = value;\n    return true;\n  }\n  return false;\n}\n\nfunction get(dictionary: Record<string, unknown>, key: string): unknown {\n  return dictionary[key];\n}\n\n/**\n * Make sure the -provided key correctly formatted.\n * e.g.:\n *  \"my.cool.property\" (valid)\n *  \"my.cool.property.\" (invalid)\n *  \".my.cool.property\" (invalid)\n *  \"my.cool..property\" (invalid)\n * @param key {string} The property name to be used as key within the internal\n *  dictionary\n * @returns {boolean} True on success, false otherwise\n */\nfunction isValidKey(key: string): boolean {\n  let last: number, current: number, previous: number;\n  if (typeof key !== 'string' || (last = key.length - 1) < 0) {\n    return false;\n  }\n  previous = -1;\n  while ((current = key.indexOf('.', previous + 1)) >= 0) {\n    if (current - previous < 2 || current === last) {\n      return false;\n    }\n    previous = current;\n  }\n  return true;\n}\n\nfunction isPlainObject(subject: unknown) {\n  if (typeof subject === 'object' && subject !== null) {\n    const prototype = Object.getPrototypeOf(subject);\n    if (prototype === Object.prototype || prototype === null) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction deepSet(context, key, value) {\n  const separator = key.indexOf('.');\n  if (separator >= 0) {\n    const subKey = key.slice(0, separator);\n    let subContext = context[subKey];\n    if (typeof subContext !== 'object' || subContext === null) {\n      const subContextValue = subContext;\n      subContext = {};\n      if (typeof subContextValue !== 'undefined') {\n        subContext[''] = subContextValue;\n      }\n      context[subKey] = subContext;\n    }\n    deepSet(subContext, key.slice(separator + 1, key.length), value);\n  } else {\n    context[key] = value;\n  }\n}\n\n/**\n * Initial Settings for the repository\n */\nSettings.getDefaultSettings().set('useCursors', true);\n","import {\n  ICache,\n  IImage,\n  IGeometry,\n  IImageLoadObject,\n  IVolumeLoadObject,\n  IGeometryLoadObject,\n  ICachedImage,\n  ICachedVolume,\n  ICachedGeometry,\n  EventTypes,\n  IImageVolume,\n} from '../types';\nimport { triggerEvent, imageIdToURI } from '../utilities';\nimport eventTarget from '../eventTarget';\nimport Events from '../enums/Events';\nimport { ImageVolume } from './classes/ImageVolume';\n\nconst ONE_GB = 1073741824;\n\n/**\n * Stores images, volumes and geometry.\n * There are two sizes - the max cache size, that controls the overal maximum\n * size, and the instance size, which controls how big any single object can\n * be.  Defaults are 3 GB and 2 GB - 8 bytes (just enough to allow allocating it\n * without crashing).\n * The 3 gb is tuned to the chromium garbage collection cycle to allow image volumes\n * to be used/discarded.\n */\nclass Cache implements ICache {\n  // used to store image data (2d)\n  private readonly _imageCache = new Map<string, ICachedImage>(); // volatile space\n  // used to store volume data (3d)\n  private readonly _volumeCache = new Map<string, ICachedVolume>(); // non-volatile space\n  // Todo: contour for now, but will be used for surface, etc.\n  private readonly _geometryCache: Map<string, ICachedGeometry>;\n\n  private _imageCacheSize = 0;\n  private _volumeCacheSize = 0;\n  private _maxCacheSize = 3 * ONE_GB;\n  private _maxInstanceSize = 4 * ONE_GB - 8;\n\n  constructor() {\n    // used to store object data (contour, surface, etc.)\n    this._geometryCache = new Map();\n  }\n\n  /**\n   * Set the maximum cache Size\n   *\n   * Maximum cache size should be set before adding the data.  If set after,\n   * and it is smaller than the current size, will cause issues.\n   *\n   * @param newMaxCacheSize -  new maximum cache size\n   *\n   */\n  public setMaxCacheSize = (newMaxCacheSize: number): void => {\n    if (!newMaxCacheSize || typeof newMaxCacheSize !== 'number') {\n      const errorMessage = `New max cacheSize ${this._maxCacheSize} should be defined and should be a number.`;\n      throw new Error(errorMessage);\n    }\n\n    this._maxCacheSize = newMaxCacheSize;\n  };\n\n  /**\n   * Checks if there is enough space in the cache for requested byte size\n   *\n   * It returns false, if the sum of volatile (image) cache and unallocated cache\n   * is less than the requested byteLength\n   *\n   * @param byteLength - byte length of requested byte size\n   *\n   * @returns - boolean indicating if there is enough space in the cache\n   */\n  public isCacheable = (byteLength: number): boolean => {\n    if (byteLength > this._maxInstanceSize) {\n      return false;\n    }\n    const unallocatedSpace = this.getBytesAvailable();\n    const imageCacheSize = this._imageCacheSize;\n    const availableSpace = unallocatedSpace + imageCacheSize;\n\n    return availableSpace > byteLength;\n  };\n\n  /**\n   * Returns maximum CacheSize allowed\n   *\n   * @returns maximum allowed cache size\n   */\n  public getMaxCacheSize = (): number => this._maxCacheSize;\n\n  /**\n   * Returns maximum size of a single instance (volume or single image)\n   *\n   * @returns maximum instance size\n   */\n  public getMaxInstanceSize = (): number => this._maxInstanceSize;\n\n  /**\n   * Returns current size of the cache\n   *\n   * @returns current size of the cache\n   */\n  public getCacheSize = (): number =>\n    this._imageCacheSize + this._volumeCacheSize;\n\n  /**\n   * Returns the unallocated size of the cache\n   *\n   */\n  public getBytesAvailable(): number {\n    return this.getMaxCacheSize() - this.getCacheSize();\n  }\n\n  /**\n   * Deletes the imageId from the image cache\n   *\n   * @param imageId - imageId\n   *\n   */\n  private _decacheImage = (imageId: string) => {\n    const { imageLoadObject } = this._imageCache.get(imageId);\n\n    // Cancel any in-progress loading\n    if (imageLoadObject.cancelFn) {\n      imageLoadObject.cancelFn();\n    }\n\n    if (imageLoadObject.decache) {\n      imageLoadObject.decache();\n    }\n\n    this._imageCache.delete(imageId);\n  };\n\n  /**\n   * Deletes the volumeId from the volume cache\n   *\n   * @param volumeId - volumeId\n   *\n   */\n  private _decacheVolume = (volumeId: string) => {\n    const cachedVolume = this._volumeCache.get(volumeId);\n    const { volumeLoadObject, volume } = cachedVolume;\n\n    if (volume.cancelLoading) {\n      volume.cancelLoading();\n    }\n\n    if (volume.imageData) {\n      volume.imageData.delete();\n    }\n\n    // if we had views for the images of the volume, we need to restore them\n    // to avoid memory leaks\n    this._restoreImagesFromBuffer(volume);\n\n    if (volumeLoadObject.cancelFn) {\n      // Cancel any in-progress loading\n      volumeLoadObject.cancelFn();\n    }\n\n    if (volumeLoadObject.decache) {\n      volumeLoadObject.decache();\n    }\n\n    this._volumeCache.delete(volumeId);\n  };\n\n  /**\n   * Deletes all the images and volumes in the cache\n   *\n   * Relevant events are fired for each decached image (IMAGE_CACHE_IMAGE_REMOVED) and\n   * the decached volume (VOLUME_CACHE_VOLUME_REMOVED).\n   *\n   * @fires Events.IMAGE_CACHE_IMAGE_REMOVED\n   * @fires Events.VOLUME_CACHE_VOLUME_REMOVED\n   *\n   */\n  public purgeCache = (): void => {\n    const imageIterator = this._imageCache.keys();\n\n    /* eslint-disable no-constant-condition */\n    while (true) {\n      const { value: imageId, done } = imageIterator.next();\n\n      if (done) {\n        break;\n      }\n\n      this.removeImageLoadObject(imageId);\n\n      triggerEvent(eventTarget, Events.IMAGE_CACHE_IMAGE_REMOVED, { imageId });\n    }\n\n    this.purgeVolumeCache();\n  };\n\n  /**\n   * Deletes all the volumes in the cache\n   */\n  public purgeVolumeCache = (): void => {\n    const volumeIterator = this._volumeCache.keys();\n\n    /* eslint-disable no-constant-condition */\n    while (true) {\n      const { value: volumeId, done } = volumeIterator.next();\n\n      if (done) {\n        break;\n      }\n\n      this.removeVolumeLoadObject(volumeId);\n\n      triggerEvent(eventTarget, Events.VOLUME_CACHE_VOLUME_REMOVED, {\n        volumeId,\n      });\n    }\n  };\n\n  /**\n   * Purges the cache if necessary based on the requested number of bytes\n   *\n   * 1) it sorts the volatile (image) cache based on the most recent used images\n   * and starts purging from the oldest ones.\n   * Note: for a volume, if the volume-related image Ids is provided, it starts\n   * by purging the none-related image Ids (those that are not related to the\n   * current volume)\n   * 2) For a volume, if we purge all images that won't be included in this volume and still\n   * don't have enough unallocated space, purge images that will be included\n   * in this volume until we have enough space. These will need to be\n   * re-fetched, but we must do this not to straddle over the given memory\n   * limit, even for a short time, as this may crash the application.\n   *\n   * @fires Events.IMAGE_CACHE_IMAGE_REMOVED\n   *\n   * @param numBytes - Number of bytes for the image/volume that is\n   * going to be stored inside the cache\n   * @param volumeImageIds - list of imageIds that correspond to the\n   * volume whose numberOfBytes we want to store in the cache.\n   * @returns bytesAvailable or undefined in purging cache\n   * does not successfully make enough space for the requested number of bytes\n   */\n  public decacheIfNecessaryUntilBytesAvailable(\n    numBytes: number,\n    volumeImageIds?: Array<string>\n  ): number | undefined {\n    let bytesAvailable = this.getBytesAvailable();\n\n    // If max cache size has not been exceeded, do nothing\n    if (bytesAvailable >= numBytes) {\n      return bytesAvailable;\n    }\n\n    let cachedImages = Array.from(this._imageCache.values());\n\n    // Cache size has been exceeded, create list of images sorted by timeStamp\n    // So we can purge the least recently used image\n    function compare(a, b) {\n      if (a.timeStamp > b.timeStamp) {\n        return 1;\n      }\n      if (a.timeStamp < b.timeStamp) {\n        return -1;\n      }\n\n      return 0;\n    }\n\n    cachedImages.sort(compare);\n    let cachedImageIds = cachedImages.map((im) => im.imageId);\n\n    let imageIdsToPurge = cachedImageIds;\n\n    // if we are making space for a volume, we start by purging the imageIds\n    // that are not related to the volume\n    if (volumeImageIds) {\n      imageIdsToPurge = cachedImageIds.filter(\n        (id) => !volumeImageIds.includes(id)\n      );\n    }\n\n    // Remove images (that are not related to the volume) from volatile cache\n    // until the requested number of bytes become available\n    for (const imageId of imageIdsToPurge) {\n      this.removeImageLoadObject(imageId);\n\n      triggerEvent(eventTarget, Events.IMAGE_CACHE_IMAGE_REMOVED, { imageId });\n\n      bytesAvailable = this.getBytesAvailable();\n      if (bytesAvailable >= numBytes) {\n        return bytesAvailable;\n      }\n    }\n\n    // Remove the imageIds (both volume related and not related)\n    cachedImages = Array.from(this._imageCache.values());\n    cachedImageIds = cachedImages.map((im) => im.imageId);\n\n    // Remove volume-image Ids from volatile cache until the requested number of bytes\n    // become available\n    for (const imageId of cachedImageIds) {\n      this.removeImageLoadObject(imageId);\n\n      triggerEvent(eventTarget, Events.IMAGE_CACHE_IMAGE_REMOVED, { imageId });\n\n      bytesAvailable = this.getBytesAvailable();\n      if (bytesAvailable >= numBytes) {\n        return bytesAvailable;\n      }\n    }\n\n    // Technically we should not reach here, since isCacheable will throw an\n    // error if unallocated + volatile (image) cache cannot fit the upcoming\n    // number of bytes\n  }\n\n  /**\n   * Puts a new image load object into the cache\n   *\n   * First, it creates a CachedImage object and put it inside the imageCache for\n   * the imageId. After the imageLoadObject promise resolves to an image,\n   * it: 1) adds the image into the correct CachedImage object 2) increments the\n   * cache size, 3) triggers IMAGE_CACHE_IMAGE_ADDED  4) Purge the cache if\n   * necessary -- if the cache size is greater than the maximum cache size, it\n   * iterates over the imageCache and decache them one by one until the cache\n   * size becomes less than the maximum allowed cache size\n   *\n   * @fires Events.IMAGE_CACHE_IMAGE_ADDED\n   * @fires Events.CACHE_SIZE_EXCEEDED if the cache size exceeds the maximum\n   *\n   * @param imageId - ImageId for the image\n   * @param imageLoadObject - The object that is loading or loaded the image\n   */\n  public putImageLoadObject(\n    imageId: string,\n    imageLoadObject: IImageLoadObject\n  ): Promise<any> {\n    if (imageId === undefined) {\n      throw new Error('putImageLoadObject: imageId must not be undefined');\n    }\n\n    if (imageLoadObject.promise === undefined) {\n      throw new Error(\n        'putImageLoadObject: imageLoadObject.promise must not be undefined'\n      );\n    }\n\n    if (this._imageCache.has(imageId)) {\n      throw new Error('putImageLoadObject: imageId already in cache');\n    }\n\n    if (\n      imageLoadObject.cancelFn &&\n      typeof imageLoadObject.cancelFn !== 'function'\n    ) {\n      throw new Error(\n        'putImageLoadObject: imageLoadObject.cancel must be a function'\n      );\n    }\n\n    const cachedImage: ICachedImage = {\n      loaded: false,\n      imageId,\n      sharedCacheKey: undefined, // The sharedCacheKey for this imageId.  undefined by default\n      imageLoadObject,\n      timeStamp: Date.now(),\n      sizeInBytes: 0,\n    };\n\n    this._imageCache.set(imageId, cachedImage);\n\n    return imageLoadObject.promise\n      .then((image: IImage) => {\n        if (!this._imageCache.get(imageId)) {\n          // If the image has been purged before being loaded, we stop here.\n          console.warn(\n            'The image was purged from the cache before it completed loading.'\n          );\n          return;\n        }\n\n        if (\n          image.sizeInBytes === undefined ||\n          Number.isNaN(image.sizeInBytes)\n        ) {\n          throw new Error(\n            'putImageLoadObject: image.sizeInBytes must not be undefined'\n          );\n        }\n        if (image.sizeInBytes.toFixed === undefined) {\n          throw new Error(\n            'putImageLoadObject: image.sizeInBytes is not a number'\n          );\n        }\n\n        // check if there is enough space in unallocated + image Cache\n        if (!this.isCacheable(image.sizeInBytes)) {\n          throw new Error(Events.CACHE_SIZE_EXCEEDED);\n        }\n\n        // if there is, decache if necessary\n        this.decacheIfNecessaryUntilBytesAvailable(image.sizeInBytes);\n\n        cachedImage.loaded = true;\n        cachedImage.image = image;\n        cachedImage.sizeInBytes = image.sizeInBytes;\n        this.incrementImageCacheSize(cachedImage.sizeInBytes);\n        const eventDetails: EventTypes.ImageCacheImageAddedEventDetail = {\n          image: cachedImage,\n        };\n\n        triggerEvent(eventTarget, Events.IMAGE_CACHE_IMAGE_ADDED, eventDetails);\n\n        cachedImage.sharedCacheKey = image.sharedCacheKey;\n      })\n      .catch((error) => {\n        // console.warn(error)\n        this._imageCache.delete(imageId);\n        throw error;\n      });\n  }\n\n  /**\n   * Returns the object that is loading a given imageId\n   *\n   * @param imageId - Image ID\n   * @returns IImageLoadObject\n   */\n  public getImageLoadObject(imageId: string): IImageLoadObject {\n    if (imageId === undefined) {\n      throw new Error('getImageLoadObject: imageId must not be undefined');\n    }\n    const cachedImage = this._imageCache.get(imageId);\n\n    if (cachedImage === undefined) {\n      return;\n    }\n\n    // Bump time stamp for cached image\n    cachedImage.timeStamp = Date.now();\n\n    return cachedImage.imageLoadObject;\n  }\n\n  /**\n   * It checks the imageCache for the provided imageId, and returns true\n   * if the image is loaded, false otherwise. Note, this only checks the imageCache\n   * and does not check the volume cache.\n   * @param imageId - image Id to check\n   * @returns boolean\n   */\n  public isLoaded(imageId: string): boolean {\n    const cachedImage = this._imageCache.get(imageId);\n\n    if (!cachedImage) {\n      return false;\n    }\n\n    return cachedImage.loaded;\n  }\n\n  /**\n   * Returns the volume that contains the requested imageId. It will check the\n   * imageIds inside the volume to find a match.\n   *\n   * @param imageId - ImageId\n   * @returns - Volume object\n   */\n  public getVolumeContainingImageId(imageId: string): {\n    volume: IImageVolume;\n    imageIdIndex: number;\n  } {\n    const volumeIds = Array.from(this._volumeCache.keys());\n    const imageIdToUse = imageIdToURI(imageId);\n\n    for (const volumeId of volumeIds) {\n      const cachedVolume = this._volumeCache.get(volumeId);\n      const { volume } = cachedVolume;\n\n      if (!volume?.imageIds?.length) {\n        return;\n      }\n\n      const imageIdIndex = volume.getImageURIIndex(imageIdToUse);\n\n      if (imageIdIndex > -1) {\n        return { volume, imageIdIndex };\n      }\n    }\n  }\n\n  /**\n   * Returns the cached image from the imageCache for the requested imageId.\n   * It first strips the imageId to remove the data loading scheme.\n   *\n   * @param imageId - Image ID\n   * @returns cached image\n   */\n  public getCachedImageBasedOnImageURI(\n    imageId: string\n  ): ICachedImage | undefined {\n    const imageURIToUse = imageIdToURI(imageId);\n\n    const cachedImageIds = Array.from(this._imageCache.keys());\n    const foundImageId = cachedImageIds.find((imageId) => {\n      return imageIdToURI(imageId) === imageURIToUse;\n    });\n\n    if (!foundImageId) {\n      return;\n    }\n\n    return this._imageCache.get(foundImageId);\n  }\n  /**\n   * Puts a new image load object into the cache\n   *\n   * First, it creates a CachedVolume object and put it inside the volumeCache for\n   * the volumeId. After the volumeLoadObject promise resolves to a volume,\n   * it: 1) adds the volume into the correct CachedVolume object inside volumeCache\n   * 2) increments the cache size, 3) triggers VOLUME_CACHE_VOLUME_ADDED  4) Purge\n   * the cache if necessary -- if the cache size is greater than the maximum cache size, it\n   * iterates over the imageCache (not volumeCache) and decache them one by one\n   * until the cache size becomes less than the maximum allowed cache size\n   *\n   * @fires Events.VOLUME_CACHE_VOLUME_ADDED\n   *\n   * @param volumeId - volumeId of the volume\n   * @param volumeLoadObject - The object that is loading or loaded the volume\n   */\n  public putVolumeLoadObject(\n    volumeId: string,\n    volumeLoadObject: IVolumeLoadObject\n  ): Promise<any> {\n    if (volumeId === undefined) {\n      throw new Error('putVolumeLoadObject: volumeId must not be undefined');\n    }\n    if (volumeLoadObject.promise === undefined) {\n      throw new Error(\n        'putVolumeLoadObject: volumeLoadObject.promise must not be undefined'\n      );\n    }\n    if (this._volumeCache.has(volumeId)) {\n      throw new Error(\n        `putVolumeLoadObject: volumeId:${volumeId} already in cache`\n      );\n    }\n    if (\n      volumeLoadObject.cancelFn &&\n      typeof volumeLoadObject.cancelFn !== 'function'\n    ) {\n      throw new Error(\n        'putVolumeLoadObject: volumeLoadObject.cancel must be a function'\n      );\n    }\n\n    // todo: @Erik there are two loaded flags, one inside cachedVolume and the other\n    // inside the volume.loadStatus.loaded, the actual all pixelData loaded is the\n    // loadStatus one. This causes confusion\n    const cachedVolume: ICachedVolume = {\n      loaded: false,\n      volumeId,\n      volumeLoadObject,\n      timeStamp: Date.now(),\n      sizeInBytes: 0,\n    };\n\n    this._volumeCache.set(volumeId, cachedVolume);\n\n    return volumeLoadObject.promise\n      .then((volume: IImageVolume) => {\n        if (!this._volumeCache.get(volumeId)) {\n          // If the image has been purged before being loaded, we stop here.\n          console.warn(\n            'The image was purged from the cache before it completed loading.'\n          );\n          return;\n        }\n\n        if (Number.isNaN(volume.sizeInBytes)) {\n          throw new Error(\n            'putVolumeLoadObject: volume.sizeInBytes must not be undefined'\n          );\n        }\n        if (volume.sizeInBytes.toFixed === undefined) {\n          throw new Error(\n            'putVolumeLoadObject: volume.sizeInBytes is not a number'\n          );\n        }\n\n        // this.isCacheable is called at the volume loader, before requesting\n        // the images of the volume\n\n        this.decacheIfNecessaryUntilBytesAvailable(\n          volume.sizeInBytes,\n          // @ts-ignore: // todo ImageVolume does not have imageIds\n          volume.imageIds\n        );\n\n        // cachedVolume.loaded = true\n        cachedVolume.volume = volume;\n        cachedVolume.sizeInBytes = volume.sizeInBytes;\n        this.incrementVolumeCacheSize(cachedVolume.sizeInBytes);\n\n        const eventDetails: EventTypes.VolumeCacheVolumeAddedEventDetail = {\n          volume: cachedVolume,\n        };\n\n        triggerEvent(\n          eventTarget,\n          Events.VOLUME_CACHE_VOLUME_ADDED,\n          eventDetails\n        );\n      })\n      .catch((error) => {\n        this._volumeCache.delete(volumeId);\n        throw error;\n      });\n  }\n\n  /**\n   * Returns the object that is loading a given volumeId\n   *\n   * @param volumeId - Volume ID\n   * @returns IVolumeLoadObject\n   */\n  public getVolumeLoadObject = (volumeId: string): IVolumeLoadObject => {\n    if (volumeId === undefined) {\n      throw new Error('getVolumeLoadObject: volumeId must not be undefined');\n    }\n    const cachedVolume = this._volumeCache.get(volumeId);\n\n    if (cachedVolume === undefined) {\n      return;\n    }\n\n    // Bump time stamp for cached volume (not used for anything for now)\n    cachedVolume.timeStamp = Date.now();\n\n    return cachedVolume.volumeLoadObject;\n  };\n\n  public getGeometry = (geometryId: string): IGeometry => {\n    if (geometryId == null) {\n      throw new Error('getGeometry: geometryId must not be undefined');\n    }\n\n    const cachedGeometry = this._geometryCache.get(geometryId);\n\n    if (cachedGeometry === undefined) {\n      return;\n    }\n\n    // Bump time stamp for cached geometry (not used for anything for now)\n    cachedGeometry.timeStamp = Date.now();\n\n    return cachedGeometry.geometry;\n  };\n\n  /**\n   * Returns the image associated with the imageId\n   *\n   * @param imageId - image ID\n   * @returns Image\n   */\n  public getImage = (imageId: string): IImage => {\n    if (imageId === undefined) {\n      throw new Error('getImage: imageId must not be undefined');\n    }\n    const cachedImage = this._imageCache.get(imageId);\n\n    if (cachedImage === undefined) {\n      return;\n    }\n\n    // Bump time stamp for cached volume (not used for anything for now)\n    cachedImage.timeStamp = Date.now();\n\n    return cachedImage.image;\n  };\n\n  /**\n   * Returns the volume associated with the volumeId\n   *\n   * @param volumeId - Volume ID\n   * @returns Volume\n   */\n  public getVolume = (volumeId: string): IImageVolume => {\n    if (volumeId === undefined) {\n      throw new Error('getVolume: volumeId must not be undefined');\n    }\n    const cachedVolume = this._volumeCache.get(volumeId);\n\n    if (cachedVolume === undefined) {\n      return;\n    }\n\n    // Bump time stamp for cached volume (not used for anything for now)\n    cachedVolume.timeStamp = Date.now();\n\n    return cachedVolume.volume;\n  };\n\n  /**\n   * Retrieves an array of image volumes from the cache.\n   * @returns An array of image volumes.\n   */\n  public getVolumes = (): Array<IImageVolume> => {\n    const cachedVolumes = Array.from(this._volumeCache.values());\n\n    return cachedVolumes.map((cachedVolume) => cachedVolume.volume);\n  };\n\n  /**\n   * Filters the cached volumes by the specified reference volume ID.\n   * @param volumeId - The ID of the reference volume.\n   * @returns An array of image volumes that have the specified reference volume ID.\n   */\n  public filterVolumesByReferenceId = (\n    volumeId: string\n  ): Array<IImageVolume> => {\n    const cachedVolumes = this.getVolumes();\n\n    return cachedVolumes.filter((volume) => {\n      return volume.referencedVolumeId === volumeId;\n    });\n  };\n\n  /**\n   * Removes the image loader associated with a given Id from the cache\n   *\n   * It increases the cache size after removing the image.\n   *\n   * @fires Events.IMAGE_CACHE_IMAGE_REMOVED\n   *\n   * @param imageId - Image ID\n   */\n  public removeImageLoadObject = (imageId: string): void => {\n    if (imageId === undefined) {\n      throw new Error('removeImageLoadObject: imageId must not be undefined');\n    }\n    const cachedImage = this._imageCache.get(imageId);\n\n    if (cachedImage === undefined) {\n      throw new Error(\n        'removeImageLoadObject: imageId was not present in imageCache'\n      );\n    }\n\n    this.incrementImageCacheSize(-cachedImage.sizeInBytes);\n\n    const eventDetails = {\n      image: cachedImage,\n      imageId,\n    };\n\n    triggerEvent(eventTarget, Events.IMAGE_CACHE_IMAGE_REMOVED, eventDetails);\n    this._decacheImage(imageId);\n  };\n\n  /**\n   * Removes the volume loader associated with a given Id from the cache\n   *\n   * It increases the cache size after removing the image.\n   *\n   * @fires Events.VOLUME_CACHE_VOLUME_REMOVED\n   *\n   * @param imageId - ImageId\n   */\n  public removeVolumeLoadObject = (volumeId: string): void => {\n    if (volumeId === undefined) {\n      throw new Error('removeVolumeLoadObject: volumeId must not be undefined');\n    }\n    const cachedVolume = this._volumeCache.get(volumeId);\n\n    if (cachedVolume === undefined) {\n      throw new Error(\n        'removeVolumeLoadObject: volumeId was not present in volumeCache'\n      );\n    }\n\n    this.incrementVolumeCacheSize(-cachedVolume.sizeInBytes);\n\n    const eventDetails = {\n      volume: cachedVolume,\n      volumeId,\n    };\n\n    triggerEvent(eventTarget, Events.VOLUME_CACHE_VOLUME_REMOVED, eventDetails);\n    this._decacheVolume(volumeId);\n  };\n\n  putGeometryLoadObject = (\n    geometryId: string,\n    geometryLoadObject: IGeometryLoadObject\n  ): Promise<void> => {\n    if (geometryId == undefined) {\n      throw new Error(\n        'putGeometryLoadObject: geometryId must not be undefined'\n      );\n    }\n\n    if (this._geometryCache.has(geometryId)) {\n      throw new Error(\n        'putGeometryLoadObject: geometryId already present in geometryCache'\n      );\n    }\n\n    const cachedGeometry: ICachedGeometry = {\n      geometryId,\n      geometryLoadObject,\n      loaded: false,\n      timeStamp: Date.now(),\n      sizeInBytes: 0,\n    };\n\n    this._geometryCache.set(geometryId, cachedGeometry);\n\n    return geometryLoadObject.promise\n      .then((geometry: IGeometry) => {\n        if (!this._geometryCache.has(geometryId)) {\n          console.warn(\n            'putGeometryLoadObject: geometryId was removed from geometryCache'\n          );\n          return;\n        }\n\n        if (Number.isNaN(geometry.sizeInBytes)) {\n          throw new Error(\n            'putGeometryLoadObject: geometry.sizeInBytes is not a number'\n          );\n        }\n\n        // Todo: fix is cacheable\n\n        cachedGeometry.loaded = true;\n        cachedGeometry.geometry = geometry;\n        cachedGeometry.sizeInBytes = geometry.sizeInBytes;\n\n        // this._incrementGeometryCacheSize(geometry.sizeInBytes);\n\n        const eventDetails = {\n          geometry,\n          geometryId,\n        };\n\n        triggerEvent(\n          eventTarget,\n          Events.GEOMETRY_CACHE_GEOMETRY_ADDED,\n          eventDetails\n        );\n\n        return;\n      })\n      .catch((error) => {\n        this._geometryCache.delete(geometryId);\n        throw error;\n      });\n  };\n\n  /**\n   * Increases the image cache size with the provided increment\n   *\n   * @param increment - bytes length\n   */\n  public incrementImageCacheSize = (increment: number) => {\n    this._imageCacheSize += increment;\n  };\n\n  /**\n   * Increases the cache size with the provided increment\n   *\n   * @param increment - bytes length\n   */\n  public incrementVolumeCacheSize = (increment: number) => {\n    this._volumeCacheSize += increment;\n  };\n\n  /**\n   * Decreases the image cache size with the provided decrement\n   *\n   * @param decrement - bytes length\n   */\n  public decrementImageCacheSize = (decrement: number) => {\n    this._imageCacheSize -= decrement;\n  };\n\n  /**\n   * Decreases the cache size with the provided decrement\n   *\n   * @param decrement - bytes length\n   */\n  public decrementVolumeCacheSize = (decrement: number) => {\n    this._volumeCacheSize -= decrement;\n  };\n\n  /**\n   * This function will restore the images' pixel data from the shared array buffer\n   * back to the individual images when the volume is purged from cache. It ensures\n   * that each image retrieves its correct portion of data from the buffer based on\n   * the previously stored offset and length information.\n   *\n   * @param volumeId - The volumeId whose images need to be restored.\n   */\n  private _restoreImagesFromBuffer(volume: IImageVolume) {\n    if (!(volume instanceof ImageVolume)) {\n      console.warn(\n        'Volume is not an ImageVolume. Cannot restore images from buffer.'\n      );\n      return;\n    }\n\n    // Retrieve the scalar data and the offset map from the volume\n    const scalarData = volume.getScalarData();\n    const imageCacheOffsetMap = volume.imageCacheOffsetMap;\n\n    if (imageCacheOffsetMap.size === 0) {\n      // This happens during testing and isn't an issue\n      // console.warn('No cached images to restore for this volume.');\n      return;\n    }\n\n    // Iterate over each image and restore its pixel data from the shared buffer\n    for (const [imageId, { offset }] of imageCacheOffsetMap) {\n      const image = this.getImage(imageId);\n\n      if (!image) {\n        console.warn(`Image with id ${imageId} not found in cache.`);\n        continue;\n      }\n\n      const viewPixelData = image.getPixelData();\n      const length = viewPixelData.length;\n\n      // Create a new view of the buffer for this specific image\n      // @ts-ignore\n      const pixelData = new viewPixelData.constructor(\n        scalarData.buffer,\n        offset,\n        length\n      );\n\n      // Restore the original getPixelData function and pixelData\n      image.getPixelData = () => pixelData;\n\n      if (image.imageFrame) {\n        image.imageFrame.pixelData = pixelData;\n      }\n\n      delete image.bufferView;\n\n      // Optionally, increment the image cache size again if needed\n      this.incrementImageCacheSize(image.sizeInBytes);\n    }\n\n    console.log(`Images restored from buffer for volume ${volume.volumeId}.`);\n  }\n}\n\n/**\n * This module deals with Caching of images and volumes\n * The cache has two main components: a volatile portion for images and a\n * non-volatile portion for volumes. Individual 2D images are volatile and\n * will be replaced by new images hitting the cache. When you allocate volumes,\n * these are non-volatile and reserve a block of memory from the cache.\n * Volumes must be released manually.\n * We will have a shared block of memory allocated for the entire cache, e.g. 1GB\n * which will be shared for images and volumes.\n *\n * **When a new image is added:**\n * We check if there is enough unallocated + volatile space for the single image\n *\n * if so\n * - We allocate the image in image cache, and if necessary oldest images\n * are decached to match the maximumCacheSize criteria\n * - If a volume contains that imageId, copy it over using TypedArray's set method.\n * If no volumes contain the imageId, the image is fetched by image loaders\n *\n * If not (cache is mostly/completely full with volumes)\n * - throw that the cache does not have enough working space to allocate the image\n *\n *\n * **When a new volume is added:**\n * Check if there is enough unallocated + volatile space to allocate the volume:\n *\n * If so:\n * - Decache oldest images which won't be included in this volume until\n * we have enough free space for the volume\n * - If not enough space from previous space, decache images that will be included\n * in the volume until we have enough free space (These will need to be re-fetched,\n * but we must do this not to straddle over the given memory limit, even for a\n * short time, as this may crash the app)\n * - At this point, if any of the frames (indexed by imageId) are present in the volatile\n * image cache, copy these over to the volume now\n *\n * If not (cache is mostly/completely full with volumes),\n * - throw that the cache does not have enough working space to allocate the volume.\n *\n */\nconst cache = new Cache();\nexport default cache;\nexport { Cache }; // for documentation\n","const EPSILON = 1e-3;\n\nexport default EPSILON;\n","const RENDERING_DEFAULTS = {\n  MINIMUM_SLAB_THICKNESS: 5e-2,\n  MAXIMUM_RAY_DISTANCE: 1e6,\n};\n\nObject.freeze(RENDERING_DEFAULTS);\n\nexport default RENDERING_DEFAULTS;\n","/**\n * Request types for requesting images from the imageLoadPoolManager\n */\nenum RequestType {\n  /** Highest priority for loading*/\n  Interaction = 'interaction',\n  /** Second highest priority for loading*/\n  Thumbnail = 'thumbnail',\n  /** Third highest priority for loading, usually used for image loading in the background*/\n  Prefetch = 'prefetch',\n  /** Lower priority, often used for background computations in the worker */\n  Compute = 'compute',\n}\n\nexport default RequestType;\n","enum ViewportStatus {\n  /** Initial state before any volumes or stacks are available*/\n  NO_DATA = 'noData',\n  /** Stack/volumes are available but are in progress */\n  LOADING = 'loading',\n  /** Ready to be rendered */\n  PRE_RENDER = 'preRender',\n  /** In the midst of a resize */\n  RESIZE = 'resize',\n  /** Rendered image data */\n  RENDERED = 'rendered',\n}\n\nexport default ViewportStatus;\n","import vtkConstants from '@kitware/vtk.js/Rendering/Core/VolumeMapper/Constants';\n\nconst { BlendMode } = vtkConstants;\n\n/**\n * Enums for blendModes for viewport images based on vtk.js\n *\n * It should be noted that if crosshairs are enabled and can modify the slab thickness,\n * then it will not show any difference unless MAXIMUM_INTENSITY_BLEND is set on the viewport\n * as the blend.\n */\nenum BlendModes {\n  /** composite blending - suitable for compositing multiple images */\n  COMPOSITE = BlendMode.COMPOSITE_BLEND,\n  /** maximum intensity projection */\n  MAXIMUM_INTENSITY_BLEND = BlendMode.MAXIMUM_INTENSITY_BLEND,\n  /** minimum intensity projection */\n  MINIMUM_INTENSITY_BLEND = BlendMode.MINIMUM_INTENSITY_BLEND,\n  /** average intensity projection */\n  AVERAGE_INTENSITY_BLEND = BlendMode.AVERAGE_INTENSITY_BLEND,\n}\n\nexport default BlendModes;\n","enum GeometryType {\n  CONTOUR = 'contour',\n  SURFACE = 'Surface',\n}\n\nexport default GeometryType;\n","/**\n * DynamicOperatorType enum for cornerstone-render which defines the operator to use for generateImageFromTimeData.\n * It can be either SUM, AVERAGE or SUBTRACT.\n */\nenum DynamicOperatorType {\n  /** For summing the time frames. */\n  SUM = 'SUM',\n  /** For averaging the time frames. */\n  AVERAGE = 'AVERAGE',\n  /** For subtracting two time frames */\n  SUBTRACT = 'SUBTRACT',\n}\n\nexport default DynamicOperatorType;\n","/**\n * Defines the calibration types available.  These define how the units\n * for measurements are specified.\n */\nexport enum CalibrationTypes {\n  /**\n   * Not applicable means the units are directly defind by the underlying\n   * hardware, such as CT and MR volumetric displays, so no special handling\n   * or notification is required.\n   */\n  NOT_APPLICABLE = '',\n  /**\n   * ERMF is estimated radiographic magnification factor.  This defines how\n   * much the image is magnified at the detector as opposed to the location in\n   * the body of interest.  This occurs because the radiation beam is expanding\n   * and effectively magnifies the image on the detector compared to where the\n   * point of interest in the body is.\n   * This suggests that measurements can be partially trusted, but the user\n   * still needs to be aware that different depths within the body have differing\n   * ERMF values, so precise measurements would still need to be manually calibrated.\n   */\n  ERMF = 'ERMF',\n  /**\n   * User calibration means that the user has provided a custom calibration\n   * specifying how large the image data is.  This type can occur on\n   * volumetric images, eg for scout images that might have invalid spacing\n   * tags.\n   */\n  USER = 'User',\n  /**\n   * A projection calibration means the raw detector size, without any\n   * ERMF applied, meaning that the size in the body cannot be trusted and\n   * that a calibration should be applied.\n   * This is different from Error in that there is simply no magnification\n   * factor applied as opposed to having multiple, inconsistent magnification\n   * factors.\n   */\n  PROJECTION = 'Proj',\n  /**\n   * A region calibration is used for other types of images, typically\n   * ultrasouunds where the distance in the image may mean something other than\n   * physical distance, such as mV or Hz or some other measurement values.\n   */\n  REGION = 'Region',\n  /**\n   * Error is used to define mismatches between various units, such as when\n   * there are two different ERMF values specified.  This is an indication to\n   * NOT trust the measurement values but to manually calibrate.\n   */\n  ERROR = 'Error',\n  /** Uncalibrated image */\n  UNCALIBRATED = 'Uncalibrated',\n}\n\nexport default CalibrationTypes;\n","import getRenderingEngine, {\n  getRenderingEngines,\n} from './RenderingEngine/getRenderingEngine';\nimport { IEnabledElement, IStackViewport, IVolumeViewport } from './types';\n\n/**\n * A convenience method to find an EnabledElement given a reference to its\n * associated element. Commonly used in code that's handling a custom\n * event emitted by this library.\n *\n * @example\n * Using the renderingEngine to find the enabled element:\n * ```javascript\n * const element = getRenderingEngine(renderingEngineId)\n *    .getViewport(viewportId)\n *    .element\n *\n * const enabledElement = getEnabledElement(element)\n * ```\n *\n * @example\n * Using a cornerstone event's \"element\"\n * ```javascript\n * // Our \"cornerstone events\" contain the source element, which is\n * // raised on the viewport's div element\n * const { element } = evt.detail\n * const enabledElement = getEnabledElement(element)\n * ```\n *\n * @param element - a reference to an EnabledElement/Viewport's div element\n * @returns the associated EnabledElement, or undefined if no matching EnabledElement\n * can be found\n */\nexport default function getEnabledElement(\n  element: HTMLDivElement | undefined\n): IEnabledElement | undefined {\n  if (!element) {\n    return;\n  }\n\n  const { viewportUid, renderingEngineUid } = element.dataset;\n\n  return getEnabledElementByIds(viewportUid, renderingEngineUid);\n}\n\n/**\n * Similar to {@link getEnabledElement}, but takes the IDs of the\n * renderingEngine and viewport as parameters to return the associated\n * EnabledElement.\n *\n * @param viewportId - The Id of the viewport\n * @param renderingEngineId - The Id of the rendering engine.\n * @returns The enabled element which is an object that contains the viewport, rendering\n * engine, viewport Id, rendering engine Id, and the Frame of Reference UID.\n */\nexport function getEnabledElementByIds(\n  viewportId: string,\n  renderingEngineId: string\n): IEnabledElement {\n  if (!renderingEngineId || !viewportId) {\n    return;\n  }\n\n  const renderingEngine = getRenderingEngine(renderingEngineId);\n\n  if (!renderingEngine || renderingEngine.hasBeenDestroyed) {\n    return;\n  }\n\n  const viewport = renderingEngine.getViewport(viewportId) as\n    | IStackViewport\n    | IVolumeViewport;\n\n  if (!viewport) {\n    return;\n  }\n\n  const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n\n  return {\n    viewport,\n    renderingEngine,\n    viewportId,\n    renderingEngineId,\n    FrameOfReferenceUID,\n  };\n}\n\n/**\n * Retrieves the enabled element by the specified viewport ID. it searches\n * through all the rendering engines to find the viewport with the specified\n *\n * @param viewportId - The ID of the viewport.\n * @returns The enabled element associated with the specified viewport ID.\n */\nexport function getEnabledElementByViewportId(viewportId: string) {\n  const renderingEngines = getRenderingEngines();\n\n  for (let i = 0; i < renderingEngines.length; i++) {\n    const renderingEngine = renderingEngines[i];\n    const viewport = renderingEngine.getViewport(viewportId);\n\n    if (viewport) {\n      return getEnabledElementByIds(viewportId, renderingEngine.id);\n    }\n  }\n}\n\n/**\n * Get all the enabled elements from all the rendering engines\n * @returns An array of enabled elements.\n */\nexport function getEnabledElements(): IEnabledElement[] {\n  const enabledElements = [];\n\n  const renderingEngines = getRenderingEngines();\n\n  renderingEngines.forEach((renderingEngine) => {\n    const viewports = renderingEngine.getViewports();\n\n    viewports.forEach(({ element }) => {\n      enabledElements.push(getEnabledElement(element));\n    });\n  });\n\n  return enabledElements;\n}\n","import cache from '../cache/cache';\nimport { ImageVolume } from '../cache';\nimport Events from '../enums/Events';\nimport eventTarget from '../eventTarget';\nimport {\n  genericMetadataProvider,\n  getBufferConfiguration,\n  triggerEvent,\n  uuidv4,\n} from '../utilities';\nimport {\n  IImage,\n  ImageLoaderFn,\n  IImageLoadObject,\n  EventTypes,\n  Point2,\n  Point3,\n  Mat3,\n  PixelDataTypedArrayString,\n  PixelDataTypedArray,\n} from '../types';\nimport imageLoadPoolManager from '../requestPool/imageLoadPoolManager';\nimport { metaData } from '../';\n\nexport interface ImageLoaderOptions {\n  priority: number;\n  requestType: string;\n  additionalDetails?: Record<string, unknown>;\n  ignoreCache?: boolean;\n}\n\ninterface DerivedImages {\n  imageIds: Array<string>;\n  promises: Array<Promise<IImage>>;\n}\n\ntype LocalImageOptions = {\n  scalarData?: PixelDataTypedArray;\n  targetBufferType?: PixelDataTypedArrayString;\n  dimensions?: Point2;\n  spacing?: Point3;\n  origin?: Point3;\n  direction?: Mat3;\n  /**\n   * Skip creation of the actual buffer object.\n   * In fact, this creates a very short buffer, as there are lots of places\n   * assuming a buffer exists.\n   * This can be used when there are alternative representations of the image data.\n   */\n  skipCreateBuffer?: boolean;\n  /**\n   * A method to call to update the image object when it gets added to the cache.\n   * This can be used to create alternative representations of the image data,\n   * such as a VoxelManager.\n   */\n  onCacheAdd?: (image: IImage) => void;\n};\n\ntype DerivedImageOptions = LocalImageOptions & {\n  imageId?: string;\n  targetBufferType?: PixelDataTypedArrayString;\n};\n\n/**\n * This module deals with ImageLoaders, loading images and caching images\n */\nconst imageLoaders = {};\nlet unknownImageLoader;\n\n/**\n * Loads an image using a registered Cornerstone Image Loader.\n *\n * The image loader that is used will be\n * determined by the image loader scheme matching against the imageId.\n *\n * @param imageId - A Cornerstone Image Object's imageId\n * @param Options - to be passed to the Image Loader\n *\n * @returns - An Object which can be used to act after an image is loaded or loading fails\n */\nfunction loadImageFromImageLoader(\n  imageId: string,\n  options: ImageLoaderOptions\n): IImageLoadObject {\n  // Extract the image loader scheme: wadors:https://image1 => wadors\n  const colonIndex = imageId.indexOf(':');\n  const scheme = imageId.substring(0, colonIndex);\n  const loader = imageLoaders[scheme];\n  if (loader === undefined || loader === null) {\n    if (unknownImageLoader !== undefined) {\n      return unknownImageLoader(imageId);\n    }\n    throw new Error('loadImageFromImageLoader: no image loader for imageId');\n  }\n  // Load using the registered loader\n  const imageLoadObject = loader(imageId, options);\n  // Broadcast an image loaded event once the image is loaded\n  imageLoadObject.promise.then(\n    function (image) {\n      triggerEvent(eventTarget, Events.IMAGE_LOADED, { image });\n    },\n    function (error) {\n      const errorObject: EventTypes.ImageLoadedFailedEventDetail = {\n        imageId,\n        error,\n      };\n      triggerEvent(eventTarget, Events.IMAGE_LOAD_FAILED, errorObject);\n    }\n  );\n  return imageLoadObject;\n}\n\n/**\n * Gets the imageLoadObject by 1) Looking in to the cache to see if the\n * imageLoadObject has already been cached, 2) Checks inside the volume cache\n * to see if there is a volume that contains the same imageURI for the requested\n * imageID 3) Checks inside the imageCache for similar imageURI that might have\n * been stored as a result of decaching a volume 4) Finally if none were found\n * it request it from the registered imageLoaders.\n *\n * @param imageId - A Cornerstone Image Object's imageId\n * @param options - Options to be passed to the Image Loader\n *\n * @returns An Object which can be used to act after an image is loaded or loading fails\n */\nfunction loadImageFromCacheOrVolume(\n  imageId: string,\n  options: ImageLoaderOptions\n): IImageLoadObject {\n  if (options.ignoreCache) {\n    return loadImageFromImageLoader(imageId, options);\n  }\n\n  // 1. Check inside the image cache for imageId\n  let imageLoadObject = cache.getImageLoadObject(imageId);\n  if (imageLoadObject !== undefined) {\n    return imageLoadObject;\n  }\n  // 2. Check if there exists a volume in the cache containing the imageId,\n  // we copy the pixelData over.\n  const cachedVolumeInfo = cache.getVolumeContainingImageId(imageId);\n  if (cachedVolumeInfo?.volume?.loadStatus?.loaded) {\n    // 2.1 Convert the volume at the specific slice to a cornerstoneImage object.\n    // this will copy the pixel data over.\n    const { volume, imageIdIndex } = cachedVolumeInfo;\n\n    if (volume instanceof ImageVolume) {\n      imageLoadObject = volume.convertToCornerstoneImage(imageId, imageIdIndex);\n    }\n    return imageLoadObject;\n  }\n  // 3. If no volume found, we search inside the imageCache for the imageId\n  // that has the same URI which had been cached if the volume was converted\n  // to an image\n  const cachedImage = cache.getCachedImageBasedOnImageURI(imageId);\n  if (cachedImage) {\n    imageLoadObject = cachedImage.imageLoadObject;\n    return imageLoadObject;\n  }\n  // 4. if not in image cache nor inside the volume cache, we request the\n  // image loaders to load it\n  imageLoadObject = loadImageFromImageLoader(imageId, options);\n\n  return imageLoadObject;\n}\n\n/**\n * Loads an image given an imageId and optional priority and returns a promise\n * which will resolve to the loaded image object or fail if an error occurred.\n * The loaded image is not stored in the cache.\n *\n *\n * @param imageId - A Cornerstone Image Object's imageId\n * @param options - Options to be passed to the Image Loader\n *\n * @returns An Object which can be used to act after an image is loaded or loading fails\n */\nexport function loadImage(\n  imageId: string,\n  options: ImageLoaderOptions = { priority: 0, requestType: 'prefetch' }\n): Promise<IImage> {\n  if (imageId === undefined) {\n    throw new Error('loadImage: parameter imageId must not be undefined');\n  }\n\n  return loadImageFromCacheOrVolume(imageId, options).promise;\n}\n\n/**\n * Loads an image given an imageId and optional priority and returns a promise\n * which will resolve to the loaded image object or fail if an error occurred.\n * The image is stored in the cache.\n *\n * @param imageId -  A Cornerstone Image Object's imageId\n * @param options - Options to be passed to the Image Loader\n *\n * @returns Image Loader Object\n */\nexport function loadAndCacheImage(\n  imageId: string,\n  options: ImageLoaderOptions = { priority: 0, requestType: 'prefetch' }\n): Promise<IImage> {\n  if (imageId === undefined) {\n    throw new Error(\n      'loadAndCacheImage: parameter imageId must not be undefined'\n    );\n  }\n\n  // console.log('LOAD AND CACHE IMAGE', imageId, options)\n  const imageLoadObject = loadImageFromCacheOrVolume(imageId, options);\n  // if(imageId.includes('pngfile')) console.log(`IMAGE LOAD OBJECT ${imageId} :`, imageLoadObject)\n\n  // if not inside cache, store it\n  if (!cache.getImageLoadObject(imageId)) {\n    cache.putImageLoadObject(imageId, imageLoadObject).catch((err) => {\n      console.warn(err);\n    });\n  }\n\n  return imageLoadObject.promise;\n}\n\n/**\n * Load and cache a list of imageIds\n *\n * @param imageIds - list of imageIds\n * @param options - options for loader\n *\n */\nexport function loadAndCacheImages(\n  imageIds: Array<string>,\n  options: ImageLoaderOptions = { priority: 0, requestType: 'prefetch' }\n): Promise<IImage>[] {\n  if (!imageIds || imageIds.length === 0) {\n    throw new Error(\n      'loadAndCacheImages: parameter imageIds must be list of image Ids'\n    );\n  }\n\n  const allPromises = imageIds.map((imageId) => {\n    return loadAndCacheImage(imageId, options);\n  });\n\n  return allPromises;\n}\n\n/**\n * Loads an image given an imageId and optional priority and returns a promise\n * which will resolve to the loaded image object or fail if an error occurred.\n * The image is stored in the cache.\n *\n * @param referencedImageId -  A Cornerstone Image Object's imageId\n * @param options - Options to be passed to the Image Loader\n *\n * @returns Image Loader Object\n */\nexport function createAndCacheDerivedImage(\n  referencedImageId: string,\n  options: DerivedImageOptions = {},\n  preventCache = false\n): Promise<IImage> {\n  if (referencedImageId === undefined) {\n    throw new Error(\n      'createAndCacheDerivedImage: parameter imageId must not be undefined'\n    );\n  }\n\n  if (options.imageId === undefined) {\n    options.imageId = `derived:${uuidv4()}`;\n  }\n\n  const { imageId, skipCreateBuffer, onCacheAdd } = options;\n\n  const imagePlaneModule = metaData.get('imagePlaneModule', referencedImageId);\n\n  const length = imagePlaneModule.rows * imagePlaneModule.columns;\n\n  const { TypedArrayConstructor } = getBufferConfiguration(\n    options.targetBufferType,\n    length\n  );\n\n  // Use a buffer of size 1 for no data\n  const imageScalarData = new TypedArrayConstructor(\n    skipCreateBuffer ? 1 : length\n  );\n  const derivedImageId = imageId;\n\n  ['imagePlaneModule', 'generalSeriesModule'].forEach((type) => {\n    genericMetadataProvider.add(derivedImageId, {\n      type,\n      metadata: metaData.get(type, referencedImageId),\n    });\n  });\n\n  const imagePixelModule = metaData.get('imagePixelModule', referencedImageId);\n  // TODO - add a general way to specify this\n  genericMetadataProvider.add(derivedImageId, {\n    type: 'imagePixelModule',\n    metadata: {\n      ...imagePixelModule,\n      bitsAllocated: 8,\n      bitsStored: 8,\n      highBit: 7,\n      samplesPerPixel: 1,\n      pixelRepresentation: 0,\n    },\n  });\n\n  const localImage = createAndCacheLocalImage(\n    { scalarData: imageScalarData, onCacheAdd, skipCreateBuffer },\n    imageId,\n    true\n  );\n\n  const imageLoadObject = {\n    promise: Promise.resolve(localImage),\n  };\n\n  if (!preventCache) {\n    cache.putImageLoadObject(derivedImageId, imageLoadObject);\n  }\n  return imageLoadObject.promise;\n}\n\n/**\n * Load and cache a list of imageIds\n *\n * @param referencedImageIds - list of imageIds\n * @param options\n * @param options.getDerivedImageId - function to get the derived imageId\n * @param options.targetBufferType - target buffer type\n * @param options.skipBufferCreate - avoid creating the buffer\n */\nexport function createAndCacheDerivedImages(\n  referencedImageIds: Array<string>,\n  options: DerivedImageOptions & {\n    getDerivedImageId?: (referencedImageId: string) => string;\n    targetBufferType?: PixelDataTypedArrayString;\n  } = {}\n): DerivedImages {\n  if (referencedImageIds?.length === 0) {\n    throw new Error(\n      'createAndCacheDerivedImages: parameter imageIds must be list of image Ids'\n    );\n  }\n\n  const derivedImageIds = [];\n  const allPromises = referencedImageIds.map((referencedImageId) => {\n    const newOptions: DerivedImageOptions = {\n      imageId:\n        options.getDerivedImageId?.(referencedImageId) || `derived:${uuidv4()}`,\n      ...options,\n    };\n    derivedImageIds.push(newOptions.imageId);\n    return createAndCacheDerivedImage(referencedImageId, newOptions);\n  });\n\n  return { imageIds: derivedImageIds, promises: allPromises };\n}\n\nexport function createAndCacheLocalImage(\n  options: LocalImageOptions,\n  imageId: string,\n  preventCache = false\n): IImage {\n  const imagePlaneModule = metaData.get('imagePlaneModule', imageId);\n\n  const length = imagePlaneModule.rows * imagePlaneModule.columns;\n\n  const image = {\n    imageId: imageId,\n    intercept: 0,\n    windowCenter: 0,\n    windowWidth: 0,\n    color: false,\n    numComps: 1,\n    slope: 1,\n    minPixelValue: 0,\n    maxPixelValue: 255,\n    voiLUTFunction: undefined,\n    rows: imagePlaneModule.rows,\n    columns: imagePlaneModule.columns,\n    getCanvas: undefined, // todo: which canvas?\n    height: imagePlaneModule.rows,\n    width: imagePlaneModule.columns,\n    rgba: undefined, // todo: how\n    columnPixelSpacing: imagePlaneModule.columnPixelSpacing,\n    rowPixelSpacing: imagePlaneModule.rowPixelSpacing,\n    invert: false,\n  } as IImage;\n\n  if (options.scalarData) {\n    const imageScalarData = options.scalarData;\n\n    if (\n      !(\n        imageScalarData instanceof Uint8Array ||\n        imageScalarData instanceof Float32Array ||\n        imageScalarData instanceof Uint16Array ||\n        imageScalarData instanceof Int16Array\n      )\n    ) {\n      throw new Error(\n        'To use createLocalVolume you should pass scalarData of type Uint8Array, Uint16Array, Int16Array or Float32Array'\n      );\n    }\n\n    image.sizeInBytes = imageScalarData.byteLength;\n    image.getPixelData = () => imageScalarData;\n  } else if (options.skipCreateBuffer !== true) {\n    const { numBytes, TypedArrayConstructor } = getBufferConfiguration(\n      options.targetBufferType,\n      length\n    );\n\n    const imageScalarData = new TypedArrayConstructor(length);\n\n    image.sizeInBytes = numBytes;\n    image.getPixelData = () => imageScalarData;\n  }\n\n  // The onCacheAdd may modify the size in bytes for this image, which is ok,\n  // as this is used after resolution for cache storage.  It may also do\n  // thinks like adding alternative representations such as VoxelManager\n  options.onCacheAdd?.(image);\n\n  const imageLoadObject = {\n    promise: Promise.resolve(image),\n  };\n\n  if (!preventCache) {\n    cache.putImageLoadObject(image.imageId, imageLoadObject);\n  }\n\n  return image;\n}\n\n/**\n * Removes the imageId from the request pool manager and executes the `cancel`\n * function if it exists.\n *\n * @param imageId - A Cornerstone Image Object's imageId\n *\n */\nexport function cancelLoadImage(imageId: string): void {\n  const filterFunction = ({ additionalDetails }) => {\n    if (additionalDetails.imageId) {\n      return additionalDetails.imageId !== imageId;\n    }\n\n    // for volumes\n    return true;\n  };\n\n  // Instruct the request pool manager to filter queued\n  // requests to ensure requests we no longer need are\n  // no longer sent.\n  imageLoadPoolManager.filterRequests(filterFunction);\n\n  // TODO: Cancel decoding and retrieval as well (somehow?)\n\n  // cancel image loading if in progress\n  const imageLoadObject = cache.getImageLoadObject(imageId);\n\n  if (imageLoadObject) {\n    imageLoadObject.cancelFn();\n  }\n}\n\n/**\n * Removes the imageIds from the request pool manager and calls the `cancel`\n * function if it exists.\n *\n * @param imageIds - Array of Cornerstone Image Object's imageIds\n *\n */\nexport function cancelLoadImages(imageIds: Array<string>): void {\n  imageIds.forEach((imageId) => cancelLoadImage(imageId));\n}\n\n/**\n * Removes all the ongoing image loads by calling the `cancel` method on each\n * imageLoadObject. If no `cancel` method is available, it will be ignored.\n *\n */\nexport function cancelLoadAll(): void {\n  const requestPool = imageLoadPoolManager.getRequestPool();\n\n  Object.keys(requestPool).forEach((type: string) => {\n    const requests = requestPool[type];\n\n    Object.keys(requests).forEach((priority) => {\n      const requestDetails = requests[priority].pop();\n      const additionalDetails = requestDetails.additionalDetails as any;\n      const { imageId, volumeId } = additionalDetails;\n\n      let loadObject;\n\n      if (imageId) {\n        loadObject = cache.getImageLoadObject(imageId);\n      } else if (volumeId) {\n        loadObject = cache.getVolumeLoadObject(volumeId);\n      }\n      if (loadObject) {\n        loadObject.cancel();\n      }\n    });\n    // resetting the pool types to be empty\n    imageLoadPoolManager.clearRequestStack(type);\n\n    // TODO: Clear retrieval and decoding queues as well\n  });\n}\n\n/**\n * Registers an imageLoader plugin with cornerstone for the specified scheme\n *\n * @param scheme - The scheme to use for this image loader (e.g. 'dicomweb', 'wadouri', 'http')\n * @param imageLoader - A Cornerstone Image Loader function\n */\nexport function registerImageLoader(\n  scheme: string,\n  imageLoader: ImageLoaderFn\n): void {\n  imageLoaders[scheme] = imageLoader;\n}\n/**\n * Registers a new unknownImageLoader and returns the previous one\n *\n * @param imageLoader - A Cornerstone Image Loader\n *\n * @returns The previous Unknown Image Loader\n */\nexport function registerUnknownImageLoader(\n  imageLoader: ImageLoaderFn\n): ImageLoaderFn {\n  const oldImageLoader = unknownImageLoader;\n  unknownImageLoader = imageLoader;\n  return oldImageLoader;\n}\n/**\n * Removes all registered and unknown image loaders. This should be called\n * when the application is unmounted to prevent memory leaks.\n *\n */\nexport function unregisterAllImageLoaders(): void {\n  Object.keys(imageLoaders).forEach(\n    (imageLoader) => delete imageLoaders[imageLoader]\n  );\n  unknownImageLoader = undefined;\n}\n\n/**\n * Creates and caches derived segmentation images based on the referenced imageIds, this\n * is a helper function, we don't have segmentation concept in the cornerstone core; however,\n * this helper would make it clear that the segmentation images SHOULD be Uint8Array type\n * always until we have a better solution.\n *\n * @param referencedImageIds - An array of referenced image IDs.\n * @param options - The options for creating the derived images (default: { targetBufferType: 'Uint8Array' }).\n * @returns The derived images.\n */\nexport function createAndCacheDerivedSegmentationImages(\n  referencedImageIds: Array<string>,\n  options: DerivedImageOptions = {\n    targetBufferType: 'Uint8Array',\n  }\n): DerivedImages {\n  return createAndCacheDerivedImages(referencedImageIds, options);\n}\n\n/**\n * Creates and caches a derived segmentation image based on the referenced image ID.\n * this is a helper function, we don't have segmentation concept in the cornerstone core; however,\n * this helper would make it clear that the segmentation images SHOULD be Uint8Array type\n * always until we have a better solution.\n *\n * @param referencedImageId The ID of the referenced image.\n * @param options The options for creating the derived image (default: { targetBufferType: 'Uint8Array' }).\n * @returns A promise that resolves to the created derived segmentation image.\n */\nexport function createAndCacheDerivedSegmentationImage(\n  referencedImageId: string,\n  options: DerivedImageOptions = {\n    targetBufferType: 'Uint8Array',\n  }\n): Promise<IImage> {\n  return createAndCacheDerivedImage(referencedImageId, options);\n}\n","import '@kitware/vtk.js/Rendering/Profiles/Volume';\n\nimport vtkImageData from '@kitware/vtk.js/Common/DataModel/ImageData';\nimport type { vtkImageData as vtkImageDataType } from '@kitware/vtk.js/Common/DataModel/ImageData';\nimport vtkDataArray from '@kitware/vtk.js/Common/Core/DataArray';\n\nimport { ImageVolume } from '../cache/classes/ImageVolume';\nimport cache from '../cache/cache';\nimport Events from '../enums/Events';\nimport eventTarget from '../eventTarget';\nimport triggerEvent from '../utilities/triggerEvent';\nimport cloneDeep from 'lodash.clonedeep';\n\nimport {\n  createUint16SharedArray,\n  createUint8SharedArray,\n  createFloat32SharedArray,\n  generateVolumePropsFromImageIds,\n  getBufferConfiguration,\n  uuidv4,\n} from '../utilities';\nimport {\n  Point3,\n  Metadata,\n  EventTypes,\n  Mat3,\n  IImageVolume,\n  VolumeLoaderFn,\n  IDynamicImageVolume,\n  PixelDataTypedArray,\n  IVolumeLoadObject,\n  PixelDataTypedArrayString,\n} from '../types';\nimport { getConfiguration, getShouldUseSharedArrayBuffer } from '../init';\nimport {\n  performCacheOptimizationForVolume,\n  setupCacheOptimizationEventListener,\n} from '../utilities/cacheUtils';\n\ninterface VolumeLoaderOptions {\n  imageIds: Array<string>;\n}\n\ninterface DerivedVolumeOptions {\n  volumeId: string;\n  targetBuffer?: {\n    type: PixelDataTypedArrayString;\n    sharedArrayBuffer?: boolean;\n  };\n}\ninterface LocalVolumeOptions {\n  metadata: Metadata;\n  dimensions: Point3;\n  spacing: Point3;\n  origin: Point3;\n  direction: Mat3;\n  scalarData?: PixelDataTypedArray;\n  imageIds?: Array<string>;\n  referencedImageIds?: Array<string>;\n  referencedVolumeId?: string;\n  targetBuffer?: {\n    type: PixelDataTypedArrayString;\n    sharedArrayBuffer?: boolean;\n  };\n}\n\n/**\n * Adds a single scalar data to a 3D volume\n */\nfunction addScalarDataToImageData(\n  imageData: vtkImageDataType,\n  scalarData: PixelDataTypedArray,\n  dataArrayAttrs\n) {\n  const scalarArray = vtkDataArray.newInstance({\n    name: `Pixels`,\n    values: scalarData,\n    ...dataArrayAttrs,\n  });\n\n  imageData.getPointData().setScalars(scalarArray);\n}\n\n/**\n * Adds multiple scalar data (time points) to a 4D volume\n */\nfunction addScalarDataArraysToImageData(\n  imageData: vtkImageDataType,\n  scalarDataArrays: PixelDataTypedArray[],\n  dataArrayAttrs\n) {\n  scalarDataArrays.forEach((scalarData, i) => {\n    const vtkScalarArray = vtkDataArray.newInstance({\n      name: `timePoint-${i}`,\n      values: scalarData,\n      ...dataArrayAttrs,\n    });\n\n    imageData.getPointData().addArray(vtkScalarArray);\n  });\n\n  // Set the first as active otherwise nothing is displayed on the screen\n  imageData.getPointData().setActiveScalars('timePoint-0');\n}\n\nfunction createInternalVTKRepresentation(\n  volume: IImageVolume\n): vtkImageDataType {\n  const { dimensions, metadata, spacing, direction, origin } = volume;\n  const { PhotometricInterpretation } = metadata;\n\n  let numComponents = 1;\n  if (PhotometricInterpretation === 'RGB') {\n    numComponents = 3;\n  }\n\n  const imageData = vtkImageData.newInstance();\n  const dataArrayAttrs = { numberOfComponents: numComponents };\n\n  imageData.setDimensions(dimensions);\n  imageData.setSpacing(spacing);\n  imageData.setDirection(direction);\n  imageData.setOrigin(origin);\n\n  // Add scalar data to 3D or 4D volume\n  if (volume.isDynamicVolume()) {\n    const scalarDataArrays = (<IDynamicImageVolume>(\n      volume\n    )).getScalarDataArrays();\n\n    addScalarDataArraysToImageData(imageData, scalarDataArrays, dataArrayAttrs);\n  } else {\n    const scalarData = volume.getScalarData();\n\n    addScalarDataToImageData(imageData, scalarData, dataArrayAttrs);\n  }\n\n  return imageData;\n}\n\n/**\n * This module deals with VolumeLoaders and loading volumes\n */\n\nconst volumeLoaders = {};\n\nlet unknownVolumeLoader;\n\n/**\n * Load a volume using a registered Cornerstone Volume Loader.\n *\n * The volume loader that is used will be\n * determined by the volume loader scheme matching against the volumeId.\n *\n * @param volumeId - A Cornerstone Volume Object's volumeId\n * @param options - Options to be passed to the Volume Loader. Options\n * contain the ImageIds that is passed to the loader\n *\n * @returns An Object which can be used to act after a volume is loaded or loading fails\n *\n */\nfunction loadVolumeFromVolumeLoader(\n  volumeId: string,\n  options?: VolumeLoaderOptions\n): IVolumeLoadObject {\n  const colonIndex = volumeId.indexOf(':');\n  const scheme = volumeId.substring(0, colonIndex);\n  let loader = volumeLoaders[scheme];\n\n  if (loader === undefined || loader === null) {\n    if (\n      unknownVolumeLoader == null ||\n      typeof unknownVolumeLoader !== 'function'\n    ) {\n      throw new Error(\n        `No volume loader for scheme ${scheme} has been registered`\n      );\n    }\n\n    loader = unknownVolumeLoader;\n  }\n\n  const volumeLoadObject = loader(volumeId, options);\n\n  setupCacheOptimizationEventListener(volumeId);\n\n  // Broadcast a volume loaded event once the image is loaded\n  volumeLoadObject.promise.then(\n    function (volume) {\n      triggerEvent(eventTarget, Events.VOLUME_LOADED, { volume });\n    },\n    function (error) {\n      const errorObject: EventTypes.VolumeLoadedFailedEventDetail = {\n        volumeId,\n        error,\n      };\n\n      triggerEvent(eventTarget, Events.VOLUME_LOADED_FAILED, errorObject);\n    }\n  );\n\n  return volumeLoadObject;\n}\n\n/**\n * Loads a volume given a volumeId and optional priority and returns a promise which will resolve to\n * the loaded image object or fail if an error occurred.  The loaded image is not stored in the cache.\n *\n * @param volumeId - A Cornerstone Image Object's volumeId\n * @param options - Options to be passed to the Volume Loader\n *\n * @returns An Object which can be used to act after an image is loaded or loading fails\n */\nexport function loadVolume(\n  volumeId: string,\n  options: VolumeLoaderOptions = { imageIds: [] }\n): Promise<IImageVolume> {\n  if (volumeId === undefined) {\n    throw new Error('loadVolume: parameter volumeId must not be undefined');\n  }\n\n  let volumeLoadObject = cache.getVolumeLoadObject(volumeId);\n\n  if (volumeLoadObject !== undefined) {\n    return volumeLoadObject.promise;\n  }\n\n  volumeLoadObject = loadVolumeFromVolumeLoader(volumeId, options);\n\n  return volumeLoadObject.promise.then((volume: IImageVolume) => {\n    volume.imageData = createInternalVTKRepresentation(volume);\n    return volume;\n  });\n}\n\n/**\n * Loads an image given an volumeId and optional priority and returns a promise which will resolve to\n * the loaded image object or fail if an error occurred. The image is stored in the cache.\n *\n * @param volumeId - A Cornerstone Image Object's volumeId\n * @param options - Options to be passed to the Volume Loader\n *\n * @returns Volume Loader Object\n */\nexport async function createAndCacheVolume(\n  volumeId: string,\n  options?: VolumeLoaderOptions\n): Promise<Record<string, any>> {\n  if (volumeId === undefined) {\n    throw new Error(\n      'createAndCacheVolume: parameter volumeId must not be undefined'\n    );\n  }\n\n  let volumeLoadObject = cache.getVolumeLoadObject(volumeId);\n\n  if (volumeLoadObject !== undefined) {\n    return volumeLoadObject.promise;\n  }\n\n  volumeLoadObject = loadVolumeFromVolumeLoader(volumeId, options);\n\n  volumeLoadObject.promise.then((volume: IImageVolume) => {\n    volume.imageData = createInternalVTKRepresentation(volume);\n  });\n\n  cache.putVolumeLoadObject(volumeId, volumeLoadObject).catch((err) => {\n    throw err;\n  });\n\n  return volumeLoadObject.promise;\n}\n\n/**\n * Based on a referencedVolumeId, it will build and cache a new volume. If\n * no scalarData is specified in the options, an empty derived volume will be\n * created that matches the image metadata of the referenceVolume. If scalarData\n * is given, it will be used to generate the intensity values for the derivedVolume.\n * Finally, it will save the volume in the cache.\n * @param referencedVolumeId - the volumeId from which the new volume will get its metadata\n * @param options - DerivedVolumeOptions {uid: derivedVolumeUID, targetBuffer: { type: Float32Array | Uint8Array |\n * Uint16Array | Uint32Array  }, scalarData: if provided}\n *\n * @returns ImageVolume\n */\nexport async function createAndCacheDerivedVolume(\n  referencedVolumeId: string,\n  options: DerivedVolumeOptions\n): Promise<IImageVolume> {\n  const referencedVolume = cache.getVolume(referencedVolumeId);\n  if (!referencedVolume) {\n    throw new Error(\n      `Cannot created derived volume: Referenced volume with id ${referencedVolumeId} does not exist.`\n    );\n  }\n\n  let { volumeId } = options;\n  const { targetBuffer } = options;\n\n  if (volumeId === undefined) {\n    volumeId = uuidv4();\n  }\n\n  const { metadata, dimensions, spacing, origin, direction } = referencedVolume;\n  const scalarData = referencedVolume.getScalarData();\n  const scalarLength = scalarData.length;\n\n  const { volumeScalarData, numBytes } = generateVolumeScalarData(\n    targetBuffer,\n    scalarLength\n  );\n\n  // Todo: handle more than one component for segmentation (RGB)\n  const scalarArray = vtkDataArray.newInstance({\n    name: 'Pixels',\n    numberOfComponents: 1,\n    values: volumeScalarData,\n  });\n\n  const derivedImageData = vtkImageData.newInstance();\n\n  derivedImageData.setDimensions(dimensions);\n  derivedImageData.setSpacing(spacing);\n  derivedImageData.setDirection(direction);\n  derivedImageData.setOrigin(origin);\n  derivedImageData.getPointData().setScalars(scalarArray);\n\n  const derivedVolume = new ImageVolume({\n    volumeId,\n    metadata: cloneDeep(metadata),\n    dimensions: [dimensions[0], dimensions[1], dimensions[2]],\n    spacing,\n    origin,\n    direction,\n    imageData: derivedImageData,\n    scalarData: volumeScalarData,\n    sizeInBytes: numBytes,\n    imageIds: [],\n    referencedVolumeId,\n  });\n\n  const volumeLoadObject = {\n    promise: Promise.resolve(derivedVolume),\n  };\n\n  await cache.putVolumeLoadObject(volumeId, volumeLoadObject);\n\n  return derivedVolume;\n}\n\n/**\n * Creates and cache a volume based on a set of provided properties including\n * dimensions, spacing, origin, direction, metadata, scalarData. It should be noted that\n * scalarData should be provided for this function to work. If a volume with the same\n * Id exists in the cache it returns it immediately.\n * @param options -  { scalarData, metadata, dimensions, spacing, origin, direction }\n * @param volumeId - Id of the generated volume\n *\n * @returns ImageVolume\n */\nexport function createLocalVolume(\n  options: LocalVolumeOptions,\n  volumeId: string,\n  preventCache = false\n): IImageVolume {\n  const { metadata, dimensions, spacing, origin, direction, targetBuffer } =\n    options;\n\n  let { scalarData } = options;\n\n  // Define the valid data types for scalarData\n  const validDataTypes = [\n    'Uint8Array',\n    'Float32Array',\n    'Uint16Array',\n    'Int16Array',\n  ];\n\n  const scalarLength = dimensions[0] * dimensions[1] * dimensions[2];\n\n  // Check if scalarData is provided and is of a valid type\n  if (!scalarData || !validDataTypes.includes(scalarData.constructor.name)) {\n    // Check if targetBuffer is provided and has a valid type\n    if (!targetBuffer?.type || !validDataTypes.includes(targetBuffer.type)) {\n      throw new Error(\n        'createLocalVolume: parameter scalarData must be provided and must be either Uint8Array, Float32Array, Uint16Array or Int16Array'\n      );\n    }\n\n    // Generate volume scalar data if scalarData is not provided or invalid\n    ({ volumeScalarData: scalarData } = generateVolumeScalarData(\n      targetBuffer,\n      scalarLength\n    ));\n  }\n\n  // Todo: handle default values for spacing, origin, direction if not provided\n  if (volumeId === undefined) {\n    volumeId = uuidv4();\n  }\n\n  const cachedVolume = cache.getVolume(volumeId);\n\n  if (cachedVolume) {\n    return cachedVolume as IImageVolume;\n  }\n\n  const numBytes = scalarData ? scalarData.buffer.byteLength : scalarLength * 4;\n\n  // check if there is enough space in unallocated + image Cache\n  const isCacheable = cache.isCacheable(numBytes);\n  if (!isCacheable) {\n    throw new Error(Events.CACHE_SIZE_EXCEEDED);\n  }\n\n  const scalarArray = vtkDataArray.newInstance({\n    name: 'Pixels',\n    numberOfComponents: 1,\n    values: scalarData,\n  });\n\n  const imageData = vtkImageData.newInstance();\n\n  imageData.setDimensions(dimensions);\n  imageData.setSpacing(spacing);\n  imageData.setDirection(direction);\n  imageData.setOrigin(origin);\n  imageData.getPointData().setScalars(scalarArray);\n\n  const derivedVolume = new ImageVolume({\n    volumeId,\n    metadata: cloneDeep(metadata),\n    dimensions: [dimensions[0], dimensions[1], dimensions[2]],\n    spacing,\n    origin,\n    direction,\n    imageData: imageData,\n    scalarData,\n    sizeInBytes: numBytes,\n    referencedImageIds: options.referencedImageIds || [],\n    referencedVolumeId: options.referencedVolumeId,\n    imageIds: options.imageIds || [],\n  });\n\n  if (preventCache) {\n    return derivedVolume;\n  }\n\n  const volumeLoadObject = {\n    promise: Promise.resolve(derivedVolume),\n  };\n  cache.putVolumeLoadObject(volumeId, volumeLoadObject);\n\n  return derivedVolume;\n}\n\nexport async function createAndCacheVolumeFromImages(\n  volumeId: string,\n  imageIds: string[],\n  options: {\n    preventCache?: boolean;\n    additionalDetails?: Record<string, any>;\n  } = {}\n): Promise<IImageVolume> {\n  const { preventCache = false } = options;\n\n  if (imageIds === undefined) {\n    throw new Error(\n      'createAndCacheVolumeFromImages: parameter imageIds must not be undefined'\n    );\n  }\n\n  if (volumeId === undefined) {\n    throw new Error(\n      'createAndCacheVolumeFromImages: parameter volumeId must not be undefined'\n    );\n  }\n\n  const cachedVolume = cache.getVolume(volumeId);\n\n  if (cachedVolume) {\n    return Promise.resolve(cachedVolume);\n  }\n\n  const volumeProps = generateVolumePropsFromImageIds(imageIds, volumeId);\n\n  // volume is an empty volume, we need to load the data from the imageIds\n  // into the volume scalarData\n\n  // it is important to get the imageIds from the volumeProps\n  // since they are sorted\n  const imagePromises = volumeProps.imageIds.map((imageId, imageIdIndex) => {\n    const imageLoadObject = cache.getImageLoadObject(imageId);\n\n    return imageLoadObject.promise.then((image) => {\n      const pixelData = image.getPixelData();\n      const offset = imageIdIndex * image.rows * image.columns;\n\n      (volumeProps.scalarData as PixelDataTypedArray).set(pixelData, offset);\n    });\n  });\n\n  await Promise.all(imagePromises);\n\n  const volume = new ImageVolume({\n    ...volumeProps,\n    referencedImageIds: imageIds,\n    ...options,\n  });\n\n  // since we generated the volume from images, we can optimize the cache\n  // by replacing the pixelData of the images with a view of the volume's\n  // scalarData\n  performCacheOptimizationForVolume(volume);\n\n  const volumeLoadObject = {\n    promise: Promise.resolve(volume),\n  };\n\n  if (preventCache) {\n    return volumeLoadObject.promise;\n  }\n\n  cache.putVolumeLoadObject(volumeId, volumeLoadObject);\n\n  return volumeLoadObject.promise;\n}\n\n/**\n * Registers an volumeLoader plugin with cornerstone for the specified scheme\n *\n * @param scheme - The scheme to use for this volume loader (e.g. 'dicomweb', 'wadouri', 'http')\n * @param volumeLoader - A Cornerstone Volume Loader function\n */\nexport function registerVolumeLoader(\n  scheme: string,\n  volumeLoader: VolumeLoaderFn\n): void {\n  volumeLoaders[scheme] = volumeLoader;\n}\n\n/** Gets the array of volume loader schemes */\nexport function getVolumeLoaderSchemes(): string[] {\n  return Object.keys(volumeLoaders);\n}\n\n/**\n * Registers a new unknownVolumeLoader and returns the previous one\n *\n * @param volumeLoader - A Cornerstone Volume Loader\n *\n * @returns The previous Unknown Volume Loader\n */\nexport function registerUnknownVolumeLoader(\n  volumeLoader: VolumeLoaderFn\n): VolumeLoaderFn | undefined {\n  const oldVolumeLoader = unknownVolumeLoader;\n\n  unknownVolumeLoader = volumeLoader;\n\n  return oldVolumeLoader;\n}\n\nexport function getUnknownVolumeLoaderSchema(): string {\n  return unknownVolumeLoader.name;\n}\n\n/**\n * Creates and caches a derived segmentation volume based on a referenced volume.\n * This is basically a utility method since for the segmentations we have to specify\n * Uint8Array as the targetBuffer type for now until we support other types.\n *\n * @param referencedVolumeId - The ID of the referenced volume.\n * @param options - The options for creating the derived volume.\n * @returns A promise that resolves to the created derived segmentation volume.\n */\nexport async function createAndCacheDerivedSegmentationVolume(\n  referencedVolumeId: string,\n  options = {} as DerivedVolumeOptions\n): Promise<IImageVolume> {\n  return createAndCacheDerivedVolume(referencedVolumeId, {\n    ...options,\n    targetBuffer: {\n      type: 'Uint8Array',\n    },\n  });\n}\n\n/**\n * Creates a local segmentation volume.\n *\n * @param options - The options for creating the volume.\n * @param volumeId - The ID of the volume.\n * @param preventCache - Whether to prevent caching the volume.\n * @returns A promise that resolves to the created image volume.\n */\nexport async function createLocalSegmentationVolume(\n  options: LocalVolumeOptions,\n  volumeId: string,\n  preventCache = false\n): Promise<IImageVolume> {\n  if (!options.scalarData) {\n    options.scalarData = new Uint8Array(\n      options.dimensions[0] * options.dimensions[1] * options.dimensions[2]\n    );\n  }\n\n  return createLocalVolume(options, volumeId, preventCache);\n}\n\n/**\n * This function generates volume scalar data based on the provided target buffer and scalar length.\n * It checks if the cache can accommodate the data size and throws an error if it exceeds the cache size.\n * If a shared array buffer is available in the target buffer, it uses that to create the typed array.\n * Otherwise, it creates a typed array based on the scalar length.\n *\n * @param targetBuffer - The target buffer object which may contain a type and a shared array buffer.\n * @param scalarLength - The scalar length for creating the typed array.\n * @param useNorm16Texture - A flag to specify whether to use a 16-bit texture or not.\n * @returns The volume scalar data as a typed array.\n */\nfunction generateVolumeScalarData(\n  targetBuffer: {\n    type: PixelDataTypedArrayString;\n    sharedArrayBuffer?: boolean;\n  },\n  scalarLength: number\n) {\n  const { useNorm16Texture } = getConfiguration().rendering;\n\n  const { TypedArrayConstructor, numBytes } = getBufferConfiguration(\n    targetBuffer?.type,\n    scalarLength,\n    {\n      use16BitTexture: useNorm16Texture,\n      isVolumeBuffer: true,\n    }\n  );\n\n  const isCacheable = cache.isCacheable(numBytes);\n  if (!isCacheable) {\n    throw new Error(Events.CACHE_SIZE_EXCEEDED);\n  }\n\n  let volumeScalarData;\n  if (targetBuffer?.sharedArrayBuffer ?? getShouldUseSharedArrayBuffer()) {\n    switch (targetBuffer.type) {\n      case 'Float32Array':\n        volumeScalarData = createFloat32SharedArray(scalarLength);\n        break;\n      case 'Uint8Array':\n        volumeScalarData = createUint8SharedArray(scalarLength);\n        break;\n      case 'Uint16Array':\n        volumeScalarData = createUint16SharedArray(scalarLength);\n        break;\n      case 'Int16Array':\n        volumeScalarData = createUint16SharedArray(scalarLength);\n        break;\n      default:\n        throw new Error(\n          'generateVolumeScalarData: SharedArrayBuffer is not supported for the specified target buffer type'\n        );\n    }\n  } else {\n    volumeScalarData = new TypedArrayConstructor(scalarLength);\n  }\n\n  return { volumeScalarData, numBytes };\n}\n","import { RequestPoolManager } from './requestPoolManager';\nimport RequestType from '../enums/RequestType';\n\n/**\n * You can use the imageLoadPoolManager to load images, by providing a `requestFn`\n * that returns a promise for the image. You can provide a `type` to specify the type of\n * request (interaction, thumbnail, prefetch), and you can provide additional details\n * that will be passed to the requestFn. Below is an example of a requestFn that loads\n * an image from an imageId:\n *\n * ```javascript\n *\n * const priority = -5\n * const requestType = RequestType.Interaction\n * const additionalDetails = { imageId }\n * const options = {\n *   targetBuffer: {\n *     type: 'Float32Array',\n *     offset: null,\n *     length: null,\n *   },\n *   preScale: {\n *     enabled: true,\n *   },\n * }\n *\n * imageLoadPoolManager.addRequest(\n *   loadAndCacheImage(imageId, options).then(() => { // set on viewport}),\n *   requestType,\n *   additionalDetails,\n *   priority\n * )\n * ```\n */\nconst imageLoadPoolManager = new RequestPoolManager('imageLoadPool');\n\nimageLoadPoolManager.grabDelay = 0;\n\nimageLoadPoolManager.setMaxSimultaneousRequests(RequestType.Interaction, 1000);\nimageLoadPoolManager.setMaxSimultaneousRequests(RequestType.Thumbnail, 1000);\nimageLoadPoolManager.setMaxSimultaneousRequests(RequestType.Prefetch, 1000);\n\nexport default imageLoadPoolManager;\n","import RequestType from '../enums/RequestType';\nimport { IImage } from '../types';\nimport { uuidv4 } from '../utilities';\n\ntype AdditionalDetails = {\n  imageId?: string;\n  volumeId?: string;\n};\n\ntype RequestDetailsInterface = {\n  requestFn: () => Promise<IImage | void>;\n  type: RequestType;\n  additionalDetails: AdditionalDetails;\n};\n\ntype RequestPool = {\n  [name in RequestType]: { [key: number]: RequestDetailsInterface[] };\n};\n\n/**\n * RequestPool manager class is a base class that manages the request pools.\n * It is used imageRetrievalPoolManager, and imageLoadPoolManager to retrieve and load images.\n * Previously requestPoolManager was used to manage the retrieval and loading and decoding\n * of the images in a way that new requests were sent after the image was both loaded and decoded\n * which was not performant since it was waiting for the image to be loaded and decoded before\n * sending the next request which is a network request and can be done in parallel.\n * Now, we use separate imageRetrievalPoolManager and imageLoadPoolManager\n * to improve performance and both are extending the RequestPoolManager class which\n * is a basic queueing pool.\n *\n * A new requestPool can be created by instantiating a new RequestPoolManager class.\n *\n * ```javascript\n * const requestPoolManager = new RequestPoolManager()\n * ```\n *\n * ## ImageLoadPoolManager\n *\n * You can use the imageLoadPoolManager to load images, by providing a `requestFn`\n * that returns a promise for the image. You can provide a `type` to specify the type of\n * request (interaction, thumbnail, prefetch), and you can provide additional details\n * that will be passed to the requestFn. Below is an example of a requestFn that loads\n * an image from an imageId:\n *\n * ```javascript\n *\n * const priority = -5\n * const requestType = RequestType.Interaction\n * const additionalDetails = { imageId }\n * const options = {\n *   targetBuffer: {\n *     type: 'Float32Array',\n *     offset: null,\n *     length: null,\n *   },\n *   preScale: {\n *      enabled: true,\n *    },\n * }\n *\n * imageLoadPoolManager.addRequest(\n *   loadAndCacheImage(imageId, options).then(() => { // set on viewport}),\n *   requestType,\n *   additionalDetails,\n *   priority\n * )\n * ```\n * ### ImageRetrievalPoolManager\n * You don't need to directly use the imageRetrievalPoolManager to load images\n * since the imageLoadPoolManager will automatically use it for retrieval. However,\n * maximum number of concurrent requests can be set by calling `setMaxConcurrentRequests`.\n */\nclass RequestPoolManager {\n  private id: string;\n  private awake: boolean;\n  private requestPool: RequestPool;\n  private numRequests = {\n    interaction: 0,\n    thumbnail: 0,\n    prefetch: 0,\n    compute: 0,\n  };\n  /* maximum number of requests of each type. */\n  public maxNumRequests: {\n    interaction: number;\n    thumbnail: number;\n    prefetch: number;\n    compute: number;\n  };\n  /* A public property that is used to set the delay between requests. */\n  public grabDelay: number;\n  private timeoutHandle: number;\n\n  /**\n   * By default a request pool containing three priority groups, one for each\n   * of the request types, is created. Maximum number of requests of each type\n   * is set to 6.\n   */\n  constructor(id?: string) {\n    this.id = id ? id : uuidv4();\n\n    this.requestPool = {\n      interaction: { 0: [] },\n      thumbnail: { 0: [] },\n      prefetch: { 0: [] },\n      compute: { 0: [] },\n    };\n\n    this.grabDelay = 5;\n    this.awake = false;\n\n    this.numRequests = {\n      interaction: 0,\n      thumbnail: 0,\n      prefetch: 0,\n      compute: 0,\n    };\n\n    this.maxNumRequests = {\n      interaction: 6,\n      thumbnail: 6,\n      prefetch: 5,\n      // I believe there is a bug right now, where if there are two workers\n      // and one wants to run a compute job 6 times and the limit is just 5, then\n      // the other worker will never get a chance to run its compute job.\n      // we should probably have a separate limit for compute jobs per worker\n      // context as there is another layer of parallelism there. For this reason\n      // I'm setting the limit to 1000 for now.\n      compute: 1000,\n    };\n  }\n\n  /**\n   * This function sets the maximum number of requests for a given request type.\n   * @param type - The type of request you want to set the max number\n   * of requests for it can be either of interaction, prefetch, or thumbnail.\n   * @param maxNumRequests - The maximum number of requests that can be\n   * made at a time.\n   */\n  public setMaxSimultaneousRequests(\n    type: RequestType,\n    maxNumRequests: number\n  ): void {\n    this.maxNumRequests[type] = maxNumRequests;\n  }\n\n  /**\n   * It returns the maximum number of requests of a given type that can be made\n   * @param type - The type of request.\n   * @returns The maximum number of requests of a given type.\n   */\n  public getMaxSimultaneousRequests(type: RequestType): number {\n    return this.maxNumRequests[type];\n  }\n\n  /**\n   * Stops further fetching of the requests, all the ongoing requests will still\n   * be retrieved\n   */\n  public destroy(): void {\n    if (this.timeoutHandle) {\n      window.clearTimeout(this.timeoutHandle);\n    }\n  }\n\n  /**\n   * Adds the requests to the pool of requests.\n   *\n   * @param requestFn - A function that returns a promise which resolves in the image\n   * @param type - Priority category, it can be either of interaction, prefetch,\n   * or thumbnail.\n   * @param additionalDetails - Additional details that requests can contain.\n   * For instance the volumeId for the volume requests\n   * @param priority - Priority number for each category of requests. Its default\n   * value is priority 0. The lower the priority number, the higher the priority number\n   *\n   */\n  public addRequest(\n    requestFn: () => Promise<IImage | void>,\n    type: RequestType,\n    additionalDetails: Record<string, unknown>,\n    priority = 0\n  ): void {\n    // Describe the request\n    const requestDetails: RequestDetailsInterface = {\n      requestFn,\n      type,\n      additionalDetails,\n    };\n\n    // Check if the priority group exists on the request type\n    if (this.requestPool[type][priority] === undefined) {\n      this.requestPool[type][priority] = [];\n    }\n\n    // Adding the request to the correct priority group of the request type\n    this.requestPool[type][priority].push(requestDetails);\n\n    this.startGrabbing();\n  }\n\n  /**\n   * Filter the requestPoolManager's pool of request based on the result of\n   * provided filter function. The provided filter function needs to return false or true\n   *\n   * @param filterFunction - The filter function for filtering of the requests to keep\n   */\n  public filterRequests(\n    filterFunction: (requestDetails: RequestDetailsInterface) => boolean\n  ): void {\n    Object.keys(this.requestPool).forEach((type: string) => {\n      const requestType = this.requestPool[type];\n      Object.keys(requestType).forEach((priority) => {\n        requestType[priority] = requestType[priority].filter(\n          (requestDetails: RequestDetailsInterface) => {\n            return filterFunction(requestDetails);\n          }\n        );\n      });\n    });\n  }\n\n  /**\n   * Clears the requests specific to the provided type. For instance, the\n   * pool of requests of type 'interaction' can be cleared via this function.\n   *\n   *\n   * @param type - category of the request (either interaction, prefetch or thumbnail)\n   */\n  public clearRequestStack(type: string): void {\n    if (!this.requestPool[type]) {\n      throw new Error(`No category for the type ${type} found`);\n    }\n    this.requestPool[type] = { 0: [] };\n  }\n\n  private sendRequests(type) {\n    const requestsToSend = this.maxNumRequests[type] - this.numRequests[type];\n    let syncImageCount = 0;\n\n    for (let i = 0; i < requestsToSend; i++) {\n      const requestDetails = this.getNextRequest(type);\n      if (requestDetails === null) {\n        return false;\n      } else if (requestDetails) {\n        this.numRequests[type]++;\n        this.awake = true;\n\n        let requestResult;\n        try {\n          requestResult = requestDetails.requestFn();\n        } catch (e) {\n          // This is the only warning one will get, so need a warn message\n          console.warn('sendRequest failed', e);\n        }\n        if (requestResult?.finally) {\n          requestResult.finally(() => {\n            this.numRequests[type]--;\n            this.startAgain();\n          });\n        } else {\n          // Handle non-async request functions too - typically just short circuit ones\n          this.numRequests[type]--;\n          syncImageCount++;\n        }\n      }\n    }\n    if (syncImageCount) {\n      this.startAgain();\n    }\n\n    return true;\n  }\n\n  private getNextRequest(type): RequestDetailsInterface | null {\n    const interactionPriorities = this.getSortedPriorityGroups(type);\n    for (const priority of interactionPriorities) {\n      if (this.requestPool[type][priority].length) {\n        return this.requestPool[type][priority].shift();\n      }\n    }\n\n    return null;\n  }\n\n  protected startGrabbing(): void {\n    const hasRemainingInteractionRequests = this.sendRequests(\n      RequestType.Interaction\n    );\n    const hasRemainingThumbnailRequests = this.sendRequests(\n      RequestType.Thumbnail\n    );\n    const hasRemainingPrefetchRequests = this.sendRequests(\n      RequestType.Prefetch\n    );\n    const hasRemainingComputeRequests = this.sendRequests(RequestType.Compute);\n\n    if (\n      !hasRemainingInteractionRequests &&\n      !hasRemainingThumbnailRequests &&\n      !hasRemainingPrefetchRequests &&\n      !hasRemainingComputeRequests\n    ) {\n      this.awake = false;\n    }\n  }\n\n  protected startAgain(): void {\n    if (!this.awake) {\n      return;\n    }\n\n    if (this.grabDelay !== undefined) {\n      // Prevents calling setTimeout hundreds of times when hundreds of requests\n      // are added which make it slower and works in an unexpected way when\n      // destroy/clearTimeout is called because only the last handle is stored.\n      if (!this.timeoutHandle) {\n        this.timeoutHandle = window.setTimeout(() => {\n          this.timeoutHandle = null;\n          this.startGrabbing();\n        }, this.grabDelay);\n      }\n    } else {\n      this.startGrabbing();\n    }\n  }\n\n  protected getSortedPriorityGroups(type: string): Array<number> {\n    const priorities = Object.keys(this.requestPool[type])\n      .map(Number)\n      .filter((priority) => this.requestPool[type][priority].length)\n      .sort((a, b) => a - b);\n    return priorities;\n  }\n\n  /**\n   * Returns the request pool containing different categories, their priority and\n   * the added request details.\n   *\n   * @returns the request pool which contains different categories, their priority and\n   * the added request details\n   */\n  getRequestPool(): RequestPool {\n    return this.requestPool;\n  }\n}\n\nexport { RequestPoolManager };\n","import cache, { ImageVolume } from '../cache';\nimport { Events } from '../enums';\nimport eventTarget from '../eventTarget';\nimport { getConfiguration, getShouldUseSharedArrayBuffer } from '../init';\n\n/**\n * This function will check if the cache optimization is enabled and if it is\n * it will check if the created volume was derived from an already cached stack\n * of images, if so it will go back to the image cache and create a view at the\n * correct offset of the bigger volume array buffer, this will save memory.\n *\n * @param volumeId - The volumeId that will be checked for cache optimization\n */\nexport function setupCacheOptimizationEventListener(volumeId) {\n  const { enableCacheOptimization } = getConfiguration();\n  const shouldUseSAB = getShouldUseSharedArrayBuffer();\n\n  const performOptimization = enableCacheOptimization && shouldUseSAB;\n  if (!performOptimization) {\n    return;\n  }\n\n  eventTarget.addEventListenerOnce(\n    Events.IMAGE_VOLUME_LOADING_COMPLETED,\n    (evt) => {\n      if (evt.detail.volumeId !== volumeId) {\n        return;\n      }\n\n      const volume = cache.getVolume(volumeId);\n\n      performCacheOptimizationForVolume(volume);\n    }\n  );\n}\n\n/**\n * Performs cache optimization for a volume by replacing the pixel data of each image\n * in the image cache (if found) with a view of the volume's scalar data.\n * @param options - The options for cache optimization.\n * @param options.volumeId - The ID of the volume.\n */\nexport function performCacheOptimizationForVolume(volume) {\n  if (!(volume instanceof ImageVolume)) {\n    return;\n  }\n\n  const scalarData = volume.getScalarData();\n\n  volume.imageCacheOffsetMap.size > 0\n    ? _processImageCacheOffsetMap(volume, scalarData)\n    : _processVolumeImages(volume, scalarData);\n}\n\n/**\n * This function will process the volume images and replace the pixel data of each\n * image in the image cache (if found) with a view of the volume's scalar data.\n * This function is used when the volume is derived from an already cached stack\n * of images.\n *\n * @param volume - The volume to process.\n * @param scalarData - The scalar data to use for the volume.\n */\nfunction _processImageCacheOffsetMap(volume, scalarData) {\n  volume.imageCacheOffsetMap.forEach(({ offset }, imageId) => {\n    const image = cache.getImage(imageId);\n    if (!image) {\n      return;\n    }\n\n    _updateImageWithScalarDataView(image, scalarData, offset);\n    cache.decrementImageCacheSize(image.sizeInBytes);\n  });\n}\n\n/**\n * This function will process the volume images and replace the pixel data of each\n * image in the image cache (if found) with a view of the volume's scalar data.\n * This function is used when the volume is not derived from an already cached stack\n * of images.\n *\n * @param volume - The volume to process.\n * @param scalarData - The scalar data to use for the volume.\n */\nfunction _processVolumeImages(volume, scalarData) {\n  let compatibleScalarData = scalarData;\n\n  const sampleImageIdWithImage = volume.imageIds.find((imageId) => {\n    const image = cache.getImage(imageId);\n    return image;\n  });\n\n  if (!sampleImageIdWithImage) {\n    return;\n  }\n\n  const sampleImage = cache.getImage(sampleImageIdWithImage);\n  const samplePixelData =\n    sampleImage.imageFrame?.pixelData || sampleImage.getPixelData();\n\n  // Check if the types of scalarData and pixelData are different.\n  if (scalarData.constructor !== samplePixelData.constructor) {\n    // If so, create a new typed array of the same type as pixelData and copy the values from scalarData.\n    compatibleScalarData = new samplePixelData.constructor(scalarData.length);\n\n    // Copy values from scalarData to compatibleScalarData.\n    compatibleScalarData.set(scalarData);\n  }\n\n  volume.imageIds.forEach((imageId) => {\n    const image = cache.getImage(imageId);\n    if (!image) {\n      return;\n    }\n\n    const index = volume.getImageIdIndex(imageId);\n    const offset = index * image.getPixelData().byteLength;\n\n    _updateImageWithScalarDataView(image, compatibleScalarData, offset);\n    cache.decrementImageCacheSize(image.sizeInBytes);\n  });\n}\n\nfunction _updateImageWithScalarDataView(image, scalarData, offset) {\n  const pixelData = image.imageFrame\n    ? image.imageFrame.pixelData\n    : image.getPixelData();\n\n  const view = new pixelData.constructor(\n    scalarData.buffer,\n    offset,\n    pixelData.length\n  );\n\n  image.getPixelData = () => view;\n\n  if (image.imageFrame) {\n    image.imageFrame.pixelData = view;\n  }\n\n  image.bufferView = {\n    buffer: scalarData.buffer,\n    offset,\n  };\n}\n","import vtkColorMaps from '@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps';\n\nimport { ColormapPublic, ColormapRegistration } from '../types';\nimport isEqual from './isEqual';\nimport { actorIsA } from './actorCheck';\n\nconst _colormaps = new Map();\n\n/**\n * Register a colormap\n * @param name - name of the colormap\n * @param colormap - colormap object\n */\nfunction registerColormap(colormap: ColormapRegistration) {\n  _colormaps.set(colormap.Name, colormap);\n}\n\n/**\n * Get a colormap by name\n * @param name - name of the colormap\n * @returns colormap object\n */\nfunction getColormap(name) {\n  return _colormaps.get(name);\n}\n\n/**\n * Get all registered colormap names\n * @returns array of colormap names\n *\n */\nfunction getColormapNames() {\n  return Array.from(_colormaps.keys());\n}\n\n/**\n * Finds a colormap that matches the given RGB points.\n *\n * @param rgbPoints - The RGB points to match against the colormaps.\n * @returns  The matched colormap object or null if no match is found.\n */\nfunction findMatchingColormap(rgbPoints, actor): ColormapPublic | null {\n  const colormapsVTK = vtkColorMaps.rgbPresetNames.map((presetName) =>\n    vtkColorMaps.getPresetByName(presetName)\n  );\n\n  const colormapsCS3D = getColormapNames().map((colormapName) =>\n    getColormap(colormapName)\n  );\n\n  const colormaps = colormapsVTK.concat(colormapsCS3D);\n\n  // Find the colormap that matches the given RGB points\n  const matchedColormap = colormaps.find((colormap) => {\n    const { RGBPoints: presetRGBPoints } = colormap;\n\n    if (presetRGBPoints.length !== rgbPoints.length) {\n      return false;\n    }\n\n    for (let i = 0; i < presetRGBPoints.length; i += 4) {\n      if (\n        !isEqual(\n          presetRGBPoints.slice(i + 1, i + 4),\n          rgbPoints.slice(i + 1, i + 4)\n        )\n      ) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n\n  if (!matchedColormap) {\n    return null;\n  }\n\n  const opacity = [];\n  if (actorIsA(actor, 'vtkVolume')) {\n    const opacityPoints = actor\n      .getProperty()\n      .getScalarOpacity(0)\n      .getDataPointer();\n\n    if (!opacityPoints) {\n      return {\n        name: matchedColormap.Name,\n      };\n    }\n\n    for (let i = 0; i < opacityPoints.length; i += 2) {\n      opacity.push({\n        value: opacityPoints[i],\n        opacity: opacityPoints[i + 1],\n      });\n    }\n  }\n\n  return {\n    name: matchedColormap.Name,\n    opacity,\n  };\n}\n\nexport {\n  getColormap,\n  getColormapNames,\n  registerColormap,\n  findMatchingColormap,\n};\n","import vtkColorTransferFunction from '@kitware/vtk.js/Rendering/Core/ColorTransferFunction';\nimport { VOIRange } from '../types';\n\nexport default function createLinearRGBTransferFunction(\n  voiRange: VOIRange\n): vtkColorTransferFunction {\n  const cfun = vtkColorTransferFunction.newInstance();\n  let lower = 0;\n  let upper = 1024;\n  if (\n    voiRange &&\n    voiRange.lower !== undefined &&\n    voiRange.upper !== undefined\n  ) {\n    lower = voiRange.lower;\n    upper = voiRange.upper;\n  }\n  cfun.addRGBPoint(lower, 0.0, 0.0, 0.0);\n  cfun.addRGBPoint(upper, 1.0, 1.0, 1.0);\n\n  return cfun;\n}\n","import { ImageSliceData, IVolumeViewport, VolumeActor } from '../types';\nimport getSliceRange from './getSliceRange';\nimport getTargetVolumeAndSpacingInNormalDir from './getTargetVolumeAndSpacingInNormalDir';\n\n/**\n * It calculates the number of slices and the current slice index for a given\n * Volume viewport\n * @param viewport - volume viewport\n * @returns An object with two properties: numberOfSlices and imageIndex.\n */\nfunction getImageSliceDataForVolumeViewport(\n  viewport: IVolumeViewport\n): ImageSliceData {\n  const camera = viewport.getCamera();\n\n  const { spacingInNormalDirection, imageVolume } =\n    getTargetVolumeAndSpacingInNormalDir(viewport, camera);\n\n  if (!imageVolume) {\n    return;\n  }\n\n  const { viewPlaneNormal, focalPoint } = camera;\n\n  const actorEntry = viewport\n    .getActors()\n    .find(\n      (a) =>\n        a.referenceId === imageVolume.volumeId || a.uid === imageVolume.volumeId\n    );\n\n  if (!actorEntry) {\n    console.warn('No actor found for with actorUID of', imageVolume.volumeId);\n  }\n\n  const volumeActor = actorEntry.actor as VolumeActor;\n  const sliceRange = getSliceRange(volumeActor, viewPlaneNormal, focalPoint);\n\n  const { min, max, current } = sliceRange;\n\n  // calculate number of steps from min to max with current normal spacing in direction\n  const numberOfSlices = Math.round((max - min) / spacingInNormalDirection) + 1;\n\n  // calculate the imageIndex based on min, max, current\n  let imageIndex = ((current - min) / (max - min)) * numberOfSlices;\n  imageIndex = Math.floor(imageIndex);\n\n  // Clamp imageIndex\n  if (imageIndex > numberOfSlices - 1) {\n    imageIndex = numberOfSlices - 1;\n  } else if (imageIndex < 0) {\n    imageIndex = 0;\n  }\n\n  return {\n    numberOfSlices,\n    imageIndex,\n  };\n}\n\nexport default getImageSliceDataForVolumeViewport;\n","function getTransferFunctionNodes(transferFunction) {\n  const size = transferFunction.getSize();\n  const values = [];\n  for (let index = 0; index < size; index++) {\n    const nodeValue1 = [];\n\n    transferFunction.getNodeValue(index, nodeValue1);\n\n    values.push(nodeValue1);\n  }\n\n  return values;\n}\n\nfunction setTransferFunctionNodes(transferFunction, nodes) {\n  if (!nodes?.length) {\n    return;\n  }\n\n  transferFunction.removeAllPoints();\n\n  nodes.forEach((node) => {\n    transferFunction.addRGBPoint(...node);\n  });\n}\n\nexport { getTransferFunctionNodes, setTransferFunctionNodes };\n","import type Point3 from '../types/Point3';\n\n/**\n * Given an imageData object and a point in physical space, return the index of the\n * voxel that contains the point. TODO: this should be pushed to vtk upstream.\n * @param imageData - The image data object.\n * @param physicalPoint - The point in physical space that you want to transform to\n * index space.\n * @returns An array of integers.\n */\nexport default function transformWorldToIndex(imageData, worldPos: Point3) {\n  const continuousIndex = imageData.worldToIndex(worldPos);\n  const index = continuousIndex.map(Math.round);\n\n  return index;\n}\n","import eventTarget from '../eventTarget';\n\n/**\n * Small utility to trigger a custom event for a given EventTarget.\n *\n * @example\n *\n * ```javascript\n * triggerEvent(element, Events.IMAGE_RENDERED, { element })\n * ```\n * or it can trigger event on the eventTarget itself\n *\n * ```javascript\n * triggerEvent(eventTarget, CSTOOLS_EVENTS.ANNOTATION_MODIFIED, { viewportId, annotationUID })\n * ```\n *\n * @param el - The element or EventTarget to trigger the event upon\n * @param type - The event type name\n * @param detail - The event detail to be sent\n * @returns false if event is cancelable and at least one of the event handlers\n * which received event called Event.preventDefault(). Otherwise it returns true.\n */\nexport default function triggerEvent(\n  el: EventTarget = eventTarget,\n  type: string,\n  detail: unknown = null\n): boolean {\n  if (!type) {\n    throw new Error('Event type was not defined');\n  }\n\n  const event = new CustomEvent(type, {\n    detail,\n    cancelable: true,\n  });\n\n  return el.dispatchEvent(event);\n}\n","import * as Comlink from 'comlink';\nimport { RequestType } from '../enums/';\nimport { RequestPoolManager } from '../requestPool/requestPoolManager';\n\nclass CentralizedWorkerManager {\n  constructor() {\n    this.workerRegistry = {};\n    this.workerPoolManager = new RequestPoolManager('webworker');\n  }\n\n  /**\n   * Registers a new worker, it doesn't mean that the function will get executed.\n   *\n   * @param workerName - The name of the worker.\n   * @param workerFn - The function that creates a new instance of the worker.\n   * @param options - Optional parameters.\n   * @param options.maxWorkerInstances - The maximum number of instances of this worker that can be created.\n   * For instance if you create a worker with maxWorkerInstances = 2, then only 2 instances of this worker will be created\n   * and in case there are 10 tasks that need to be executed, each will get assigned 5 tasks.\n   * @param options.overwrite - Whether to overwrite the worker if it's already registered.\n   * @param options.autoTerminateOnIdle - Whether to automatically terminate idle workers.\n   */\n  registerWorker(workerName, workerFn, options = {}) {\n    const {\n      maxWorkerInstances = 1,\n      overwrite = false,\n      autoTerminateOnIdle = {\n        enabled: false,\n        idleTimeThreshold: 3000, // 3 seconds\n      },\n    } = options;\n\n    if (this.workerRegistry[workerName] && !overwrite) {\n      console.warn(`Worker type '${workerName}' is already registered...`);\n      return;\n    }\n\n    if (overwrite && this.workerRegistry[workerName]?.idleCheckIntervalId) {\n      clearInterval(this.workerRegistry[workerName].idleCheckIntervalId);\n    }\n\n    const workerProperties = {\n      workerFn: null,\n      instances: [],\n      loadCounters: [],\n      lastActiveTime: [],\n      // used for termination\n      nativeWorkers: [],\n      // auto termination\n      autoTerminateOnIdle: autoTerminateOnIdle.enabled,\n      idleCheckIntervalId: null,\n      idleTimeThreshold: autoTerminateOnIdle.idleTimeThreshold,\n    };\n\n    workerProperties.loadCounters = Array(maxWorkerInstances).fill(0);\n    workerProperties.lastActiveTime = Array(maxWorkerInstances).fill(null);\n\n    for (let i = 0; i < maxWorkerInstances; i++) {\n      const worker = workerFn();\n      workerProperties.instances.push(Comlink.wrap(worker));\n      workerProperties.nativeWorkers.push(worker);\n      workerProperties.workerFn = workerFn;\n    }\n\n    this.workerRegistry[workerName] = workerProperties;\n  }\n\n  getNextWorkerAPI(workerName) {\n    const workerProperties = this.workerRegistry[workerName];\n\n    if (!workerProperties) {\n      console.error(`Worker type '${workerName}' is not registered.`);\n      return null;\n    }\n\n    // Find the worker with the minimum load.\n    const workerInstances = workerProperties.instances.filter(\n      (instance) => instance !== null\n    );\n\n    let minLoadIndex = 0;\n    let minLoadValue = workerProperties.loadCounters[0] || 0;\n    for (let i = 1; i < workerInstances.length; i++) {\n      const currentLoadValue = workerProperties.loadCounters[i] || 0;\n      if (currentLoadValue < minLoadValue) {\n        minLoadIndex = i;\n        minLoadValue = currentLoadValue;\n      }\n    }\n\n    // Check and recreate the worker if it was terminated.\n    if (workerProperties.instances[minLoadIndex] === null) {\n      const worker = workerProperties.workerFn();\n      workerProperties.instances[minLoadIndex] = Comlink.wrap(worker);\n      workerProperties.nativeWorkers[minLoadIndex] = worker;\n    }\n\n    // Update the load counter.\n    workerProperties.loadCounters[minLoadIndex] += 1;\n\n    // return the worker that has the minimum load.\n    return {\n      api: workerProperties.instances[minLoadIndex],\n      index: minLoadIndex,\n    };\n  }\n\n  /**\n   * Executes a task on a worker.\n   *\n   * @param workerName - The name of the worker to execute the task on.\n   * @param methodName - The name of the method to execute on the worker.\n   * @param args - The arguments to pass to the method. Default is an array\n   * You should put your transferable objects in the first argument as object\n   * and from the second argument you can put your non-transferable objects such\n   * as functions, classes, etc.\n   * @param options - An object containing options for the request. Default is an empty object.\n   * @param options.requestType - The type of the request. Default is RequestType.Compute.\n   * @param options.priority - The priority of the request. Default is 0.\n   * @param options.options - Additional options for the request. Default is an empty object.\n   *\n   * @returns A promise that resolves with the result of the task.\n   */\n  executeTask(\n    workerName,\n    methodName,\n    args = {},\n    {\n      requestType = RequestType.Compute,\n      priority = 0,\n      options = {},\n      callbacks = [],\n    } = {}\n  ) {\n    return new Promise((resolve, reject) => {\n      const requestFn = async () => {\n        const { api, index } = this.getNextWorkerAPI(workerName);\n        if (!api) {\n          const error = new Error(\n            `No available worker instance for '${workerName}'`\n          );\n          console.error(error);\n          reject(error);\n          return;\n        }\n\n        try {\n          // fix if any of the args keys are a function then we need to proxy it\n          // for the worker to be able to call it\n          let finalCallbacks = [];\n          if (callbacks.length) {\n            finalCallbacks = callbacks.map((cb) => {\n              return Comlink.proxy(cb);\n            });\n          }\n          const workerProperties = this.workerRegistry[workerName];\n\n          workerProperties.processing = true;\n\n          const results = await api[methodName](args, ...finalCallbacks);\n\n          workerProperties.processing = false;\n          workerProperties.lastActiveTime[index] = Date.now();\n\n          // If auto termination is enabled and the interval is not set, set it.\n          if (\n            workerProperties.autoTerminateOnIdle &&\n            !workerProperties.idleCheckIntervalId &&\n            workerProperties.idleTimeThreshold\n          ) {\n            workerProperties.idleCheckIntervalId = setInterval(() => {\n              this.terminateIdleWorkers(\n                workerName,\n                workerProperties.idleTimeThreshold\n              );\n            }, workerProperties.idleTimeThreshold);\n          }\n\n          resolve(results);\n        } catch (err) {\n          console.error(\n            `Error executing method '${methodName}' on worker '${workerName}':`,\n            err\n          );\n          reject(err);\n        } finally {\n          this.workerRegistry[workerName].loadCounters[index]--;\n        }\n      };\n\n      // I believe there is a bug right now, where if there are two workers\n      // and one wants to run a compute job 6 times and the limit is just 5, then\n      // the other worker will never get a chance to run its compute job.\n      // we should probably have a separate limit for compute jobs per worker\n      // context as there is another layer of parallelism there.\n      this.workerPoolManager.addRequest(\n        requestFn,\n        requestType,\n        options,\n        priority\n      );\n    });\n  }\n\n  terminateIdleWorkers(workerName, idleTimeThreshold) {\n    const workerProperties = this.workerRegistry[workerName];\n\n    if (workerProperties.processing) {\n      return;\n    }\n\n    const now = Date.now();\n\n    workerProperties.instances.forEach((_, index) => {\n      const lastActiveTime = workerProperties.lastActiveTime[index];\n      const isWorkerActive =\n        lastActiveTime !== null && workerProperties.loadCounters[index] > 0;\n      const idleTime = now - lastActiveTime;\n\n      if (!isWorkerActive && idleTime > idleTimeThreshold) {\n        this.terminateWorkerInstance(workerName, index);\n      }\n    });\n  }\n\n  terminate(workerName) {\n    const workerProperties = this.workerRegistry[workerName];\n    if (!workerProperties) {\n      console.error(`Worker type '${workerName}' is not registered.`);\n      return;\n    }\n\n    workerProperties.instances.forEach((_, index) => {\n      this.terminateWorkerInstance(workerName, index);\n    });\n  }\n\n  // New method to handle individual worker termination\n  terminateWorkerInstance(workerName, index) {\n    const workerProperties = this.workerRegistry[workerName];\n    const workerInstance = workerProperties.instances[index];\n\n    if (workerInstance !== null) {\n      workerInstance[Comlink.releaseProxy]();\n      workerProperties.nativeWorkers[index].terminate();\n\n      // Set the worker instance to null after termination\n      workerProperties.instances[index] = null;\n      workerProperties.lastActiveTime[index] = null;\n    }\n  }\n}\n\nexport default CentralizedWorkerManager;\n","import { SVGCursorDescriptor } from '../types';\n\n/*\n * Definitions\n */\n\nconst BASE: SVGCursorDescriptor = {\n  iconContent: '',\n  iconSize: 16,\n  viewBox: {\n    x: 16,\n    y: 16,\n  },\n  mousePoint: {\n    x: 8,\n    y: 8,\n  },\n  mousePointerGroupString: `\n    <path stroke=\"{{color}}\" d=\"M8 16L8 0\"></path>\n    <path stroke=\"{{color}}\" d=\"M16 8L0 8\"></path>\n  `,\n};\n\nconst SEGMENTATION_CURSOR_BOUNDARIES = {\n  x: 127,\n  y: 60,\n};\n\nconst MINUS_RECT = `\n<rect fill=\"{{color}}\" x=\"80.19\" y=\"25.03\" width=\"47.14\" height=\"15.85\"/>\n`;\n\nconst PLUS_RECT = `\n<rect fill=\"{{color}}\" x=\"80.19\" y=\"25.03\" width=\"47.14\" height=\"15.85\"/>\n<rect fill=\"{{color}}\" x=\"95.84\" y=\"9.38\" width=\"15.85\" height=\"47.14\"/>\n`;\n\nconst SCISSOR_ICON = `<path fill=\"{{color}}\" d=\"M82.89,10a12.09,12.09,0,0,0-16.8-2.5l-27.5,20.4-8.5-6.3a2.93,2.93,0,0,1-1.1-3,14.66,14.66,0,0,0,.1-6.6,14.08,14.08,0,1,0-6.5,15.2,2.87,2.87,0,0,1,3.2.2l8.2,6.1-8.2,6.1a2.87,2.87,0,0,1-3.2.2,14.16,14.16,0,1,0,6.7,14.4,14,14,0,0,0-.3-5.8,2.93,2.93,0,0,1,1.1-3l8.5-6.3,27.5,20.4A11.91,11.91,0,0,0,82.89,57l-31.7-23.5ZM15.29,21a5.9,5.9,0,1,1,5.9-5.9A5.91,5.91,0,0,1,15.29,21Zm0,36.8a5.9,5.9,0,1,1,5.9-5.9A5.91,5.91,0,0,1,15.29,57.77Zm28.3-21.5a2.8,2.8,0,1,1,2.8-2.8A2.8,2.8,0,0,1,43.59,36.27Z\" transform=\"translate(-1.17 -0.96)\"/>`;\nconst RECTANGLE_ICON = `<path fill=\"{{color}}\" d=\"M8.86,2.25V66.08H72.69V2.25H8.86ZM65.28,58.67h-49v-49h49v49Z\" transform=\"translate(-8.86 -2.25)\"/>`;\nconst CIRCLE_ICON = `<path fill=\"{{color}}\" d=\"M40.77,2.25A31.92,31.92,0,1,0,72.69,34.16,31.92,31.92,0,0,0,40.77,2.25Zm0,57.63A25.71,25.71,0,1,1,66.48,34.16,25.71,25.71,0,0,1,40.77,59.87Z\" transform=\"translate(-8.86 -2.25)\"/>`;\n\nconst CursorSVG: Record<string, SVGCursorDescriptor> = {\n  Angle: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M1203 544q0 13-10 23l-393 393 393 393q10 10 10 23t-10 23l-50\n    50q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l466-466q10-10 23-10t23\n    10l50 50q10 10 10 23z\" />`,\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }),\n  ArrowAnnotate: extend(BASE, {\n    iconContent: `<g id=\"arrowAnnotate-group\" fill=\"none\" stroke-width=\"1\" stroke=\"{{color}}\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n    <path id=\"arrowAnnotate-arrow\" d=\"M23,7 l-15,15 M7,17 l0,6 6,0\" stroke-width=\"2\" />\n  </g>`,\n    viewBox: {\n      x: 24,\n      y: 24,\n    },\n  }),\n  Bidirectional: extend(BASE, {\n    iconContent: `<g fill=\"{{color}}\" stroke-width=\"3\" stroke=\"{{color}}\">\n    <path d=\"M27.63 3.21L3.12 28.81\"></path>\n    <path d=\"M27.63 15.75L15.27 4.43\"></path>\n    <path d=\"M16.5 4.28C16.5 4.96 15.95 5.51 15.27 5.51C14.59 5.51 14.03 4.96 14.03 4.28C14.03 3.59 14.59 3.04 15.27 3.04C15.95 3.04 16.5 3.59 16.5 4.28Z\" ></path>\n    <path d=\"M28.87 3.19C28.87 3.87 28.31 4.43 27.63 4.43C26.95 4.43 26.4 3.87 26.4 3.19C26.4 2.51 26.95 1.95 27.63 1.95C28.31 1.95 28.87 2.51 28.87 3.19Z\"></path>\n    <path d=\"M28.87 15.75C28.87 16.43 28.31 16.99 27.63 16.99C26.95 16.99 26.4 16.43 26.4 15.75C26.4 15.07 26.95 14.51 27.63 14.51C28.31 14.51 28.87 15.07 28.87 15.75Z\"></path>\n    <path d=\"M4.73 28.44C4.73 29.12 4.17 29.68 3.49 29.68C2.81 29.68 2.25 29.12 2.25 28.44C2.25 27.76 2.81 27.2 3.49 27.2C4.17 27.2 4.73 27.76 4.73 28.44Z\"></path>\n  </g>`,\n    viewBox: {\n      x: 48,\n      y: 48,\n    },\n  }),\n  CobbAngle: extend(BASE, {\n    iconContent: `<g stroke=\"{{color}}\" stroke-width=\"3\">\n    <path d=\"M28.59 2.34L3.82 12.32\"></path>\n    <path d=\"M28.59 29.66L3.82 19.68\"></path>\n    <path stroke-dasharray=\"2\" fill-opacity=\"0\" d=\"M12.37\n      23.06C12.67 22.36 12.85 21.93 12.92 21.76C14.6 17.8 14.68 13.35 13.15\n      9.33C13.11 9.24 13.02 9 12.88 8.63\">\n    </path>\n  </g>`,\n    viewBox: {\n      x: 32,\n      y: 32,\n    },\n  }),\n  CircleROI: extend(BASE, {\n    iconContent: `<circle stroke=\"{{color}}\" fill=\"none\" stroke-width=\"3\" cx=\"16\" cy=\"16\" r=\"14\" />`,\n    viewBox: {\n      x: 32,\n      y: 32,\n    },\n  }),\n  EllipticalROI: extend(BASE, {\n    iconContent: `<path stroke=\"{{color}}\" fill=\"none\" stroke-width=\"3\" d=\"M30.74 15.76C30.74 20.99 24.14 25.23 16\n    25.23C7.86 25.23 1.26 20.99 1.26 15.76C1.26 10.54 7.86 6.3 16 6.3C24.14\n    6.3 30.74 10.54 30.74 15.76Z\" />`,\n    viewBox: {\n      x: 32,\n      y: 32,\n    },\n  }),\n  FreehandROI: extend(BASE, {\n    iconContent: `<g fill=\"{{color}}\" stroke=\"{{color}}\" stroke-width=\"2\">\n    <ellipse ry=\"1\" rx=\"1\" id=\"svg_3\" cy=\"4.240343\" cx=\"14.306499\"/>\n    <line id=\"svg_4\" y2=\"3.58462\" x2=\"12.242186\" y1=\"3.997482\" x1=\"13.432202\"/>\n    <line id=\"svg_5\" y2=\"3.268901\" x2=\"10.857882\" y1=\"3.608906\" x1=\"12.387902\"/>\n    <line id=\"svg_6\" y2=\"3.147471\" x2=\"9.740724\" y1=\"3.293187\" x1=\"10.955026\"/>\n    <line id=\"svg_7\" y2=\"3.147471\" x2=\"8.089274\" y1=\"3.196043\" x1=\"9.983585\"/>\n    <line id=\"svg_8\" y2=\"3.268901\" x2=\"6.874972\" y1=\"3.123185\" x1=\"8.307848\"/>\n    <line id=\"svg_9\" y2=\"3.657478\" x2=\"5.587812\" y1=\"3.220329\" x1=\"7.020688\"/>\n    <line id=\"svg_10\" y2=\"4.046054\" x2=\"4.737801\" y1=\"3.560334\" x1=\"5.854959\"/>\n    <line id=\"svg_11\" y2=\"4.337487\" x2=\"4.300652\" y1=\"3.997482\" x1=\"4.834945\"/>\n    <line id=\"svg_12\" y2=\"4.726063\" x2=\"3.88779\" y1=\"4.191771\" x1=\"4.470655\"/>\n    <line id=\"svg_15\" y2=\"5.3575\" x2=\"3.377783\" y1=\"4.604633\" x1=\"3.960648\"/>\n    <line id=\"svg_16\" y2=\"6.183226\" x2=\"2.916348\" y1=\"5.138926\" x1=\"3.547785\"/>\n    <line id=\"svg_17\" y2=\"6.960379\" x2=\"2.770632\" y1=\"5.867507\" x1=\"3.037779\"/>\n    <line id=\"svg_18\" y2=\"7.713246\" x2=\"2.673488\" y1=\"6.741804\" x1=\"2.819204\"/>\n    <line id=\"svg_19\" y2=\"8.684687\" x2=\"2.697774\" y1=\"7.616102\" x1=\"2.673488\"/>\n    <line id=\"svg_20\" y2=\"9.753273\" x2=\"2.892062\" y1=\"8.611829\" x1=\"2.697774\"/>\n    <line id=\"svg_21\" y2=\"10.724714\" x2=\"3.134923\" y1=\"9.534698\" x1=\"2.84349\"/>\n    <line id=\"svg_23\" y2=\"11.647583\" x2=\"3.596357\" y1=\"10.578998\" x1=\"3.086351\"/>\n    <line id=\"svg_25\" y2=\"12.521881\" x2=\"4.276366\" y1=\"11.501867\" x1=\"3.499213\"/>\n    <line id=\"svg_26\" y2=\"13.930471\" x2=\"5.830673\" y1=\"12.376165\" x1=\"4.13065\"/>\n    <line id=\"svg_28\" y2=\"14.707624\" x2=\"7.263549\" y1=\"13.881899\" x1=\"5.733528\"/>\n    <line id=\"svg_29\" y2=\"15.339061\" x2=\"8.963571\" y1=\"14.61048\" x1=\"7.06926\"/>\n    <line id=\"svg_30\" y2=\"15.581921\" x2=\"10.882168\" y1=\"15.314775\" x1=\"8.817855\"/>\n    <line id=\"svg_31\" y2=\"15.460491\" x2=\"12.023612\" y1=\"15.581921\" x1=\"10.785024\"/>\n    <line id=\"svg_33\" y2=\"15.120487\" x2=\"13.092197\" y1=\"15.484777\" x1=\"11.877895\"/>\n    <line id=\"svg_34\" y2=\"14.586194\" x2=\"13.86935\" y1=\"15.217631\" x1=\"12.897909\"/>\n    <line id=\"svg_35\" y2=\"13.833327\" x2=\"14.597931\" y1=\"14.756196\" x1=\"13.699348\"/>\n    <line id=\"svg_37\" y2=\"12.716169\" x2=\"15.180796\" y1=\"13.881899\" x1=\"14.549359\"/>\n    <line id=\"svg_39\" y2=\"11.429009\" x2=\"15.520801\" y1=\"12.813313\" x1=\"15.15651\"/>\n    <ellipse ry=\"1\" rx=\"1\" id=\"svg_40\" cy=\"10.967574\" cx=\"15.520801\"/>\n  </g>`,\n    viewBox: {\n      x: 18,\n      y: 18,\n    },\n  }),\n  FreehandROISculptor: extend(BASE, {\n    iconContent: `<g id=\"icon-freehand-sculpt\" fill=\"none\" stroke-width=\"1.5\" stroke=\"{{color}}\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n    <line id=\"svg_1\" y2=\"2.559367\" x2=\"10.184807\" y1=\"4.467781\" x1=\"8.81711\"/>\n    <line id=\"svg_4\" y2=\"1.493836\" x2=\"11.727442\" y1=\"2.766112\" x1=\"10.089386\"/>\n    <line id=\"svg_7\" y2=\"1.080346\" x2=\"13.047428\" y1=\"1.748291\" x1=\"11.345759\"/>\n    <line id=\"svg_8\" y2=\"1.000829\" x2=\"14.351511\" y1=\"1.112153\" x1=\"12.77707\"/>\n    <line id=\"svg_9\" y2=\"1.350705\" x2=\"15.242104\" y1=\"0.905408\" x1=\"13.969828\"/>\n    <line id=\"svg_10\" y2=\"2.098167\" x2=\"15.862339\" y1=\"1.14396\" x1=\"14.955842\"/>\n    <line id=\"svg_11\" y2=\"3.195505\" x2=\"16.41896\" y1=\"1.939133\" x1=\"15.766918\"/>\n    <line id=\"svg_12\" y2=\"4.292843\" x2=\"16.530284\" y1=\"2.925147\" x1=\"16.387153\"/>\n    <line id=\"svg_16\" y2=\"5.644637\" x2=\"16.196311\" y1=\"3.831643\" x1=\"16.593898\"/>\n    <line id=\"svg_18\" y2=\"7.266789\" x2=\"15.623787\" y1=\"5.19934\" x1=\"16.275829\"/>\n    <line id=\"svg_19\" y2=\"10.813258\" x2=\"14.526449\" y1=\"6.726071\" x1=\"15.766918\"/>\n    <line id=\"svg_20\" y2=\"5.056209\" x2=\"8.085552\" y1=\"4.181519\" x1=\"8.976145\"/>\n    <line id=\"svg_23\" y2=\"5.326568\" x2=\"7.481221\" y1=\"4.78585\" x1=\"8.403621\"/>\n    <line id=\"svg_24\" y2=\"5.565119\" x2=\"6.749662\" y1=\"5.294761\" x1=\"7.624352\"/>\n    <line id=\"svg_25\" y2=\"5.994512\" x2=\"5.429675\" y1=\"5.533312\" x1=\"6.956407\"/>\n    <line id=\"svg_27\" y2=\"6.551133\" x2=\"4.284627\" y1=\"5.962706\" x1=\"5.572807\"/>\n    <line id=\"svg_28\" y2=\"7.584858\" x2=\"3.044158\" y1=\"6.392099\" x1=\"4.427758\"/>\n    <line id=\"svg_29\" y2=\"8.84123\" x2=\"2.185372\" y1=\"7.489437\" x1=\"3.219096\"/>\n    <line id=\"svg_31\" y2=\"10.606513\" x2=\"1.644654\" y1=\"8.602678\" x1=\"2.280792\"/>\n    <line id=\"svg_32\" y2=\"13.214679\" x2=\"1.48562\" y1=\"10.352058\" x1=\"1.724171\"/>\n    <line id=\"svg_33\" y2=\"14.375631\" x2=\"1.676461\" y1=\"12.992031\" x1=\"1.453813\"/>\n    <line id=\"svg_34\" y2=\"15.298031\" x2=\"2.264889\" y1=\"14.152983\" x1=\"1.517427\"/>\n    <line id=\"svg_35\" y2=\"16.172721\" x2=\"3.521261\" y1=\"14.948155\" x1=\"1.915013\"/>\n    <line id=\"svg_36\" y2=\"16.824762\" x2=\"5.207027\" y1=\"15.997783\" x1=\"3.28271\"/>\n    <line id=\"svg_38\" y2=\"17.063314\" x2=\"7.035924\" y1=\"16.745245\" x1=\"4.968475\"/>\n    <line id=\"svg_39\" y2=\"16.888376\" x2=\"9.278311\" y1=\"17.047411\" x1=\"6.733758\"/>\n    <line id=\"svg_40\" y2=\"16.284045\" x2=\"10.661911\" y1=\"16.983797\" x1=\"8.992048\"/>\n    <line id=\"svg_41\" y2=\"15.313934\" x2=\"11.647925\" y1=\"16.395369\" x1=\"10.455166\"/>\n    <line id=\"svg_44\" y2=\"13.898527\" x2=\"12.82478\" y1=\"15.425259\" x1=\"11.504794\"/>\n    <line id=\"svg_45\" y2=\"12.037824\" x2=\"14.144766\" y1=\"14.312017\" x1=\"12.522614\"/>\n    <line id=\"svg_47\" y2=\"10.59061\" x2=\"14.605966\" y1=\"12.228665\" x1=\"13.953925\"/>\n    <ellipse ry=\"1\" rx=\"1\" id=\"svg_48\" cy=\"3.982726\" cx=\"13.460918\"/>\n  </g>`,\n    viewBox: {\n      x: 18,\n      y: 18,\n    },\n  }),\n  Length: extend(BASE, {\n    iconContent: `<g id=\"length-group\" fill=\"none\" stroke-width=\"1\" stroke=\"{{color}}\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n    <path id=\"length-dashes\" d=\"m22.5,6 -16.5,16.5\" stroke-width=\"3\" stroke-dasharray=\"0.6666,5\" />\n  </g>`,\n    viewBox: {\n      x: 24,\n      y: 24,\n    },\n  }),\n  Probe: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M1152 896q0 106-75 181t-181 75-181-75-75-181 75-181 181-75 181 75\n    75 181zm-256-544q-148 0-273 73t-198 198-73 273 73 273 198 198 273 73 273-73\n    198-198 73-273-73-273-198-198-273-73zm768 544q0 209-103 385.5t-279.5\n    279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5\n    385.5-103 385.5 103 279.5 279.5 103 385.5z\" />`,\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }),\n  RectangleROI: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M1312 256h-832q-66 0-113 47t-47 113v832q0 66 47\n    113t113 47h832q66 0 113-47t47-113v-832q0-66-47-113t-113-47zm288 160v832q0\n    119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119\n    84.5-203.5t203.5-84.5h832q119 0 203.5 84.5t84.5 203.5z\" />`,\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }),\n  TextMarker: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M789 559l-170 450q33 0 136.5 2t160.5 2q19 0\n    57-2-87-253-184-452zm-725 1105l2-79q23-7 56-12.5t57-10.5 49.5-14.5 44.5-29\n    31-50.5l237-616 280-724h128q8 14 11 21l205 480q33 78 106 257.5t114 274.5q15\n    34 58 144.5t72 168.5q20 45 35 57 19 15 88 29.5t84 20.5q6 38 6 57 0 5-.5\n    13.5t-.5 12.5q-63 0-190-8t-191-8q-76 0-215 7t-178 8q0-43 4-78l131-28q1 0\n    12.5-2.5t15.5-3.5 14.5-4.5 15-6.5 11-8 9-11\n    2.5-14q0-16-31-96.5t-72-177.5-42-100l-450-2q-26 58-76.5 195.5t-50.5 162.5q0\n    22 14 37.5t43.5 24.5 48.5 13.5 57 8.5 41 4q1 19 1 58 0 9-2 27-58\n    0-174.5-10t-174.5-10q-8 0-26.5 4t-21.5 4q-80 14-188 14z\" />`,\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }),\n  Crosshairs: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M1325 1024h-109q-26 0-45-19t-19-45v-128q0-26\n    19-45t45-19h109q-32-108-112.5-188.5t-188.5-112.5v109q0 26-19 45t-45\n    19h-128q-26 0-45-19t-19-45v-109q-108 32-188.5 112.5t-112.5 188.5h109q26\n    0 45 19t19 45v128q0 26-19 45t-45 19h-109q32 108 112.5 188.5t188.5\n    112.5v-109q0-26 19-45t45-19h128q26 0 45 19t19 45v109q108-32\n    188.5-112.5t112.5-188.5zm339-192v128q0 26-19 45t-45 19h-143q-37 161-154.5\n    278.5t-278.5 154.5v143q0 26-19 45t-45 19h-128q-26\n    0-45-19t-19-45v-143q-161-37-278.5-154.5t-154.5-278.5h-143q-26\n    0-45-19t-19-45v-128q0-26 19-45t45-19h143q37-161\n    154.5-278.5t278.5-154.5v-143q0-26 19-45t45-19h128q26 0 45 19t19 45v143q161\n    37 278.5 154.5t154.5 278.5h143q26 0 45 19t19 45z\" />`,\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }),\n  Eraser: extend(BASE, {\n    iconContent: `<path transform=\"translate(0,1792) scale(1,-1)\" fill=\"{{color}}\" d=\"M960 1408l336-384h-768l-336 384h768zm1013-1077q15\n    34 9.5 71.5t-30.5 65.5l-896 1024q-38 44-96 44h-768q-38\n    0-69.5-20.5t-47.5-54.5q-15-34-9.5-71.5t30.5-65.5l896-1024q38-44 96-44h768q38\n    0 69.5 20.5t47.5 54.5z\" />`,\n    viewBox: {\n      x: 2048,\n      y: 1792,\n    },\n  }),\n  Magnify: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M508.5 481.6l-129-129c-2.3-2.3-5.3-3.5-8.5-3.5h-10.3C395\n    312 416 262.5 416 208 416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c54.5\n    0 104-21 141.1-55.2V371c0 3.2 1.3 6.2 3.5 8.5l129 129c4.7 4.7 12.3 4.7 17\n    0l9.9-9.9c4.7-4.7 4.7-12.3 0-17zM208 384c-97.3 0-176-78.7-176-176S110.7 32 208\n    32s176 78.7 176 176-78.7 176-176 176z\" />`,\n    viewBox: {\n      x: 512,\n      y: 512,\n    },\n  }),\n  Pan: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M1411 541l-355 355 355 355 144-144q29-31 70-14 39 17\n    39 59v448q0 26-19 45t-45 19h-448q-42 0-59-40-17-39 14-69l144-144-355-355-355\n    355 144 144q31 30 14 69-17 40-59 40h-448q-26 0-45-19t-19-45v-448q0-42 40-59\n    39-17 69 14l144 144 355-355-355-355-144 144q-19 19-45 19-12\n    0-24-5-40-17-40-59v-448q0-26 19-45t45-19h448q42 0 59 40 17 39-14 69l-144\n    144 355 355 355-355-144-144q-31-30-14-69 17-40 59-40h448q26 0 45 19t19\n    45v448q0 42-39 59-13 5-25 5-26 0-45-19z\" />`,\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }),\n  Rotate: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M1664 256v448q0 26-19 45t-45 19h-448q-42 0-59-40-17-39\n    14-69l138-138q-148-137-349-137-104 0-198.5 40.5t-163.5 109.5-109.5\n    163.5-40.5 198.5 40.5 198.5 109.5 163.5 163.5 109.5 198.5 40.5q119 0\n    225-52t179-147q7-10 23-12 15 0 25 9l137 138q9 8 9.5 20.5t-7.5 22.5q-109\n    132-264 204.5t-327 72.5q-156 0-298-61t-245-164-164-245-61-298 61-298\n    164-245 245-164 298-61q147 0 284.5 55.5t244.5 156.5l130-129q29-31 70-14\n    39 17 39 59z\" />`,\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }),\n  StackScroll: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M24 21v2c0 0.547-0.453 1-1 1h-22c-0.547\n    0-1-0.453-1-1v-2c0-0.547 0.453-1 1-1h22c0.547 0 1 0.453 1 1zM24 13v2c0\n    0.547-0.453 1-1 1h-22c-0.547 0-1-0.453-1-1v-2c0-0.547 0.453-1 1-1h22c0.547\n    0 1 0.453 1 1zM24 5v2c0 0.547-0.453 1-1 1h-22c-0.547\n    0-1-0.453-1-1v-2c0-0.547 0.453-1 1-1h22c0.547 0 1 0.453 1 1z\" />`,\n    viewBox: {\n      x: 24,\n      y: 28,\n    },\n  }),\n  WindowLevelRegion: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M1664 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119\n    0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5\n    84.5t84.5 203.5z\" />`,\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }),\n  WindowLevel: extend(BASE, {\n    iconContent: `\n    <path fill=\"{{color}}\" d=\"M14.5,3.5 a1 1 0 0 1 -11,11 Z\" stroke=\"none\" opacity=\"0.8\" />\n    <circle cx=\"9\" cy=\"9\" r=\"8\" fill=\"none\" stroke-width=\"2\" stroke=\"{{color}}\" />`,\n    viewBox: {\n      x: 18,\n      y: 18,\n    },\n  }),\n  Zoom: extend(BASE, {\n    iconContent: `\n  <path fill=\"{{color}}\" d=\"M508.5 481.6l-129-129c-2.3-2.3-5.3-3.5-8.5-3.5h-10.3C395\n    312 416 262.5 416 208 416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c54.5\n    0 104-21 141.1-55.2V371c0 3.2 1.3 6.2 3.5 8.5l129 129c4.7 4.7 12.3 4.7 17\n    0l9.9-9.9c4.7-4.7 4.7-12.3 0-17zM208 384c-97.3 0-176-78.7-176-176S110.7 32 208\n    32s176 78.7 176 176-78.7 176-176 176z\" />\n  <path fill=\"{{color}}\" transform=\"scale(0.22,0.22) translate(1400,0)\" d=\"M1216\n    320q0 26-19 45t-45 19h-128v1024h128q26 0 45 19t19 45-19 45l-256 256q-19\n    19-45 19t-45-19l-256-256q-19-19-19-45t19-45 45-19h128v-1024h-128q-26\n    0-45-19t-19-45 19-45l256-256q19-19 45-19t45 19l256 256q19 19 19 45z\" />`,\n    viewBox: {\n      x: 640,\n      y: 512,\n    },\n  }),\n\n  /*\n   * Segmentation Cursors\n   */\n\n  SegmentationFreeHandEraseInside: extend(BASE, {\n    iconContent: `${SCISSOR_ICON} ${MINUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  SegmentationFreeHandFillInside: extend(BASE, {\n    iconContent: `${SCISSOR_ICON} ${PLUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  SegmentationFreeHandEraseOutside: extend(BASE, {\n    iconContent: `${SCISSOR_ICON} ${MINUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  SegmentationFreeHandFillOutside: extend(BASE, {\n    iconContent: `${SCISSOR_ICON} ${PLUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  SegmentationRectangleEraseInside: extend(BASE, {\n    iconContent: `${RECTANGLE_ICON} ${MINUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  // Default Rectangle Scissors\n  RectangleScissor: extend(BASE, {\n    iconContent: `${RECTANGLE_ICON} ${PLUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  'RectangleScissor.FILL_INSIDE': extend(BASE, {\n    iconContent: `${RECTANGLE_ICON} ${PLUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  'RectangleScissor.FILL_OUTSIDE': extend(BASE, {\n    iconContent: `${RECTANGLE_ICON} ${PLUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  'RectangleScissor.ERASE_OUTSIDE': extend(BASE, {\n    iconContent: `${RECTANGLE_ICON} ${MINUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  'RectangleScissor.ERASE_INSIDE': extend(BASE, {\n    iconContent: `${RECTANGLE_ICON} ${MINUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  CircleScissor: extend(BASE, {\n    iconContent: `${CIRCLE_ICON} ${PLUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  'CircleScissor.FILL_INSIDE': extend(BASE, {\n    iconContent: `${CIRCLE_ICON} ${PLUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  'CircleScissor.ERASE_OUTSIDE': extend(BASE, {\n    iconContent: `${CIRCLE_ICON} ${MINUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  'CircleScissor.FILL_OUTSIDE': extend(BASE, {\n    iconContent: `${CIRCLE_ICON} ${PLUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n};\n\n/*\n * Utils\n */\n\nfunction extend(\n  base: SVGCursorDescriptor,\n  values: Record<string, unknown>\n): SVGCursorDescriptor {\n  return Object.assign(Object.create(base), values);\n}\n\n/**\n * Registers a cursor to the list, so that it will be used for the given `toolName`.\n * Overwrites the given cursor if it is already set.\n *\n * @param toolName - The name of the tool to assign a cursor to.\n * @param iconContent - The SVG icon content of the cursor.\n * @param viewBox - The viewBox of the cursor object.\n */\nfunction registerCursor(\n  toolName: string,\n  iconContent: string,\n  viewBox: { x: number; y: number }\n) {\n  CursorSVG[toolName] = extend(BASE, {\n    iconContent,\n    viewBox,\n  });\n}\n\nfunction getDefinedSVGCursorDescriptor(\n  name: string\n): SVGCursorDescriptor | undefined {\n  return CursorSVG[name];\n}\n\n/*\n * Exports\n */\nconst svgCursorNames = Object.keys(CursorSVG);\n\nexport {\n  getDefinedSVGCursorDescriptor,\n  registerCursor,\n  svgCursorNames,\n  CursorSVG,\n};\n","import { vec2, vec3 } from 'gl-matrix';\nimport { getEnabledElement, utilities as csUtils } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport { getCalibratedLengthUnitsAndScale } from '../../utilities/getCalibratedUnits';\nimport { roundNumber } from '../../utilities';\nimport { AnnotationTool } from '../base';\nimport throttle from '../../utilities/throttle';\nimport {\n  addAnnotation,\n  getAnnotations,\n  removeAnnotation,\n} from '../../stateManagement/annotation/annotationState';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\nimport {\n  triggerAnnotationCompleted,\n  triggerAnnotationModified,\n} from '../../stateManagement/annotation/helpers/state';\nimport {\n  drawLine as drawLineSvg,\n  drawHandles as drawHandlesSvg,\n  drawLinkedTextBox as drawLinkedTextBoxSvg,\n} from '../../drawingSvg';\nimport { state } from '../../store';\nimport { Events } from '../../enums';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport * as lineSegment from '../../utilities/math/line';\nimport { getTextBoxCoordsCanvas } from '../../utilities/drawing';\nimport {\n  resetElementCursor,\n  hideElementCursor,\n} from '../../cursors/elementCursor';\nimport {\n  EventTypes,\n  ToolHandle,\n  TextBoxHandle,\n  PublicToolProps,\n  ToolProps,\n  SVGDrawingHelper,\n} from '../../types';\nimport { BidirectionalAnnotation } from '../../types/ToolSpecificAnnotationTypes';\n\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport { StyleSpecifier } from '../../types/AnnotationStyle';\n\nconst { transformWorldToIndex } = csUtils;\n\n/**\n * BidirectionalTool let you draw annotations that measures the length and\n * width at the same time in `mm` unit. It is consisted of two perpendicular lines and\n * a text box. You can use the BidirectionalTool in all planes even in oblique\n * reconstructed planes. Note: annotation tools in cornerstone3DTools exists in the exact location\n * in the physical 3d space, as a result, by default, all annotations that are\n * drawing in the same frameOfReference will get shared between viewports that\n * are in the same frameOfReference.\n *\n * The resulting annotation's data (statistics) and metadata (the\n * state of the viewport while drawing was happening) will get added to the\n * ToolState manager and can be accessed from the ToolState by calling getAnnotations\n * or similar methods.\n *\n * ```js\n * cornerstoneTools.addTool(BidirectionalTool)\n *\n * const toolGroup = ToolGroupManager.createToolGroup('toolGroupId')\n *\n * toolGroup.addTool(BidirectionalTool.toolName)\n *\n * toolGroup.addViewport('viewportId', 'renderingEngineId')\n *\n * toolGroup.setToolActive(BidirectionalTool.toolName, {\n *   bindings: [\n *    {\n *       mouseButton: MouseBindings.Primary, // Left Click\n *     },\n *   ],\n * })\n * ```\n *\n * Read more in the Docs section of the website.\n */\n\nclass BidirectionalTool extends AnnotationTool {\n  static toolName;\n\n  touchDragCallback: any;\n  mouseDragCallback: any;\n  _throttledCalculateCachedStats: any;\n  editData: {\n    annotation: any;\n    viewportIdsToRender: string[];\n    handleIndex?: number;\n    movingTextBox: boolean;\n    newAnnotation?: boolean;\n    hasMoved?: boolean;\n  } | null;\n  isDrawing: boolean;\n  isHandleOutsideImage: boolean;\n  preventHandleOutsideImage: boolean;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        preventHandleOutsideImage: false,\n        getTextLines: defaultGetTextLines,\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n\n    this._throttledCalculateCachedStats = throttle(\n      this._calculateCachedStats,\n      100,\n      { trailing: true }\n    );\n  }\n\n  /**\n   * Based on the current position of the mouse and the current imageId to create\n   * a Bidirectional Annotation and stores it in the annotationManager\n   *\n   * @param evt -  EventTypes.NormalizedMouseEventType\n   * @returns The annotation object.\n   *\n   */\n  addNewAnnotation(\n    evt: EventTypes.InteractionEventType\n  ): BidirectionalAnnotation {\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const worldPos = currentPoints.world;\n    const enabledElement = getEnabledElement(element);\n    const { viewport, renderingEngine } = enabledElement;\n\n    this.isDrawing = true;\n\n    const camera = viewport.getCamera();\n    const { viewPlaneNormal, viewUp } = camera;\n\n    const referencedImageId = this.getReferencedImageId(\n      viewport,\n      worldPos,\n      viewPlaneNormal,\n      viewUp\n    );\n\n    const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n\n    const annotation: BidirectionalAnnotation = {\n      highlighted: true,\n      invalidated: true,\n      metadata: {\n        toolName: this.getToolName(),\n        viewPlaneNormal: <Types.Point3>[...viewPlaneNormal],\n        viewUp: <Types.Point3>[...viewUp],\n        FrameOfReferenceUID,\n        referencedImageId,\n        ...viewport.getViewReference({ points: [worldPos] }),\n      },\n      data: {\n        handles: {\n          points: [\n            // long\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n            // short\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n          ],\n          textBox: {\n            hasMoved: false,\n            worldPosition: <Types.Point3>[0, 0, 0],\n            worldBoundingBox: {\n              topLeft: <Types.Point3>[0, 0, 0],\n              topRight: <Types.Point3>[0, 0, 0],\n              bottomLeft: <Types.Point3>[0, 0, 0],\n              bottomRight: <Types.Point3>[0, 0, 0],\n            },\n          },\n          activeHandleIndex: null,\n        },\n        label: '',\n        cachedStats: {},\n      },\n    };\n\n    addAnnotation(annotation, element);\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      handleIndex: 1,\n      movingTextBox: false,\n      newAnnotation: true,\n      hasMoved: false,\n    };\n    this._activateDraw(element);\n\n    hideElementCursor(element);\n\n    evt.preventDefault();\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    return annotation;\n  }\n\n  /**\n   * It returns if the canvas point is near the provided annotation in the provided\n   * element or not. A proximity is passed to the function to determine the\n   * proximity of the point to the annotation in number of pixels.\n   *\n   * @param element - HTML Element\n   * @param annotation - Annotation\n   * @param canvasCoords - Canvas coordinates\n   * @param proximity - Proximity to tool to consider\n   * @returns Boolean, whether the canvas point is near tool\n   */\n  isPointNearTool = (\n    element: HTMLDivElement,\n    annotation: BidirectionalAnnotation,\n    canvasCoords: Types.Point2,\n    proximity: number\n  ): boolean => {\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n    const { data } = annotation;\n    const { points } = data.handles;\n\n    // Check long axis\n    let canvasPoint1 = viewport.worldToCanvas(points[0]);\n    let canvasPoint2 = viewport.worldToCanvas(points[1]);\n\n    let line = {\n      start: {\n        x: canvasPoint1[0],\n        y: canvasPoint1[1],\n      },\n      end: {\n        x: canvasPoint2[0],\n        y: canvasPoint2[1],\n      },\n    };\n\n    let distanceToPoint = lineSegment.distanceToPoint(\n      [line.start.x, line.start.y],\n      [line.end.x, line.end.y],\n      [canvasCoords[0], canvasCoords[1]]\n    );\n\n    if (distanceToPoint <= proximity) {\n      return true;\n    }\n\n    // Check short axis\n    canvasPoint1 = viewport.worldToCanvas(points[2]);\n    canvasPoint2 = viewport.worldToCanvas(points[3]);\n\n    line = {\n      start: {\n        x: canvasPoint1[0],\n        y: canvasPoint1[1],\n      },\n      end: {\n        x: canvasPoint2[0],\n        y: canvasPoint2[1],\n      },\n    };\n\n    distanceToPoint = lineSegment.distanceToPoint(\n      [line.start.x, line.start.y],\n      [line.end.x, line.end.y],\n      [canvasCoords[0], canvasCoords[1]]\n    );\n\n    if (distanceToPoint <= proximity) {\n      return true;\n    }\n\n    return false;\n  };\n\n  /**\n   * Handles the toolSelected callback for bidirectional tool\n   * @param evt - EventTypes.MouseDownEventType\n   * @param annotation - Bidirectional annotation\n   * @param interactionType - interaction type (mouse, touch)\n   */\n  toolSelectedCallback = (\n    evt: EventTypes.InteractionEventType,\n    annotation: BidirectionalAnnotation\n  ): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    annotation.highlighted = true;\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      movingTextBox: false,\n    };\n\n    this._activateModify(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    hideElementCursor(element);\n\n    evt.preventDefault();\n  };\n\n  /**\n   * Executes the callback for when mouse has selected a handle (anchor point) of\n   * the bidirectional tool or when the text box has been selected.\n   *\n   * @param evt - EventTypes.MouseDownEventType\n   * @param annotation - Bidirectional annotation\n   * @param handle - Handle index or selected textBox information\n   * @param interactionType - interaction type (mouse, touch)\n   */\n  handleSelectedCallback = (\n    evt: EventTypes.InteractionEventType,\n    annotation: BidirectionalAnnotation,\n    handle: ToolHandle\n  ): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const data = annotation.data;\n\n    annotation.highlighted = true;\n\n    let movingTextBox = false;\n    let handleIndex;\n\n    if ((handle as TextBoxHandle).worldPosition) {\n      movingTextBox = true;\n    } else {\n      handleIndex = data.handles.points.findIndex((p) => p === handle);\n    }\n\n    // Find viewports to render on drag.\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    hideElementCursor(element);\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      handleIndex,\n      movingTextBox,\n    };\n    this._activateModify(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    evt.preventDefault();\n  };\n\n  /**\n   * Handles the mouse up action for the bidirectional tool. It can be at the end\n   * of the annotation drawing (MouseUpEventType) or when the user clicks and release\n   * the mouse button instantly which let to the annotation to draw without holding\n   * the mouse button (MouseClickEventType).\n   *\n   * @param evt - mouse up or mouse click event types\n   */\n  _endCallback = (evt: EventTypes.InteractionEventType): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    const { annotation, viewportIdsToRender, newAnnotation, hasMoved } =\n      this.editData;\n    const { data } = annotation;\n\n    if (newAnnotation && !hasMoved) {\n      return;\n    }\n\n    data.handles.activeHandleIndex = null;\n\n    this._deactivateModify(element);\n    this._deactivateDraw(element);\n\n    resetElementCursor(element);\n\n    const { renderingEngine } = getEnabledElement(element);\n\n    if (this.editData.handleIndex !== undefined) {\n      const { points } = data.handles;\n      const firstLineSegmentLength = vec3.distance(points[0], points[1]);\n      const secondLineSegmentLength = vec3.distance(points[2], points[3]);\n\n      if (secondLineSegmentLength > firstLineSegmentLength) {\n        // Switch points so [0,1] is the long axis and [2,3] is the short axis.\n\n        const longAxis = [[...points[2]], [...points[3]]];\n\n        const shortAxisPoint0 = [...points[0]];\n        const shortAxisPoint1 = [...points[1]];\n\n        // shortAxis[0->1] should be perpendicular (counter-clockwise) to longAxis[0->1]\n        const longAxisVector = vec2.create();\n\n        vec2.set(\n          longAxisVector,\n          longAxis[1][0] - longAxis[0][0],\n          longAxis[1][1] - longAxis[1][0]\n        );\n\n        const counterClockWisePerpendicularToLongAxis = vec2.create();\n\n        vec2.set(\n          counterClockWisePerpendicularToLongAxis,\n          -longAxisVector[1],\n          longAxisVector[0]\n        );\n\n        const currentShortAxisVector = vec2.create();\n\n        vec2.set(\n          currentShortAxisVector,\n          shortAxisPoint1[0] - shortAxisPoint0[0],\n          shortAxisPoint1[1] - shortAxisPoint0[0]\n        );\n\n        let shortAxis;\n\n        if (\n          vec2.dot(\n            currentShortAxisVector,\n            counterClockWisePerpendicularToLongAxis\n          ) > 0\n        ) {\n          shortAxis = [shortAxisPoint0, shortAxisPoint1];\n        } else {\n          shortAxis = [shortAxisPoint1, shortAxisPoint0];\n        }\n\n        data.handles.points = [\n          longAxis[0],\n          longAxis[1],\n          shortAxis[0],\n          shortAxis[1],\n        ];\n      }\n    }\n\n    if (\n      this.isHandleOutsideImage &&\n      this.configuration.preventHandleOutsideImage\n    ) {\n      removeAnnotation(annotation.annotationUID);\n    }\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    if (newAnnotation) {\n      triggerAnnotationCompleted(annotation);\n    }\n\n    this.editData = null;\n    this.isDrawing = false;\n  };\n\n  /**\n   * @param evt - mouse move event type or mouse drag\n   */\n  _dragDrawCallback = (evt: EventTypes.InteractionEventType): void => {\n    this.isDrawing = true;\n\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine, viewport } = enabledElement;\n    const { worldToCanvas } = viewport;\n    const { annotation, viewportIdsToRender, handleIndex } = this.editData;\n    const { data } = annotation;\n\n    const worldPos = currentPoints.world;\n\n    // Update first move handle\n    data.handles.points[handleIndex] = [...worldPos];\n\n    const canvasCoordPoints = data.handles.points.map(worldToCanvas);\n\n    const canvasCoords = {\n      longLineSegment: {\n        start: {\n          x: canvasCoordPoints[0][0],\n          y: canvasCoordPoints[0][1],\n        },\n        end: {\n          x: canvasCoordPoints[1][0],\n          y: canvasCoordPoints[1][1],\n        },\n      },\n      shortLineSegment: {\n        start: {\n          x: canvasCoordPoints[2][0],\n          y: canvasCoordPoints[2][1],\n        },\n        end: {\n          x: canvasCoordPoints[3][0],\n          y: canvasCoordPoints[3][1],\n        },\n      },\n    };\n\n    // ~~ calculate worldPos of our short axis handles\n    // short axis is perpendicular to long axis, and we set its length to be 2/3 of long axis\n    // (meaning each)\n    const dist = vec2.distance(canvasCoordPoints[0], canvasCoordPoints[1]);\n\n    const shortAxisDistFromCenter = dist / 3;\n    // Calculate long line's incline\n    const dx =\n      canvasCoords.longLineSegment.start.x - canvasCoords.longLineSegment.end.x;\n    const dy =\n      canvasCoords.longLineSegment.start.y - canvasCoords.longLineSegment.end.y;\n    const length = Math.sqrt(dx * dx + dy * dy);\n    const vectorX = dx / length;\n    const vectorY = dy / length;\n    // middle point between long line segment's points\n    const xMid =\n      (canvasCoords.longLineSegment.start.x +\n        canvasCoords.longLineSegment.end.x) /\n      2;\n    const yMid =\n      (canvasCoords.longLineSegment.start.y +\n        canvasCoords.longLineSegment.end.y) /\n      2;\n    // short points 1/3 distance from center of long points\n    const startX = xMid + shortAxisDistFromCenter * vectorY;\n    const startY = yMid - shortAxisDistFromCenter * vectorX;\n    const endX = xMid - shortAxisDistFromCenter * vectorY;\n    const endY = yMid + shortAxisDistFromCenter * vectorX;\n\n    // Update perpendicular line segment's points\n    data.handles.points[2] = viewport.canvasToWorld([startX, startY]);\n    data.handles.points[3] = viewport.canvasToWorld([endX, endY]);\n\n    annotation.invalidated = true;\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    this.editData.hasMoved = true;\n  };\n\n  /**\n   * Mouse drag to edit annotation callback\n   * @param evt - mouse drag event\n   */\n  _dragModifyCallback = (evt: EventTypes.InteractionEventType): void => {\n    this.isDrawing = true;\n\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n    const { annotation, viewportIdsToRender, handleIndex, movingTextBox } =\n      this.editData;\n    const { data } = annotation;\n    if (movingTextBox) {\n      const { deltaPoints } = eventDetail;\n      const worldPosDelta = deltaPoints.world;\n\n      const { textBox } = data.handles;\n      const { worldPosition } = textBox;\n\n      worldPosition[0] += worldPosDelta[0];\n      worldPosition[1] += worldPosDelta[1];\n      worldPosition[2] += worldPosDelta[2];\n\n      textBox.hasMoved = true;\n    } else if (handleIndex === undefined) {\n      // Moving tool\n      const { deltaPoints } = eventDetail;\n      const worldPosDelta = deltaPoints.world;\n      const points = data.handles.points;\n\n      points.forEach((point) => {\n        point[0] += worldPosDelta[0];\n        point[1] += worldPosDelta[1];\n        point[2] += worldPosDelta[2];\n      });\n      annotation.invalidated = true;\n    } else {\n      this._dragModifyHandle(evt);\n      annotation.invalidated = true;\n    }\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n  };\n\n  /**\n   * Mouse dragging a handle callback\n   * @param evt - mouse drag event\n   */\n  _dragModifyHandle = (evt: EventTypes.InteractionEventType): void => {\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n    const { annotation, handleIndex: movingHandleIndex } = this.editData;\n    const { data } = annotation;\n\n    // Moving handle\n    const worldPos = currentPoints.world;\n    const canvasCoordHandlesCurrent = [\n      viewport.worldToCanvas(data.handles.points[0]),\n      viewport.worldToCanvas(data.handles.points[1]),\n      viewport.worldToCanvas(data.handles.points[2]),\n      viewport.worldToCanvas(data.handles.points[3]),\n    ];\n\n    const firstLineSegment = {\n      start: {\n        x: canvasCoordHandlesCurrent[0][0],\n        y: canvasCoordHandlesCurrent[0][1],\n      },\n      end: {\n        x: canvasCoordHandlesCurrent[1][0],\n        y: canvasCoordHandlesCurrent[1][1],\n      },\n    };\n    const secondLineSegment = {\n      start: {\n        x: canvasCoordHandlesCurrent[2][0],\n        y: canvasCoordHandlesCurrent[2][1],\n      },\n      end: {\n        x: canvasCoordHandlesCurrent[3][0],\n        y: canvasCoordHandlesCurrent[3][1],\n      },\n    };\n\n    // Handle we've selected's proposed point\n    const proposedPoint = <Types.Point3>[...worldPos];\n    const proposedCanvasCoord = viewport.worldToCanvas(proposedPoint);\n\n    if (movingHandleIndex === 0 || movingHandleIndex === 1) {\n      const fixedHandleIndex = movingHandleIndex === 0 ? 1 : 0;\n\n      const fixedHandleCanvasCoord =\n        canvasCoordHandlesCurrent[fixedHandleIndex];\n\n      const fixedHandleToProposedCoordVec = vec2.set(\n        vec2.create(),\n        proposedCanvasCoord[0] - fixedHandleCanvasCoord[0],\n        proposedCanvasCoord[1] - fixedHandleCanvasCoord[1]\n      );\n\n      const fixedHandleToOldCoordVec = vec2.set(\n        vec2.create(),\n        canvasCoordHandlesCurrent[movingHandleIndex][0] -\n          fixedHandleCanvasCoord[0],\n        canvasCoordHandlesCurrent[movingHandleIndex][1] -\n          fixedHandleCanvasCoord[1]\n      );\n\n      // normalize vector\n      vec2.normalize(\n        fixedHandleToProposedCoordVec,\n        fixedHandleToProposedCoordVec\n      );\n      vec2.normalize(fixedHandleToOldCoordVec, fixedHandleToOldCoordVec);\n\n      // Check whether this\n      const proposedFirstLineSegment = {\n        start: {\n          x: fixedHandleCanvasCoord[0],\n          y: fixedHandleCanvasCoord[1],\n        },\n        end: {\n          x: proposedCanvasCoord[0],\n          y: proposedCanvasCoord[1],\n        },\n      };\n\n      // Note: this is the case when we are modifying the long axis line segment\n      // and we make it shorter and shorter until its second half size becomes zero\n      // which basically means that any more modification would make the long axis\n      // second half disappear. In this case, we just bail out and do not update\n      // since we don't want to disrupt the bidirectional shape.\n      if (\n        this._movingLongAxisWouldPutItThroughShortAxis(\n          proposedFirstLineSegment,\n          secondLineSegment\n        )\n      ) {\n        return;\n      }\n\n      const centerOfRotation = fixedHandleCanvasCoord;\n\n      const angle = this._getSignedAngle(\n        fixedHandleToOldCoordVec,\n        fixedHandleToProposedCoordVec\n      );\n\n      // rotate handles around the center of rotation, first translate to origin,\n      // then rotate, then translate back\n      let firstPointX = canvasCoordHandlesCurrent[2][0];\n      let firstPointY = canvasCoordHandlesCurrent[2][1];\n\n      let secondPointX = canvasCoordHandlesCurrent[3][0];\n      let secondPointY = canvasCoordHandlesCurrent[3][1];\n\n      // translate to origin\n      firstPointX -= centerOfRotation[0];\n      firstPointY -= centerOfRotation[1];\n\n      secondPointX -= centerOfRotation[0];\n      secondPointY -= centerOfRotation[1];\n\n      // rotate\n      const rotatedFirstPoint =\n        firstPointX * Math.cos(angle) - firstPointY * Math.sin(angle);\n      const rotatedFirstPointY =\n        firstPointX * Math.sin(angle) + firstPointY * Math.cos(angle);\n\n      const rotatedSecondPoint =\n        secondPointX * Math.cos(angle) - secondPointY * Math.sin(angle);\n      const rotatedSecondPointY =\n        secondPointX * Math.sin(angle) + secondPointY * Math.cos(angle);\n\n      // translate back\n      firstPointX = rotatedFirstPoint + centerOfRotation[0];\n      firstPointY = rotatedFirstPointY + centerOfRotation[1];\n\n      secondPointX = rotatedSecondPoint + centerOfRotation[0];\n      secondPointY = rotatedSecondPointY + centerOfRotation[1];\n\n      // update handles\n      const newFirstPoint = viewport.canvasToWorld([firstPointX, firstPointY]);\n      const newSecondPoint = viewport.canvasToWorld([\n        secondPointX,\n        secondPointY,\n      ]);\n\n      // the fixed handle is the one that is not being moved so we\n      // don't need to update it\n      data.handles.points[movingHandleIndex] = proposedPoint;\n      data.handles.points[2] = newFirstPoint;\n      data.handles.points[3] = newSecondPoint;\n    } else {\n      // Translation manipulator\n      const translateHandleIndex = movingHandleIndex === 2 ? 3 : 2;\n\n      const canvasCoordsCurrent = {\n        longLineSegment: {\n          start: firstLineSegment.start,\n          end: firstLineSegment.end,\n        },\n        shortLineSegment: {\n          start: secondLineSegment.start,\n          end: secondLineSegment.end,\n        },\n      };\n\n      const longLineSegmentVec = vec2.subtract(\n        vec2.create(),\n        [\n          canvasCoordsCurrent.longLineSegment.end.x,\n          canvasCoordsCurrent.longLineSegment.end.y,\n        ],\n        [\n          canvasCoordsCurrent.longLineSegment.start.x,\n          canvasCoordsCurrent.longLineSegment.start.y,\n        ]\n      );\n\n      const longLineSegmentVecNormalized = vec2.normalize(\n        vec2.create(),\n        longLineSegmentVec\n      );\n\n      const proposedToCurrentVec = vec2.subtract(\n        vec2.create(),\n        [proposedCanvasCoord[0], proposedCanvasCoord[1]],\n        [\n          canvasCoordHandlesCurrent[movingHandleIndex][0],\n          canvasCoordHandlesCurrent[movingHandleIndex][1],\n        ]\n      );\n\n      const movementLength = vec2.length(proposedToCurrentVec);\n\n      const angle = this._getSignedAngle(\n        longLineSegmentVecNormalized,\n        proposedToCurrentVec\n      );\n\n      const movementAlongLineSegmentLength = Math.cos(angle) * movementLength;\n\n      const newTranslatedPoint = vec2.scaleAndAdd(\n        vec2.create(),\n        [\n          canvasCoordHandlesCurrent[translateHandleIndex][0],\n          canvasCoordHandlesCurrent[translateHandleIndex][1],\n        ],\n        longLineSegmentVecNormalized,\n        movementAlongLineSegmentLength\n      );\n\n      // don't update if it passes through the other line segment\n      if (\n        this._movingLongAxisWouldPutItThroughShortAxis(\n          {\n            start: {\n              x: proposedCanvasCoord[0],\n              y: proposedCanvasCoord[1],\n            },\n            end: {\n              x: newTranslatedPoint[0],\n              y: newTranslatedPoint[1],\n            },\n          },\n          {\n            start: {\n              x: canvasCoordsCurrent.longLineSegment.start.x,\n              y: canvasCoordsCurrent.longLineSegment.start.y,\n            },\n            end: {\n              x: canvasCoordsCurrent.longLineSegment.end.x,\n              y: canvasCoordsCurrent.longLineSegment.end.y,\n            },\n          }\n        )\n      ) {\n        return;\n      }\n\n      const intersectionPoint = lineSegment.intersectLine(\n        [proposedCanvasCoord[0], proposedCanvasCoord[1]],\n        [newTranslatedPoint[0], newTranslatedPoint[1]],\n        [firstLineSegment.start.x, firstLineSegment.start.y],\n        [firstLineSegment.end.x, firstLineSegment.end.y]\n      );\n\n      // don't update if it doesn't intersect\n      if (!intersectionPoint) {\n        return;\n      }\n\n      data.handles.points[translateHandleIndex] = viewport.canvasToWorld(\n        newTranslatedPoint as Types.Point2\n      );\n      data.handles.points[movingHandleIndex] = proposedPoint;\n    }\n  };\n\n  /**\n   * Cancels an ongoing drawing of a bidirectional annotation\n   * @param element - HTML Element\n   */\n  cancel = (element: HTMLDivElement) => {\n    // If it is mid-draw or mid-modify\n    if (this.isDrawing) {\n      this.isDrawing = false;\n      this._deactivateDraw(element);\n      this._deactivateModify(element);\n      resetElementCursor(element);\n\n      const { annotation, viewportIdsToRender, newAnnotation } = this.editData;\n      const { data } = annotation;\n\n      annotation.highlighted = false;\n      data.handles.activeHandleIndex = null;\n\n      const { renderingEngine } = getEnabledElement(element);\n\n      triggerAnnotationRenderForViewportIds(\n        renderingEngine,\n        viewportIdsToRender\n      );\n\n      if (newAnnotation) {\n        triggerAnnotationCompleted(annotation);\n      }\n\n      this.editData = null;\n      return annotation.annotationUID;\n    }\n  };\n\n  _activateDraw = (element) => {\n    state.isInteractingWithTool = true;\n\n    element.addEventListener(Events.MOUSE_UP, this._endCallback);\n    element.addEventListener(Events.MOUSE_DRAG, this._dragDrawCallback);\n    element.addEventListener(Events.MOUSE_MOVE, this._dragDrawCallback);\n    element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.addEventListener(\n      Events.TOUCH_TAP,\n      this._endCallback as EventListener\n    );\n    element.addEventListener(\n      Events.TOUCH_END,\n      this._endCallback as EventListener\n    );\n    element.addEventListener(\n      Events.TOUCH_DRAG,\n      this._dragDrawCallback as EventListener\n    );\n  };\n\n  _deactivateDraw = (element) => {\n    state.isInteractingWithTool = false;\n\n    element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n    element.removeEventListener(Events.MOUSE_DRAG, this._dragDrawCallback);\n    element.removeEventListener(Events.MOUSE_MOVE, this._dragDrawCallback);\n    element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.removeEventListener(\n      Events.TOUCH_TAP,\n      this._endCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.TOUCH_END,\n      this._endCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.TOUCH_DRAG,\n      this._dragDrawCallback as EventListener\n    );\n  };\n\n  _activateModify = (element) => {\n    state.isInteractingWithTool = true;\n\n    element.addEventListener(Events.MOUSE_UP, this._endCallback);\n    element.addEventListener(Events.MOUSE_DRAG, this._dragModifyCallback);\n    element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.addEventListener(\n      Events.TOUCH_END,\n      this._endCallback as EventListener\n    );\n    element.addEventListener(\n      Events.TOUCH_DRAG,\n      this._dragModifyCallback as EventListener\n    );\n    element.addEventListener(\n      Events.TOUCH_TAP,\n      this._endCallback as EventListener\n    );\n  };\n\n  _deactivateModify = (element) => {\n    state.isInteractingWithTool = false;\n\n    element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n    element.removeEventListener(Events.MOUSE_DRAG, this._dragModifyCallback);\n    element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.removeEventListener(\n      Events.TOUCH_END,\n      this._endCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.TOUCH_DRAG,\n      this._dragModifyCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.TOUCH_TAP,\n      this._endCallback as EventListener\n    );\n  };\n\n  /**\n   * it is used to draw the bidirectional annotation in each\n   * request animation frame. It calculates the updated cached statistics if\n   * data is invalidated and cache it.\n   *\n   * @param enabledElement - The Cornerstone's enabledElement.\n   * @param svgDrawingHelper - The svgDrawingHelper providing the context for drawing.\n   */\n  renderAnnotation = (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper\n  ): boolean => {\n    let renderStatus = true;\n    const { viewport } = enabledElement;\n    const { element } = viewport;\n    let annotations = getAnnotations(this.getToolName(), element);\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    annotations = this.filterInteractableAnnotationsForElement(\n      element,\n      annotations\n    );\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    const targetId = this.getTargetId(viewport);\n\n    const renderingEngine = viewport.getRenderingEngine();\n\n    const styleSpecifier: StyleSpecifier = {\n      toolGroupId: this.toolGroupId,\n      toolName: this.getToolName(),\n      viewportId: enabledElement.viewport.id,\n    };\n\n    for (let i = 0; i < annotations.length; i++) {\n      const annotation = annotations[i] as BidirectionalAnnotation;\n      const { annotationUID, data } = annotation;\n      const { points, activeHandleIndex } = data.handles;\n      const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n\n      styleSpecifier.annotationUID = annotationUID;\n\n      const { color, lineWidth, lineDash, shadow } = this.getAnnotationStyle({\n        annotation,\n        styleSpecifier,\n      });\n\n      // If cachedStats does not exist, or the unit is missing (as part of import/hydration etc.),\n      // force to recalculate the stats from the points\n      if (\n        !data.cachedStats[targetId] ||\n        data.cachedStats[targetId].unit == null\n      ) {\n        data.cachedStats[targetId] = {\n          length: null,\n          width: null,\n          unit: null,\n        };\n\n        this._calculateCachedStats(annotation, renderingEngine, enabledElement);\n      } else if (annotation.invalidated) {\n        this._throttledCalculateCachedStats(\n          annotation,\n          renderingEngine,\n          enabledElement\n        );\n      }\n\n      // If rendering engine has been destroyed while rendering\n      if (!viewport.getRenderingEngine()) {\n        console.warn('Rendering Engine has been destroyed');\n        return renderStatus;\n      }\n\n      let activeHandleCanvasCoords;\n\n      if (!isAnnotationVisible(annotationUID)) {\n        continue;\n      }\n\n      if (\n        !isAnnotationLocked(annotation) &&\n        !this.editData &&\n        activeHandleIndex !== null\n      ) {\n        // Not locked or creating and hovering over handle, so render handle.\n        activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]];\n      }\n\n      if (activeHandleCanvasCoords) {\n        const handleGroupUID = '0';\n\n        drawHandlesSvg(\n          svgDrawingHelper,\n          annotationUID,\n          handleGroupUID,\n          activeHandleCanvasCoords,\n          {\n            color,\n          }\n        );\n      }\n\n      const dataId1 = `${annotationUID}-line-1`;\n      const dataId2 = `${annotationUID}-line-2`;\n\n      const lineUID = '0';\n      drawLineSvg(\n        svgDrawingHelper,\n        annotationUID,\n        lineUID,\n        canvasCoordinates[0],\n        canvasCoordinates[1],\n        {\n          color,\n          lineDash,\n          lineWidth,\n          shadow,\n        },\n        dataId1\n      );\n\n      const secondLineUID = '1';\n      drawLineSvg(\n        svgDrawingHelper,\n        annotationUID,\n        secondLineUID,\n        canvasCoordinates[2],\n        canvasCoordinates[3],\n        {\n          color,\n          lineDash,\n          lineWidth,\n          shadow,\n        },\n        dataId2\n      );\n\n      renderStatus = true;\n\n      const options = this.getLinkedTextBoxStyle(styleSpecifier, annotation);\n      if (!options.visibility) {\n        data.handles.textBox = {\n          hasMoved: false,\n          worldPosition: <Types.Point3>[0, 0, 0],\n          worldBoundingBox: {\n            topLeft: <Types.Point3>[0, 0, 0],\n            topRight: <Types.Point3>[0, 0, 0],\n            bottomLeft: <Types.Point3>[0, 0, 0],\n            bottomRight: <Types.Point3>[0, 0, 0],\n          },\n        };\n        continue;\n      }\n\n      const textLines = this.configuration.getTextLines(data, targetId);\n      if (!textLines || textLines.length === 0) {\n        continue;\n      }\n\n      let canvasTextBoxCoords;\n\n      if (!data.handles.textBox.hasMoved) {\n        canvasTextBoxCoords = getTextBoxCoordsCanvas(canvasCoordinates);\n\n        data.handles.textBox.worldPosition =\n          viewport.canvasToWorld(canvasTextBoxCoords);\n      }\n\n      const textBoxPosition = viewport.worldToCanvas(\n        data.handles.textBox.worldPosition\n      );\n\n      const textBoxUID = '1';\n      const boundingBox = drawLinkedTextBoxSvg(\n        svgDrawingHelper,\n        annotationUID,\n        textBoxUID,\n        textLines,\n        textBoxPosition,\n        canvasCoordinates,\n        {},\n        options\n      );\n\n      const { x: left, y: top, width, height } = boundingBox;\n\n      data.handles.textBox.worldBoundingBox = {\n        topLeft: viewport.canvasToWorld([left, top]),\n        topRight: viewport.canvasToWorld([left + width, top]),\n        bottomLeft: viewport.canvasToWorld([left, top + height]),\n        bottomRight: viewport.canvasToWorld([left + width, top + height]),\n      };\n    }\n\n    return renderStatus;\n  };\n\n  _movingLongAxisWouldPutItThroughShortAxis = (\n    firstLineSegment,\n    secondLineSegment\n  ) => {\n    const vectorInSecondLineDirection = vec2.create();\n\n    vec2.set(\n      vectorInSecondLineDirection,\n      secondLineSegment.end.x - secondLineSegment.start.x,\n      secondLineSegment.end.y - secondLineSegment.start.y\n    );\n\n    vec2.normalize(vectorInSecondLineDirection, vectorInSecondLineDirection);\n\n    const extendedSecondLineSegment = {\n      start: {\n        x: secondLineSegment.start.x - vectorInSecondLineDirection[0] * 10,\n        y: secondLineSegment.start.y - vectorInSecondLineDirection[1] * 10,\n      },\n      end: {\n        x: secondLineSegment.end.x + vectorInSecondLineDirection[0] * 10,\n        y: secondLineSegment.end.y + vectorInSecondLineDirection[1] * 10,\n      },\n    };\n\n    // Add some buffer in the secondLineSegment when finding the proposedIntersectionPoint\n    // Of points to stop us getting stack when rotating quickly.\n\n    const proposedIntersectionPoint = lineSegment.intersectLine(\n      [extendedSecondLineSegment.start.x, extendedSecondLineSegment.start.y],\n      [extendedSecondLineSegment.end.x, extendedSecondLineSegment.end.y],\n      [firstLineSegment.start.x, firstLineSegment.start.y],\n      [firstLineSegment.end.x, firstLineSegment.end.y]\n    );\n\n    const wouldPutThroughShortAxis = !proposedIntersectionPoint;\n\n    return wouldPutThroughShortAxis;\n  };\n\n  _calculateLength(pos1, pos2) {\n    const dx = pos1[0] - pos2[0];\n    const dy = pos1[1] - pos2[1];\n    const dz = pos1[2] - pos2[2];\n\n    return Math.sqrt(dx * dx + dy * dy + dz * dz);\n  }\n\n  _calculateCachedStats = (annotation, renderingEngine, enabledElement) => {\n    const { data } = annotation;\n    const { element } = enabledElement.viewport;\n\n    const worldPos1 = data.handles.points[0];\n    const worldPos2 = data.handles.points[1];\n    const worldPos3 = data.handles.points[2];\n    const worldPos4 = data.handles.points[3];\n\n    const { cachedStats } = data;\n    const targetIds = Object.keys(cachedStats);\n\n    for (let i = 0; i < targetIds.length; i++) {\n      const targetId = targetIds[i];\n\n      const image = this.getTargetIdImage(targetId, renderingEngine);\n\n      // If image does not exists for the targetId, skip. This can be due\n      // to various reasons such as if the target was a volumeViewport, and\n      // the volumeViewport has been decached in the meantime.\n      if (!image) {\n        continue;\n      }\n\n      const { imageData, dimensions } = image;\n      const index1 = transformWorldToIndex(imageData, worldPos1);\n      const index2 = transformWorldToIndex(imageData, worldPos2);\n      const index3 = transformWorldToIndex(imageData, worldPos3);\n      const index4 = transformWorldToIndex(imageData, worldPos4);\n\n      const handles1 = [index1, index2];\n      const handles2 = [index3, index4];\n\n      const { scale: scale1, units: units1 } = getCalibratedLengthUnitsAndScale(\n        image,\n        handles1\n      );\n\n      const { scale: scale2, units: units2 } = getCalibratedLengthUnitsAndScale(\n        image,\n        handles2\n      );\n\n      const dist1 = this._calculateLength(worldPos1, worldPos2) / scale1;\n      const dist2 = this._calculateLength(worldPos3, worldPos4) / scale2;\n      const length = dist1 > dist2 ? dist1 : dist2;\n      const width = dist1 > dist2 ? dist2 : dist1;\n\n      const lengthUnit = dist1 > dist2 ? units1 : units2;\n      const widthUnit = dist1 > dist2 ? units2 : units1;\n\n      this._isInsideVolume(index1, index2, index3, index4, dimensions)\n        ? (this.isHandleOutsideImage = false)\n        : (this.isHandleOutsideImage = true);\n\n      cachedStats[targetId] = {\n        length,\n        width,\n        unit: units1,\n        lengthUnit,\n        widthUnit,\n      };\n    }\n\n    annotation.invalidated = false;\n\n    // Dispatching annotation modified\n    triggerAnnotationModified(annotation, element);\n\n    return cachedStats;\n  };\n\n  _isInsideVolume = (index1, index2, index3, index4, dimensions): boolean => {\n    return (\n      csUtils.indexWithinDimensions(index1, dimensions) &&\n      csUtils.indexWithinDimensions(index2, dimensions) &&\n      csUtils.indexWithinDimensions(index3, dimensions) &&\n      csUtils.indexWithinDimensions(index4, dimensions)\n    );\n  };\n\n  _getSignedAngle = (vector1, vector2) => {\n    return Math.atan2(\n      vector1[0] * vector2[1] - vector1[1] * vector2[0],\n      vector1[0] * vector2[0] + vector1[1] * vector2[1]\n    );\n  };\n}\n\nfunction defaultGetTextLines(data, targetId): string[] {\n  const { cachedStats, label } = data;\n  const { length, width, unit, lengthUnit, widthUnit } = cachedStats[targetId];\n\n  const textLines = [];\n  if (label) {\n    textLines.push(label);\n  }\n  if (length === undefined) {\n    return textLines;\n  }\n\n  // spaceBetweenSlices & pixelSpacing &\n  // magnitude in each direction? Otherwise, this is \"px\"?\n  textLines.push(\n    `L: ${roundNumber(length)} ${lengthUnit || unit}`,\n    `W: ${roundNumber(width)} ${widthUnit || unit}`\n  );\n\n  return textLines;\n}\n\nBidirectionalTool.toolName = 'Bidirectional';\nexport default BidirectionalTool;\n","import {\n  BaseVolumeViewport,\n  cache,\n  getEnabledElement,\n  metaData,\n  utilities as csUtils,\n} from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport { vec2 } from 'gl-matrix';\n\nimport AnnotationDisplayTool from './AnnotationDisplayTool';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\nimport {\n  Annotation,\n  Annotations,\n  EventTypes,\n  ToolHandle,\n  InteractionTypes,\n  ToolProps,\n  PublicToolProps,\n} from '../../types';\nimport { addAnnotation } from '../../stateManagement/annotation/annotationState';\nimport { StyleSpecifier } from '../../types/AnnotationStyle';\nimport { triggerAnnotationModified } from '../../stateManagement/annotation/helpers/state';\n\n/**\n * Abstract class for tools which create and display annotations on the\n * cornerstone3D canvas. In addition, it provides a base class for segmentation\n * tools that require drawing an annotation before running the segmentation strategy\n * for instance threshold segmentation based on an area and a threshold.\n * Annotation tools make use of drawing utilities to draw SVG elements on the viewport.\n *\n * To create a new annotation tool, derive from this class and implement the\n * abstract methods.\n */\nabstract class AnnotationTool extends AnnotationDisplayTool {\n  /**\n   * Creates a base annotation object, adding in any annotation base data provided\n   */\n  public static createAnnotation(...annotationBaseData): Annotation {\n    let annotation: Annotation = {\n      annotationUID: null as string,\n      highlighted: true,\n      invalidated: true,\n      metadata: {\n        toolName: this.toolName,\n      },\n      data: {\n        text: '',\n        handles: {\n          points: new Array<Types.Point3>(),\n          textBox: {\n            hasMoved: false,\n            worldPosition: <Types.Point3>[0, 0, 0],\n            worldBoundingBox: {\n              topLeft: <Types.Point3>[0, 0, 0],\n              topRight: <Types.Point3>[0, 0, 0],\n              bottomLeft: <Types.Point3>[0, 0, 0],\n              bottomRight: <Types.Point3>[0, 0, 0],\n            },\n          },\n        },\n        label: '',\n      },\n    } as unknown as Annotation;\n    for (const baseData of annotationBaseData) {\n      annotation = csUtils.deepMerge(annotation, baseData);\n    }\n    return annotation;\n  }\n\n  /**\n   * Creates a new annotation for the given viewport.  This just adds the\n   * viewport reference data to the metadata, and otherwise returns the\n   * static class createAnnotation data.\n   */\n  public static createAnnotationForViewport(viewport, ...annotationBaseData) {\n    return this.createAnnotation(\n      { metadata: viewport.getViewReference() },\n      ...annotationBaseData\n    );\n  }\n\n  /**\n   * Creates and adds an annotation of the given type, firing the annotation\n   * modified event on the new annotation.\n   * This implicitly uses the static class when you call it on the correct\n   * base class.  For example, you can call the KeyImageTool.createAnnotation\n   * method on KeyImageTool.toolName by calling KeyImageTool.createAndAddAnnotation\n   *\n   */\n  public static createAndAddAnnotation(viewport, ...annotationBaseData) {\n    const annotation = this.createAnnotationForViewport(\n      viewport,\n      ...annotationBaseData\n    );\n    addAnnotation(annotation, viewport.element);\n    triggerAnnotationModified(annotation, viewport.element);\n  }\n\n  static toolName;\n  // ===================================================================\n  // Abstract Methods - Must be implemented.\n  // ===================================================================\n\n  constructor(toolProps: PublicToolProps, defaultToolProps: ToolProps) {\n    super(toolProps, defaultToolProps);\n\n    if (toolProps.configuration?.getTextLines) {\n      this.configuration.getTextLines = toolProps.configuration.getTextLines;\n    }\n\n    if (toolProps.configuration?.statsCalculator) {\n      this.configuration.statsCalculator =\n        toolProps.configuration.statsCalculator;\n    }\n  }\n\n  /**\n   * @abstract addNewAnnotation Creates a new annotation based on the clicked mouse position\n   *\n   * @param evt - The normalized mouse event\n   * @param interactionType -  The interaction type used to add the annotation.\n   */\n  abstract addNewAnnotation(\n    evt: EventTypes.InteractionEventType,\n    interactionType: InteractionTypes\n  ): Annotation;\n\n  /**\n   * @abstract cancel Used to cancel the ongoing tool drawing and manipulation\n   *\n   */\n  abstract cancel(element: HTMLDivElement);\n\n  /**\n   * handleSelectedCallback Custom callback for when a handle is selected.\n   *\n   * @param evt - The normalized mouse event\n   * @param annotation - The annotation selected.\n   * @param handle - The selected handle (either Types.Point3 in space for annotations, or TextBoxHandle object for text boxes).\n   * @param interactionType - The interaction type the handle was selected with.\n   */\n  abstract handleSelectedCallback(\n    evt: EventTypes.InteractionEventType,\n    annotation: Annotation,\n    handle: ToolHandle,\n    interactionType: InteractionTypes\n  ): void;\n\n  /**\n   * Custom callback for when an annotation is selected\n   *\n   * @param evt - The normalized mouse event\n   * @param annotation - The `Annotation` to check.\n   * @param interactionType - The interaction type used to select the tool.\n   */\n  abstract toolSelectedCallback(\n    evt: EventTypes.InteractionEventType,\n    annotation: Annotation,\n    interactionType: InteractionTypes,\n    canvasCoords?: Types.Point2\n  ): void;\n\n  /**\n   * Returns true if the provided canvas coordinate tool is near the annotation\n   *\n   * @param element - The HTML element\n   * @param annotation - The annotation to check\n   * @param canvasCoords - The canvas coordinate to check\n   * @param proximity - The minimum proximity to consider the point near\n   * @param interactionType - The interaction type used to select the tool.\n   *\n   * @returns boolean if the point is near.\n   */\n  abstract isPointNearTool(\n    element: HTMLDivElement,\n    annotation: Annotation,\n    canvasCoords: Types.Point2,\n    proximity: number,\n    interactionType: string\n  ): boolean;\n\n  /**\n   * @virtual Event handler for Cornerstone MOUSE_MOVE event.\n   *\n   *\n   * @param evt - The normalized mouse event\n   * @param filteredAnnotations - The annotations to check for hover interactions\n   * @returns True if the annotation needs to be re-drawn by the annotationRenderingEngine.\n   */\n  public mouseMoveCallback = (\n    evt: EventTypes.MouseMoveEventType,\n    filteredAnnotations?: Annotations\n  ): boolean => {\n    if (!filteredAnnotations) {\n      return false;\n    }\n\n    const { element, currentPoints } = evt.detail;\n    const canvasCoords = currentPoints.canvas;\n    let annotationsNeedToBeRedrawn = false;\n\n    for (const annotation of filteredAnnotations) {\n      // Do not do anything if the annotation is locked or hidden.\n      if (\n        isAnnotationLocked(annotation) ||\n        !isAnnotationVisible(annotation.annotationUID)\n      ) {\n        continue;\n      }\n\n      const { data } = annotation;\n      const activateHandleIndex = data.handles\n        ? data.handles.activeHandleIndex\n        : undefined;\n\n      // Perform tool specific imagePointNearToolOrHandle to determine if the mouse\n      // is near the tool or its handles or its textBox.\n      const near = this._imagePointNearToolOrHandle(\n        element,\n        annotation,\n        canvasCoords,\n        6 // Todo: This should come from the state\n      );\n\n      const nearToolAndNotMarkedActive = near && !annotation.highlighted;\n      const notNearToolAndMarkedActive = !near && annotation.highlighted;\n      if (nearToolAndNotMarkedActive || notNearToolAndMarkedActive) {\n        annotation.highlighted = !annotation.highlighted;\n        annotationsNeedToBeRedrawn = true;\n      } else if (\n        data.handles &&\n        data.handles.activeHandleIndex !== activateHandleIndex\n      ) {\n        // Active handle index has changed, re-render.\n        annotationsNeedToBeRedrawn = true;\n      }\n    }\n\n    return annotationsNeedToBeRedrawn;\n  };\n\n  /**\n   * It checks if the mouse click is near TextBoxHandle or AnnotationHandle itself, and\n   * return either it. It prioritize TextBoxHandle over AnnotationHandle. If\n   * the mouse click is not near any of the handles, it does not return anything.\n   *\n   * @param element - The element that the tool is attached to.\n   * @param annotation - The annotation object associated with the annotation\n   * @param canvasCoords - The coordinates of the mouse click on canvas\n   * @param proximity - The distance from the mouse cursor to the point\n   * that is considered \"near\".\n   * @returns The handle that is closest to the cursor, or null if the cursor\n   * is not near any of the handles.\n   */\n  getHandleNearImagePoint(\n    element: HTMLDivElement,\n    annotation: Annotation,\n    canvasCoords: Types.Point2,\n    proximity: number\n  ): ToolHandle | undefined {\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n\n    const { data } = annotation;\n    const { isCanvasAnnotation } = data;\n    const { points, textBox } = data.handles;\n\n    if (textBox) {\n      const { worldBoundingBox } = textBox;\n      if (worldBoundingBox) {\n        const canvasBoundingBox = {\n          topLeft: viewport.worldToCanvas(worldBoundingBox.topLeft),\n          topRight: viewport.worldToCanvas(worldBoundingBox.topRight),\n          bottomLeft: viewport.worldToCanvas(worldBoundingBox.bottomLeft),\n          bottomRight: viewport.worldToCanvas(worldBoundingBox.bottomRight),\n        };\n\n        if (\n          canvasCoords[0] >= canvasBoundingBox.topLeft[0] &&\n          canvasCoords[0] <= canvasBoundingBox.bottomRight[0] &&\n          canvasCoords[1] >= canvasBoundingBox.topLeft[1] &&\n          canvasCoords[1] <= canvasBoundingBox.bottomRight[1]\n        ) {\n          data.handles.activeHandleIndex = null;\n          return textBox as ToolHandle;\n        }\n      }\n    }\n\n    for (let i = 0; i < points?.length; i++) {\n      const point = points[i];\n      const annotationCanvasCoordinate = isCanvasAnnotation\n        ? point.slice(0, 2)\n        : viewport.worldToCanvas(point);\n\n      const near =\n        vec2.distance(\n          canvasCoords,\n          annotationCanvasCoordinate as Types.Point2\n        ) < proximity;\n\n      if (near === true) {\n        data.handles.activeHandleIndex = i;\n        return point;\n      }\n    }\n\n    data.handles.activeHandleIndex = null;\n  }\n\n  /**\n   * It returns the style for the text box\n   * @param styleSpecifier - An object containing the specifications such as viewportId,\n   * toolGroupId, toolName and annotationUID which are used to get the style if the level of specificity is\n   * met (hierarchy is checked from most specific to least specific which is\n   * annotationLevel -> viewportLevel -> toolGroupLevel -> default.\n   * @param annotation - The annotation for the tool that is\n   * currently active.\n   * @returns An object of the style settings for the text box.\n   */\n  public getLinkedTextBoxStyle(\n    specifications: StyleSpecifier,\n    annotation?: Annotation\n  ): Record<string, unknown> {\n    // Todo: this function can be used to set different styles for different toolMode\n    // for the textBox.\n\n    return {\n      visibility: this.getStyle(\n        'textBoxVisibility',\n        specifications,\n        annotation\n      ),\n      fontFamily: this.getStyle(\n        'textBoxFontFamily',\n        specifications,\n        annotation\n      ),\n      fontSize: this.getStyle('textBoxFontSize', specifications, annotation),\n      color: this.getStyle('textBoxColor', specifications, annotation),\n      shadow: this.getStyle('textBoxShadow', specifications, annotation),\n      background: this.getStyle(\n        'textBoxBackground',\n        specifications,\n        annotation\n      ),\n      lineWidth: this.getStyle(\n        'textBoxLinkLineWidth',\n        specifications,\n        annotation\n      ),\n      lineDash: this.getStyle(\n        'textBoxLinkLineDash',\n        specifications,\n        annotation\n      ),\n    };\n  }\n\n  /**\n   * Returns true if the viewport is scaled to SUV units\n   * @param viewport - The viewport\n   * @param targetId - The annotation targetId\n   * @param imageId - The annotation imageId\n   * @returns\n   */\n  isSuvScaled(\n    viewport: Types.IStackViewport | Types.IVolumeViewport,\n    targetId: string,\n    imageId?: string\n  ): boolean {\n    if (viewport instanceof BaseVolumeViewport) {\n      const volumeId = csUtils.getVolumeId(targetId);\n      const volume = cache.getVolume(volumeId);\n      return volume?.scaling?.PT !== undefined;\n    }\n    const scalingModule: Types.ScalingParameters | undefined =\n      imageId && metaData.get('scalingModule', imageId);\n    return typeof scalingModule?.suvbw === 'number';\n  }\n\n  /**\n   * Get the style that will be applied to all annotations such as length, cobb\n   * angle, arrow annotate, etc. when rendered on a canvas or svg layer\n   */\n  protected getAnnotationStyle(context: {\n    annotation: Annotation;\n    styleSpecifier: StyleSpecifier;\n  }) {\n    const { annotation, styleSpecifier } = context;\n    const getStyle = (property) =>\n      this.getStyle(property, styleSpecifier, annotation);\n    const { annotationUID } = annotation;\n    const visibility = isAnnotationVisible(annotationUID);\n    const locked = isAnnotationLocked(annotation);\n\n    const lineWidth = getStyle('lineWidth') as number;\n    const lineDash = getStyle('lineDash') as string;\n    const color = getStyle('color') as string;\n    const shadow = getStyle('shadow') as boolean;\n    const textboxStyle = this.getLinkedTextBoxStyle(styleSpecifier, annotation);\n\n    return {\n      visibility,\n      locked,\n      color,\n      lineWidth,\n      lineDash,\n      lineOpacity: 1,\n      fillColor: color,\n      fillOpacity: 0,\n      shadow,\n      textbox: textboxStyle,\n    };\n  }\n\n  /**\n   * Returns true if the `canvasCoords` are near a handle or selectable part of the tool\n   *\n   * @param element - The HTML element\n   * @param annotation - The annotation to check\n   * @param canvasCoords - The canvas coordinates to check\n   * @param proximity - The proximity to consider\n   *\n   * @returns If the point is near.\n   */\n  private _imagePointNearToolOrHandle(\n    element: HTMLDivElement,\n    annotation: Annotation,\n    canvasCoords: Types.Point2,\n    proximity: number\n  ): boolean {\n    // Based on the tool instance type, check if the point is near the tool handles\n    const handleNearImagePoint = this.getHandleNearImagePoint(\n      element,\n      annotation,\n      canvasCoords,\n      proximity\n    );\n\n    if (handleNearImagePoint) {\n      return true;\n    }\n\n    // If the point is not near the handles, check if the point is near the tool\n    const toolNewImagePoint = this.isPointNearTool(\n      element,\n      annotation,\n      canvasCoords,\n      proximity,\n      'mouse'\n    );\n\n    if (toolNewImagePoint) {\n      return true;\n    }\n  }\n}\n\nAnnotationTool.toolName = 'AnnotationTool';\nexport default AnnotationTool;\n","import { LabelmapConfig } from '../../../types/LabelmapTypes';\n\nconst defaultLabelmapConfig: LabelmapConfig = {\n  renderOutline: true,\n  outlineWidthActive: 3,\n  outlineWidthInactive: 2,\n  activeSegmentOutlineWidthDelta: 0,\n  renderFill: true,\n  renderFillInactive: true,\n  fillAlpha: 0.7,\n  fillAlphaInactive: 0.65,\n  outlineOpacity: 1,\n  outlineOpacityInactive: 0.85,\n};\n\nfunction getDefaultLabelmapConfig(): LabelmapConfig {\n  return defaultLabelmapConfig;\n}\n\n// Checks if the labelmap config is valid, which means\n// if all the required fields are present and have the correct type\nfunction isValidLabelmapConfig(config): boolean {\n  return (\n    config &&\n    typeof config.renderOutline === 'boolean' &&\n    typeof config.outlineWidthActive === 'number' &&\n    typeof config.outlineWidthInactive === 'number' &&\n    typeof config.activeSegmentOutlineWidthDelta === 'number' &&\n    typeof config.renderFill === 'boolean' &&\n    typeof config.renderFillInactive === 'boolean' &&\n    typeof config.fillAlpha === 'number' &&\n    typeof config.fillAlphaInactive === 'number' &&\n    typeof config.outlineOpacity === 'number' &&\n    typeof config.outlineOpacityInactive === 'number'\n  );\n}\n\nexport default getDefaultLabelmapConfig;\nexport { isValidLabelmapConfig };\n","import {\n  getEnabledElement,\n  cache,\n  StackViewport,\n  utilities as csUtils,\n} from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport { addAnnotation, getAnnotations } from '../../stateManagement';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\n\nimport {\n  drawHandles as drawHandlesSvg,\n  drawRect as drawRectSvg,\n} from '../../drawingSvg';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport { hideElementCursor } from '../../cursors/elementCursor';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\nimport { triggerAnnotationModified } from '../../stateManagement/annotation/helpers/state';\nimport {\n  PublicToolProps,\n  ToolProps,\n  EventTypes,\n  SVGDrawingHelper,\n} from '../../types';\nimport { RectangleROIThresholdAnnotation } from '../../types/ToolSpecificAnnotationTypes';\nimport RectangleROITool from '../annotation/RectangleROITool';\nimport { StyleSpecifier } from '../../types/AnnotationStyle';\n\n/**\n * This tool is exactly the RectangleROITool but only draws a rectangle on the image,\n * and by using utility functions such as thresholdByRange and thresholdByROIStat it can be used to\n * create a segmentation. This tool, however, does not calculate the statistics\n * as RectangleROITool does.\n */\nclass RectangleROIThresholdTool extends RectangleROITool {\n  static toolName;\n  _throttledCalculateCachedStats: any;\n  editData: {\n    annotation: any;\n    viewportIdsToRender: string[];\n    handleIndex?: number;\n    newAnnotation?: boolean;\n    hasMoved?: boolean;\n  } | null;\n  isDrawing: boolean;\n  isHandleOutsideImage: boolean;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        shadow: true,\n        preventHandleOutsideImage: false,\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n  }\n\n  /**\n   * Based on the current position of the mouse and the enabledElement it creates\n   * the edit data for the tool.\n   *\n   * @param evt -  EventTypes.NormalizedMouseEventType\n   * @returns The annotation object.\n   *\n   */\n  addNewAnnotation = (evt: EventTypes.InteractionEventType) => {\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const worldPos = currentPoints.world;\n\n    const enabledElement = getEnabledElement(element);\n    const { viewport, renderingEngine } = enabledElement;\n\n    this.isDrawing = true;\n\n    const camera = viewport.getCamera();\n    const { viewPlaneNormal, viewUp } = camera;\n\n    const targetId = this.getTargetId(viewport);\n    let referencedImageId, volumeId;\n\n    if (viewport instanceof StackViewport) {\n      referencedImageId = targetId.split('imageId:')[1];\n    } else {\n      volumeId = csUtils.getVolumeId(targetId);\n      const imageVolume = cache.getVolume(volumeId);\n      referencedImageId = csUtils.getClosestImageId(\n        imageVolume,\n        worldPos,\n        viewPlaneNormal\n      );\n    }\n\n    const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n    // Todo: how not to store enabledElement on the annotation, segmentationModule needs the element to\n    // decide on the active segmentIndex, active segmentationIndex etc.\n    const annotation = {\n      highlighted: true,\n      invalidated: true,\n      metadata: {\n        viewPlaneNormal: <Types.Point3>[...viewPlaneNormal],\n        enabledElement,\n        viewUp: <Types.Point3>[...viewUp],\n        FrameOfReferenceUID,\n        referencedImageId,\n        toolName: this.getToolName(),\n        volumeId,\n      },\n      data: {\n        label: '',\n        handles: {\n          // No need a textBox\n          textBox: {\n            hasMoved: false,\n            worldPosition: null,\n            worldBoundingBox: null,\n          },\n          points: [\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n          ],\n          activeHandleIndex: null,\n        },\n        segmentationId: null,\n      },\n    };\n\n    addAnnotation(annotation, element);\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      handleIndex: 3,\n      newAnnotation: true,\n      hasMoved: false,\n    };\n    this._activateDraw(element);\n\n    hideElementCursor(element);\n\n    evt.preventDefault();\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    return annotation;\n  };\n\n  /**\n   * it is used to draw the RectangleROI Threshold annotation in each\n   * request animation frame.\n   *\n   * @param enabledElement - The Cornerstone's enabledElement.\n   * @param svgDrawingHelper - The svgDrawingHelper providing the context for drawing.\n   */\n  renderAnnotation = (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper\n  ): boolean => {\n    let renderStatus = false;\n    const { viewport } = enabledElement;\n    const { element } = viewport;\n    let annotations = getAnnotations(this.getToolName(), element);\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    annotations = this.filterInteractableAnnotationsForElement(\n      element,\n      annotations\n    );\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    const styleSpecifier: StyleSpecifier = {\n      toolGroupId: this.toolGroupId,\n      toolName: this.getToolName(),\n      viewportId: enabledElement.viewport.id,\n    };\n\n    for (let i = 0; i < annotations.length; i++) {\n      const annotation = annotations[i] as RectangleROIThresholdAnnotation;\n      const { annotationUID, data } = annotation;\n      const { points, activeHandleIndex } = data.handles;\n      const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n\n      styleSpecifier.annotationUID = annotationUID;\n\n      const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n      const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n      const color = 'rgb(255, 255, 255)'\n\n      // If rendering engine has been destroyed while rendering\n      if (!viewport.getRenderingEngine()) {\n        console.warn('Rendering Engine has been destroyed');\n        return renderStatus;\n      }\n\n      // Todo: This is not correct way to add the event trigger,\n      // this will trigger on all mouse hover too. Problem is that we don't\n      // have a cached stats mechanism for this tool yet?\n      triggerAnnotationModified(annotation, element);\n\n      let activeHandleCanvasCoords;\n\n      if (!isAnnotationVisible(annotationUID)) {\n        continue;\n      }\n\n      if (\n        !isAnnotationLocked(annotation) &&\n        !this.editData &&\n        activeHandleIndex !== null\n      ) {\n        // Not locked or creating and hovering over handle, so render handle.\n        activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]];\n      }\n\n      if (activeHandleCanvasCoords) {\n        const handleGroupUID = '0';\n\n        drawHandlesSvg(\n          svgDrawingHelper,\n          annotationUID,\n          handleGroupUID,\n          activeHandleCanvasCoords,\n          {\n            color,\n          }\n        );\n      }\n\n      const rectangleUID = '0';\n      drawRectSvg(\n        svgDrawingHelper,\n        annotationUID,\n        rectangleUID,\n        canvasCoordinates[0],\n        canvasCoordinates[3],\n        {\n          color,\n          lineDash,\n          lineWidth,\n        }\n      );\n\n      renderStatus = true;\n    }\n\n    return renderStatus;\n  };\n}\n\nRectangleROIThresholdTool.toolName = 'RectangleROIThreshold';\nexport default RectangleROIThresholdTool;\n","import {\n  getEnabledElement,\n  cache,\n  StackViewport,\n  metaData,\n  utilities as csUtils,\n} from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport { vec3 } from 'gl-matrix';\nimport {\n  addAnnotation,\n  getAnnotations,\n  removeAnnotation,\n} from '../../stateManagement';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport { triggerAnnotationModified } from '../../stateManagement/annotation/helpers/state';\nimport {\n  drawHandles as drawHandlesSvg,\n  drawRect as drawRectSvg,\n} from '../../drawingSvg';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport throttle from '../../utilities/throttle';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\nimport {\n  hideElementCursor,\n  resetElementCursor,\n} from '../../cursors/elementCursor';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport { triggerAnnotationCompleted } from '../../stateManagement/annotation/helpers/state';\n\nimport {\n  PublicToolProps,\n  ToolProps,\n  EventTypes,\n  SVGDrawingHelper,\n} from '../../types';\nimport { RectangleROIStartEndThresholdAnnotation } from '../../types/ToolSpecificAnnotationTypes';\nimport RectangleROITool from '../annotation/RectangleROITool';\nimport { StyleSpecifier } from '../../types/AnnotationStyle';\nimport { pointInShapeCallback } from '../../utilities/';\n\nconst { transformWorldToIndex } = csUtils;\n\n/**\n * This tool is similar to the RectangleROIThresholdTool which\n * only draws a rectangle on the image, and by using utility functions\n * such as thresholdByRange and thresholdByROIStat it can be used to\n * create a segmentation. The only difference is that it only acts on the\n * acquisition plane and not the 3D volume, and accepts a start and end\n * slice, and renders a dashed rectangle on the image between the start and end\n * but a solid rectangle on start and end slice. Utility functions should be used\n * to modify the start and end slice.\n * // Todo: right now only the first slice has grabbable handles, need to make\n * // it so that the handles are grabbable on all slices.\n */\nclass RectangleROIStartEndThresholdTool extends RectangleROITool {\n  static toolName;\n  _throttledCalculateCachedStats: any;\n  editData: {\n    annotation: any;\n    viewportIdsToRender: string[];\n    handleIndex?: number;\n    newAnnotation?: boolean;\n    hasMoved?: boolean;\n  } | null;\n  isDrawing: boolean;\n  isHandleOutsideImage: boolean;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      configuration: {\n        numSlicesToPropagate: 10,\n        computePointsInsideVolume: false,\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n\n    this._throttledCalculateCachedStats = throttle(\n      this._calculateCachedStatsTool,\n      100,\n      { trailing: true }\n    );\n  }\n\n  /**\n   * Based on the current position of the mouse and the enabledElement it creates\n   * the edit data for the tool.\n   *\n   * @param evt -  EventTypes.NormalizedMouseEventType\n   * @returns The annotation object.\n   *\n   */\n  addNewAnnotation = (evt: EventTypes.InteractionEventType) => {\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const worldPos = currentPoints.world;\n\n    const enabledElement = getEnabledElement(element);\n    const { viewport, renderingEngine } = enabledElement;\n\n    this.isDrawing = true;\n\n    const camera = viewport.getCamera();\n    const { viewPlaneNormal, viewUp } = camera;\n\n    let referencedImageId, imageVolume, volumeId;\n    if (viewport instanceof StackViewport) {\n      throw new Error('Stack Viewport Not implemented');\n    } else {\n      const targetId = this.getTargetId(viewport);\n      volumeId = csUtils.getVolumeId(targetId);\n      imageVolume = cache.getVolume(volumeId);\n      referencedImageId = csUtils.getClosestImageId(\n        imageVolume,\n        worldPos,\n        viewPlaneNormal\n      );\n    }\n\n    if (!referencedImageId) {\n      throw new Error('This tool does not work on non-acquisition planes');\n    }\n\n    const startIndex = viewport.getCurrentImageIdIndex();\n    const spacingInNormal = csUtils.getSpacingInNormalDirection(\n      imageVolume,\n      viewPlaneNormal\n    );\n\n    // We cannot simply add numSlicesToPropagate to startIndex because\n    // the order of imageIds can be from top to bottom or bottom to top and\n    // we want to make sure it is always propagated in the direction of the\n    // view and also to make sure we don't go out of bounds.\n    const endIndex = this._getEndSliceIndex(\n      imageVolume,\n      worldPos,\n      spacingInNormal,\n      viewPlaneNormal\n    );\n\n    const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n\n    const annotation = {\n      highlighted: true,\n      invalidated: true,\n      metadata: {\n        viewPlaneNormal: <Types.Point3>[...viewPlaneNormal],\n        enabledElement,\n        viewUp: <Types.Point3>[...viewUp],\n        FrameOfReferenceUID,\n        referencedImageId,\n        toolName: this.getToolName(),\n        volumeId,\n        spacingInNormal,\n      },\n      data: {\n        label: '',\n        startSlice: startIndex,\n        endSlice: endIndex,\n        cachedStats: {\n          pointsInVolume: [],\n          projectionPoints: [],\n          projectionPointsImageIds: [referencedImageId],\n        },\n        handles: {\n          // No need a textBox\n          textBox: {\n            hasMoved: false,\n            worldPosition: null,\n            worldBoundingBox: null,\n          },\n          points: [\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n          ],\n          activeHandleIndex: null,\n        },\n        labelmapUID: null,\n      },\n    };\n\n    // update the projection points in 3D space, since we are projecting\n    // the points to the slice plane, we need to make sure the points are\n    // computed for later export\n    this._computeProjectionPoints(annotation, imageVolume);\n\n    addAnnotation(annotation, element);\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      handleIndex: 3,\n      newAnnotation: true,\n      hasMoved: false,\n    };\n    this._activateDraw(element);\n\n    hideElementCursor(element);\n\n    evt.preventDefault();\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    return annotation;\n  };\n\n  _endCallback = (evt: EventTypes.InteractionEventType): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    const { annotation, viewportIdsToRender, newAnnotation, hasMoved } =\n      this.editData;\n    const { data } = annotation;\n\n    if (newAnnotation && !hasMoved) {\n      return;\n    }\n\n    data.handles.activeHandleIndex = null;\n\n    this._deactivateModify(element);\n    this._deactivateDraw(element);\n\n    resetElementCursor(element);\n\n    const enabledElement = getEnabledElement(element);\n\n    this.editData = null;\n    this.isDrawing = false;\n\n    if (\n      this.isHandleOutsideImage &&\n      this.configuration.preventHandleOutsideImage\n    ) {\n      removeAnnotation(annotation.annotationUID);\n    }\n\n    const targetId = this.getTargetId(enabledElement.viewport);\n    const imageVolume = cache.getVolume(targetId.split(/volumeId:|\\?/)[1]);\n\n    if (this.configuration.calculatePointsInsideVolume) {\n      this._computePointsInsideVolume(annotation, imageVolume, enabledElement);\n    }\n\n    triggerAnnotationRenderForViewportIds(\n      enabledElement.renderingEngine,\n      viewportIdsToRender\n    );\n\n    if (newAnnotation) {\n      triggerAnnotationCompleted(annotation);\n    }\n  };\n\n  // Todo: make it work for planes other than acquisition planes\n  _computeProjectionPoints(\n    annotation: RectangleROIStartEndThresholdAnnotation,\n    imageVolume: Types.IImageVolume\n  ): void {\n    const { data, metadata } = annotation;\n    const { viewPlaneNormal, spacingInNormal } = metadata;\n    const { imageData } = imageVolume;\n    const { startSlice, endSlice } = data;\n    const { points } = data.handles;\n\n    const startIJK = transformWorldToIndex(imageData, points[0]);\n\n    if (startIJK[2] !== startSlice) {\n      throw new Error('Start slice does not match');\n    }\n\n    // substitute the end slice index 2 with startIJK index 2\n    const endIJK = vec3.fromValues(startIJK[0], startIJK[1], endSlice);\n\n    const startWorld = vec3.create();\n    imageData.indexToWorldVec3(startIJK, startWorld);\n\n    const endWorld = vec3.create();\n    imageData.indexToWorldVec3(endIJK, endWorld);\n\n    // distance between start and end slice in the world coordinate\n    const distance = vec3.distance(startWorld, endWorld);\n\n    // for each point inside points, navigate in the direction of the viewPlaneNormal\n    // with amount of spacingInNormal, and calculate the next slice until we reach the distance\n    const newProjectionPoints = [];\n    for (let dist = 0; dist < distance; dist += spacingInNormal) {\n      newProjectionPoints.push(\n        points.map((point) => {\n          const newPoint = vec3.create();\n          vec3.scaleAndAdd(newPoint, point, viewPlaneNormal, dist);\n          return Array.from(newPoint);\n        })\n      );\n    }\n\n    data.cachedStats.projectionPoints = newProjectionPoints;\n\n    // Find the imageIds for the projection points\n    const projectionPointsImageIds = [];\n    for (const RectanglePoints of newProjectionPoints) {\n      const imageId = csUtils.getClosestImageId(\n        imageVolume,\n        RectanglePoints[0],\n        viewPlaneNormal\n      );\n      projectionPointsImageIds.push(imageId);\n    }\n\n    data.cachedStats.projectionPointsImageIds = projectionPointsImageIds;\n  }\n\n  //This function return all the points inside the ROI for every slices between startSlice and endSlice\n  _computePointsInsideVolume(annotation, imageVolume, enabledElement) {\n    const { data } = annotation;\n    const projectionPoints = data.cachedStats.projectionPoints;\n\n    const pointsInsideVolume: Types.Point3[][] = [[]];\n\n    for (let i = 0; i < projectionPoints.length; i++) {\n      // If image does not exists for the targetId, skip. This can be due\n      // to various reasons such as if the target was a volumeViewport, and\n      // the volumeViewport has been decached in the meantime.\n      if (!imageVolume) {\n        continue;\n      }\n\n      const projectionPoint = projectionPoints[i][0];\n\n      const worldPos1 = data.handles.points[0];\n      const worldPos2 = data.handles.points[3];\n\n      const { dimensions, imageData } = imageVolume;\n\n      const worldPos1Index = transformWorldToIndex(imageData, worldPos1);\n      //We only need to change the Z of our bounds so we are getting the Z from the current projection point\n      const worldProjectionPointIndex = transformWorldToIndex(\n        imageData,\n        projectionPoint\n      );\n\n      worldPos1Index[0] = Math.floor(worldPos1Index[0]);\n      worldPos1Index[1] = Math.floor(worldPos1Index[1]);\n      worldPos1Index[2] = Math.floor(worldProjectionPointIndex[2]);\n\n      const worldPos2Index = transformWorldToIndex(imageData, worldPos2);\n\n      worldPos2Index[0] = Math.floor(worldPos2Index[0]);\n      worldPos2Index[1] = Math.floor(worldPos2Index[1]);\n      worldPos2Index[2] = Math.floor(worldProjectionPointIndex[2]);\n\n      // Check if one of the indexes are inside the volume, this then gives us\n      // Some area to do stats over.\n\n      if (this._isInsideVolume(worldPos1Index, worldPos2Index, dimensions)) {\n        this.isHandleOutsideImage = false;\n        const iMin = Math.min(worldPos1Index[0], worldPos2Index[0]);\n        const iMax = Math.max(worldPos1Index[0], worldPos2Index[0]);\n\n        const jMin = Math.min(worldPos1Index[1], worldPos2Index[1]);\n        const jMax = Math.max(worldPos1Index[1], worldPos2Index[1]);\n\n        const kMin = Math.min(worldPos1Index[2], worldPos2Index[2]);\n        const kMax = Math.max(worldPos1Index[2], worldPos2Index[2]);\n\n        const boundsIJK = [\n          [iMin, iMax],\n          [jMin, jMax],\n          [kMin, kMax],\n        ] as [Types.Point2, Types.Point2, Types.Point2];\n\n        const pointsInShape = pointInShapeCallback(\n          imageData,\n          () => true,\n          null,\n          boundsIJK\n        );\n\n        //@ts-ignore\n        pointsInsideVolume.push(pointsInShape);\n      }\n    }\n    data.cachedStats.pointsInVolume = pointsInsideVolume;\n  }\n\n  _calculateCachedStatsTool(annotation, enabledElement) {\n    const data = annotation.data;\n    const { viewport } = enabledElement;\n\n    const { cachedStats } = data;\n    const targetId = this.getTargetId(viewport);\n    const imageVolume = cache.getVolume(targetId.split(/volumeId:|\\?/)[1]);\n\n    // Todo: this shouldn't be here, this is a performance issue\n    // Since we are extending the RectangleROI class, we need to\n    // bring the logic for handle to some cachedStats calculation\n    this._computeProjectionPoints(annotation, imageVolume);\n\n    annotation.invalidated = false;\n\n    // Dispatching annotation modified\n    triggerAnnotationModified(annotation, viewport.element);\n\n    return cachedStats;\n  }\n\n  /**\n   * it is used to draw the rectangleROIStartEnd annotation in each\n   * request animation frame.\n   *\n   * @param enabledElement - The Cornerstone's enabledElement.\n   * @param svgDrawingHelper - The svgDrawingHelper providing the context for drawing.\n   */\n  renderAnnotation = (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper\n  ): boolean => {\n    let renderStatus = false;\n    const { viewport } = enabledElement;\n\n    const annotations = getAnnotations(this.getToolName(), viewport.element);\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    const sliceIndex = viewport.getCurrentImageIdIndex();\n\n    const styleSpecifier: StyleSpecifier = {\n      toolGroupId: this.toolGroupId,\n      toolName: this.getToolName(),\n      viewportId: enabledElement.viewport.id,\n    };\n\n    for (let i = 0; i < annotations.length; i++) {\n      const annotation = annotations[\n        i\n      ] as RectangleROIStartEndThresholdAnnotation;\n      const { annotationUID, data } = annotation;\n      const { startSlice, endSlice } = data;\n      const { points, activeHandleIndex } = data.handles;\n\n      const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n\n      styleSpecifier.annotationUID = annotationUID;\n\n      const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n      const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n      const color = 'rgb(255, 255, 255)'\n      // range of slices to render based on the start and end slice, like\n      // np.arange\n\n      // if indexIJK is outside the start/end slice, we don't render\n      if (\n        sliceIndex < Math.min(startSlice, endSlice) ||\n        sliceIndex > Math.max(startSlice, endSlice)\n      ) {\n        continue;\n      }\n\n      // WE HAVE TO CACHE STATS BEFORE FETCHING TEXT\n\n      if (annotation.invalidated) {\n        this._throttledCalculateCachedStats(annotation, enabledElement);\n      }\n\n      // if it is inside the start/end slice, but not exactly the first or\n      // last slice, we render the line in dash, but not the handles\n      let firstOrLastSlice = false;\n      if (sliceIndex === startSlice || sliceIndex === endSlice) {\n        firstOrLastSlice = true;\n      }\n\n      // If rendering engine has been destroyed while rendering\n      if (!viewport.getRenderingEngine()) {\n        console.warn('Rendering Engine has been destroyed');\n        return renderStatus;\n      }\n\n      let activeHandleCanvasCoords;\n\n      if (!isAnnotationVisible(annotationUID)) {\n        continue;\n      }\n\n      if (\n        !isAnnotationLocked(annotation) &&\n        !this.editData &&\n        activeHandleIndex !== null &&\n        firstOrLastSlice\n      ) {\n        // Not locked or creating and hovering over handle, so render handle.\n        activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]];\n      }\n\n      if (activeHandleCanvasCoords) {\n        const handleGroupUID = '0';\n\n        drawHandlesSvg(\n          svgDrawingHelper,\n          annotationUID,\n          handleGroupUID,\n          activeHandleCanvasCoords,\n          {\n            color,\n          }\n        );\n      }\n\n      let lineDashToUse = lineDash;\n\n      if (!firstOrLastSlice) {\n        lineDashToUse = 2;\n      }\n\n      const rectangleUID = '0';\n      drawRectSvg(\n        svgDrawingHelper,\n        annotationUID,\n        rectangleUID,\n        canvasCoordinates[0],\n        canvasCoordinates[3],\n        {\n          color,\n          lineDash: lineDashToUse,\n          lineWidth,\n        }\n      );\n\n      renderStatus = true;\n    }\n\n    return renderStatus;\n  };\n\n  _getEndSliceIndex(\n    imageVolume: Types.IImageVolume,\n    worldPos: Types.Point3,\n    spacingInNormal: number,\n    viewPlaneNormal: Types.Point3\n  ): number | undefined {\n    const numSlicesToPropagate = this.configuration.numSlicesToPropagate;\n\n    // get end position by moving from worldPos in the direction of viewplaneNormal\n    // with amount of numSlicesToPropagate * spacingInNormal\n    const endPos = vec3.create();\n    vec3.scaleAndAdd(\n      endPos,\n      worldPos,\n      viewPlaneNormal,\n      numSlicesToPropagate * spacingInNormal\n    );\n\n    const halfSpacingInNormalDirection = spacingInNormal / 2;\n    // Loop through imageIds of the imageVolume and find the one that is closest to endPos\n    const { imageIds } = imageVolume;\n    let imageIdIndex;\n    for (let i = 0; i < imageIds.length; i++) {\n      const imageId = imageIds[i];\n\n      const { imagePositionPatient } = metaData.get(\n        'imagePlaneModule',\n        imageId\n      );\n\n      const dir = vec3.create();\n      vec3.sub(dir, endPos, imagePositionPatient);\n\n      const dot = vec3.dot(dir, viewPlaneNormal);\n\n      if (Math.abs(dot) < halfSpacingInNormalDirection) {\n        imageIdIndex = i;\n      }\n    }\n\n    return imageIdIndex;\n  }\n}\n\nRectangleROIStartEndThresholdTool.toolName = 'RectangleROIStartEndThreshold';\nexport default RectangleROIStartEndThresholdTool;\n","import { triggerEvent, eventTarget } from '@cornerstonejs/core';\nimport Events from '../enums/Events';\nimport { Annotation } from '../types';\n\nexport type FramesRange = [number, number] | number;\n\n/**\n * This class handles the annotation frame range values for multiframes.\n * Mostly used for the Video viewport, it allows references to\n * a range of frame values.\n */\nexport default class AnnotationFrameRange {\n  protected static frameRangeExtractor =\n    /(\\/frames\\/|[&?]frameNumber=)([^/&?]*)/i;\n\n  protected static imageIdToFrames(imageId: string): FramesRange {\n    const match = imageId.match(this.frameRangeExtractor);\n    if (!match || !match[2]) {\n      return null;\n    }\n    const range = match[2].split('-').map((it) => Number(it));\n    if (range.length === 1) {\n      return range[0];\n    }\n    return range as FramesRange;\n  }\n\n  public static framesToString(range) {\n    if (Array.isArray(range)) {\n      return `${range[0]}-${range[1]}`;\n    }\n    return String(range);\n  }\n\n  protected static framesToImageId(\n    imageId: string,\n    range: FramesRange | string\n  ): string {\n    const match = imageId.match(this.frameRangeExtractor);\n    if (!match || !match[2]) {\n      return null;\n    }\n    const newRangeString = this.framesToString(range);\n    return imageId.replace(\n      this.frameRangeExtractor,\n      `${match[1]}${newRangeString}`\n    );\n  }\n\n  /**\n   * Sets the range of frames to associate with the given annotation.\n   * The range can be a single frame number (1 based according to DICOM),\n   * or a range of values in the format `min-max` where min, max are inclusive\n   * Modifies the referencedImageID to specify the updated URL.\n   */\n  public static setFrameRange(\n    annotation: Annotation,\n    range: FramesRange | string,\n    eventBase?: { viewportId; renderingEngineId }\n  ) {\n    const { referencedImageId } = annotation.metadata;\n    annotation.metadata.referencedImageId = this.framesToImageId(\n      referencedImageId,\n      range\n    );\n    const eventDetail = {\n      ...eventBase,\n      annotation,\n    };\n    triggerEvent(eventTarget, Events.ANNOTATION_MODIFIED, eventDetail);\n  }\n\n  public static getFrameRange(\n    annotation: Annotation\n  ): number | [number, number] {\n    return this.imageIdToFrames(annotation.metadata.referencedImageId);\n  }\n}\n","import {\n  Types,\n  utilities,\n  BaseVolumeViewport,\n  StackViewport,\n  cache,\n  metaData,\n} from '@cornerstonejs/core';\nimport { Annotation } from '../types';\nimport { addAnnotation } from '../stateManagement';\nimport { vec3 } from 'gl-matrix';\n\nfunction annotationHydration(\n  viewport: Types.IViewport,\n  toolName: string,\n  worldPoints: Types.Point3[],\n  options?: {\n    FrameOfReferenceUID?: string;\n    annotationUID?: string;\n  }\n): Annotation {\n  const viewReference = viewport.getViewReference();\n  const { viewPlaneNormal, FrameOfReferenceUID } = viewReference;\n  const annotation = {\n    annotationUID: options?.annotationUID || utilities.uuidv4(),\n    data: {\n      handles: {\n        points: worldPoints,\n      },\n    },\n    highlighted: false,\n    autoGenerated: false,\n    invalidated: false,\n    isLocked: false,\n    isVisible: true,\n    metadata: {\n      toolName,\n      viewPlaneNormal,\n      FrameOfReferenceUID,\n      referencedImageId: getReferencedImageId(\n        viewport,\n        worldPoints[0],\n        viewPlaneNormal\n      ),\n      ...options,\n    },\n  };\n  addAnnotation(annotation, viewport.element);\n  return annotation;\n}\n\nfunction getReferencedImageId(\n  viewport: Types.IViewport,\n  worldPos: Types.Point3,\n  viewPlaneNormal: Types.Point3\n): string {\n  let referencedImageId;\n\n  if (viewport instanceof StackViewport) {\n    referencedImageId = getClosestImageIdForStackViewport(\n      viewport,\n      worldPos,\n      viewPlaneNormal\n    );\n  } else if (viewport instanceof BaseVolumeViewport) {\n    const targetId = getTargetId(viewport);\n    const volumeId = utilities.getVolumeId(targetId);\n    const imageVolume = cache.getVolume(volumeId);\n\n    referencedImageId = utilities.getClosestImageId(\n      imageVolume,\n      worldPos,\n      viewPlaneNormal\n    );\n  } else {\n    throw new Error(\n      'getReferencedImageId: viewport must be a StackViewport or BaseVolumeViewport'\n    );\n  }\n\n  return referencedImageId;\n}\n\nfunction getTargetId(viewport: Types.IViewport): string | undefined {\n  const targetId = viewport.getReferenceId?.();\n  if (targetId) {\n    return targetId;\n  }\n  if (viewport instanceof BaseVolumeViewport) {\n    return `volumeId:${getTargetVolumeId(viewport)}`;\n  }\n  throw new Error('getTargetId: viewport must have a getTargetId method');\n}\n\nfunction getTargetVolumeId(viewport: Types.IViewport): string | undefined {\n  const actorEntries = viewport.getActors();\n\n  if (!actorEntries) {\n    return;\n  }\n  return actorEntries.find(\n    (actorEntry) => actorEntry.actor.getClassName() === 'vtkVolume'\n  )?.uid;\n}\n\nfunction getClosestImageIdForStackViewport(\n  viewport: StackViewport,\n  worldPos: Types.Point3,\n  viewPlaneNormal: Types.Point3\n): string {\n  const imageIds = viewport.getImageIds();\n  if (!imageIds || !imageIds.length) {\n    return;\n  }\n\n  const distanceImagePairs = imageIds.map((imageId) => {\n    const { imagePositionPatient } = metaData.get('imagePlaneModule', imageId);\n    const distance = calculateDistanceToImage(\n      worldPos,\n      imagePositionPatient,\n      viewPlaneNormal\n    );\n    return { imageId, distance };\n  });\n\n  distanceImagePairs.sort((a, b) => a.distance - b.distance);\n\n  return distanceImagePairs[0].imageId;\n}\n\nfunction calculateDistanceToImage(\n  worldPos: Types.Point3,\n  ImagePositionPatient: Types.Point3,\n  viewPlaneNormal: Types.Point3\n): number {\n  const dir = vec3.create();\n  vec3.sub(dir, worldPos, ImagePositionPatient);\n\n  const dot = vec3.dot(dir, viewPlaneNormal);\n\n  return Math.abs(dot);\n}\nexport { annotationHydration, getClosestImageIdForStackViewport };\n","import type { Types } from '@cornerstonejs/core';\nimport { CONSTANTS } from '@cornerstonejs/core';\n\nconst { EPSILON } = CONSTANTS;\n\n/** Bounding box type */\ntype BoundingBox =\n  | [Types.Point2, Types.Point2, null]\n  | [Types.Point2, Types.Point2, Types.Point2];\n\nfunction calculateBoundingBox(\n  points,\n  dimensions,\n  isWorld = false\n): BoundingBox {\n  let xMin = Infinity;\n  let xMax = isWorld ? -Infinity : 0;\n  let yMin = Infinity;\n  let yMax = isWorld ? -Infinity : 0;\n  let zMin = Infinity;\n  let zMax = isWorld ? -Infinity : 0;\n\n  const is3D = points[0]?.length === 3;\n\n  // use for loop for performance\n  for (let i = 0; i < points.length; i++) {\n    const p = points[i];\n    xMin = Math.min(p[0], xMin);\n    xMax = Math.max(p[0], xMax);\n    yMin = Math.min(p[1], yMin);\n    yMax = Math.max(p[1], yMax);\n\n    if (is3D) {\n      zMin = Math.min(p[2] ?? zMin, zMin);\n      zMax = Math.max(p[2] ?? zMax, zMax);\n    }\n  }\n\n  if (dimensions) {\n    xMin = Math.max(isWorld ? dimensions[0] + EPSILON : 0, xMin);\n    xMax = Math.min(\n      isWorld ? dimensions[0] - EPSILON : dimensions[0] - 1,\n      xMax\n    );\n    yMin = Math.max(isWorld ? dimensions[1] + EPSILON : 0, yMin);\n    yMax = Math.min(\n      isWorld ? dimensions[1] - EPSILON : dimensions[1] - 1,\n      yMax\n    );\n\n    if (is3D && dimensions.length === 3) {\n      zMin = Math.max(isWorld ? dimensions[2] + EPSILON : 0, zMin);\n      zMax = Math.min(\n        isWorld ? dimensions[2] - EPSILON : dimensions[2] - 1,\n        zMax\n      );\n    }\n  } else if (!isWorld) {\n    // still need to bound to 0 and Infinity if no dimensions are provided for ijk\n    xMin = Math.max(0, xMin);\n    xMax = Math.min(Infinity, xMax);\n    yMin = Math.max(0, yMin);\n    yMax = Math.min(Infinity, yMax);\n\n    if (is3D) {\n      zMin = Math.max(0, zMin);\n      zMax = Math.min(Infinity, zMax);\n    }\n  }\n\n  return is3D\n    ? [\n        [xMin, xMax],\n        [yMin, yMax],\n        [zMin, zMax],\n      ]\n    : [[xMin, xMax], [yMin, yMax], null];\n}\n\n/**\n * With a given vertices (points) coordinates in 2D or 3D in IJK, it calculates the minimum and maximum\n * coordinate in each axis, and returns them. If clipBounds are provided it also\n * clip the min, max to the provided width, height and depth\n *\n * @param points - shape corner points coordinates either in IJK (image coordinate)\n * @param dimensions - bounds to clip the min, max\n * @returns [[xMin,xMax],[yMin,yMax], [zMin,zMax]]\n */\nexport function getBoundingBoxAroundShapeIJK(\n  points: Types.Point2[] | Types.Point3[],\n  dimensions?: Types.Point2 | Types.Point3\n): BoundingBox {\n  return calculateBoundingBox(points, dimensions, false);\n}\n\n/**\n * With a given vertices (points) coordinates in 2D or 3D in World Coordinates, it calculates the minimum and maximum\n * coordinate in each axis, and returns them. If clipBounds are provided it also\n * clip the min, max to the provided width, height and depth\n *\n * @param points - shape corner points coordinates either in IJK (image coordinate)\n * @param clipBounds - bounds to clip the min, max\n * @returns [[xMin,xMax],[yMin,yMax], [zMin,zMax]]\n */\nexport function getBoundingBoxAroundShapeWorld(\n  points: Types.Point2[] | Types.Point3[],\n  clipBounds?: Types.Point2 | Types.Point3\n): BoundingBox {\n  return calculateBoundingBox(points, clipBounds, true);\n}\n","import { utilities, Enums } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nconst { calibratedPixelSpacingMetadataProvider } = utilities;\n\n/**\n * It adds the provided spacing to the Cornerstone internal calibratedPixelSpacing\n * metadata provider, then it invalidates all the tools that have the imageId as\n * their reference imageIds. Finally, it triggers a re-render for invalidated annotations.\n * @param imageId - ImageId for the calibrated image\n * @param rowPixelSpacing - Spacing in row direction\n * @param calibrationOrScale - either the calibration object or a scale value\n */\nexport default function calibrateImageSpacing(\n  imageId: string,\n  renderingEngine: Types.IRenderingEngine,\n  calibrationOrScale: Types.IImageCalibration | number\n): void {\n  // Handle simple parameter version\n  if (typeof calibrationOrScale === 'number') {\n    calibrationOrScale = {\n      type: Enums.CalibrationTypes.USER,\n      scale: calibrationOrScale,\n    };\n  }\n  // 1. Add the calibratedPixelSpacing metadata to the metadata\n  calibratedPixelSpacingMetadataProvider.add(imageId, calibrationOrScale);\n\n  // 2. Update the actor for stackViewports\n  const viewports = renderingEngine.getStackViewports();\n\n  // 2.1 If imageId is already being used in a stackViewport -> update actor\n  viewports.forEach((viewport) => {\n    const imageIds = viewport.getImageIds();\n    if (imageIds.includes(imageId)) {\n      viewport.calibrateSpacing(imageId);\n    }\n  });\n\n  // 2.2 If imageId is cached but not being displayed in a viewport, stackViewport\n  // will handle using the calibratedPixelSpacing since it has been added\n  // to the provider\n}\n","/**\n * CINE Tool Events\n */\nenum Events {\n  CLIP_STOPPED = 'CORNERSTONE_CINE_TOOL_STOPPED',\n  CLIP_STARTED = 'CORNERSTONE_CINE_TOOL_STARTED',\n}\n\nexport default Events;\n","import { glMatrix, vec3 } from 'gl-matrix';\nimport {\n  utilities as csUtils,\n  getEnabledElement,\n  StackViewport,\n  VolumeViewport,\n  cache,\n  BaseVolumeViewport,\n  Enums,\n} from '@cornerstonejs/core';\n\nimport { Types } from '@cornerstonejs/core';\nimport CINE_EVENTS from './events';\nimport { addToolState, getToolState, getToolStateByViewportId } from './state';\nimport { CINETypes } from '../../types';\nimport scroll from '../scroll';\n\nconst { ViewportStatus } = Enums;\nconst { triggerEvent } = csUtils;\n\nconst debounced = true;\nconst dynamicVolumesPlayingMap = new Map();\n\n/**\n * Starts playing a clip or adjusts the frame rate of an already playing clip.  framesPerSecond is\n * optional and defaults to 30 if not specified.  A negative framesPerSecond will play the clip in reverse.\n * The element must be a stack of images\n * @param element - HTML Element\n * @param framesPerSecond - Number of frames per second\n */\nfunction playClip(\n  element: HTMLDivElement,\n  playClipOptions: CINETypes.PlayClipOptions\n): void {\n  let playClipTimeouts;\n  let playClipIsTimeVarying;\n\n  if (element === undefined) {\n    throw new Error('playClip: element must not be undefined');\n  }\n\n  const enabledElement = getEnabledElement(element);\n\n  if (!enabledElement) {\n    throw new Error(\n      'playClip: element must be a valid Cornerstone enabled element'\n    );\n  }\n\n  if (!playClipOptions) {\n    playClipOptions = {};\n  }\n\n  // 4D Cine is enabled by default\n  playClipOptions.dynamicCineEnabled =\n    playClipOptions.dynamicCineEnabled ?? true;\n\n  const { viewport } = enabledElement;\n  const volume = _getVolumeFromViewport(viewport);\n  const playClipContext = _createCinePlayContext(viewport, playClipOptions);\n  let playClipData = getToolState(element);\n\n  const isDynamicCinePlaying =\n    playClipOptions.dynamicCineEnabled && volume?.isDynamicVolume();\n\n  // If user is trying to play CINE for a 4D volume it first needs\n  // to stop CINE that has may be playing for any other viewport.\n  if (isDynamicCinePlaying) {\n    _stopDynamicVolumeCine(element);\n  }\n\n  if (!playClipData) {\n    playClipData = {\n      intervalId: undefined,\n      framesPerSecond: 30,\n      lastFrameTimeStamp: undefined,\n      ignoreFrameTimeVector: false,\n      usingFrameTimeVector: false,\n      frameTimeVector: playClipOptions.frameTimeVector ?? undefined,\n      speed: playClipOptions.frameTimeVectorSpeedMultiplier ?? 1,\n      reverse: playClipOptions.reverse ?? false,\n      loop: playClipOptions.loop ?? true,\n    };\n    addToolState(element, playClipData);\n  } else {\n    // Make sure the specified clip is not running before any property update.\n    // If a 3D CINE was playing it passes isDynamicCinePlaying as FALSE to\n    // prevent stopping a 4D CINE in case it is playing on another viewport.\n    _stopClip(element, {\n      stopDynamicCine: !isDynamicCinePlaying,\n      viewportId: viewport.id,\n    });\n  }\n\n  playClipData.dynamicCineEnabled = playClipOptions.dynamicCineEnabled;\n\n  // If a framesPerSecond is specified and is valid, update the playClipData now\n  if (\n    playClipOptions.framesPerSecond < 0 ||\n    playClipOptions.framesPerSecond > 0\n  ) {\n    playClipData.framesPerSecond = Number(playClipOptions.framesPerSecond);\n    playClipData.reverse = playClipData.framesPerSecond < 0;\n    // If framesPerSecond is given, frameTimeVector will be ignored...\n    playClipData.ignoreFrameTimeVector = true;\n  }\n\n  // Determine if frame time vector should be used instead of a fixed frame rate...\n  if (\n    playClipData.ignoreFrameTimeVector !== true &&\n    playClipData.frameTimeVector &&\n    playClipData.frameTimeVector.length === playClipContext.numScrollSteps &&\n    playClipContext.frameTimeVectorEnabled\n  ) {\n    const { timeouts, isTimeVarying } = _getPlayClipTimeouts(\n      playClipData.frameTimeVector,\n      playClipData.speed\n    );\n\n    playClipTimeouts = timeouts;\n    playClipIsTimeVarying = isTimeVarying;\n  }\n\n  // This function encapsulates the frame rendering logic...\n  const playClipAction = () => {\n    const { numScrollSteps, currentStepIndex } = playClipContext;\n    let newStepIndex = currentStepIndex + (playClipData.reverse ? -1 : 1);\n    const newStepIndexOutOfRange =\n      newStepIndex < 0 || newStepIndex >= numScrollSteps;\n\n    if (!playClipData.loop && newStepIndexOutOfRange) {\n      // If a 3D CINE was playing it passes isDynamicCinePlaying as FALSE to\n      // prevent stopping a 4D CINE in case it is playing on another viewport.\n      _stopClip(element, {\n        stopDynamicCine: !isDynamicCinePlaying,\n        viewportId: viewport.id,\n      });\n\n      const eventDetail = { element };\n\n      triggerEvent(element, CINE_EVENTS.CLIP_STOPPED, eventDetail);\n      return;\n    }\n\n    // Loop around if newStepIndex is out of range\n    if (newStepIndex >= numScrollSteps) {\n      newStepIndex = 0;\n    } else if (newStepIndex < 0) {\n      newStepIndex = numScrollSteps - 1;\n    }\n\n    const delta = newStepIndex - currentStepIndex;\n\n    if (delta) {\n      playClipContext.scroll(delta);\n    }\n  };\n\n  if (isDynamicCinePlaying) {\n    dynamicVolumesPlayingMap.set(volume.volumeId, element);\n  }\n\n  // If playClipTimeouts array is available, not empty and its elements are NOT uniform ...\n  // ... (at least one timeout is different from the others), use alternate setTimeout implementation\n  if (\n    playClipTimeouts &&\n    playClipTimeouts.length > 0 &&\n    playClipIsTimeVarying\n  ) {\n    playClipData.usingFrameTimeVector = true;\n    playClipData.intervalId = window.setTimeout(\n      function playClipTimeoutHandler() {\n        playClipData.intervalId = window.setTimeout(\n          playClipTimeoutHandler,\n          playClipTimeouts[playClipContext.currentStepIndex]\n        );\n        playClipAction();\n      },\n      0\n    );\n  } else {\n    // ... otherwise user setInterval implementation which is much more efficient.\n    playClipData.usingFrameTimeVector = false;\n    playClipData.intervalId = window.setInterval(\n      playClipAction,\n      1000 / Math.abs(playClipData.framesPerSecond)\n    );\n  }\n\n  const eventDetail = {\n    element,\n  };\n\n  triggerEvent(element, CINE_EVENTS.CLIP_STARTED, eventDetail);\n}\n\n/**\n * Stops an already playing clip.\n * @param element - HTML Element\n */\nfunction stopClip(element: HTMLDivElement, options = {} as any): void {\n  _stopClip(element, {\n    stopDynamicCine: true,\n    ...options,\n  });\n}\n\nfunction _stopClip(\n  element: HTMLDivElement,\n  options = { stopDynamicCine: true, viewportId: undefined }\n) {\n  const { stopDynamicCine, viewportId } = options;\n  const enabledElement = getEnabledElement(element);\n\n  let toolState;\n  if (!enabledElement) {\n    if (viewportId) {\n      toolState = getToolStateByViewportId(viewportId);\n    } else {\n      return;\n    }\n  } else {\n    const { viewport } = enabledElement;\n    toolState = getToolState(viewport.element);\n  }\n\n  if (toolState) {\n    _stopClipWithData(toolState);\n  }\n\n  if (\n    stopDynamicCine &&\n    enabledElement?.viewport instanceof BaseVolumeViewport\n  ) {\n    _stopDynamicVolumeCine(element);\n  }\n}\n\n/**\n * [private] Stops any CINE playing for the dynamic volume loaded on this viewport\n * @param element - HTML Element\n */\nfunction _stopDynamicVolumeCine(element) {\n  const { viewport } = getEnabledElement(element);\n  const volume = _getVolumeFromViewport(viewport);\n\n  // If the current viewport has a 4D volume loaded it may be playing\n  // if it is also loaded on another viewport and user has started CINE\n  // for that one. This guarantees the other viewport will also be stopped.\n  if (volume?.isDynamicVolume()) {\n    const dynamicCineElement = dynamicVolumesPlayingMap.get(volume.volumeId);\n\n    dynamicVolumesPlayingMap.delete(volume.volumeId);\n\n    if (dynamicCineElement && dynamicCineElement !== element) {\n      stopClip(<HTMLDivElement>dynamicCineElement);\n    }\n  }\n}\n\n/**\n * [private] Turns a Frame Time Vector (0018,1065) array into a normalized array of timeouts. Each element\n * ... of the resulting array represents the amount of time each frame will remain on the screen.\n * @param vector - A Frame Time Vector (0018,1065) as specified in section C.7.6.5.1.2 of DICOM standard.\n * @param speed - A speed factor which will be applied to each element of the resulting array.\n * @returns An array with timeouts for each animation frame.\n */\nfunction _getPlayClipTimeouts(vector: number[], speed: number) {\n  let i;\n  let sample;\n  let delay;\n  let sum = 0;\n  const limit = vector.length;\n  const timeouts = [];\n\n  // Initialize time varying to false\n  let isTimeVarying = false;\n\n  if (typeof speed !== 'number' || speed <= 0) {\n    speed = 1;\n  }\n\n  // First element of a frame time vector must be discarded\n  for (i = 1; i < limit; i++) {\n    // eslint-disable-next-line no-bitwise\n    delay = (Number(vector[i]) / speed) | 0; // Integral part only\n    timeouts.push(delay);\n    if (i === 1) {\n      // Use first item as a sample for comparison\n      sample = delay;\n    } else if (delay !== sample) {\n      isTimeVarying = true;\n    }\n\n    sum += delay;\n  }\n\n  if (timeouts.length > 0) {\n    if (isTimeVarying) {\n      // If it's a time varying vector, make the last item an average...\n      // eslint-disable-next-line no-bitwise\n      delay = (sum / timeouts.length) | 0;\n    } else {\n      delay = timeouts[0];\n    }\n\n    timeouts.push(delay);\n  }\n\n  return { timeouts, isTimeVarying };\n}\n\n/**\n * [private] Performs the heavy lifting of stopping an ongoing animation.\n * @param element - HTML Element\n * @param playClipData - The data from playClip that needs to be stopped.\n */\nfunction _stopClipWithData(playClipData) {\n  const id = playClipData.intervalId;\n\n  if (typeof id !== 'undefined') {\n    playClipData.intervalId = undefined;\n    if (playClipData.usingFrameTimeVector) {\n      clearTimeout(id);\n    } else {\n      clearInterval(id);\n    }\n  }\n}\n\nfunction _getVolumesFromViewport(viewport): Types.IImageVolume[] {\n  return viewport\n    .getActors()\n    .map((actor) => cache.getVolume(actor.uid))\n    .filter((volume) => !!volume);\n}\n\nfunction _getVolumeFromViewport(viewport): Types.IImageVolume {\n  const volumes = _getVolumesFromViewport(viewport);\n  const dynamicVolume = volumes.find((volume) => volume.isDynamicVolume());\n\n  return dynamicVolume ?? volumes[0];\n}\n\nfunction _createStackViewportCinePlayContext(\n  viewport: StackViewport,\n  waitForRendered: number\n): CINETypes.CinePlayContext {\n  const imageIds = viewport.getImageIds();\n\n  return {\n    get numScrollSteps(): number {\n      return imageIds.length;\n    },\n    get currentStepIndex(): number {\n      return viewport.getTargetImageIdIndex();\n    },\n    get frameTimeVectorEnabled(): boolean {\n      // It is always in acquired orientation\n      return true;\n    },\n    waitForRenderedCount: 0,\n    scroll(delta: number): void {\n      if (\n        this.waitForRenderedCount <= waitForRendered &&\n        viewport.viewportStatus !== ViewportStatus.RENDERED\n      ) {\n        this.waitForRenderedCount++;\n        return;\n      }\n      this.waitForRenderedCount = 0;\n      scroll(viewport, { delta, debounceLoading: debounced });\n    },\n  };\n}\n\nfunction _createVolumeViewportCinePlayContext(\n  viewport: VolumeViewport,\n  volume: Types.IImageVolume\n): CINETypes.CinePlayContext {\n  const { volumeId } = volume;\n  const cachedScrollInfo = {\n    viewPlaneNormal: vec3.create(),\n    scrollInfo: null,\n  };\n\n  const getScrollInfo = () => {\n    const camera = viewport.getCamera();\n    const updateCache =\n      !cachedScrollInfo.scrollInfo ||\n      !vec3.equals(camera.viewPlaneNormal, cachedScrollInfo.viewPlaneNormal);\n\n    // Number of steps would change only after rotating the volume so it\n    // caches the result and recomputes only when necessary. Until it is\n    // rotated the current frame is updated locally\n    if (updateCache) {\n      const scrollInfo = csUtils.getVolumeViewportScrollInfo(\n        viewport,\n        volumeId\n      );\n\n      cachedScrollInfo.viewPlaneNormal = camera.viewPlaneNormal;\n      cachedScrollInfo.scrollInfo = scrollInfo;\n    }\n\n    return cachedScrollInfo.scrollInfo;\n  };\n\n  return {\n    get numScrollSteps(): number {\n      return getScrollInfo().numScrollSteps;\n    },\n    get currentStepIndex(): number {\n      return getScrollInfo().currentStepIndex;\n    },\n    get frameTimeVectorEnabled(): boolean {\n      const camera = viewport.getCamera();\n      const volumeViewPlaneNormal = volume.direction\n        .slice(6, 9)\n        .map((x) => -x) as Types.Point3;\n      const dot = vec3.dot(volumeViewPlaneNormal, camera.viewPlaneNormal);\n\n      // Check if the volume is in acquired orientation\n      // it may be flipped or rotated in plane\n      return glMatrix.equals(dot, 1);\n    },\n    scroll(delta: number): void {\n      getScrollInfo().currentStepIndex += delta;\n      scroll(viewport, { delta });\n    },\n  };\n}\n\nfunction _createDynamicVolumeViewportCinePlayContext(\n  volume: Types.IDynamicImageVolume\n): CINETypes.CinePlayContext {\n  return {\n    get numScrollSteps(): number {\n      return volume.numTimePoints;\n    },\n    get currentStepIndex(): number {\n      return volume.timePointIndex;\n    },\n    get frameTimeVectorEnabled(): boolean {\n      // Looping throught time does not uses frameTimeVector\n      return false;\n    },\n    scroll(delta: number): void {\n      // Updating this property (setter) makes it move to the desired time point\n      volume.timePointIndex += delta;\n    },\n  };\n}\n\nfunction _createCinePlayContext(\n  viewport,\n  playClipOptions: CINETypes.PlayClipOptions\n): CINETypes.CinePlayContext {\n  if (viewport instanceof StackViewport) {\n    return _createStackViewportCinePlayContext(\n      viewport,\n      playClipOptions.waitForRendered ?? 30\n    );\n  }\n\n  if (viewport instanceof VolumeViewport) {\n    const volume = _getVolumeFromViewport(viewport);\n\n    if (playClipOptions.dynamicCineEnabled && volume?.isDynamicVolume()) {\n      return _createDynamicVolumeViewportCinePlayContext(\n        <Types.IDynamicImageVolume>volume\n      );\n    }\n\n    return _createVolumeViewportCinePlayContext(viewport, volume);\n  }\n\n  throw new Error('Unknown viewport type');\n}\n\nexport { playClip, stopClip };\n","/**\n * Clips a value to an upper and lower bound.\n * @export @public @method\n * @name clip\n *\n * @param  {number} val  The value to clip.\n * @param  {number} low  The lower bound.\n * @param  {number} high The upper bound.\n * @returns {number}      The clipped value.\n */\nexport function clip(val, low, high) {\n  return Math.min(Math.max(low, val), high);\n}\n\n/**\n * Clips a value within a box.\n * @export @public @method\n * @name clipToBox\n *\n * @param  {Object} point The point to clip\n * @param  {Object} box   The bounding box to clip to.\n * @returns {Object}       The clipped point.\n */\nexport function clipToBox(point, box) {\n  // Clip an {x, y} point to a box of size {width, height}\n  point.x = clip(point.x, 0, box.width);\n  point.y = clip(point.y, 0, box.height);\n}\n\nexport default clip;\n","import { getSegmentation } from '../../stateManagement/segmentation/segmentationState';\nimport { ContourSegmentationAnnotation } from '../../types';\n\n/**\n * Adds a contour segmentation annotation to the specified segmentation.\n * @param annotation - The contour segmentation annotation to add.\n */\nexport function addContourSegmentationAnnotation(\n  annotation: ContourSegmentationAnnotation\n) {\n  if (annotation.parentAnnotationUID) {\n    // Don't add it for parent annotations - this happens during interpolation\n    return;\n  }\n  if (!annotation.data.segmentation) {\n    throw new Error(\n      'addContourSegmentationAnnotation: annotation does not have a segmentation data'\n    );\n  }\n\n  const { segmentationId, segmentIndex } = annotation.data.segmentation;\n  const segmentation = getSegmentation(segmentationId);\n\n  if (!segmentation.representationData.CONTOUR) {\n    segmentation.representationData.CONTOUR = { annotationUIDsMap: new Map() };\n  }\n\n  const { annotationUIDsMap } = segmentation.representationData.CONTOUR;\n\n  let annotationsUIDsSet = annotationUIDsMap.get(segmentIndex);\n\n  if (!annotationsUIDsSet) {\n    annotationsUIDsSet = new Set();\n    annotationUIDsMap.set(segmentIndex, annotationsUIDsSet);\n  }\n\n  annotationUIDsMap.set(\n    segmentIndex,\n    annotationsUIDsSet.add(annotation.annotationUID)\n  );\n}\n","import { state } from '../../stateManagement/segmentation';\nimport { ContourSegmentationAnnotation } from '../../types';\n\n/**\n * Removes a contour segmentation annotation from the given annotation.\n * If the annotation does not have a segmentation data, this method returns\n * quietly.  This can occur for interpolated segmentations that have not yet\n * been converted to real segmentations or other in-process segmentations.\n * @param annotation - The contour segmentation annotation to remove.\n */\nexport function removeContourSegmentationAnnotation(\n  annotation: ContourSegmentationAnnotation\n) {\n  if (!annotation.data.segmentation) {\n    throw new Error(\n      'removeContourSegmentationAnnotation: annotation does not have a segmentation data'\n    );\n  }\n\n  const { segmentationId, segmentIndex } = annotation.data.segmentation;\n  const segmentation = state.getSegmentation(segmentationId);\n  const { annotationUIDsMap } = segmentation?.representationData.CONTOUR || {};\n  const annotationsUIDsSet = annotationUIDsMap?.get(segmentIndex);\n\n  if (!annotationsUIDsSet) {\n    return;\n  }\n\n  annotationsUIDsSet.delete(annotation.annotationUID);\n\n  // Delete segmentIndex Set if there is no more annotations\n  if (!annotationsUIDsSet.size) {\n    annotationUIDsMap.delete(segmentIndex);\n  }\n}\n","/**\n * Calculates the perimeter of a polyline.\n *\n * @param polyline - The polyline represented as an array of points.\n * @param closed - Indicates whether the polyline is closed or not.\n * @returns The perimeter of the polyline.\n */\nfunction calculatePerimeter(polyline: number[][], closed: boolean): number {\n  let perimeter = 0;\n\n  for (let i = 0; i < polyline.length - 1; i++) {\n    const point1 = polyline[i];\n    const point2 = polyline[i + 1];\n    perimeter += Math.sqrt(\n      Math.pow(point2[0] - point1[0], 2) + Math.pow(point2[1] - point1[1], 2)\n    );\n  }\n\n  if (closed) {\n    const firstPoint = polyline[0];\n    const lastPoint = polyline[polyline.length - 1];\n    perimeter += Math.sqrt(\n      Math.pow(lastPoint[0] - firstPoint[0], 2) +\n        Math.pow(lastPoint[1] - firstPoint[1], 2)\n    );\n  }\n\n  return perimeter;\n}\n\nexport default calculatePerimeter;\n","import { utilities as csUtils } from '@cornerstonejs/core';\nimport { vec3 } from 'gl-matrix';\n\nimport { ContourAnnotation } from '../../types/ToolSpecificAnnotationTypes';\n\nconst { isEqual } = csUtils;\n\n/**\n * Finds the index in the polyline of the specified handle.  If the handle\n * doesn't match a polyline point, then finds the closest polyline point.\n *\n * Assumes polyline is in the same orientation as the handles.\n *\n * @param annotation - to find the polyline and handles in\n * @param handleIndex - the index of hte handle to look for.\n *     Negative values are treated relative to the end of the handle index.\n * @returns Index in polyline of the closest handle\n *     * 0 for handleIndex 0\n *     * length for `handleIndex===handles length`\n */\nexport default function findHandlePolylineIndex(\n  annotation: ContourAnnotation,\n  handleIndex: number\n): number {\n  const { polyline } = annotation.data.contour;\n  const { points } = annotation.data.handles;\n  const { length } = points;\n  if (handleIndex === length) {\n    return polyline.length;\n  }\n  if (handleIndex < 0) {\n    handleIndex = (handleIndex + length) % length;\n  }\n  if (handleIndex === 0) {\n    return 0;\n  }\n  const handle = points[handleIndex];\n  const index = polyline.findIndex((point) => isEqual(handle, point));\n  if (index !== -1) {\n    return index;\n  }\n  // Need to find nearest\n  let closestDistance = Infinity;\n  return polyline.reduce((closestIndex, point, testIndex) => {\n    const distance = vec3.squaredDistance(point, handle);\n    if (distance < closestDistance) {\n      closestDistance = distance;\n      return testIndex;\n    }\n    return closestIndex;\n  }, -1);\n}\n","import { cache as cornerstoneCache } from '@cornerstonejs/core';\nimport vtkImageMarchingSquares from '@kitware/vtk.js/Filters/General/ImageMarchingSquares';\nimport vtkDataArray from '@kitware/vtk.js/Common/Core/DataArray';\nimport vtkImageData from '@kitware/vtk.js/Common/DataModel/ImageData';\n\nimport { getDeduplicatedVTKPolyDataPoints } from '../contours';\nimport { findContoursFromReducedSet } from './contourFinder';\nimport SegmentationRepresentations from '../../enums/SegmentationRepresentations';\n\nconst { Labelmap } = SegmentationRepresentations;\n\nfunction generateContourSetsFromLabelmap({ segmentations }) {\n  const { representationData, segments = [0, 1] } = segmentations;\n  const { volumeId: segVolumeId } = representationData[Labelmap];\n\n  // Get segmentation volume\n  const vol = cornerstoneCache.getVolume(segVolumeId);\n  if (!vol) {\n    console.warn(`No volume found for ${segVolumeId}`);\n    return;\n  }\n\n  const numSlices = vol.dimensions[2];\n\n  // NOTE: Workaround for marching squares not finding closed contours at\n  // boundary of image volume, clear pixels along x-y border of volume\n  const segData = vol.imageData.getPointData().getScalars().getData();\n  const pixelsPerSlice = vol.dimensions[0] * vol.dimensions[1];\n\n  for (let z = 0; z < numSlices; z++) {\n    for (let y = 0; y < vol.dimensions[1]; y++) {\n      const index = y * vol.dimensions[0] + z * pixelsPerSlice;\n      segData[index] = 0;\n      segData[index + vol.dimensions[0] - 1] = 0;\n    }\n  }\n\n  // end workaround\n  //\n  //\n  const ContourSets = [];\n\n  const { FrameOfReferenceUID } = vol.metadata;\n  // Iterate through all segments in current segmentation set\n  const numSegments = segments.length;\n  for (let segIndex = 0; segIndex < numSegments; segIndex++) {\n    const segment = segments[segIndex];\n\n    // Skip empty segments\n    if (!segment) {\n      continue;\n    }\n\n    const sliceContours = [];\n    const scalars = vtkDataArray.newInstance({\n      name: 'Scalars',\n      numberOfComponents: 1,\n      size: pixelsPerSlice * numSlices,\n      dataType: 'Uint8Array',\n    });\n    const { containedSegmentIndices } = segment;\n    for (let sliceIndex = 0; sliceIndex < numSlices; sliceIndex++) {\n      // Check if the slice is empty before running marching cube\n      if (\n        isSliceEmptyForSegment(sliceIndex, segData, pixelsPerSlice, segIndex)\n      ) {\n        continue;\n      }\n      const frameStart = sliceIndex * pixelsPerSlice;\n\n      try {\n        // Modify segData for this specific segment directly\n        for (let i = 0; i < pixelsPerSlice; i++) {\n          const value = segData[i + frameStart];\n          if (value === segIndex || containedSegmentIndices?.has(value)) {\n            (scalars as any).setValue(i + frameStart, 1);\n          } else {\n            (scalars as any).setValue(i, 0);\n          }\n        }\n\n        const mSquares = vtkImageMarchingSquares.newInstance({\n          slice: sliceIndex,\n        });\n\n        // filter out the scalar data so that only it has background and\n        // the current segment index\n        const imageDataCopy = vtkImageData.newInstance();\n\n        imageDataCopy.shallowCopy(vol.imageData);\n        imageDataCopy.getPointData().setScalars(scalars);\n\n        // Connect pipeline\n        mSquares.setInputData(imageDataCopy);\n        const cValues = [1];\n        mSquares.setContourValues(cValues);\n        mSquares.setMergePoints(false);\n\n        // Perform marching squares\n        const msOutput = mSquares.getOutputData();\n\n        // Clean up output from marching squares\n        const reducedSet = getDeduplicatedVTKPolyDataPoints(msOutput);\n        if (reducedSet.points?.length) {\n          const contours = findContoursFromReducedSet(reducedSet.lines);\n\n          sliceContours.push({\n            contours,\n            polyData: reducedSet,\n            FrameNumber: sliceIndex + 1,\n            sliceIndex,\n            FrameOfReferenceUID,\n          });\n        }\n      } catch (e) {\n        console.warn(sliceIndex);\n        console.warn(e);\n      }\n    }\n\n    const metadata = {\n      FrameOfReferenceUID,\n    };\n\n    const ContourSet = {\n      label: segment.label,\n      color: segment.color,\n      metadata,\n      sliceContours,\n    };\n\n    ContourSets.push(ContourSet);\n  }\n\n  return ContourSets;\n}\n\nfunction isSliceEmptyForSegment(sliceIndex, segData, pixelsPerSlice, segIndex) {\n  const startIdx = sliceIndex * pixelsPerSlice;\n  const endIdx = startIdx + pixelsPerSlice;\n\n  for (let i = startIdx; i < endIdx; i++) {\n    if (segData[i] === segIndex) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport { generateContourSetsFromLabelmap };\n","import RectangleROIStartEndThreshold from './RectangleROIStartEndThreshold';\n\nfunction validateAnnotation(annotation) {\n  if (!annotation?.data) {\n    throw new Error('Tool data is empty');\n  }\n\n  if (!annotation.metadata || annotation.metadata.referenceImageId) {\n    throw new Error('Tool data is not associated with any imageId');\n  }\n}\n\nclass AnnotationToPointData {\n  static TOOL_NAMES: Record<string, any> = {};\n\n  constructor() {\n    // empty\n  }\n\n  static convert(annotation, index, metadataProvider) {\n    validateAnnotation(annotation);\n\n    const { toolName } = annotation.metadata;\n    const toolClass = AnnotationToPointData.TOOL_NAMES[toolName];\n\n    if (!toolClass) {\n      throw new Error(\n        `Unknown tool type: ${toolName}, cannot convert to RTSSReport`\n      );\n    }\n\n    // Each toolData should become a list of contours, ContourSequence\n    // contains a list of contours with their pointData, their geometry\n    // type and their length.\n    const ContourSequence = toolClass.getContourSequence(\n      annotation,\n      metadataProvider\n    );\n\n    // Todo: random rgb color for now, options should be passed in\n    const color = [\n      Math.floor(Math.random() * 255),\n      Math.floor(Math.random() * 255),\n      Math.floor(Math.random() * 255),\n    ];\n\n    return {\n      ReferencedROINumber: index + 1,\n      ROIDisplayColor: color,\n      ContourSequence,\n    };\n  }\n\n  static register(toolClass) {\n    AnnotationToPointData.TOOL_NAMES[toolClass.toolName] = toolClass;\n  }\n}\n\nAnnotationToPointData.register(RectangleROIStartEndThreshold);\n\nexport default AnnotationToPointData;\n","import type { Types } from '@cornerstonejs/core';\nimport type { Annotation } from '../../types';\nimport getContourHolesDataWorld from './getContourHolesDataWorld';\n\n/**\n * Get the polylines for the child annotations (holes)\n * @param annotation - Annotation\n * @param viewport - Viewport used to convert the points from world to canvas space\n * @returns An array that contains all child polylines\n */\nexport default function getContourHolesDataCanvas(\n  annotation: Annotation,\n  viewport: Types.IViewport\n): Types.Point2[][] {\n  const worldHoleContours = getContourHolesDataWorld(annotation);\n  const canvasHoleContours = [];\n\n  worldHoleContours.forEach((worldHoleContour) => {\n    const numPoints = worldHoleContour.length;\n\n    // Pre-allocated arrays are 3-4x faster than multiple \"push()\" calls\n    const canvasHoleContour: Types.Point2[] = new Array(numPoints);\n\n    // Using FOR loop instead of map() for better performance when processing large arrays\n    for (let i = 0; i < numPoints; i++) {\n      canvasHoleContour[i] = viewport.worldToCanvas(worldHoleContour[i]);\n    }\n\n    canvasHoleContours.push(canvasHoleContour);\n  });\n\n  return canvasHoleContours;\n}\n","import type { Types } from '@cornerstonejs/core';\nimport type { Annotation, ContourAnnotation } from '../../types';\nimport { getAnnotation } from '../../stateManagement';\n\n/**\n * Get child polylines data in world space for contour annotations that represent the holes\n * @param annotation - Annotation\n * @param viewport - Viewport used to convert the points from world to canvas space\n * @returns An array that contains all child polylines (holes) in world space\n */\nexport default function getContourHolesDataWorld(\n  annotation: Annotation\n): Types.Point3[][] {\n  const childAnnotationUIDs = annotation.childAnnotationUIDs ?? [];\n\n  return childAnnotationUIDs.map(\n    (uid) => (getAnnotation(uid) as ContourAnnotation).data.contour.polyline\n  );\n}\n","import { utilities as csUtils } from '@cornerstonejs/core';\nimport { Types } from '@cornerstonejs/core';\nimport type { ContourAnnotation } from '../../types';\nimport type { ContourWindingDirection } from '../../types/ContourAnnotation';\nimport * as math from '../math';\nimport {\n  getParentAnnotation,\n  invalidateAnnotation,\n} from '../../stateManagement';\n\n/**\n * Update the contour polyline data\n * @param annotation - Contour annotation\n * @param viewport - Viewport\n * @param polylineData - Polyline data (points, winding direction and closed)\n * @param transforms - Methods to convert points to/from canvas and world spaces\n * @param options - Options\n *   - decimate: allow to set some parameters to decimate the polyline reducing\n *   the amount of points stored which also affects how fast it will draw the\n *   annotation in a viewport, compute the winding direction, append/remove\n *   contours and create holes. A higher `epsilon` value results in a polyline\n *   with less points.\n */\nexport default function updateContourPolyline(\n  annotation: ContourAnnotation,\n  polylineData: {\n    points: Types.Point2[];\n    closed?: boolean;\n    targetWindingDirection?: ContourWindingDirection;\n  },\n  transforms: {\n    canvasToWorld: (point: Types.Point2) => Types.Point3;\n    worldToCanvas: (point: Types.Point3) => Types.Point2;\n  },\n  options?: {\n    decimate?: {\n      enabled?: boolean;\n      epsilon?: number;\n    };\n  }\n) {\n  const { canvasToWorld, worldToCanvas } = transforms;\n  const { data } = annotation;\n  const { targetWindingDirection } = polylineData;\n  let { points: polyline } = polylineData;\n\n  // Decimate the polyline to reduce tha amount of points\n  if (options?.decimate?.enabled) {\n    polyline = math.polyline.decimate(\n      polylineData.points,\n      options?.decimate?.epsilon\n    );\n  }\n\n  let { closed } = polylineData;\n  const numPoints = polyline.length;\n  const polylineWorldPoints = new Array(numPoints);\n  const currentPolylineWindingDirection =\n    math.polyline.getWindingDirection(polyline);\n  const parentAnnotation = getParentAnnotation(annotation) as ContourAnnotation;\n\n  if (closed === undefined) {\n    let currentClosedState = false;\n\n    // With two points it is just a line and do not make sense to consider it closed\n    if (polyline.length > 3) {\n      const lastToFirstDist = math.point.distanceToPointSquared(\n        polyline[0],\n        polyline[numPoints - 1]\n      );\n\n      currentClosedState = csUtils.isEqual(0, lastToFirstDist);\n    }\n\n    closed = currentClosedState;\n  }\n\n  // It must be in the opposite direction if it is a child annotation (hole)\n  let windingDirection = parentAnnotation\n    ? parentAnnotation.data.contour.windingDirection * -1\n    : targetWindingDirection;\n\n  if (windingDirection === undefined) {\n    windingDirection = currentPolylineWindingDirection;\n  }\n\n  if (windingDirection !== currentPolylineWindingDirection) {\n    polyline.reverse();\n  }\n\n  const handlePoints = data.handles.points.map((p) => worldToCanvas(p));\n\n  if (handlePoints.length > 2) {\n    const currentHandlesWindingDirection =\n      math.polyline.getWindingDirection(handlePoints);\n\n    if (currentHandlesWindingDirection !== windingDirection) {\n      data.handles.points.reverse();\n    }\n  }\n\n  for (let i = 0; i < numPoints; i++) {\n    polylineWorldPoints[i] = canvasToWorld(polyline[i]);\n  }\n\n  data.contour.polyline = polylineWorldPoints;\n  data.contour.closed = closed;\n  data.contour.windingDirection = windingDirection;\n\n  invalidateAnnotation(annotation);\n}\n","import isObject from './isObject';\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked, or until the next browser frame is drawn. The debounced function\n * comes with a `cancel` method to cancel delayed `func` invocations and a\n * `flush` method to immediately invoke them. Provide `options` to indicate\n * whether `func` should be invoked on the leading and/or trailing edge of the\n * `wait` timeout. The `func` is invoked with the last arguments provided to the\n * debounced function. Subsequent calls to the debounced function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * If `wait` is omitted in an environment with `requestAnimationFrame`, `func`\n * invocation will be deferred until the next frame is drawn (typically about\n * 16ms).\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `debounce` and `throttle`.\n *\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0]\n *  The number of milliseconds to delay; if omitted, `requestAnimationFrame` is\n *  used (if available).\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', debounce(calculateLayout, 150))\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }))\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * const debounced = debounce(batchLog, 250, { 'maxWait': 1000 })\n * const source = new EventSource('/stream')\n * jQuery(source).on('message', debounced)\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel)\n *\n * // Check for pending invocations.\n * const status = debounced.pending() ? \"Pending...\" : \"Ready\"\n */\nfunction debounce(func, wait, options) {\n  let lastArgs, lastThis, maxWait, result, timerId, lastCallTime;\n\n  let lastInvokeTime = 0;\n  let leading = false;\n  let maxing = false;\n  let trailing = true;\n\n  // Bypass `requestAnimationFrame` by explicitly setting `wait=0`.\n  const useRAF =\n    !wait && wait !== 0 && typeof window.requestAnimationFrame === 'function';\n\n  if (typeof func !== 'function') {\n    throw new TypeError('Expected a function');\n  }\n  wait = Number(wait) || 0;\n  if (isObject(options)) {\n    leading = Boolean(options.leading);\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? Math.max(Number(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? Boolean(options.trailing) : trailing;\n  }\n\n  function invokeFunc(time) {\n    const args = lastArgs;\n    const thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n\n    return result;\n  }\n\n  function startTimer(pendingFunc, wait) {\n    if (useRAF) {\n      return window.requestAnimationFrame(pendingFunc);\n    }\n\n    return setTimeout(pendingFunc, wait);\n  }\n\n  function cancelTimer(id) {\n    if (useRAF) {\n      return window.cancelAnimationFrame(id);\n    }\n    clearTimeout(id);\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = startTimer(timerExpired, wait);\n\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    const timeSinceLastCall = time - lastCallTime;\n    const timeSinceLastInvoke = time - lastInvokeTime;\n    const timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? Math.min(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    const timeSinceLastCall = time - lastCallTime;\n    const timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (\n      lastCallTime === undefined ||\n      timeSinceLastCall >= wait ||\n      timeSinceLastCall < 0 ||\n      (maxing && timeSinceLastInvoke >= maxWait)\n    );\n  }\n\n  function timerExpired() {\n    const time = Date.now();\n\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = startTimer(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      cancelTimer(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(Date.now());\n  }\n\n  function pending() {\n    return timerId !== undefined;\n  }\n\n  function debounced(...args) {\n    const time = Date.now();\n    const isInvoking = shouldInvoke(time);\n\n    lastArgs = args;\n    lastThis = this; // eslint-disable-line consistent-this\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = startTimer(timerExpired, wait);\n\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = startTimer(timerExpired, wait);\n    }\n\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  debounced.pending = pending;\n\n  return debounced;\n}\n\nexport default debounce;\n","import type { Types } from '@cornerstonejs/core';\n\n/**\n * Determine the coordinates that will place the textbox to the right of the\n * annotation.\n *\n * @param annotationCanvasPoints - The canvas points of the annotation's handles.\n * @returns - The coordinates for default placement of the textbox.\n */\nexport default function getTextBoxCoordsCanvas(\n  annotationCanvasPoints: Array<Types.Point2>\n): Types.Point2 {\n  const corners = _determineCorners(annotationCanvasPoints);\n  const centerY = (corners.top[1] + corners.bottom[1]) / 2;\n  const textBoxCanvas = <Types.Point2>[corners.right[0], centerY];\n\n  return textBoxCanvas;\n}\n\n/**\n * Determine the handles that have the min/max x and y values.\n *\n * @param canvasPoints - The canvas points of the annotation's handles.\n * @returns - The top, left, bottom, and right handles.\n */\nfunction _determineCorners(canvasPoints: Array<Types.Point2>) {\n  const handlesLeftToRight = [canvasPoints[0], canvasPoints[1]].sort(_compareX);\n  const handlesTopToBottom = [canvasPoints[0], canvasPoints[1]].sort(_compareY);\n  const right = handlesLeftToRight[handlesLeftToRight.length - 1];\n  const top = handlesTopToBottom[0];\n  const bottom = handlesTopToBottom[handlesTopToBottom.length - 1];\n\n  return {\n    top,\n    bottom,\n    right,\n  };\n\n  function _compareX(a, b) {\n    return a[0] < b[0] ? -1 : 1;\n  }\n  function _compareY(a, b) {\n    return a[1] < b[1] ? -1 : 1;\n  }\n}\n","import { Enums, utilities } from '@cornerstonejs/core';\n\nconst { CalibrationTypes } = Enums;\nconst PIXEL_UNITS = 'px';\n\nconst SUPPORTED_REGION_DATA_TYPES = [\n  1, // Tissue\n];\n\nconst SUPPORTED_LENGTH_VARIANT = [\n  '3,3', // x: cm  &  y:cm\n];\n\nconst SUPPORTED_PROBE_VARIANT = [\n  '4,3', // x: seconds  &  y : cm\n];\n\nconst UNIT_MAPPING = {\n  3: 'cm',\n  4: 'seconds',\n};\n\nconst EPS = 1e-3;\nconst SQUARE = '\\xb2';\n/**\n * Extracts the calibrated length units, area units, and the scale\n * for converting from internal spacing to image spacing.\n *\n * @param handles - to detect if spacing information is different between points\n * @param image - to extract the calibration from\n * @returns Object containing the units, area units, and scale\n */\nconst getCalibratedLengthUnitsAndScale = (image, handles) => {\n  const { calibration, hasPixelSpacing } = image;\n  let units = hasPixelSpacing ? 'mm' : PIXEL_UNITS;\n  let areaUnits = units + SQUARE;\n  let scale = 1;\n  let calibrationType = '';\n\n  if (\n    !calibration ||\n    (!calibration.type && !calibration.sequenceOfUltrasoundRegions)\n  ) {\n    return { units, areaUnits, scale };\n  }\n\n  if (calibration.type === CalibrationTypes.UNCALIBRATED) {\n    return { units: PIXEL_UNITS, areaUnits: PIXEL_UNITS + SQUARE, scale };\n  }\n\n  if (calibration.sequenceOfUltrasoundRegions) {\n    let imageIndex1, imageIndex2;\n    if (Array.isArray(handles) && handles.length === 2) {\n      [imageIndex1, imageIndex2] = handles;\n    } else if (typeof handles === 'function') {\n      const points = handles();\n      imageIndex1 = points[0];\n      imageIndex2 = points[1];\n    }\n\n    let regions = calibration.sequenceOfUltrasoundRegions.filter(\n      (region) =>\n        imageIndex1[0] >= region.regionLocationMinX0 &&\n        imageIndex1[0] <= region.regionLocationMaxX1 &&\n        imageIndex1[1] >= region.regionLocationMinY0 &&\n        imageIndex1[1] <= region.regionLocationMaxY1 &&\n        imageIndex2[0] >= region.regionLocationMinX0 &&\n        imageIndex2[0] <= region.regionLocationMaxX1 &&\n        imageIndex2[1] >= region.regionLocationMinY0 &&\n        imageIndex2[1] <= region.regionLocationMaxY1\n    );\n\n    // If we are not in a region at all we should show the underlying calibration\n    // which might be the mm spacing for the image\n    if (!regions?.length) {\n      return { units, areaUnits, scale };\n    }\n\n    // if we are in a region then it is the question of whether we support it\n    // or not. If we do not support it we should show px\n\n    regions = regions.filter(\n      (region) =>\n        SUPPORTED_REGION_DATA_TYPES.includes(region.regionDataType) &&\n        SUPPORTED_LENGTH_VARIANT.includes(\n          `${region.physicalUnitsXDirection},${region.physicalUnitsYDirection}`\n        )\n    );\n\n    if (!regions.length) {\n      return { units: PIXEL_UNITS, areaUnits: PIXEL_UNITS + SQUARE, scale };\n    }\n\n    // Todo: expand on this logic\n    const region = regions[0];\n\n    const physicalDeltaX = Math.abs(region.physicalDeltaX);\n    const physicalDeltaY = Math.abs(region.physicalDeltaY);\n\n    // if we are in a supported region then we should check if the\n    // physicalDeltaX and physicalDeltaY are the same. If they are not\n    // then we should show px again, but if they are the same then we should\n    // show the units\n    const isSamePhysicalDelta = utilities.isEqual(\n      physicalDeltaX,\n      physicalDeltaY,\n      EPS\n    );\n\n    if (isSamePhysicalDelta) {\n      // 1 to 1 aspect ratio, we use just one of them\n      scale = 1 / (physicalDeltaX * 10);\n      calibrationType = 'US Region';\n      units = 'mm';\n      areaUnits = 'mm' + SQUARE;\n    } else {\n      // here we are showing at the aspect ratio of the physical delta\n      // if they are not the same, then we should show px, but the correct solution\n      // is to grab each point separately and scale them individually\n      // Todo: implement this\n      return { units: PIXEL_UNITS, areaUnits: PIXEL_UNITS + SQUARE, scale };\n    }\n  } else if (calibration.scale) {\n    scale = calibration.scale;\n  }\n\n  // everything except REGION/Uncalibrated\n  const types = [\n    CalibrationTypes.ERMF,\n    CalibrationTypes.USER,\n    CalibrationTypes.ERROR,\n    CalibrationTypes.PROJECTION,\n  ];\n\n  if (types.includes(calibration?.type)) {\n    calibrationType = calibration.type;\n  }\n\n  return {\n    units: units + (calibrationType ? ` ${calibrationType}` : ''),\n    areaUnits: areaUnits + (calibrationType ? ` ${calibrationType}` : ''),\n    scale,\n  };\n};\n\nconst getCalibratedProbeUnitsAndValue = (image, handles) => {\n  const [imageIndex] = handles;\n  const { calibration } = image;\n  let units = ['raw'];\n  let values = [null];\n  let calibrationType = '';\n\n  if (\n    !calibration ||\n    (!calibration.type && !calibration.sequenceOfUltrasoundRegions)\n  ) {\n    return { units, values };\n    // Todo: add support for other scenarios\n  }\n\n  if (calibration.sequenceOfUltrasoundRegions) {\n    // for Probe tool\n    const supportedRegionsMetadata =\n      calibration.sequenceOfUltrasoundRegions.filter(\n        (region) =>\n          SUPPORTED_REGION_DATA_TYPES.includes(region.regionDataType) &&\n          SUPPORTED_PROBE_VARIANT.includes(\n            `${region.physicalUnitsXDirection},${region.physicalUnitsYDirection}`\n          )\n      );\n\n    if (!supportedRegionsMetadata?.length) {\n      return { units, values };\n    }\n\n    const region = supportedRegionsMetadata.find(\n      (region) =>\n        imageIndex[0] >= region.regionLocationMinX0 &&\n        imageIndex[0] <= region.regionLocationMaxX1 &&\n        imageIndex[1] >= region.regionLocationMinY0 &&\n        imageIndex[1] <= region.regionLocationMaxY1\n    );\n\n    if (!region) {\n      return { units, values };\n    }\n\n    // Todo: I think this is a ok assumption for now that if the referencePixelX0 and referencePixelY0\n    // are not defined, then we can assume 0 for them\n    const { referencePixelX0 = 0, referencePixelY0 = 0 } = region;\n    const { physicalDeltaX, physicalDeltaY } = region;\n\n    const yValue =\n      (imageIndex[1] - region.regionLocationMinY0 - referencePixelY0) *\n      physicalDeltaY;\n\n    const xValue =\n      (imageIndex[0] - region.regionLocationMinX0 - referencePixelX0) *\n      physicalDeltaX;\n\n    calibrationType = 'US Region';\n    values = [xValue, yValue];\n    units = [\n      UNIT_MAPPING[region.physicalUnitsXDirection],\n      UNIT_MAPPING[region.physicalUnitsYDirection],\n    ];\n  }\n\n  return {\n    units,\n    values,\n    calibrationType,\n  };\n};\n\n/** Gets the aspect ratio of the screen display relative to the image\n * display in order to square up measurement values.\n * That is, suppose the spacing on the image is 1, 0.5 (x,y spacing)\n * This is displayed at 1, 1 spacing on screen, then the\n * aspect value will be 1/0.5 = 2\n */\nconst getCalibratedAspect = (image) => image.calibration?.aspect || 1;\n\nexport {\n  getCalibratedLengthUnitsAndScale,\n  getCalibratedAspect,\n  getCalibratedProbeUnitsAndValue,\n};\n","import { utilities as csUtils } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport type { vtkImageData } from '@kitware/vtk.js/Common/DataModel/ImageData';\nimport { vec3 } from 'gl-matrix';\nimport { BoundsIJK } from '../types';\nimport { getBoundingBoxAroundShapeIJK } from './boundingBox';\n\nconst { transformWorldToIndex } = csUtils;\n\n/**\n * Given an imageData, and the great circle top and bottom points of a sphere,\n * this function will run the callback for each point of the imageData that is\n * within the sphere defined by the great circle points. If the viewport\n * is provided, region of interest will be an accurate approximation of the\n * sphere (using viewport camera), and the resulting performance will be\n * better.\n *\n * @privateRemarks great circle also known as orthodrome is the intersection of\n * the sphere and the plane that passes through the center of the sphere\n *\n * @param imageData - The volume imageData\n * @param circlePoints - bottom and top points of the great circle in world coordinates\n * @param callback - A callback function that will be called for each point in the shape.\n */\nfunction getSphereBoundsInfo(\n  circlePoints: [Types.Point3, Types.Point3],\n  imageData: vtkImageData,\n  viewport\n): {\n  boundsIJK: BoundsIJK;\n  centerWorld: Types.Point3;\n  radiusWorld: number;\n  topLeftWorld: Types.Point3;\n  bottomRightWorld: Types.Point3;\n} {\n  const [bottom, top] = circlePoints;\n\n  // Sphere center in world\n  const centerWorld = vec3.fromValues(\n    (bottom[0] + top[0]) / 2,\n    (bottom[1] + top[1]) / 2,\n    (bottom[2] + top[2]) / 2\n  );\n\n  // sphere radius in world\n  const radiusWorld = vec3.distance(bottom, top) / 2;\n\n  if (!viewport) {\n    throw new Error(\n      'viewport is required in order to calculate the sphere bounds'\n    );\n  }\n\n  const { boundsIJK, topLeftWorld, bottomRightWorld } =\n    _computeBoundsIJKWithCamera(\n      imageData,\n      viewport,\n      circlePoints,\n      centerWorld,\n      radiusWorld\n    );\n\n  return {\n    boundsIJK,\n    centerWorld: centerWorld as Types.Point3,\n    radiusWorld,\n    topLeftWorld: topLeftWorld as Types.Point3,\n    bottomRightWorld: bottomRightWorld as Types.Point3,\n  };\n}\n\nfunction _computeBoundsIJKWithCamera(\n  imageData,\n  viewport,\n  circlePoints,\n  centerWorld,\n  radiusWorld\n) {\n  const [bottom, top] = circlePoints;\n\n  const dimensions = imageData.getDimensions() as Types.Point3;\n\n  const camera = viewport.getCamera();\n\n  // Calculate viewRight from the camera, this will get used in order to\n  // calculate circles topLeft and bottomRight on different planes of intersection\n  // between sphere and viewPlane\n  const viewUp = vec3.fromValues(\n    camera.viewUp[0],\n    camera.viewUp[1],\n    camera.viewUp[2]\n  );\n  const viewPlaneNormal = vec3.fromValues(\n    camera.viewPlaneNormal[0],\n    camera.viewPlaneNormal[1],\n    camera.viewPlaneNormal[2]\n  );\n  const viewRight = vec3.create();\n\n  vec3.cross(viewRight, viewUp, viewPlaneNormal);\n\n  // we need to find the bounding box of the sphere in the image, e.g., the\n  // topLeftWorld and bottomRightWorld points of the bounding box.\n  // We go from the sphereCenter in the normal direction of amount radius, and\n  // we go left to find the topLeftWorld point of the bounding box. Next we go\n  // in the opposite direction and go right to find the bottomRightWorld point\n  // of the bounding box.\n  const topLeftWorld = vec3.create();\n  const bottomRightWorld = vec3.create();\n\n  vec3.scaleAndAdd(topLeftWorld, top, viewPlaneNormal, radiusWorld);\n  vec3.scaleAndAdd(bottomRightWorld, bottom, viewPlaneNormal, -radiusWorld);\n\n  // go in the direction of viewRight with the value of radius\n  vec3.scaleAndAdd(topLeftWorld, topLeftWorld, viewRight, -radiusWorld);\n  vec3.scaleAndAdd(bottomRightWorld, bottomRightWorld, viewRight, radiusWorld);\n\n  // In order to correctly come up with the boundsIJK, we need to consider\n  // all the points IJK to get the bounds, since the viewport might have\n  // rotate views and we cannot guarantee that the topLeft and bottomRight in the\n  // world, are the ones that will define the bounds in IJK\n  const topLeftIJK = transformWorldToIndex(\n    imageData,\n    topLeftWorld as Types.Point3\n  );\n  const bottomRightIJK = transformWorldToIndex(\n    imageData,\n    bottomRightWorld as Types.Point3\n  );\n\n  const pointsIJK = circlePoints.map((p) =>\n    transformWorldToIndex(imageData, p)\n  );\n\n  // get the bounding box of the sphere in the image\n  const boundsIJK = getBoundingBoxAroundShapeIJK(\n    [topLeftIJK, bottomRightIJK, ...pointsIJK],\n    dimensions\n  );\n\n  return { boundsIJK, topLeftWorld, bottomRightWorld };\n}\n\nexport { getSphereBoundsInfo };\n","import type { Annotation } from '../types';\nimport type { Types } from '@cornerstonejs/core';\nimport getViewportsForAnnotation from './getViewportsForAnnotation';\n\n/**\n * Finds a matching viewport in terms of the orientation of the annotation data\n * and the frame of reference.  This doesn't mean the annotation IS being displayed\n * in the viewport, just that it could be by navigating the slice, and/or pan/zoom,\n * without changing the orientation.\n *\n * @param annotation - to find a viewport that it could display in\n * @returns The viewport to display in\n */\nexport default function getViewportForAnnotation(\n  annotation: Annotation\n): Types.IStackViewport | Types.IVolumeViewport | undefined {\n  const viewports = getViewportsForAnnotation(annotation);\n\n  return viewports.length ? viewports[0] : undefined;\n}\n","import { utilities } from '@cornerstonejs/core';\n\nimport {\n  getAnnotationNearPoint,\n  getAnnotationNearPointOnEnabledElement,\n} from './getAnnotationNearPoint';\n\n// Lodash/common JS functionality\nimport debounce from './debounce';\nimport throttle from './throttle';\nimport isObject from './isObject';\nimport clip from './clip';\nimport calibrateImageSpacing from './calibrateImageSpacing';\nimport {\n  getCalibratedLengthUnitsAndScale,\n  getCalibratedProbeUnitsAndValue,\n  getCalibratedAspect,\n} from './getCalibratedUnits';\nimport triggerAnnotationRenderForViewportIds from './triggerAnnotationRenderForViewportIds';\nimport triggerAnnotationRenderForToolGroupIds from './triggerAnnotationRenderForToolGroupIds';\nimport triggerAnnotationRender from './triggerAnnotationRender';\nimport jumpToSlice from './viewport/jumpToSlice';\n\nimport pointInShapeCallback from './pointInShapeCallback';\nimport { getSphereBoundsInfo } from './getSphereBoundsInfo';\nimport scroll from './scroll';\nimport { pointToString } from './pointToString';\nimport annotationFrameRange from './annotationFrameRange';\nimport pointInSurroundingSphereCallback from './pointInSurroundingSphereCallback';\nimport getViewportForAnnotation from './getViewportForAnnotation';\nimport {\n  annotationHydration,\n  getClosestImageIdForStackViewport,\n} from './annotationHydration';\n// name spaces\nimport * as contours from './contours';\nimport * as segmentation from './segmentation';\nimport * as drawing from './drawing';\nimport * as math from './math';\nimport * as planar from './planar';\nimport * as viewportFilters from './viewportFilters';\nimport * as orientation from './orientation';\nimport * as cine from './cine';\nimport * as boundingBox from './boundingBox';\nimport * as planarFreehandROITool from './planarFreehandROITool';\nimport * as rectangleROITool from './rectangleROITool';\nimport { stackPrefetch, stackContextPrefetch } from './stackPrefetch';\nimport * as viewport from './viewport';\nimport * as touch from './touch';\nimport * as dynamicVolume from './dynamicVolume';\nimport * as polyDataUtils from './polyData/utils';\nimport * as voi from './voi';\nimport * as contourSegmentation from './contourSegmentation';\n\nconst roundNumber = utilities.roundNumber;\n\n// Events\nimport { triggerEvent } from '@cornerstonejs/core';\n\nexport {\n  math,\n  planar,\n  viewportFilters,\n  drawing,\n  debounce,\n  dynamicVolume,\n  throttle,\n  orientation,\n  isObject,\n  touch,\n  triggerEvent,\n  calibrateImageSpacing,\n  getCalibratedLengthUnitsAndScale,\n  getCalibratedProbeUnitsAndValue,\n  getCalibratedAspect,\n  segmentation,\n  contours,\n  triggerAnnotationRenderForViewportIds,\n  triggerAnnotationRenderForToolGroupIds,\n  triggerAnnotationRender,\n  pointInShapeCallback,\n  getSphereBoundsInfo,\n  getAnnotationNearPoint,\n  getViewportForAnnotation,\n  getAnnotationNearPointOnEnabledElement,\n  jumpToSlice,\n  pointInSurroundingSphereCallback,\n  viewport,\n  cine,\n  clip,\n  boundingBox,\n  rectangleROITool,\n  planarFreehandROITool,\n  stackPrefetch,\n  stackContextPrefetch,\n  scroll,\n  roundNumber,\n  pointToString,\n  polyDataUtils,\n  voi,\n  annotationFrameRange,\n  contourSegmentation,\n  annotationHydration,\n  getClosestImageIdForStackViewport,\n};\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @since 0.1.0\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * isObject({})\n * // => true\n *\n * isObject([1, 2, 3])\n * // => true\n *\n * isObject(Function)\n * // => true\n *\n * isObject(null)\n * // => false\n */\nfunction isObject(value) {\n  const type = typeof value;\n\n  return value !== null && (type === 'object' || type === 'function');\n}\n\nexport default isObject;\n","import { Types } from '@cornerstonejs/core';\n\n/**\n * Check if two axis-aligned bounding boxes intersect\n * @param aabb1 - First AABB\n * @param aabb2 - Second AABB\n * @returns True if they intersect or false otherwise\n */\nexport default function intersectAABB(\n  aabb1: Types.AABB2,\n  aabb2: Types.AABB2\n): boolean {\n  return (\n    aabb1.minX <= aabb2.maxX &&\n    aabb1.maxX >= aabb2.minX &&\n    aabb1.minY <= aabb2.maxY &&\n    aabb1.maxY >= aabb2.minY\n  );\n}\n","import { Types } from '@cornerstonejs/core';\n\n/**\n * Calculates the distance of a point to an AABB using 2D Box SDF (Signed Distance Field)\n *\n * The SDF of a Box\n * https://www.youtube.com/watch?v=62-pRVZuS5c\n *\n * @param aabb - Axis-aligned bound box\n * @param point - 2D point\n * @returns The closest distance between the 2D point and the AABB\n */\nexport default function distanceToPointSquared(\n  aabb: Types.AABB2,\n  point: Types.Point2\n): number {\n  const aabbWidth = aabb.maxX - aabb.minX;\n  const aabbHeight = aabb.maxY - aabb.minY;\n  const aabbSize = [aabbWidth, aabbHeight];\n  const aabbCenter: Types.Point2 = [\n    aabb.minX + aabbWidth / 2,\n    aabb.minY + aabbHeight / 2,\n  ];\n\n  // Translates the point as the center of the AABB is the new origin.\n  // THe point is also mirroed to the first quadrant to simplify the math.\n  const translatedPoint = [\n    Math.abs(point[0] - aabbCenter[0]),\n    Math.abs(point[1] - aabbCenter[1]),\n  ];\n\n  // Calculate the distance from the point to the vertical and horizontal AABB borders\n  const dx = translatedPoint[0] - aabbSize[0] * 0.5;\n  const dy = translatedPoint[1] - aabbSize[1] * 0.5;\n\n  // dx >  0 && dy >  0: diagonal line connecting the point to AABB's corner\n  // dx >  0 && dy <= 0: a line parallel to x-axis connecting the point to AABB's right side\n  // dx <= 0 && dy >  0: a line parallel to y-axis connecting the point to AABB's top side\n  // dx <= 0 && dy <= 0: the point is inside the AABB\n  if (dx > 0 && dy > 0) {\n    return dx * dx + dy * dy;\n  }\n\n  const dist = Math.max(dx, 0) + Math.max(dy, 0);\n\n  return dist * dist;\n}\n","import { Types } from '@cornerstonejs/core';\nimport distanceToPointSquared from './distanceToPointSquared';\n\n/**\n * Calculates the squared distance of a point to an AABB using\n * 2D Box SDF (Signed Distance Field)\n *\n * The SDF of a Box\n * https://www.youtube.com/watch?v=62-pRVZuS5c\n *\n * @param aabb - Axis-aligned bound box (minX, minY, maxX and maxY)\n * @param point - 2D point\n * @returns The squared distance between the 2D point and the AABB\n */\nexport default function distanceToPoint(\n  aabb: Types.AABB2,\n  point: Types.Point2\n): number {\n  return Math.sqrt(distanceToPointSquared(aabb, point));\n}\n","import { NamedStatistics } from '../../../types';\n\nabstract class Calculator {\n  static run: ({ value }) => void;\n  /**\n   * Gets the statistics as both an array of values, as well as the named values.\n   */\n  static getStatistics: () => NamedStatistics;\n}\n\nexport default Calculator;\n","import { utilities } from '@cornerstonejs/core';\nimport { NamedStatistics } from '../../../types';\nimport Calculator from './Calculator';\n\nconst { PointsManager } = utilities;\n\nexport default class BasicStatsCalculator extends Calculator {\n  private static max = [-Infinity];\n  private static min = [Infinity];\n  private static sum = [0];\n  private static count = 0;\n\n  // private static sumSquares = [0];\n  // Values for Welford's algorithm\n  private static runMean = [0];\n  private static m2 = [0];\n\n  // Collect the points to be returned\n  private static pointsInShape = PointsManager.create3(1024);\n\n  public static statsInit(options: { noPointsCollection: boolean }) {\n    if (options.noPointsCollection) {\n      BasicStatsCalculator.pointsInShape = null;\n    }\n  }\n\n  /**\n   * This callback is used when we verify if the point is in the annotation drawn\n   * so we can get every point in the shape to calculate the statistics\n   */\n  static statsCallback = ({ value: newValue, pointLPS = null }): void => {\n    if (\n      Array.isArray(newValue) &&\n      newValue.length > 1 &&\n      this.max.length === 1\n    ) {\n      this.max.push(this.max[0], this.max[0]);\n      this.min.push(this.min[0], this.min[0]);\n      this.sum.push(this.sum[0], this.sum[0]);\n      this.runMean.push(0, 0);\n      // this.sumSquares.push(this.sumSquares[0], this.sumSquares[0]);\n      this.m2.push(this.m2[0], this.m2[0]);\n    }\n\n    this.pointsInShape?.push(pointLPS);\n    const newArray = Array.isArray(newValue) ? newValue : [newValue];\n\n    this.count += 1;\n    this.max.map((it, idx) => {\n      const value = newArray[idx];\n\n      const delta = value - this.runMean[idx];\n      this.sum[idx] += value;\n      this.runMean[idx] += delta / this.count;\n      const delta2 = value - this.runMean[idx];\n      this.m2[idx] += delta * delta2;\n      // this.sumSquares[idx] += value * value;\n\n      this.min[idx] = Math.min(this.min[idx], value);\n      this.max[idx] = Math.max(it, value);\n    });\n  };\n\n  /**\n   * Basic function that calculates statistics for a given array of points.\n   * @returns An object that contains :\n   * max : The maximum value of the array\n   * mean : mean of the array\n   * stdDev : standard deviation of the array\n   * array : An array of hte above values, in order.\n   */\n\n  static getStatistics = (options?: { unit: string }): NamedStatistics => {\n    const mean = this.sum.map((sum) => sum / this.count);\n    const stdDev = this.m2.map((squaredDiffSum) =>\n      Math.sqrt(squaredDiffSum / this.count)\n    );\n    // const stdDevWithSumSquare = this.sumSquares.map((it, idx) =>\n    //   Math.sqrt(this.sumSquares[idx] / this.count - mean[idx] ** 2)\n    // );\n\n    const unit = options?.unit || null;\n\n    const named: NamedStatistics = {\n      max: {\n        name: 'max',\n        label: 'Max Pixel',\n        value: singleArrayAsNumber(this.max),\n        unit,\n      },\n      min: {\n        name: 'min',\n        label: 'Min Pixel',\n        value: singleArrayAsNumber(this.min),\n        unit,\n      },\n      mean: {\n        name: 'mean',\n        label: 'Mean Pixel',\n        value: singleArrayAsNumber(mean),\n        unit,\n      },\n      stdDev: {\n        name: 'stdDev',\n        label: 'Standard Deviation',\n        value: singleArrayAsNumber(stdDev),\n        unit,\n      },\n      // stdDevWithSumSquare: {\n      //   name: 'stdDevWithSumSquare',\n      //   value: singleArrayAsNumber(stdDevWithSumSquare),\n      //   unit,\n      // },\n      count: {\n        name: 'count',\n        label: 'Pixel Count',\n        value: this.count,\n        unit: null,\n      },\n      pointsInShape: this.pointsInShape,\n      array: [],\n    };\n    named.array.push(\n      named.max,\n      named.mean,\n      named.stdDev,\n      // Use the stdDev twice to preserve old ordering - this is updated to be\n      // correct value with Welford's algorithm now.\n      named.stdDev,\n      named.count\n    );\n\n    this.max = [-Infinity];\n    this.min = [Infinity];\n    this.sum = [0];\n    // this.sumSquares = [0];\n    this.m2 = [0];\n    this.runMean = [0];\n    this.count = 0;\n    this.pointsInShape = PointsManager.create3(1024);\n\n    return named;\n  };\n}\n\nfunction singleArrayAsNumber(val: number[]) {\n  return val.length === 1 ? val[0] : val;\n}\n","import type { Types } from '@cornerstonejs/core';\ninterface Inverts {\n  invXRadiusSq?: number;\n  invYRadiusSq?: number;\n  invZRadiusSq?: number;\n  fast?: boolean;\n  /**\n   * If you call the pointInEllipse.precalculateInverts first, then you\n   * can call precalculated directly instead of having the extra time for\n   * the if conditions.\n   */\n  precalculated?: (pointLPS: Types.Point3) => boolean;\n}\n\n/**\n * Given an ellipse and a point, return true if the point is inside the ellipse\n * @param ellipse - The ellipse object to check against.\n * @param pointLPS - The point in LPS space to test.\n * @param inverts - An object to cache the inverted radius squared values, if you\n * are testing multiple points against the same ellipse then it is recommended to\n * pass in the same object to cache the values. However, there is a simpler way\n * to do this by passing in the fast flag as true, then on the first iteration\n * the values will be cached and on subsequent iterations the cached values will\n * be used.\n *\n * @returns A boolean value.\n */\nexport default function pointInEllipse(\n  ellipse,\n  pointLPS,\n  inverts: Inverts = {}\n) {\n  if (!inverts.precalculated) {\n    precalculatePointInEllipse(ellipse, inverts);\n  }\n  return inverts.precalculated(pointLPS);\n}\n\n/**\n * This will perform some precalculations to make things faster.\n * Ideally, use the 'precalculated' function inside inverts to call the\n * test function.  This minimizes re-reading of variables and only needs the\n * LPS passed each time.\n * That is:\n *\n * ```\n *    const inverts = precalculatePointInEllipse(ellipse);\n *    if( inverts.precalculated(pointLPS) ) ...\n * ```\n */\nconst precalculatePointInEllipse = (ellipse, inverts: Inverts = {}) => {\n  const { xRadius, yRadius, zRadius } = ellipse;\n\n  // This will run only once since we are caching the values in the same\n  // object that is passed in.\n  if (\n    inverts.invXRadiusSq === undefined ||\n    inverts.invYRadiusSq === undefined ||\n    inverts.invZRadiusSq === undefined\n  ) {\n    inverts.invXRadiusSq = xRadius !== 0 ? 1 / xRadius ** 2 : 0;\n    inverts.invYRadiusSq = yRadius !== 0 ? 1 / yRadius ** 2 : 0;\n    inverts.invZRadiusSq = zRadius !== 0 ? 1 / zRadius ** 2 : 0;\n  }\n\n  const { invXRadiusSq, invYRadiusSq, invZRadiusSq } = inverts;\n  const { center } = ellipse;\n  const [centerL, centerP, centerS] = center;\n\n  inverts.precalculated = (pointLPS) => {\n    // Calculate the sum of normalized squared distances\n    const dx = pointLPS[0] - centerL;\n    let inside = dx * dx * invXRadiusSq;\n    if (inside > 1) {\n      return false;\n    }\n\n    const dy = pointLPS[1] - centerP;\n    inside += dy * dy * invYRadiusSq;\n    if (inside > 1) {\n      return false;\n    }\n\n    const dz = pointLPS[2] - centerS;\n    inside += dz * dz * invZRadiusSq;\n\n    // Check if the point is inside the ellipse\n    return inside <= 1;\n  };\n\n  return inverts;\n};\n\nexport { precalculatePointInEllipse };\n","import type { Types } from '@cornerstonejs/core';\n\nexport type CanvasCoordinates = [\n  Types.Point2, // bottom\n  Types.Point2, // top\n  Types.Point2, // left\n  Types.Point2 // right\n];\n\n/**\n * It takes the canvas coordinates of the ellipse corners and returns the top left and bottom right\n * corners of it\n *\n * @param ellipseCanvasPoints - The coordinates of the ellipse in the canvas.\n * @returns An array of two points.\n */\nexport default function getCanvasEllipseCorners(\n  ellipseCanvasPoints: CanvasCoordinates\n): Array<Types.Point2> {\n  const [bottom, top, left, right] = ellipseCanvasPoints;\n\n  const topLeft = <Types.Point2>[left[0], top[1]];\n  const bottomRight = <Types.Point2>[right[0], bottom[1]];\n\n  return [topLeft, bottomRight];\n}\n","import type { Types } from '@cornerstonejs/core';\nimport * as math from '../';\n\n/**\n * Calculate the closest point and the squared distance between a reference point and a line segment.\n *\n * It projects the reference point onto the line segment but it shall be bounded by the\n * start/end points since this is a line segment and not a line which could be extended.\n *\n * @param lineStart - Start point of the line segment\n * @param lineEnd - End point of the line segment\n * @param point - Reference point\n * @returns Closest point and the squared distance between a `point` and a line\n *   segment defined by `lineStart` and `lineEnd` points\n */\nexport default function distanceToPointSquaredInfo(\n  lineStart: Types.Point2,\n  lineEnd: Types.Point2,\n  point: Types.Point2\n): {\n  point: Types.Point2;\n  distanceSquared: number;\n} {\n  let closestPoint: Types.Point2;\n  const distanceSquared = math.point.distanceToPointSquared(lineStart, lineEnd);\n\n  // Check if lineStart equal to the lineEnd which means the closest point\n  // is any of these two points\n  if (lineStart[0] === lineEnd[0] && lineStart[1] === lineEnd[1]) {\n    closestPoint = lineStart;\n  }\n\n  if (!closestPoint) {\n    const dotProduct =\n      ((point[0] - lineStart[0]) * (lineEnd[0] - lineStart[0]) +\n        (point[1] - lineStart[1]) * (lineEnd[1] - lineStart[1])) /\n      distanceSquared;\n\n    if (dotProduct < 0) {\n      closestPoint = lineStart;\n    } else if (dotProduct > 1) {\n      closestPoint = lineEnd;\n    } else {\n      closestPoint = [\n        lineStart[0] + dotProduct * (lineEnd[0] - lineStart[0]),\n        lineStart[1] + dotProduct * (lineEnd[1] - lineStart[1]),\n      ];\n    }\n  }\n\n  return {\n    point: [...closestPoint],\n    distanceSquared: math.point.distanceToPointSquared(point, closestPoint),\n  };\n}\n","import { Types } from '@cornerstonejs/core';\nimport distanceToPointSquaredInfo from './distanceToPointSquaredInfo';\n\n/**\n * Calculates the distance-squared of a point to a line segment\n *\n * @param lineStart - x,y coordinates of the start of the line\n * @param lineEnd - x,y coordinates of the end of the line\n * @param point - x,y of the point\n * @returns distance-squared\n */\nexport default function distanceToPointSquared(\n  lineStart: Types.Point2,\n  lineEnd: Types.Point2,\n  point: Types.Point2\n): number {\n  return distanceToPointSquaredInfo(lineStart, lineEnd, point).distanceSquared;\n}\n","import distanceToPointSquared from './distanceToPointSquared';\nimport type { Types } from '@cornerstonejs/core';\n\n/**\n * Calculates the distance of a point to a line\n *\n * @param lineStart - x,y coordinates of the start of the line\n * @param lineEnd - x,y coordinates of the end of the line\n * @param point - x,y of the point\n * @returns distance\n */\nexport default function distanceToPoint(\n  lineStart: Types.Point2,\n  lineEnd: Types.Point2,\n  point: Types.Point2\n): number {\n  if (lineStart.length !== 2 || lineEnd.length !== 2 || point.length !== 2) {\n    throw Error(\n      'lineStart, lineEnd, and point should have 2 elements of [x, y]'\n    );\n  }\n\n  return Math.sqrt(distanceToPointSquared(lineStart, lineEnd, point));\n}\n","import type { Types } from '@cornerstonejs/core';\n\n// Returns sign of number\nfunction sign(x: any) {\n  return typeof x === 'number'\n    ? x\n      ? x < 0\n        ? -1\n        : 1\n      : x === x\n      ? 0\n      : NaN\n    : NaN;\n}\n\n/**\n * Calculates the intersection point between two lines in the 2D plane\n *\n * @param line1Start - x,y coordinates of the start of the first line\n * @param line1End - x,y coordinates of the end of the first line\n * @param line2Start - x,y coordinates of the start of the second line\n * @param line2End - x,y coordinates of the end of the second line\n * @returns [x,y] - point x,y of the point\n */\n\nexport default function intersectLine(\n  line1Start: Types.Point2,\n  line1End: Types.Point2,\n  line2Start: Types.Point2,\n  line2End: Types.Point2\n): number[] {\n  const [x1, y1] = line1Start;\n  const [x2, y2] = line1End;\n  const [x3, y3] = line2Start;\n  const [x4, y4] = line2End;\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is \"a1 x  +  b1 y  +  c1  =  0\"\n  const a1 = y2 - y1;\n  const b1 = x1 - x2;\n  const c1 = x2 * y1 - x1 * y2;\n\n  // Compute r3 and r4\n  const r3 = a1 * x3 + b1 * y3 + c1;\n  const r4 = a1 * x4 + b1 * y4 + c1;\n\n  /* Check signs of r3 and r4.  If both point 3 and point 4 lie on\n   * same side of line 1, the line segments do not intersect.\n   */\n\n  if (r3 !== 0 && r4 !== 0 && sign(r3) === sign(r4)) {\n    return;\n  }\n\n  // Compute a2, b2, c2\n  const a2 = y4 - y3;\n  const b2 = x3 - x4;\n  const c2 = x4 * y3 - x3 * y4;\n\n  // Compute r1 and r2\n  const r1 = a2 * x1 + b2 * y1 + c2;\n  const r2 = a2 * x2 + b2 * y2 + c2;\n\n  /* Check signs of r1 and r2.  If both point 1 and point 2 lie\n   * on same side of second line segment, the line segments do\n   * not intersect.\n   */\n\n  if (r1 !== 0 && r2 !== 0 && sign(r1) === sign(r2)) {\n    return;\n  }\n\n  /* Line segments intersect: compute intersection point.\n   */\n\n  const denom = a1 * b2 - a2 * b1;\n  let num;\n\n  /* The denom/2 is to get rounding instead of truncating.  It\n   * is added or subtracted to the numerator, depending upon the\n   * sign of the numerator.\n   */\n\n  num = b1 * c2 - b2 * c1;\n  const x = num / denom;\n\n  num = a2 * c1 - a1 * c2;\n  const y = num / denom;\n\n  const intersectionPoint = [x, y];\n\n  return intersectionPoint;\n}\n","import type { Types } from '@cornerstonejs/core';\n\nconst ORIENTATION_TOLERANCE = 1e-2;\n\n/**\n * Test if a point is on a line segment\n * @param lineStart - Line segment start point\n * @param lineEnd - Line segment end point\n * @param point - Point to test\n * @returns True if the point lies on the line segment or false otherwise\n */\nexport default function isPointOnLineSegment(\n  lineStart: Types.Point2,\n  lineEnd: Types.Point2,\n  point: Types.Point2\n): boolean {\n  // The code below runs ~4x faster than calling `line.distanceToPointSquared()` (155 vs 598 ms)\n\n  // No Math.min/max call for better performance when testing thousands of points\n  const minX = lineStart[0] <= lineEnd[0] ? lineStart[0] : lineEnd[0];\n  const maxX = lineStart[0] >= lineEnd[0] ? lineStart[0] : lineEnd[0];\n  const minY = lineStart[1] <= lineEnd[1] ? lineStart[1] : lineEnd[1];\n  const maxY = lineStart[1] >= lineEnd[1] ? lineStart[1] : lineEnd[1];\n\n  // Checks if the point lies inside the AABB\n  const aabbContainsPoint =\n    point[0] >= minX - ORIENTATION_TOLERANCE &&\n    point[0] <= maxX + ORIENTATION_TOLERANCE &&\n    point[1] >= minY - ORIENTATION_TOLERANCE &&\n    point[1] <= maxY + ORIENTATION_TOLERANCE;\n\n  if (!aabbContainsPoint) {\n    return false;\n  }\n\n  // Now that we know the point is inside the AABB we check if it lies on the line segment\n  const orientation =\n    (lineEnd[1] - lineStart[1]) * (point[0] - lineEnd[0]) -\n    (lineEnd[0] - lineStart[0]) * (point[1] - lineEnd[1]);\n  const absOrientation = orientation >= 0 ? orientation : -orientation;\n\n  // The orientation must be zero for points that lies on the same line\n  return absOrientation <= ORIENTATION_TOLERANCE;\n}\n","import type { Types } from '@cornerstonejs/core';\nimport distanceToPointSquared from './distanceToPointSquared';\n\ntype Point = Types.Point2 | Types.Point3;\n\n/**\n * Calculates the distance of a point to another point\n *\n * @param p1 - x,y or x,y,z of the point\n * @param p2 - x,y or x,y,z of the point\n * @returns distance\n */\nexport default function distanceToPoint(p1: Point, p2: Point): number {\n  return Math.sqrt(distanceToPointSquared(p1, p2));\n}\n","import type { Types } from '@cornerstonejs/core';\n\ntype Point = Types.Point2 | Types.Point3;\n\n/**\n * Calculates the distance squared of a point to another point\n *\n * @param p1 - x,y or x,y,z of the point\n * @param p2 - x,y or x,y,z of the point\n * @returns distance\n */\nexport default function distanceToPointSquared(p1: Point, p2: Point): number {\n  if (p1.length !== p2.length) {\n    throw Error('Both points should have the same dimensionality');\n  }\n\n  const [x1, y1, z1 = 0] = p1;\n  const [x2, y2, z2 = 0] = p2;\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const dz = z2 - z1;\n\n  // Time to square 10M numbers:\n  //   (n * n) = 161ms | (n ** 2) = 199ms | Math.pow(n, 2) = 29529ms\n  return dx * dx + dy * dy + dz * dz;\n}\n","import { Types } from '@cornerstonejs/core';\n\n/**\n * Get a mirrored point along the line created by two points where one of them\n * is the static (\"anchor\") point and the other one is the point to be mirroed.\n * @param mirrorPoint - 2D Point to be mirroed\n * @param staticPoint - Static 2D point\n * @returns Mirroed 2D point\n */\nexport default function mirror(\n  mirrorPoint: Types.Point2,\n  staticPoint: Types.Point2\n): Types.Point2 {\n  const [x1, y1] = mirrorPoint;\n  const [x2, y2] = staticPoint;\n\n  const newX = 2 * x2 - x1;\n  const newY = 2 * y2 - y1;\n\n  return [newX, newY];\n}\n","import { glMatrix } from 'gl-matrix';\nimport type { Types } from '@cornerstonejs/core';\nimport * as math from '..';\n\n/**\n * A polyline is considered closed if the start and end points are at the same position\n *\n * @param polyline - Polyline points (2D)\n * @returns True if the polyline is already closed or false otherwise\n */\nexport default function isClosed(polyline: Types.Point2[]): boolean {\n  if (polyline.length < 3) {\n    return false;\n  }\n\n  const numPolylinePoints = polyline.length;\n\n  const firstPoint = polyline[0];\n  const lastPoint = polyline[numPolylinePoints - 1];\n  const distFirstToLastPoints = math.point.distanceToPointSquared(\n    firstPoint,\n    lastPoint\n  );\n\n  return glMatrix.equals(0, distFirstToLastPoints);\n}\n","import type { Types } from '@cornerstonejs/core';\nimport isClosed from './isClosed';\n\n/**\n * Checks if a 2D point is inside the polyline.\n *\n * A point is inside a curve/polygon if the number of intersections between the horizontal\n * ray emanating from the given point and to the right and the line segments is odd.\n * https://www.eecs.umich.edu/courses/eecs380/HANDOUTS/PROJ2/InsidePoly.html\n *\n * Note that a point on the polyline is considered inside.\n *\n * @param polyline - Polyline points (2D)\n * @param point - 2D Point\n * @returns True if the point is inside the polyline or false otherwise\n */\nexport default function containsPoint(\n  polyline: Types.Point2[],\n  point: Types.Point2,\n  options: {\n    closed?: boolean;\n    holes?: Types.Point2[][];\n  } = {\n    closed: undefined,\n  }\n): boolean {\n  if (polyline.length < 3) {\n    return false;\n  }\n\n  const numPolylinePoints = polyline.length;\n  let numIntersections = 0;\n\n  const { closed, holes } = options;\n\n  if (holes?.length) {\n    for (const hole of holes) {\n      if (containsPoint(hole, point)) {\n        return false;\n      }\n    }\n  }\n\n  // Test intersection against [end, start] line segment if it should be closed\n  const shouldClose = !(closed === undefined ? isClosed(polyline) : closed);\n  const maxSegmentIndex = polyline.length - (shouldClose ? 1 : 2);\n\n  for (let i = 0; i <= maxSegmentIndex; i++) {\n    const p1 = polyline[i];\n\n    // Calculating the next point index without using % (mod) operator like in\n    // `(i + 1) % numPolylinePoints` to make it 20% faster\n    const p2Index = i === numPolylinePoints - 1 ? 0 : i + 1;\n    const p2 = polyline[p2Index];\n\n    // Calculating min/max without using Math.min/max to make it ~3% faster\n    const maxX = p1[0] >= p2[0] ? p1[0] : p2[0];\n    const maxY = p1[1] >= p2[1] ? p1[1] : p2[1];\n    const minY = p1[1] <= p2[1] ? p1[1] : p2[1];\n\n    const mayIntersectLineSegment =\n      point[0] <= maxX && point[1] >= minY && point[1] < maxY;\n\n    if (mayIntersectLineSegment) {\n      const isVerticalLine = p1[0] === p2[0];\n      let intersects = isVerticalLine;\n\n      if (!intersects) {\n        const xIntersection =\n          ((point[1] - p1[1]) * (p2[0] - p1[0])) / (p2[1] - p1[1]) + p1[0];\n\n        intersects = point[0] <= xIntersection;\n      }\n\n      numIntersections += intersects ? 1 : 0;\n    }\n  }\n\n  return !!(numIntersections % 2);\n}\n","import type { Types } from '@cornerstonejs/core';\nimport containsPoint from './containsPoint';\n\n/**\n * Checks if a polyline contains a set of points.\n *\n * @param polyline - Polyline points (2D)\n * @param points - 2D points to verify\n * @returns True if all points are inside the polyline or false otherwise\n */\nexport default function containsPoints(\n  polyline: Types.Point2[],\n  points: Types.Point2[]\n): boolean {\n  for (let i = 0, numPoint = points.length; i < numPoint; i++) {\n    if (!containsPoint(polyline, points[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","import type { Types } from '@cornerstonejs/core';\n\n/**\n * Calculates the area of an array of `Point2` points using the shoelace algorithm.\n *\n * The units of the area are in the same units as the points are in. E.g. if\n * the points are in canvas, then the result is in canvas pixels ^2; If they are\n * in mm, then the result is in mm^2; etc.\n */\nexport default function getArea(points: Types.Point2[]): number {\n  // Shoelace algorithm.\n  const n = points.length;\n  let area = 0.0;\n  let j = n - 1;\n\n  for (let i = 0; i < n; i++) {\n    area += (points[j][0] + points[i][0]) * (points[j][1] - points[i][1]);\n    j = i; // j is previous vertex to i\n  }\n\n  // Return absolute value of half the sum (half as summing up traingles).\n  return Math.abs(area / 2.0);\n}\n","import type { Types } from '@cornerstonejs/core';\n\n/**\n * Returns the area with signal of a 2D polyline\n * https://www.youtube.com/watch?v=GpsKrAipXm8&t=1900s\n *\n * This functions has a runtime very close to `getArea` and it is recommended to\n * be called only if you need the area signal (eg: calculate polygon normal or\n * winding direction). If you do not need the area signal you should always call\n * `getArea`.\n *\n * @param polyline - Polyline points (2D)\n * @returns Area of the polyline (with signal)\n */\nexport default function getSignedArea(polyline: Types.Point2[]): number {\n  if (polyline.length < 3) {\n    return 0;\n  }\n\n  // Reference point can be any point on the same plane\n  const refPoint = polyline[0];\n  let area = 0;\n\n  // Takes three points (reference point and two other points from each line\n  // segment) and calculate the area with cross product. The magnitude of the\n  // vector returned by a cross product is equal to the area of the parallelogram\n  // that the vectors span which is two times the area of the triangle.\n  //\n  // Not calling vec3 mathods makes the function run much faster since polylines\n  // may have thousands of points when using freehand ROI tool and that would\n  // increase considerably the number of function calls.\n  for (let i = 0, len = polyline.length; i < len; i++) {\n    const p1 = polyline[i];\n    // Using ternary instead of % (mod) operator to make it faster\n    const p2Index = i === len - 1 ? 0 : i + 1;\n    const p2 = polyline[p2Index];\n    const aX = p1[0] - refPoint[0];\n    const aY = p1[1] - refPoint[1];\n    const bX = p2[0] - refPoint[0];\n    const bY = p2[1] - refPoint[1];\n\n    // Cross product between vectors \"a\" and \"b\" which returns (0, 0, crossProd)\n    // for 2D vectors.\n    area += aX * bY - aY * bX;\n  }\n\n  // Divide by two because cross product returns two times the area for each triangle\n  area *= 0.5;\n\n  return area;\n}\n","import type { Types } from '@cornerstonejs/core';\nimport getSignedArea from './getSignedArea';\n\n/**\n * Calculate the winding direction (CW or CCW) of a polyline\n * @param polyline - Polyline (2D)\n * @returns 1 for CW or -1 for CCW polylines\n */\nexport default function getWindingDirection(polyline: Types.Point2[]): number {\n  const signedArea = getSignedArea(polyline);\n\n  // Return 1 or -1 which is also possible to convert into ContourOrientation\n  return signedArea >= 0 ? 1 : -1;\n}\n","import { vec3 } from 'gl-matrix';\nimport { Types } from '@cornerstonejs/core';\n\nfunction _getAreaVector(polyline: Types.Point3[]): Types.Point3 {\n  const vecArea = vec3.create();\n\n  // Reference point can be any point on the same plane\n  const refPoint = polyline[0];\n\n  // Takes three points, reference point and two other points from each line\n  // segment, and calculate the area with cross product. The magnitude of the\n  // vector returned by a cross product is equal to the area of the parallelogram\n  // that the vectors span which is two times the area of the triangle.\n  //\n  // Not calling vec3 mathods makes the function run much faster since polylines\n  // may have thousands of points when using freehand ROI tool and that would\n  // increase considerably the number of function calls.\n  for (let i = 0, len = polyline.length; i < len; i++) {\n    const p1 = polyline[i];\n    // Using ternary instead of % (mod) operator to make it faster\n    const p2Index = i === len - 1 ? 0 : i + 1;\n    const p2 = polyline[p2Index];\n\n    const aX = p1[0] - refPoint[0];\n    const aY = p1[1] - refPoint[1];\n    const aZ = p1[2] - refPoint[2];\n    const bX = p2[0] - refPoint[0];\n    const bY = p2[1] - refPoint[1];\n    const bZ = p2[2] - refPoint[2];\n\n    // Cross product without calling vec3.cross() for better performance\n    vecArea[0] += aY * bZ - aZ * bY;\n    vecArea[1] += aZ * bX - aX * bZ;\n    vecArea[2] += aX * bY - aY * bX;\n  }\n\n  // Divide by two because cross product returns two times the area for each triangle\n  vec3.scale(vecArea, vecArea, 0.5);\n\n  // The magnitude of the vector is the area of the polyline\n  return <Types.Point3>vecArea;\n}\n\n/**\n * Calculate the normal of a 3D planar polyline\n * @param polyline - Planar polyline in 3D space\n * @returns Normal of the 3D planar polyline\n */\nexport default function getNormal3(polyline: Types.Point3[]): Types.Point3 {\n  const vecArea = _getAreaVector(polyline);\n\n  return vec3.normalize(vecArea, vecArea) as Types.Point3;\n}\n","import { Types } from '@cornerstonejs/core';\nimport getSignedArea from './getSignedArea';\n\n/**\n * Calculate the normal of a 2D polyline\n * https://www.youtube.com/watch?v=GpsKrAipXm8&t=1982s\n *\n * @param polyline - Planar polyline in 2D space\n * @returns Normal of the 2D planar polyline\n */\nexport default function getNormal2(polyline: Types.Point2[]): Types.Point3 {\n  const area = getSignedArea(polyline);\n\n  // The normal of a 2D polyline is (0, 0, 1) or (0, 0, -1) depending if it\n  // is CW or CCW polyline\n  return [0, 0, area / Math.abs(area)] as Types.Point3;\n}\n","import type { Types } from '@cornerstonejs/core';\n\n// ATTENTION: this is an internal function and it should not be added to \"polyline\"\n// namespace.\n//\n// TODO: there is a similar function in math.lineSegment.intersectLine but we\n// need to investigate why it is 6x slower than this one when thousands of\n// intersections are calculated. Also that one may return [NaN, NaN] for\n// collinear points.\n\n/**\n * Checks whether the line (`p1`,`q1`) intersects the line (`p2`,`q2`) via an\n * orientation algorithm.\n *\n * Credit and details: geeksforgeeks.org/check-if-two-given-line-segments-intersect/\n *\n * @param p1 - Start point of line segment 1\n * @param q1 - End point of line segment 1\n * @param p2 - Start point of line segment 2\n * @param q2 - End point of line segment 2\n * @returns True if the line segments intersect or false otherwise\n */\nexport default function areLineSegmentsIntersecting(\n  p1: Types.Point2,\n  q1: Types.Point2,\n  p2: Types.Point2,\n  q2: Types.Point2\n): boolean {\n  let result = false;\n\n  // Line 1 AABB\n  const line1MinX = p1[0] < q1[0] ? p1[0] : q1[0];\n  const line1MinY = p1[1] < q1[1] ? p1[1] : q1[1];\n  const line1MaxX = p1[0] > q1[0] ? p1[0] : q1[0];\n  const line1MaxY = p1[1] > q1[1] ? p1[1] : q1[1];\n\n  // Line 2 AABB\n  const line2MinX = p2[0] < q2[0] ? p2[0] : q2[0];\n  const line2MinY = p2[1] < q2[1] ? p2[1] : q2[1];\n  const line2MaxX = p2[0] > q2[0] ? p2[0] : q2[0];\n  const line2MaxY = p2[1] > q2[1] ? p2[1] : q2[1];\n\n  // If AABBs do not intersect it is impossible for the lines to intersect.\n  // Checking AABB before doing any math makes it run ~12% faster.\n  if (\n    line1MinX > line2MaxX ||\n    line1MaxX < line2MinX ||\n    line1MinY > line2MaxY ||\n    line1MaxY < line2MinY\n  ) {\n    return false;\n  }\n\n  const orient = [\n    orientation(p1, q1, p2),\n    orientation(p1, q1, q2),\n    orientation(p2, q2, p1),\n    orientation(p2, q2, q1),\n  ];\n\n  // General Case\n  if (orient[0] !== orient[1] && orient[2] !== orient[3]) {\n    return true;\n  }\n\n  // Special Cases\n  if (orient[0] === 0 && onSegment(p1, p2, q1)) {\n    // If p1, q1 and p2 are colinear and p2 lies on segment p1q1\n    result = true;\n  } else if (orient[1] === 0 && onSegment(p1, q2, q1)) {\n    // If p1, q1 and p2 are colinear and q2 lies on segment p1q1\n    result = true;\n  } else if (orient[2] === 0 && onSegment(p2, p1, q2)) {\n    // If p2, q2 and p1 are colinear and p1 lies on segment p2q2\n    result = true;\n  } else if (orient[3] === 0 && onSegment(p2, q1, q2)) {\n    // If p2, q2 and q1 are colinear and q1 lies on segment p2q2\n    result = true;\n  }\n\n  return result;\n}\n\n/**\n * Checks the orientation of 3 points, returns a 0, 1 or 2 based on\n * the orientation of the points.\n */\nfunction orientation(\n  p: Types.Point2,\n  q: Types.Point2,\n  r: Types.Point2\n): number {\n  // Take the cross product between vectors PQ and QR\n  const orientationValue =\n    (q[1] - p[1]) * (r[0] - q[0]) - (q[0] - p[0]) * (r[1] - q[1]);\n\n  if (orientationValue === 0) {\n    return 0; // Colinear\n  }\n\n  return orientationValue > 0 ? 1 : 2;\n}\n\n/**\n * Checks if point `q` lies on the segment (`p`,`r`).\n */\nfunction onSegment(p: Types.Point2, q: Types.Point2, r: Types.Point2): boolean {\n  if (\n    q[0] <= Math.max(p[0], r[0]) &&\n    q[0] >= Math.min(p[0], r[0]) &&\n    q[1] <= Math.max(p[1], r[1]) &&\n    q[1] >= Math.min(p[1], r[1])\n  ) {\n    return true;\n  }\n\n  return false;\n}\n","import type { Types } from '@cornerstonejs/core';\nimport areLineSegmentsIntersecting from './areLineSegmentsIntersecting';\n\n/**\n * Get all intersections between a polyline and a line segment.\n * @param polyline - Polyline points\n * @param p1 - Start point of line segment\n * @param q1 - End point of line segment\n * @param closed - Test the intersection against the line segment that connects\n * the last to the first point when set to true\n * @returns Start/end point indexes of all line segments that intersect (p1, q1)\n */\nexport default function getLineSegmentIntersectionsIndexes(\n  polyline: Types.Point2[],\n  p1: Types.Point2,\n  q1: Types.Point2,\n  closed = true\n): Types.Point2[] {\n  const intersections: Types.Point2[] = [];\n  const numPoints = polyline.length;\n  const maxI = numPoints - (closed ? 1 : 2);\n\n  for (let i = 0; i <= maxI; i++) {\n    const p2 = polyline[i];\n    // Do not use % operator for better performance\n    const j = i === numPoints - 1 ? 0 : i + 1;\n    const q2 = polyline[j];\n\n    if (areLineSegmentsIntersecting(p1, q1, p2, q2)) {\n      intersections.push([i, j]);\n    }\n  }\n\n  return intersections;\n}\n","import { Types } from '@cornerstonejs/core';\nimport * as mathLine from '../line';\n\n// ATTENTION: this is an internal function and it should not be added to \"polyline\" namespace\n\n// Tested with +1M random overlapping line segments and any tolerance below this\n// one may return invalid results.\nconst PARALLEL_LINES_TOLERANCE = 1e-2;\n\n/**\n * It returns the intersection between two lines (not line segments) or a midpoint\n * when the line segments overlap. This function calculates the intersection between\n * lines because it considers that getFirstLineSegmentIntersectionIndexes,\n * getLineSegmentIntersectionsCoordinates or getLineSegmentIntersectionsIndexes\n * has already been called first which guarantees.\n *\n * @param p1 - Line segment 1 start\n * @param q1 - Line segment 1 end\n * @param p2 - Line segment 2 start\n * @param q2 - Line segment 21 end\n * @returns The intersection between two lines or a midpoint when they overlap\n */\nexport default function getLinesIntersection(\n  p1: Types.Point2,\n  q1: Types.Point2,\n  p2: Types.Point2,\n  q2: Types.Point2\n) {\n  const diffQ1P1 = [q1[0] - p1[0], q1[1] - p1[1]];\n  const diffQ2P2 = [q2[0] - p2[0], q2[1] - p2[1]];\n  const denominator = diffQ2P2[1] * diffQ1P1[0] - diffQ2P2[0] * diffQ1P1[1];\n  const absDenominator = denominator >= 0 ? denominator : -denominator;\n\n  if (absDenominator < PARALLEL_LINES_TOLERANCE) {\n    // No Math.min/max calls for better performance.\n    const line1AABB = [\n      p1[0] < q1[0] ? p1[0] : q1[0], // 0: minX\n      p1[0] > q1[0] ? p1[0] : q1[0], // 1: maxX\n      p1[1] < q1[1] ? p1[1] : q1[1], // 2: minY\n      p1[1] > q1[1] ? p1[1] : q1[1], // 3: maxY\n    ];\n\n    // No Math.min/max calls for better performance.\n    const line2AABB = [\n      p2[0] < q2[0] ? p2[0] : q2[0], // 0: minX\n      p2[0] > q2[0] ? p2[0] : q2[0], // 1: maxX\n      p2[1] < q2[1] ? p2[1] : q2[1], // 2: minY\n      p2[1] > q2[1] ? p2[1] : q2[1], // 3: maxY\n    ];\n\n    const aabbIntersects =\n      line1AABB[0] <= line2AABB[1] && // minX1 <= maxX2\n      line1AABB[1] >= line2AABB[0] && // maxX1 >= minX2\n      line1AABB[2] <= line2AABB[3] && // minY1 <= maxY2\n      line1AABB[3] >= line2AABB[2]; // maxY1 >= minY2\n\n    if (!aabbIntersects) {\n      return;\n    }\n\n    // Three tests are enough to know if the lines overlap\n    const overlap =\n      mathLine.isPointOnLineSegment(p1, q1, p2) ||\n      mathLine.isPointOnLineSegment(p1, q1, q2) ||\n      mathLine.isPointOnLineSegment(p2, q2, p1);\n\n    if (!overlap) {\n      return;\n    }\n\n    // min/max seems to be inverted but that is correct because it is looking\n    // for the intersection range. No Math.min/max calls for better performance.\n    const minX = line1AABB[0] > line2AABB[0] ? line1AABB[0] : line2AABB[0];\n    const maxX = line1AABB[1] < line2AABB[1] ? line1AABB[1] : line2AABB[1];\n    const minY = line1AABB[2] > line2AABB[2] ? line1AABB[2] : line2AABB[2];\n    const maxY = line1AABB[3] < line2AABB[3] ? line1AABB[3] : line2AABB[3];\n    const midX = (minX + maxX) * 0.5;\n    const midY = (minY + maxY) * 0.5;\n\n    return [midX, midY];\n  }\n\n  let a = p1[1] - p2[1];\n  let b = p1[0] - p2[0];\n  const numerator1 = diffQ2P2[0] * a - diffQ2P2[1] * b;\n  const numerator2 = diffQ1P1[0] * a - diffQ1P1[1] * b;\n  a = numerator1 / denominator;\n  b = numerator2 / denominator;\n\n  const resultX = p1[0] + a * diffQ1P1[0];\n  const resultY = p1[1] + a * diffQ1P1[1];\n\n  return [resultX, resultY];\n}\n","import { Types } from '@cornerstonejs/core';\nimport * as mathPoint from '../point';\nimport getLineSegmentIntersectionsIndexes from './getLineSegmentIntersectionsIndexes';\nimport containsPoint from './containsPoint';\nimport getNormal2 from './getNormal2';\nimport { glMatrix, vec3 } from 'gl-matrix';\nimport getLinesIntersection from './getLinesIntersection';\n\nenum PolylinePointType {\n  Vertex,\n  Intersection,\n}\n\n// Position of the point related to the intersection region\nenum PolylinePointPosition {\n  Outside = -1,\n  Edge = 0,\n  Inside = 1,\n}\n\n// Direction from last point to the intersection point to know if it is entering\n// or exiting the intersection region\nenum PolylinePointDirection {\n  Exiting = -1,\n  Unknown = 0,\n  Entering = 1,\n}\n\ntype PolylinePoint = {\n  type: PolylinePointType;\n  coordinates: Types.Point2;\n  position?: PolylinePointPosition;\n  visited: boolean;\n  next: PolylinePoint;\n};\n\ntype PolylineIntersectionPoint = PolylinePoint & {\n  direction: PolylinePointDirection;\n  cloned?: boolean;\n};\n\n/**\n * Ensure all polyline point objects are pointing to the next object in case\n * it is still not point to anyone.\n * @param polylinePoints - Array that contains all polyline points (vertices and intersections)\n */\nfunction ensuresNextPointers(polylinePoints: PolylinePoint[]) {\n  // Make sure all nodes point to a valid node\n  for (let i = 0, len = polylinePoints.length; i < len; i++) {\n    const currentPoint = polylinePoints[i];\n\n    if (!currentPoint.next) {\n      currentPoint.next = polylinePoints[i === len - 1 ? 0 : i + 1];\n    }\n  }\n}\n\n/**\n * Creates one linked list per polyline that contains all vertices and intersections\n * found while walking along the edges.\n *\n * @param targetPolyline - Target polyline\n * @param sourcePolyline - Source polyline\n * @returns Two linked lists with all vertices and intersections.\n */\nfunction getSourceAndTargetPointsList(\n  targetPolyline: Types.Point2[],\n  sourcePolyline: Types.Point2[]\n) {\n  const targetPolylinePoints: PolylinePoint[] = [];\n  const sourcePolylinePoints: PolylinePoint[] = [];\n  const sourceIntersectionsCache = new Map<\n    number,\n    PolylineIntersectionPoint[]\n  >();\n\n  const isFirstPointInside = containsPoint(sourcePolyline, targetPolyline[0]);\n\n  let intersectionPointDirection = isFirstPointInside\n    ? PolylinePointDirection.Exiting\n    : PolylinePointDirection.Entering;\n\n  // Store all vertices and intersection for target contour\n  for (let i = 0, len = targetPolyline.length; i < len; i++) {\n    const p1 = targetPolyline[i];\n    const pointInside = containsPoint(sourcePolyline, p1);\n    const vertexPoint: PolylinePoint = {\n      type: PolylinePointType.Vertex,\n      coordinates: p1,\n      position: pointInside\n        ? PolylinePointPosition.Inside\n        : PolylinePointPosition.Outside,\n      visited: false,\n      next: null,\n    };\n\n    targetPolylinePoints.push(vertexPoint);\n\n    const q1 = targetPolyline[i === len - 1 ? 0 : i + 1];\n    const intersectionsInfo = getLineSegmentIntersectionsIndexes(\n      sourcePolyline,\n      p1,\n      q1\n    ).map((intersectedLineSegment) => {\n      const sourceLineSegmentId: number = intersectedLineSegment[0];\n      const p2 = sourcePolyline[intersectedLineSegment[0]];\n      const q2 = sourcePolyline[intersectedLineSegment[1]];\n\n      // lineSegment.intersectLine returns the midpoint of the four points\n      // when the lines are parallel or co-incident.  Otherwise it will return\n      // an extension of the line.\n      const intersectionCoordinate = getLinesIntersection(\n        p1,\n        q1,\n        p2,\n        q2\n      ) as Types.Point2;\n\n      const targetStartPointDistSquared = mathPoint.distanceToPointSquared(\n        p1,\n        intersectionCoordinate\n      );\n\n      return {\n        sourceLineSegmentId,\n        coordinate: intersectionCoordinate,\n        targetStartPointDistSquared,\n      };\n    });\n\n    intersectionsInfo.sort(\n      (left, right) =>\n        left.targetStartPointDistSquared - right.targetStartPointDistSquared\n    );\n\n    intersectionsInfo.forEach((intersectionInfo) => {\n      const { sourceLineSegmentId, coordinate: intersectionCoordinate } =\n        intersectionInfo;\n\n      // Intersection point to be added to the target polyline list\n      const targetEdgePoint: PolylineIntersectionPoint = {\n        type: PolylinePointType.Intersection,\n        coordinates: intersectionCoordinate,\n        position: PolylinePointPosition.Edge,\n        direction: intersectionPointDirection,\n        visited: false,\n        next: null,\n      };\n\n      // Intersection point to be added to the source polyline list.\n      // At this point there is no way to know if the point is entering or\n      // exiting the intersection region but that is not going to be used\n      // hence it is set to \"unknown\".\n      const sourceEdgePoint: PolylineIntersectionPoint = {\n        ...targetEdgePoint,\n        direction: PolylinePointDirection.Unknown,\n        cloned: true,\n      };\n\n      if (intersectionPointDirection === PolylinePointDirection.Entering) {\n        targetEdgePoint.next = sourceEdgePoint;\n      } else {\n        sourceEdgePoint.next = targetEdgePoint;\n      }\n\n      let sourceIntersectionPoints =\n        sourceIntersectionsCache.get(sourceLineSegmentId);\n\n      if (!sourceIntersectionPoints) {\n        sourceIntersectionPoints = [];\n        sourceIntersectionsCache.set(\n          sourceLineSegmentId,\n          sourceIntersectionPoints\n        );\n      }\n\n      targetPolylinePoints.push(targetEdgePoint);\n      sourceIntersectionPoints.push(sourceEdgePoint);\n\n      // Switches from \"exiting\" to \"entering\" and vice-versa\n      intersectionPointDirection *= -1;\n    });\n  }\n\n  // Store all vertices and intersections for source contour\n  for (let i = 0, len = sourcePolyline.length; i < len; i++) {\n    const lineSegmentId: number = i;\n    const p1 = sourcePolyline[i];\n    const vertexPoint: PolylinePoint = {\n      type: PolylinePointType.Vertex,\n      coordinates: p1,\n      visited: false,\n      next: null,\n    };\n\n    sourcePolylinePoints.push(vertexPoint);\n\n    const sourceIntersectionPoints =\n      sourceIntersectionsCache.get(lineSegmentId);\n\n    if (!sourceIntersectionPoints?.length) {\n      continue;\n    }\n\n    // Calculate the distance between each intersection point to the start point\n    // of the line segment, sort them by distance and return a sorted array that\n    // contains all intersection points.\n    sourceIntersectionPoints\n      .map((intersectionPoint) => ({\n        intersectionPoint,\n        lineSegStartDistSquared: mathPoint.distanceToPointSquared(\n          p1,\n          intersectionPoint.coordinates\n        ),\n      }))\n      .sort(\n        (left, right) =>\n          left.lineSegStartDistSquared - right.lineSegStartDistSquared\n      )\n      .map(({ intersectionPoint }) => intersectionPoint)\n      .forEach((intersectionPoint) =>\n        sourcePolylinePoints.push(intersectionPoint)\n      );\n  }\n\n  ensuresNextPointers(targetPolylinePoints);\n  ensuresNextPointers(sourcePolylinePoints);\n\n  return { targetPolylinePoints, sourcePolylinePoints };\n}\n\n/**\n * Get the next unvisited polyline points that is outside the intersection region.\n * @param polylinePoints - All polyline points (vertices and intersections)\n * @returns Any unvisited point that is outside the intersection region if it\n * exists or `undefined` otherwise\n */\nfunction getUnvisitedOutsidePoint(polylinePoints: PolylinePoint[]) {\n  for (let i = 0, len = polylinePoints.length; i < len; i++) {\n    const point = polylinePoints[i];\n\n    if (!point.visited && point.position === PolylinePointPosition.Outside) {\n      return point;\n    }\n  }\n}\n\n/**\n * Merge two planar polylines (2D)\n */\nfunction mergePolylines(\n  targetPolyline: Types.Point2[],\n  sourcePolyline: Types.Point2[]\n) {\n  const targetNormal = getNormal2(targetPolyline);\n  const sourceNormal = getNormal2(sourcePolyline);\n  const dotNormals = vec3.dot(sourceNormal, targetNormal);\n\n  // Both polylines need to be CW or CCW to be merged and one of them needs to\n  // be reversed if theirs orientation are not the same\n  if (!glMatrix.equals(1, dotNormals)) {\n    sourcePolyline = sourcePolyline.slice().reverse();\n  }\n\n  const { targetPolylinePoints } = getSourceAndTargetPointsList(\n    targetPolyline,\n    sourcePolyline\n  );\n  const startPoint: PolylinePoint =\n    getUnvisitedOutsidePoint(targetPolylinePoints);\n\n  // Source polyline contains target polyline\n  if (!startPoint) {\n    return targetPolyline.slice();\n  }\n\n  const mergedPolyline = [startPoint.coordinates];\n  let currentPoint = startPoint.next;\n\n  while (currentPoint !== startPoint) {\n    if (\n      currentPoint.type === PolylinePointType.Intersection &&\n      (<PolylineIntersectionPoint>currentPoint).cloned\n    ) {\n      currentPoint = currentPoint.next;\n      continue;\n    }\n\n    mergedPolyline.push(currentPoint.coordinates);\n    currentPoint = currentPoint.next;\n  }\n\n  return mergedPolyline;\n}\n\n/**\n * Subtract two planar polylines (2D)\n */\nfunction subtractPolylines(\n  targetPolyline: Types.Point2[],\n  sourcePolyline: Types.Point2[]\n): Types.Point2[][] {\n  const targetNormal = getNormal2(targetPolyline);\n  const sourceNormal = getNormal2(sourcePolyline);\n  const dotNormals = vec3.dot(sourceNormal, targetNormal);\n\n  // The polylines need to have different orientation (CW+CCW or CCW+CW) to be\n  // subtracted and one of them needs to be reversed if theirs orientation are\n  // the same\n  if (!glMatrix.equals(-1, dotNormals)) {\n    sourcePolyline = sourcePolyline.slice().reverse();\n  }\n\n  const { targetPolylinePoints } = getSourceAndTargetPointsList(\n    targetPolyline,\n    sourcePolyline\n  );\n  let startPoint: PolylinePoint = null;\n  const subtractedPolylines = [];\n\n  while ((startPoint = getUnvisitedOutsidePoint(targetPolylinePoints))) {\n    const subtractedPolyline = [startPoint.coordinates];\n    let currentPoint = startPoint.next;\n\n    startPoint.visited = true;\n\n    while (currentPoint !== startPoint) {\n      currentPoint.visited = true;\n\n      if (\n        currentPoint.type === PolylinePointType.Intersection &&\n        (<PolylineIntersectionPoint>currentPoint).cloned\n      ) {\n        currentPoint = currentPoint.next;\n        continue;\n      }\n\n      subtractedPolyline.push(currentPoint.coordinates);\n      currentPoint = currentPoint.next;\n    }\n\n    subtractedPolylines.push(subtractedPolyline);\n  }\n\n  return subtractedPolylines;\n}\n\nexport { mergePolylines, subtractPolylines };\n","import type { Types } from '@cornerstonejs/core';\nimport areLineSegmentsIntersecting from './areLineSegmentsIntersecting';\n\n/**\n * Checks whether the line (`p1`,`q1`) intersects any of the other lines in the\n * `points`, and returns the first value.\n *\n * @param points - Polyline points\n * @param p1 - First point of the line segment that is being tested\n * @param q1 - Second point of the line segment that is being tested\n * @param closed - Test the intersection with the line segment that connects\n *   the last and first points of the polyline\n * @returns Indexes of the line segment points from the polyline that intersects [p1, q1]\n */\nexport default function getFirstLineSegmentIntersectionIndexes(\n  points: Types.Point2[],\n  p1: Types.Point2,\n  q1: Types.Point2,\n  closed = true\n): Types.Point2 | undefined {\n  let initialI;\n  let j;\n\n  if (closed) {\n    j = points.length - 1;\n    initialI = 0;\n  } else {\n    j = 0;\n    initialI = 1;\n  }\n\n  for (let i = initialI; i < points.length; i++) {\n    const p2 = points[j];\n    const q2 = points[i];\n\n    if (areLineSegmentsIntersecting(p1, q1, p2, q2)) {\n      return [j, i];\n    }\n\n    j = i;\n  }\n}\n","import { Types } from '@cornerstonejs/core';\nimport getFirstLineSegmentIntersectionIndexes from './getFirstLineSegmentIntersectionIndexes';\n\n/**\n * Check if two polylines intersect comparing line segment by line segment.\n * @param sourcePolyline - Source polyline\n * @param targetPolyline - Target polyline\n * @returns True if the polylines intersect or false otherwise\n */\nexport default function intersectPolyline(\n  sourcePolyline: Types.Point2[],\n  targetPolyline: Types.Point2[]\n): boolean {\n  // Naive way to detect intersection between polylines in O(n^2).\n  // TODO: Implement Bentley Ottmann sweep line algorithm or maybe some\n  // algorithm that uses r-tree may make it run faster\n  for (let i = 0, sourceLen = sourcePolyline.length; i < sourceLen; i++) {\n    const sourceP1 = sourcePolyline[i];\n    const sourceP2Index = i === sourceLen - 1 ? 0 : i + 1;\n    const sourceP2 = sourcePolyline[sourceP2Index];\n\n    const intersectionPointIndexes = getFirstLineSegmentIntersectionIndexes(\n      targetPolyline,\n      sourceP1,\n      sourceP2\n    );\n\n    if (intersectionPointIndexes?.length === 2) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","import type { Types } from '@cornerstonejs/core';\nimport * as mathLine from '../line';\n\nconst DEFAULT_EPSILON = 0.1;\n\n/**\n * Ramer–Douglas–Peucker algorithm implementation to decimate a polyline\n * to a similar polyline with fewer points\n *\n * https://en.wikipedia.org/wiki/Ramer%E2%80%93Douglas%E2%80%93Peucker_algorithm\n * https://rosettacode.org/wiki/Ramer-Douglas-Peucker_line_simplification\n * https://karthaus.nl/rdp/\n *\n * @param polyline - Polyline to decimate\n * @param epsilon - A maximum given distance 'epsilon' to decide if a point\n * should or shouldn't be added the decimated polyline version. In each\n * iteration the polyline is split into two polylines and the distance of each\n * point from those new polylines are checked against the line that connects\n * the first and last points.\n * @returns Decimated polyline\n */\nexport default function decimate(\n  polyline: Types.Point2[],\n  epsilon = DEFAULT_EPSILON\n) {\n  const numPoints = polyline.length;\n\n  // The polyline must have at least a start and end points\n  if (numPoints < 3) {\n    return polyline;\n  }\n\n  const epsilonSquared = epsilon * epsilon;\n  const partitionQueue = [[0, numPoints - 1]];\n\n  // Used a boolean array to set each point that will be in the decimated polyline\n  // because pre-allocated arrays are 3-4x faster than thousands of push() calls\n  // to add all points to a new array.\n  const polylinePointFlags = new Array(numPoints).fill(false);\n\n  // Start and end points are always added to the decimated polyline\n  let numDecimatedPoints = 2;\n\n  // Add start and end points to the decimated polyline\n  polylinePointFlags[0] = true;\n  polylinePointFlags[numPoints - 1] = true;\n\n  // Iterative approach using a queue instead of recursion to reduce the number\n  // of function calls (performance)\n  while (partitionQueue.length) {\n    const [startIndex, endIndex] = partitionQueue.pop();\n\n    // Return if there is no point between the start and end points\n    if (endIndex - startIndex === 1) {\n      continue;\n    }\n\n    const startPoint = polyline[startIndex];\n    const endPoint = polyline[endIndex];\n    let maxDistSquared = -Infinity;\n    let maxDistIndex = -1;\n\n    // Search for the furthest point\n    for (let i = startIndex + 1; i < endIndex; i++) {\n      const currentPoint = polyline[i];\n      const distSquared = mathLine.distanceToPointSquared(\n        startPoint,\n        endPoint,\n        currentPoint\n      );\n\n      if (distSquared > maxDistSquared) {\n        maxDistSquared = distSquared;\n        maxDistIndex = i;\n      }\n    }\n\n    // Do not add any of the points because the fursthest one is very close to\n    // the line based on the epsilon value\n    if (maxDistSquared < epsilonSquared) {\n      continue;\n    }\n\n    // Update the flag for the furthest point because it will be added to the\n    // decimated polyline\n    polylinePointFlags[maxDistIndex] = true;\n    numDecimatedPoints++;\n\n    // Partition the points into two parts using maxDistIndex as the pivot point\n    // and process both sides\n    partitionQueue.push([maxDistIndex, endIndex]);\n    partitionQueue.push([startIndex, maxDistIndex]);\n  }\n\n  // A pre-allocated array is 3-4x faster then multiple push() calls\n  const decimatedPolyline: Types.Point2[] = new Array(numDecimatedPoints);\n\n  for (let srcIndex = 0, dstIndex = 0; srcIndex < numPoints; srcIndex++) {\n    if (polylinePointFlags[srcIndex]) {\n      decimatedPolyline[dstIndex++] = polyline[srcIndex];\n    }\n  }\n\n  return decimatedPolyline;\n}\n","import type { Types } from '@cornerstonejs/core';\nimport getLineSegmentIntersectionsIndexes from './getLineSegmentIntersectionsIndexes';\nimport getLinesIntersection from './getLinesIntersection';\n\n/**\n * Returns all intersections points between a line segment and a polyline\n */\nexport default function getLineSegmentIntersectionsCoordinates(\n  points: Types.Point2[],\n  p1: Types.Point2,\n  q1: Types.Point2,\n  closed = true\n): Types.Point2[] {\n  const result = [];\n  const polylineIndexes = getLineSegmentIntersectionsIndexes(\n    points,\n    p1,\n    q1,\n    closed\n  );\n\n  for (let i = 0; i < polylineIndexes.length; i++) {\n    const p2 = points[polylineIndexes[i][0]];\n    const q2 = points[polylineIndexes[i][1]];\n    const intersection = getLinesIntersection(p1, q1, p2, q2);\n    result.push(intersection);\n  }\n\n  return result;\n}\n","import { vec2 } from 'gl-matrix';\nimport type { Types } from '@cornerstonejs/core';\nimport areLineSegmentsIntersecting from './areLineSegmentsIntersecting';\n\n/**\n * Checks whether the line (`p1`,`q1`) intersects any of the other lines in the\n * `points`, and returns the closest value.\n * @param points - Polyline points\n * @param p1 - Start point of the line segment\n * @param q1 - End point of the line segment\n * @param closed - Test the intersection against the line that connects the first to the last when closed\n * @returns The closest line segment from polyline that intersects the line segment [p1, q1]\n */\nexport default function getClosestLineSegmentIntersection(\n  points: Types.Point2[],\n  p1: Types.Point2,\n  q1: Types.Point2,\n  closed = true\n): { segment: Types.Point2; distance: number } | undefined {\n  let initialQ2Index;\n  let p2Index;\n\n  if (closed) {\n    p2Index = points.length - 1;\n    initialQ2Index = 0;\n  } else {\n    p2Index = 0;\n    initialQ2Index = 1;\n  }\n\n  const intersections = [];\n\n  for (let q2Index = initialQ2Index; q2Index < points.length; q2Index++) {\n    const p2 = points[p2Index];\n    const q2 = points[q2Index];\n\n    if (areLineSegmentsIntersecting(p1, q1, p2, q2)) {\n      intersections.push([p2Index, q2Index]);\n    }\n\n    p2Index = q2Index;\n  }\n\n  if (intersections.length === 0) {\n    return;\n  }\n\n  // Find intersection closest to the start point\n  const distances = [];\n\n  intersections.forEach((intersection) => {\n    const intersectionPoints = [\n      points[intersection[0]],\n      points[intersection[1]],\n    ];\n\n    const midpoint = [\n      (intersectionPoints[0][0] + intersectionPoints[1][0]) / 2,\n      (intersectionPoints[0][1] + intersectionPoints[1][1]) / 2,\n    ];\n\n    distances.push(vec2.distance(<vec2>midpoint, p1));\n  });\n\n  const minDistance = Math.min(...distances);\n  const indexOfMinDistance = distances.indexOf(minDistance);\n\n  return {\n    segment: intersections[indexOfMinDistance],\n    distance: minDistance,\n  };\n}\n","import { StackViewport } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\nimport { vec3 } from 'gl-matrix';\n\nconst EPSILON = 1e-3;\n\n/**\n * Gets the desired spacing for points in the polyline for the\n * `PlanarFreehandROITool` in the x and y canvas directions, as well as\n * returning these canvas directions in world space.\n *\n * @param viewport - The Cornerstone3D `StackViewport` or `VolumeViewport`.\n * @param subPixelResolution - The number to divide the image pixel spacing by\n * to get the sub pixel spacing. E.g. `10` will return spacings 10x smaller than\n * the native image spacing.\n * @returns The spacings of the X and Y directions, and the 3D directions of the\n * x and y directions.\n */\nconst getSubPixelSpacingAndXYDirections = (\n  viewport: Types.IStackViewport | Types.IVolumeViewport,\n  subPixelResolution: number\n): { spacing: Types.Point2; xDir: Types.Point3; yDir: Types.Point3 } => {\n  let spacing;\n  let xDir;\n  let yDir;\n\n  if (viewport instanceof StackViewport) {\n    // Check XY directions\n    const imageData = viewport.getImageData();\n\n    xDir = imageData.direction.slice(0, 3);\n    yDir = imageData.direction.slice(3, 6);\n\n    spacing = imageData.spacing;\n  } else {\n    // Check volume directions\n    const imageData = viewport.getImageData();\n    const { direction, spacing: volumeSpacing } = imageData;\n    const { viewPlaneNormal, viewUp } = viewport.getCamera();\n\n    // Calculate size of spacing vector in normal direction\n    const iVector = direction.slice(0, 3) as Types.Point3;\n    const jVector = direction.slice(3, 6) as Types.Point3;\n    const kVector = direction.slice(6, 9) as Types.Point3;\n\n    const viewRight = vec3.create(); // Get the X direction of the viewport\n\n    vec3.cross(viewRight, <vec3>viewUp, <vec3>viewPlaneNormal);\n\n    const absViewRightDotI = Math.abs(vec3.dot(viewRight, iVector));\n    const absViewRightDotJ = Math.abs(vec3.dot(viewRight, jVector));\n    const absViewRightDotK = Math.abs(vec3.dot(viewRight, kVector));\n\n    // Get X spacing\n    let xSpacing;\n    if (Math.abs(1 - absViewRightDotI) < EPSILON) {\n      xSpacing = volumeSpacing[0];\n      xDir = iVector;\n    } else if (Math.abs(1 - absViewRightDotJ) < EPSILON) {\n      xSpacing = volumeSpacing[1];\n      xDir = jVector;\n    } else if (Math.abs(1 - absViewRightDotK) < EPSILON) {\n      xSpacing = volumeSpacing[2];\n      xDir = kVector;\n    } else {\n      throw new Error('No support yet for oblique plane planar contours');\n    }\n\n    const absViewUpDotI = Math.abs(vec3.dot(viewUp, iVector));\n    const absViewUpDotJ = Math.abs(vec3.dot(viewUp, jVector));\n    const absViewUpDotK = Math.abs(vec3.dot(viewUp, kVector));\n\n    // Get Y spacing\n    let ySpacing;\n    if (Math.abs(1 - absViewUpDotI) < EPSILON) {\n      ySpacing = volumeSpacing[0];\n      yDir = iVector;\n    } else if (Math.abs(1 - absViewUpDotJ) < EPSILON) {\n      ySpacing = volumeSpacing[1];\n      yDir = jVector;\n    } else if (Math.abs(1 - absViewUpDotK) < EPSILON) {\n      ySpacing = volumeSpacing[2];\n      yDir = kVector;\n    } else {\n      throw new Error('No support yet for oblique plane planar contours');\n    }\n\n    spacing = [xSpacing, ySpacing];\n  }\n\n  const subPixelSpacing: Types.Point2 = [\n    spacing[0] / subPixelResolution,\n    spacing[1] / subPixelResolution,\n  ];\n\n  return { spacing: subPixelSpacing, xDir, yDir };\n};\n\nexport default getSubPixelSpacingAndXYDirections;\n","import { vec2 } from 'gl-matrix';\nimport type { Types } from '@cornerstonejs/core';\n\n/**\n * Returns true if points `p1` and `p2` are within `closeContourProximity`.\n */\nconst pointsAreWithinCloseContourProximity = (\n  p1: Types.Point2,\n  p2: Types.Point2,\n  closeContourProximity: number\n): boolean => {\n  return vec2.dist(p1, p2) < closeContourProximity;\n};\n\nexport default pointsAreWithinCloseContourProximity;\n","import { getEnabledElement } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\nimport { vec2, vec3 } from 'gl-matrix';\nimport { PlanarFreehandROICommonData } from './planarFreehandROIInternalTypes';\n\n/**\n * Adds one or more points to the array at a resolution defined by the underlying image.\n */\nconst addCanvasPointsToArray = (\n  element: HTMLDivElement,\n  canvasPoints: Types.Point2[],\n  newCanvasPoint: Types.Point2,\n  commonData: PlanarFreehandROICommonData\n): number => {\n  const { xDir, yDir, spacing } = commonData;\n  const enabledElement = getEnabledElement(element);\n  const { viewport } = enabledElement;\n\n  if (!canvasPoints.length) {\n    canvasPoints.push(newCanvasPoint);\n    console.log('>>>>> !canvasPoints. :: RETURN');\n    return 1;\n  }\n\n  const lastWorldPos = viewport.canvasToWorld(\n    canvasPoints[canvasPoints.length - 1]\n  );\n  const newWorldPos = viewport.canvasToWorld(newCanvasPoint);\n  const worldPosDiff = vec3.create();\n\n  vec3.subtract(worldPosDiff, newWorldPos, lastWorldPos);\n\n  const xDist = Math.abs(vec3.dot(worldPosDiff, xDir));\n  const yDist = Math.abs(vec3.dot(worldPosDiff, yDir));\n\n  const numPointsToAdd = Math.max(\n    Math.floor(xDist / spacing[0]),\n    Math.floor(yDist / spacing[0])\n  );\n\n  if (numPointsToAdd > 1) {\n    const lastCanvasPoint = canvasPoints[canvasPoints.length - 1];\n\n    const canvasDist = vec2.dist(lastCanvasPoint, newCanvasPoint);\n\n    const canvasDir = vec2.create();\n\n    vec2.subtract(canvasDir, newCanvasPoint, lastCanvasPoint);\n\n    vec2.set(canvasDir, canvasDir[0] / canvasDist, canvasDir[1] / canvasDist);\n\n    const distPerPoint = canvasDist / numPointsToAdd;\n\n    for (let i = 1; i <= numPointsToAdd; i++) {\n      canvasPoints.push([\n        lastCanvasPoint[0] + distPerPoint * canvasDir[0] * i,\n        lastCanvasPoint[1] + distPerPoint * canvasDir[1] * i,\n      ]);\n    }\n  } else {\n    canvasPoints.push(newCanvasPoint);\n  }\n\n  return numPointsToAdd;\n};\n\nexport default addCanvasPointsToArray;\n","import type { Types } from '@cornerstonejs/core';\nimport { vec2 } from 'gl-matrix';\n\n/**\n * Returns `true` if the point `p` can project onto point (`p1`, `p2`), and if\n * this projected point is less than `proximity` units away.\n */\nconst pointCanProjectOnLine = (\n  p: Types.Point2,\n  p1: Types.Point2,\n  p2: Types.Point2,\n  proximity: number\n): boolean => {\n  // Perfom checks in order of computational complexity.\n  const p1p = [p[0] - p1[0], p[1] - p1[1]];\n  const p1p2 = [p2[0] - p1[0], p2[1] - p1[1]];\n\n  const dot = p1p[0] * p1p2[0] + p1p[1] * p1p2[1];\n\n  // Dot product needs to be positive to be a candidate for projection onto line segment.\n  if (dot < 0) {\n    return false;\n  }\n\n  const p1p2Mag = Math.sqrt(p1p2[0] * p1p2[0] + p1p2[1] * p1p2[1]);\n\n  if (p1p2Mag === 0) {\n    return false;\n  }\n\n  const projectionVectorMag = dot / p1p2Mag;\n  const p1p2UnitVector = [p1p2[0] / p1p2Mag, p1p2[1] / p1p2Mag];\n  const projectionVector = [\n    p1p2UnitVector[0] * projectionVectorMag,\n    p1p2UnitVector[1] * projectionVectorMag,\n  ];\n  const projectionPoint = <Types.Point2>[\n    p1[0] + projectionVector[0],\n    p1[1] + projectionVector[1],\n  ];\n\n  const distance = vec2.distance(p, projectionPoint);\n\n  if (distance > proximity) {\n    // point is too far away.\n    return false;\n  }\n\n  // Check projects onto line segment.\n  if (vec2.distance(p1, projectionPoint) > vec2.distance(p1, p2)) {\n    return false;\n  }\n\n  return true;\n};\n\nexport default pointCanProjectOnLine;\n","import { utilities } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nconst epsilon = 1e-6;\n\n/**\n * Projects a polyline from 3D to 2D by reducing one dimension.\n *\n * @param polyline - The polyline to be projected.\n * @returns An object containing the shared dimension index and the projected polyline in 2D.\n * @throws Error if a shared dimension index cannot be found for the polyline.\n */\nexport function projectTo2D(polyline: Types.Point3[]) {\n  // We need to reduce one dimension to 2D, so basically\n  // we need to find the dimension index that is shared by all points\n  // Use the first three points, two is enough but three is more robust\n  let sharedDimensionIndex;\n\n  const testPoints = utilities.getRandomSampleFromArray(polyline, 50);\n\n  for (let i = 0; i < 3; i++) {\n    if (\n      testPoints.every(\n        (point, index, array) => Math.abs(point[i] - array[0][i]) < epsilon\n      )\n    ) {\n      sharedDimensionIndex = i;\n      break;\n    }\n  }\n\n  if (sharedDimensionIndex === undefined) {\n    throw new Error(\n      'Cannot find a shared dimension index for polyline, probably oblique plane'\n    );\n  }\n\n  // convert polyline list and point to 2D\n  const points2D = [] as Types.Point2[];\n\n  const firstDim = (sharedDimensionIndex + 1) % 3;\n  const secondDim = (sharedDimensionIndex + 2) % 3;\n\n  for (let i = 0; i < polyline.length; i++) {\n    points2D.push([polyline[i][firstDim], polyline[i][secondDim]]);\n  }\n\n  return {\n    sharedDimensionIndex,\n    projectedPolyline: points2D,\n  };\n}\n","import type { Types } from '@cornerstonejs/core';\nimport containsPoint from './containsPoint';\nimport { projectTo2D } from './projectTo2D';\n\n/**\n * Determines whether a 3D point is inside a polyline in 3D space.\n *\n * The algorithm works by reducing the polyline and point to 2D space, and then\n * using the 2D algorithm to determine whether the point is inside the polyline.\n *\n * @param point - The 3D point to test.\n * @param polyline - The polyline represented as an array of 3D points.\n * @param options.holesPolyline - An array of polylines representing each hole, so it\n * is an array of arrays of 3D points.\n * @returns A boolean indicating whether the point is inside the polyline.\n * @throws An error if a shared dimension index cannot be found for the polyline points.\n */\nexport function isPointInsidePolyline3D(\n  point: Types.Point3,\n  polyline: Types.Point3[],\n  options: { holes?: Types.Point3[][] } = {}\n) {\n  const { sharedDimensionIndex, projectedPolyline } = projectTo2D(polyline);\n\n  const { holes } = options;\n  const projectedHoles = [] as Types.Point2[][];\n\n  if (holes) {\n    for (let i = 0; i < holes.length; i++) {\n      const hole = holes[i];\n      const hole2D = [] as Types.Point2[];\n\n      for (let j = 0; j < hole.length; j++) {\n        hole2D.push([\n          hole[j][(sharedDimensionIndex + 1) % 3],\n          hole[j][(sharedDimensionIndex + 2) % 3],\n        ]);\n      }\n\n      projectedHoles.push(hole2D);\n    }\n  }\n\n  const point2D = [\n    point[(sharedDimensionIndex + 1) % 3],\n    point[(sharedDimensionIndex + 2) % 3],\n  ] as Types.Point2;\n\n  return containsPoint(projectedPolyline, point2D, { holes: projectedHoles });\n}\n","import type { Types } from '@cornerstonejs/core';\nimport * as lineSegment from '../line';\n\ntype rectLineSegments = {\n  top: Types.Point2[];\n  right: Types.Point2[];\n  bottom: Types.Point2[];\n  left: Types.Point2[];\n};\n\n/**\n * Given a rectangle left, top, width and height, return an object containing the\n * line segments that make up the rectangle's four sides\n * @param left - The x-coordinate of the left edge of the rectangle.\n * @param top - The y-coordinate of the top edge of the rectangle.\n * @param width - The width of the rectangle.\n * @param height - The height of the rectangle.\n * @returns An object with four keys, each of which contains an array of two\n * points.\n */\nfunction rectToLineSegments(\n  left: number,\n  top: number,\n  width: number,\n  height: number\n): rectLineSegments {\n  const topLineStart: Types.Point2 = [left, top];\n  const topLineEnd: Types.Point2 = [left + width, top];\n\n  const rightLineStart: Types.Point2 = [left + width, top];\n  const rightLineEnd: Types.Point2 = [left + width, top + height];\n\n  const bottomLineStart: Types.Point2 = [left + width, top + height];\n  const bottomLineEnd: Types.Point2 = [left, top + height];\n\n  const leftLineStart: Types.Point2 = [left, top + height];\n  const leftLineEnd: Types.Point2 = [left, top];\n\n  const lineSegments = {\n    top: [topLineStart, topLineEnd],\n    right: [rightLineStart, rightLineEnd],\n    bottom: [bottomLineStart, bottomLineEnd],\n    left: [leftLineStart, leftLineEnd],\n  };\n\n  return lineSegments;\n}\n\n/**\n * Calculates distance of the point to the rectangle. It calculates the minimum\n * distance between the point and each line segment of the rectangle.\n *\n * @param rect - coordinates of the rectangle [left, top, width, height]\n * @param point - [x,y] coordinates of a point\n * @returns\n */\nexport default function distanceToPoint(\n  rect: number[],\n  point: Types.Point2\n): number {\n  if (rect.length !== 4 || point.length !== 2) {\n    throw Error(\n      'rectangle:[left, top, width, height] or point: [x,y] not defined correctly'\n    );\n  }\n\n  const [left, top, width, height] = rect;\n\n  let minDistance = 655535;\n  const lineSegments = rectToLineSegments(left, top, width, height);\n\n  Object.keys(lineSegments).forEach((segment) => {\n    const [lineStart, lineEnd] = lineSegments[segment];\n    const distance = lineSegment.distanceToPoint(lineStart, lineEnd, point);\n\n    if (distance < minDistance) {\n      minDistance = distance;\n    }\n  });\n\n  return minDistance;\n}\n","import type { Types } from '@cornerstonejs/core';\nimport { vec3 } from 'gl-matrix';\n\ntype Sphere = {\n  center: Types.Point3 | vec3;\n  radius: number;\n  // Square of the radius\n  radius2?: number;\n};\n\n/**\n * Checks if a point is inside a sphere. Note: this is similar to the\n * `pointInEllipse` function, but since we don't need checks for the\n * ellipse's rotation in different views, we can use a simpler equation\n * which would be faster (no if statements).\n *\n * This is safe to call for point in circle as long as you don't call it with\n * anything off-plane - that is, a circle is a degenerate sphere that is\n * intersected with the primary plane.\n *\n * @param sphere - Sphere object with center and radius and radius squared\n *     as radius2 if you are calling this a huge number of times.\n * @param pointLPS - the point to check in world coordinates\n * @returns boolean\n */\nexport default function pointInSphere(sphere: Sphere, pointLPS: vec3): boolean {\n  const { center, radius } = sphere;\n  const radius2 = sphere.radius2 || radius * radius;\n\n  return (\n    (pointLPS[0] - center[0]) * (pointLPS[0] - center[0]) +\n      (pointLPS[1] - center[1]) * (pointLPS[1] - center[1]) +\n      (pointLPS[2] - center[2]) * (pointLPS[2] - center[2]) <=\n    radius2\n  );\n}\n","// Pulled from source: https://github.com/w8r/liang-barsky\n// MIT Licensed.\n\n/**\n * Fast, destructive implementation of Liang-Barsky line clipping algorithm.\n * It clips a 2D segment by a rectangle.\n * @author Alexander Milevski <info@w8r.name>\n * @license MIT\n */\n\nconst EPSILON = 1e-6;\nconst INSIDE = 1;\nconst OUTSIDE = 0;\n\nfunction clipT(num, denom, c) {\n  const [tE, tL] = c;\n  if (Math.abs(denom) < EPSILON) {\n    return num < 0;\n  }\n  const t = num / denom;\n\n  if (denom > 0) {\n    if (t > tL) {\n      return 0;\n    }\n    if (t > tE) {\n      c[0] = t;\n    }\n  } else {\n    if (t < tE) {\n      return 0;\n    }\n    if (t < tL) {\n      c[1] = t;\n    }\n  }\n  return 1;\n}\n\n/**\n * @param  {Point} a\n * @param  {Point} b\n * @param  {BoundingBox} box [xmin, ymin, xmax, ymax]\n * @param  {Point?} [da]\n * @param  {Point?} [db]\n * @return {number}\n */\nexport default function clip(a, b, box, da?, db?) {\n  const [x1, y1] = a;\n  const [x2, y2] = b;\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n\n  if (da === undefined || db === undefined) {\n    da = a;\n    db = b;\n  } else {\n    da[0] = a[0];\n    da[1] = a[1];\n    db[0] = b[0];\n    db[1] = b[1];\n  }\n\n  if (\n    Math.abs(dx) < EPSILON &&\n    Math.abs(dy) < EPSILON &&\n    x1 >= box[0] &&\n    x1 <= box[2] &&\n    y1 >= box[1] &&\n    y1 <= box[3]\n  ) {\n    return INSIDE;\n  }\n\n  const c = [0, 1];\n  if (\n    clipT(box[0] - x1, dx, c) &&\n    clipT(x1 - box[2], -dx, c) &&\n    clipT(box[1] - y1, dy, c) &&\n    clipT(y1 - box[3], -dy, c)\n  ) {\n    const [tE, tL] = c;\n    if (tL < 1) {\n      db[0] = x1 + tL * dx;\n      db[1] = y1 + tL * dy;\n    }\n    if (tE > 0) {\n      da[0] += tE * dx;\n      da[1] += tE * dy;\n    }\n    return INSIDE;\n  }\n  return OUTSIDE;\n}\n","import filterAnnotationsWithinSlice from './filterAnnotationsWithinSlice';\nimport getWorldWidthAndHeightFromCorners from './getWorldWidthAndHeightFromCorners';\nimport filterAnnotationsForDisplay from './filterAnnotationsForDisplay';\nimport getPointInLineOfSightWithCriteria from './getPointInLineOfSightWithCriteria';\nimport { isPlaneIntersectingAABB } from './isPlaneIntersectingAABB';\n\nexport default {\n  filterAnnotationsWithinSlice,\n  getWorldWidthAndHeightFromCorners,\n  filterAnnotationsForDisplay,\n  getPointInLineOfSightWithCriteria,\n  isPlaneIntersectingAABB,\n};\n\nexport {\n  filterAnnotationsWithinSlice,\n  getWorldWidthAndHeightFromCorners,\n  filterAnnotationsForDisplay,\n  getPointInLineOfSightWithCriteria,\n  isPlaneIntersectingAABB,\n};\n","import smoothAnnotation from './smoothAnnotation';\n\nexport default {\n  smoothAnnotation,\n};\n\nexport { smoothAnnotation };\n","import { vec3 } from 'gl-matrix';\nimport type { Types } from '@cornerstonejs/core';\nimport type { vtkImageData } from '@kitware/vtk.js/Common/DataModel/ImageData';\nimport BoundsIJK from '../types/BoundsIJK';\n\nexport type PointInShape = {\n  value: number;\n  index: number;\n  pointIJK: vec3;\n  pointLPS: vec3 | number[];\n};\n\nexport type PointInShapeCallback = ({\n  value,\n  index,\n  pointIJK,\n  pointLPS,\n}: {\n  value: number;\n  index: number;\n  pointIJK: vec3;\n  pointLPS: vec3;\n}) => void;\n\nexport type ShapeFnCriteria = (pointLPS: vec3, pointIJK: vec3) => boolean;\n\n/**\n * For each point in the image (If boundsIJK is not provided, otherwise, for each\n * point in the provided bounding box), It runs the provided callback IF the point\n * passes the provided criteria to be inside the shape (which is defined by the\n * provided pointInShapeFn)\n *\n * @param imageData - The image data object.\n * @param dimensions - The dimensions of the image.\n * @param pointInShapeFn - A function that takes a point in LPS space and returns\n * true if the point is in the shape and false if it is not.\n * @param callback - A function that will be called for\n * every point in the shape.\n * @param boundsIJK - The bounds of the volume in IJK coordinates.\n */\nexport default function pointInShapeCallback(\n  imageData: vtkImageData | Types.CPUImageData,\n  pointInShapeFn: ShapeFnCriteria,\n  callback?: PointInShapeCallback,\n  boundsIJK?: BoundsIJK\n): Array<PointInShape> {\n  let iMin, iMax, jMin, jMax, kMin, kMax;\n\n  let scalarData;\n  const { numComps } = imageData as any;\n\n  // if getScalarData is a method on imageData\n  if ((imageData as Types.CPUImageData).getScalarData) {\n    scalarData = (imageData as Types.CPUImageData).getScalarData();\n  } else {\n    scalarData = (imageData as vtkImageData)\n      .getPointData()\n      .getScalars()\n      .getData();\n  }\n\n  if (!scalarData) {\n    console.warn('No scalar data found for imageData', imageData);\n    return;\n  }\n\n  const dimensions = imageData.getDimensions();\n\n  if (!boundsIJK) {\n    iMin = 0;\n    iMax = dimensions[0];\n    jMin = 0;\n    jMax = dimensions[1];\n    kMin = 0;\n    kMax = dimensions[2];\n  } else {\n    [[iMin, iMax], [jMin, jMax], [kMin, kMax]] = boundsIJK;\n  }\n\n  const start = vec3.fromValues(iMin, jMin, kMin);\n\n  const direction = imageData.getDirection();\n  const rowCosines = direction.slice(0, 3);\n  const columnCosines = direction.slice(3, 6);\n  const scanAxisNormal = direction.slice(6, 9);\n\n  const spacing = imageData.getSpacing();\n  const [rowSpacing, columnSpacing, scanAxisSpacing] = spacing;\n\n  // @ts-ignore will be fixed in vtk-master\n  const worldPosStart = imageData.indexToWorld(start);\n\n  const rowStep = vec3.fromValues(\n    rowCosines[0] * rowSpacing,\n    rowCosines[1] * rowSpacing,\n    rowCosines[2] * rowSpacing\n  );\n\n  const columnStep = vec3.fromValues(\n    columnCosines[0] * columnSpacing,\n    columnCosines[1] * columnSpacing,\n    columnCosines[2] * columnSpacing\n  );\n\n  const scanAxisStep = vec3.fromValues(\n    scanAxisNormal[0] * scanAxisSpacing,\n    scanAxisNormal[1] * scanAxisSpacing,\n    scanAxisNormal[2] * scanAxisSpacing\n  );\n\n  const xMultiple =\n    numComps ||\n    scalarData.length / dimensions[2] / dimensions[1] / dimensions[0];\n  const yMultiple = dimensions[0] * xMultiple;\n  const zMultiple = dimensions[1] * yMultiple;\n\n  const pointsInShape: Array<PointInShape> = [];\n\n  const currentPos = vec3.clone(worldPosStart);\n\n  for (let k = kMin; k <= kMax; k++) {\n    const startPosJ = vec3.clone(currentPos);\n\n    for (let j = jMin; j <= jMax; j++) {\n      const startPosI = vec3.clone(currentPos);\n\n      for (let i = iMin; i <= iMax; i++) {\n        const pointIJK: Types.Point3 = [i, j, k];\n\n        // The current world position (pointLPS) is now in currentPos\n        if (pointInShapeFn(currentPos as Types.Point3, pointIJK)) {\n          const index = k * zMultiple + j * yMultiple + i * xMultiple;\n          let value;\n          if (xMultiple > 2) {\n            value = [\n              scalarData[index],\n              scalarData[index + 1],\n              scalarData[index + 2],\n            ];\n          } else {\n            value = scalarData[index];\n          }\n\n          pointsInShape.push({\n            value,\n            index,\n            pointIJK,\n            pointLPS: currentPos.slice(),\n          });\n          if (callback) {\n            callback({ value, index, pointIJK, pointLPS: currentPos });\n          }\n        }\n\n        // Increment currentPos by rowStep for the next iteration\n        vec3.add(currentPos, currentPos, rowStep);\n      }\n\n      // Reset currentPos to the start of the next J line and increment by columnStep\n      vec3.copy(currentPos, startPosI);\n      vec3.add(currentPos, currentPos, columnStep);\n    }\n\n    // Reset currentPos to the start of the next K slice and increment by scanAxisStep\n    vec3.copy(currentPos, startPosJ);\n    vec3.add(currentPos, currentPos, scanAxisStep);\n  }\n\n  return pointsInShape;\n}\n","import { utilities as csUtils } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport type { vtkImageData } from '@kitware/vtk.js/Common/DataModel/ImageData';\nimport { vec3 } from 'gl-matrix';\nimport { pointInSphere } from './math/sphere';\nimport pointInShapeCallback, {\n  PointInShapeCallback,\n} from './pointInShapeCallback';\nimport { BoundsIJK } from '../types';\nimport { getBoundingBoxAroundShape } from './boundingBox';\n\nconst { transformWorldToIndex } = csUtils;\n\n/**\n * Given an imageData, and the great circle top and bottom points of a sphere,\n * this function will run the callback for each point of the imageData that is\n * within the sphere defined by the great circle points. If the viewport\n * is provided, region of interest will be an accurate approximation of the\n * sphere (using viewport camera), and the resulting performance will be\n * better.\n *\n * @privateRemarks great circle also known as orthodrome is the intersection of\n * the sphere and the plane that passes through the center of the sphere\n *\n * @param imageData - The volume imageData\n * @param circlePoints - bottom and top points of the great circle in world coordinates\n * @param callback - A callback function that will be called for each point in the shape.\n */\nexport default function pointInSurroundingSphereCallback(\n  imageData: vtkImageData,\n  circlePoints: [Types.Point3, Types.Point3],\n  callback: PointInShapeCallback,\n  viewport?: Types.IVolumeViewport\n): void {\n  // We can run the sphere equation to determine if a point is inside\n  // the sphere; however, since the imageData dimensions can be quite large, we\n  // can narrow down the search by estimating the bounds of the sphere in index\n  // space.\n  const { boundsIJK, centerWorld, radiusWorld } = _getBounds(\n    circlePoints,\n    imageData,\n    viewport\n  );\n\n  const sphereObj = {\n    center: centerWorld,\n    radius: radiusWorld,\n  };\n\n  pointInShapeCallback(\n    imageData,\n    (pointLPS) => pointInSphere(sphereObj, pointLPS),\n    callback,\n    boundsIJK\n  );\n}\n\nfunction _getBounds(\n  circlePoints: [Types.Point3, Types.Point3],\n  imageData: vtkImageData,\n  viewport\n): {\n  boundsIJK: BoundsIJK;\n  centerWorld: Types.Point3;\n  radiusWorld: number;\n} {\n  const [bottom, top] = circlePoints;\n\n  // Sphere center in world\n  const centerWorld = vec3.fromValues(\n    (bottom[0] + top[0]) / 2,\n    (bottom[1] + top[1]) / 2,\n    (bottom[2] + top[2]) / 2\n  );\n\n  // sphere radius in world\n  const radiusWorld = vec3.distance(bottom, top) / 2;\n\n  let boundsIJK;\n\n  if (!viewport) {\n    // If no viewport is provide (no camera), we can estimate the bounding box\n    // of the sphere in index space.\n    // This is done by calculating the maximum value for radius in the index\n    // space (since the radius is in world space, we need to convert it to index, and\n    // each dimensions can have a different scale factor). Therefore, by finding\n    // the minimum spacing value in the imageData, we can calculate the maximum\n    // radius in index space and use that to calculate the bounds of the sphere\n    // This will not be accurate, but it is a good first approximation.\n    // sphere center in index\n    const centerIJK = transformWorldToIndex(\n      imageData,\n      centerWorld as Types.Point3\n    );\n\n    const spacings = imageData.getSpacing();\n    const minSpacing = Math.min(...spacings);\n\n    const maxRadiusIJK = Math.ceil(radiusWorld / minSpacing);\n\n    boundsIJK = [\n      [centerIJK[0] - maxRadiusIJK, centerIJK[0] + maxRadiusIJK],\n      [centerIJK[1] - maxRadiusIJK, centerIJK[1] + maxRadiusIJK],\n      [centerIJK[2] - maxRadiusIJK, centerIJK[2] + maxRadiusIJK],\n    ];\n\n    return {\n      boundsIJK,\n      centerWorld: centerWorld as Types.Point3,\n      radiusWorld,\n    };\n  }\n\n  boundsIJK = _computeBoundsIJKWithCamera(\n    imageData,\n    viewport,\n    circlePoints,\n    centerWorld,\n    radiusWorld\n  );\n\n  return {\n    boundsIJK,\n    centerWorld: centerWorld as Types.Point3,\n    radiusWorld,\n  };\n}\n\nfunction _computeBoundsIJKWithCamera(\n  imageData,\n  viewport,\n  circlePoints,\n  centerWorld,\n  radiusWorld\n) {\n  const [bottom, top] = circlePoints;\n\n  const dimensions = imageData.getDimensions() as Types.Point3;\n  const camera = viewport.getCamera();\n\n  // Calculate viewRight from the camera, this will get used in order to\n  // calculate circles topLeft and bottomRight on different planes of intersection\n  // between sphere and viewPlane\n  const viewUp = vec3.fromValues(\n    camera.viewUp[0],\n    camera.viewUp[1],\n    camera.viewUp[2]\n  );\n  const viewPlaneNormal = vec3.fromValues(\n    camera.viewPlaneNormal[0],\n    camera.viewPlaneNormal[1],\n    camera.viewPlaneNormal[2]\n  );\n  const viewRight = vec3.create();\n\n  vec3.cross(viewRight, viewUp, viewPlaneNormal);\n\n  // we need to find the bounding box of the sphere in the image, e.g., the\n  // topLeftWorld and bottomRightWorld points of the bounding box.\n  // We go from the sphereCenter in the normal direction of amount radius, and\n  // we go left to find the topLeftWorld point of the bounding box. Next we go\n  // in the opposite direction and go right to find the bottomRightWorld point\n  // of the bounding box.\n  const topLeftWorld = vec3.create();\n  const bottomRightWorld = vec3.create();\n\n  vec3.scaleAndAdd(topLeftWorld, top, viewPlaneNormal, radiusWorld);\n  vec3.scaleAndAdd(bottomRightWorld, bottom, viewPlaneNormal, -radiusWorld);\n\n  // go in the direction of viewRight with the value of radius\n  vec3.scaleAndAdd(topLeftWorld, topLeftWorld, viewRight, -radiusWorld);\n  vec3.scaleAndAdd(bottomRightWorld, bottomRightWorld, viewRight, radiusWorld);\n\n  // convert the world coordinates to index coordinates\n\n  const sphereCornersIJK = [\n    <Types.Point3>transformWorldToIndex(imageData, <Types.Point3>topLeftWorld),\n    <Types.Point3>(\n      transformWorldToIndex(imageData, <Types.Point3>bottomRightWorld)\n    ),\n  ];\n\n  // get the bounding box of the sphere in the image\n  const boundsIJK = getBoundingBoxAroundShape(sphereCornersIJK, dimensions);\n\n  return boundsIJK;\n}\n","export function pointToString(point, decimals = 5) {\n  return (\n    parseFloat(point[0]).toFixed(decimals) +\n    ',' +\n    parseFloat(point[1]).toFixed(decimals) +\n    ',' +\n    parseFloat(point[2]).toFixed(decimals) +\n    ','\n  );\n}\n","import vtkPolyData from '@kitware/vtk.js/Common/DataModel/PolyData';\nimport type { Types } from '@cornerstonejs/core';\nimport { vec3 } from 'gl-matrix';\n\n/**\n * Gets a point from an array of numbers given its index\n * @param points - array of number, each point defined by three consecutive numbers\n * @param idx - index of the point to retrieve\n * @returns\n */\nexport function getPoint(points, idx): Types.Point3 {\n  const idx3 = idx * 3;\n  if (idx3 < points.length) {\n    return vec3.fromValues(\n      points[idx3],\n      points[idx3 + 1],\n      points[idx3 + 2]\n    ) as Types.Point3;\n  }\n}\n\n/**\n * Extract contour point sets from the outline of a poly data actor\n * @param polyData - vtk polyData\n * @returns\n */\nexport function getPolyDataPointIndexes(polyData: vtkPolyData) {\n  const linesData = polyData.getLines().getData();\n  let idx = 0;\n  const lineSegments = new Map<number, number[]>();\n\n  // Populate lineSegments map\n  while (idx < linesData.length) {\n    const segmentSize = linesData[idx++];\n    const segment = [];\n    for (let i = 0; i < segmentSize; i++) {\n      segment.push(linesData[idx + i]);\n    }\n    lineSegments.set(segment[0], segment);\n    idx += segmentSize;\n  }\n\n  const contours = [];\n\n  // Function to find an available starting point\n  const findStartingPoint = (map) => {\n    for (const [key, value] of map.entries()) {\n      if (value !== undefined) {\n        return key;\n      }\n    }\n    return -1;\n  };\n\n  // Build contours\n  let startPoint = findStartingPoint(lineSegments);\n  while (startPoint !== -1) {\n    const contour = [startPoint];\n    while (lineSegments.has(startPoint)) {\n      const nextPoint = lineSegments.get(startPoint)[1];\n      if (lineSegments.has(nextPoint)) {\n        contour.push(nextPoint);\n      }\n      lineSegments.delete(startPoint);\n      startPoint = nextPoint;\n    }\n    contours.push(contour);\n    startPoint = findStartingPoint(lineSegments);\n  }\n\n  return contours.length ? contours : undefined;\n}\n\n/**\n * Extract contour points from a poly data object\n * @param polyData - vtk polyData\n * @returns\n */\nexport function getPolyDataPoints(polyData: vtkPolyData) {\n  const contoursIndexes = getPolyDataPointIndexes(polyData);\n  if (!contoursIndexes) {\n    return;\n  }\n\n  const rawPointsData = polyData.getPoints().getData();\n  return contoursIndexes.map((contourIndexes) =>\n    contourIndexes.map((index) => getPoint(rawPointsData, index))\n  );\n}\n","import { vec3 } from 'gl-matrix';\nimport { utilities as csUtils } from '@cornerstonejs/core';\n\nconst { isEqual } = csUtils;\n\nconst iAxis = vec3.fromValues(1, 0, 0);\nconst jAxis = vec3.fromValues(0, 1, 0);\nconst kAxis = vec3.fromValues(0, 0, 1);\n\nconst axisList = [iAxis, jAxis, kAxis];\n\n/**\n * Determines whether a given rectangle in a 3D space (defined by its corner\n * points in IJK coordinates) is aligned with the IJK axes.\n * @param rectangleCornersIJK - The corner points of the rectangle in IJK coordinates\n * @returns True if the rectangle is aligned with the IJK axes, false otherwise\n */\nfunction isAxisAlignedRectangle(rectangleCornersIJK) {\n  const rectangleVec1 = vec3.subtract(\n    vec3.create(),\n    rectangleCornersIJK[0],\n    rectangleCornersIJK[1]\n  );\n\n  const rectangleVec2 = vec3.subtract(\n    vec3.create(),\n    rectangleCornersIJK[0],\n    rectangleCornersIJK[2]\n  );\n\n  // Calculate the angles with IJK axes for both vectors\n  const anglesVec1 = calculateAnglesWithAxes(rectangleVec1, axisList);\n  const anglesVec2 = calculateAnglesWithAxes(rectangleVec2, axisList);\n\n  // Check if all angles are aligned (0, 90, 180, or 270 degrees)\n  // we could do csUtils.isEqual(angle % 90, 0) but this is more explicit for reading\n  const isAligned = [...anglesVec1, ...anglesVec2].every(\n    (angle) =>\n      isEqual(angle, 0) ||\n      isEqual(angle, 90) ||\n      isEqual(angle, 180) ||\n      isEqual(angle, 270)\n  );\n\n  return isAligned;\n}\n\n// Function to calculate angle with IJK axes\nfunction calculateAnglesWithAxes(vec, axes) {\n  return axes.map((axis) => (vec3.angle(vec, axis) * 180) / Math.PI);\n}\n\nexport { isAxisAlignedRectangle };\n","import {\n  StackViewport,\n  Types,\n  VolumeViewport,\n  eventTarget,\n  EVENTS,\n  utilities as csUtils,\n  getEnabledElement,\n} from '@cornerstonejs/core';\nimport { ScrollOptions, EventTypes } from '../types';\n\n/**\n * It scrolls one slice in the Stack or Volume Viewport, it uses the options provided\n * to determine the slice to scroll to. For Stack Viewport, it scrolls in the 1 or -1\n * direction, for Volume Viewport, it uses the camera and focal point to determine the\n * slice to scroll to based on the spacings.\n * @param viewport - The viewport in which to scroll\n * @param options - Options to use for scrolling, including direction, invert, and volumeId\n * @returns\n */\nexport default function scroll(\n  viewport: Types.IViewport,\n  options: ScrollOptions\n): void {\n  // check if viewport is disabled then throw error\n  const enabledElement = getEnabledElement(viewport.element);\n\n  if (!enabledElement) {\n    throw new Error('Scroll::Viewport is not enabled (it might be disabled)');\n  }\n\n  if (\n    viewport instanceof StackViewport &&\n    viewport.getImageIds().length === 0\n  ) {\n    throw new Error('Scroll::Stack Viewport has no images');\n  }\n\n  const { volumeId, delta, scrollSlabs } = options;\n\n  if (viewport instanceof VolumeViewport) {\n    scrollVolume(viewport, volumeId, delta, scrollSlabs);\n  } else {\n    (viewport as Types.IStackViewport).scroll(\n      delta,\n      options.debounceLoading,\n      options.loop\n    );\n  }\n}\n\nexport function scrollVolume(\n  viewport: VolumeViewport,\n  volumeId: string,\n  delta: number,\n  scrollSlabs = false\n) {\n  const useSlabThickness = scrollSlabs;\n\n  const { numScrollSteps, currentStepIndex, sliceRangeInfo } =\n    csUtils.getVolumeViewportScrollInfo(viewport, volumeId, useSlabThickness);\n\n  if (!sliceRangeInfo) {\n    return;\n  }\n\n  const { sliceRange, spacingInNormalDirection, camera } = sliceRangeInfo;\n  const { focalPoint, viewPlaneNormal, position } = camera;\n\n  const { newFocalPoint, newPosition } = csUtils.snapFocalPointToSlice(\n    focalPoint,\n    position,\n    sliceRange,\n    viewPlaneNormal,\n    spacingInNormalDirection,\n    delta\n  );\n\n  viewport.setCamera({\n    focalPoint: newFocalPoint,\n    position: newPosition,\n  });\n  viewport.render();\n\n  const desiredStepIndex = currentStepIndex + delta;\n\n  const VolumeScrollEventDetail: EventTypes.VolumeScrollOutOfBoundsEventDetail =\n    {\n      volumeId,\n      viewport,\n      delta,\n      desiredStepIndex,\n      currentStepIndex,\n      numScrollSteps,\n      currentImageId: viewport.getCurrentImageId(),\n    };\n\n  if (\n    (desiredStepIndex > numScrollSteps || desiredStepIndex < 0) &&\n    viewport.getCurrentImageId() // Check that we are in the plane of acquistion\n  ) {\n    // One common use case of this trigger might be to load the next\n    // volume in a time series or the next segment of a partially loaded volume.\n\n    csUtils.triggerEvent(\n      eventTarget,\n      EVENTS.VOLUME_SCROLL_OUT_OF_BOUNDS,\n      VolumeScrollEventDetail\n    );\n  } else {\n    csUtils.triggerEvent(\n      eventTarget,\n      EVENTS.VOLUME_VIEWPORT_SCROLL,\n      VolumeScrollEventDetail\n    );\n  }\n}\n","import { utilities as csUtils } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\nimport {\n  AnnotationCompletedEventType,\n  AnnotationModifiedEventType,\n  AnnotationRemovedEventType,\n} from '../../../types/EventTypes';\nimport { state as annotationState } from '../../../stateManagement/annotation';\nimport type AnnotationGroupSelector from '../../../types/AnnotationGroupSelector';\nimport getInterpolationDataCollection from '../../contours/interpolation/getInterpolationDataCollection';\nimport type {\n  InterpolationViewportData,\n  AcceptInterpolationSelector,\n} from '../../../types/InterpolationTypes';\nimport interpolate from '../../contours/interpolation/interpolate';\nimport deleteRelatedAnnotations from './deleteRelatedAnnotations';\nimport { InterpolationROIAnnotation } from '../../../types/ToolSpecificAnnotationTypes';\nimport ChangeTypes from '../../../enums/ChangeTypes';\nimport getViewportForAnnotation from '../../getViewportForAnnotation';\nimport { addContourSegmentationAnnotation } from '../../contourSegmentation/addContourSegmentationAnnotation';\n\nconst { uuidv4 } = csUtils;\n\nconst ChangeTypesForInterpolation = [\n  ChangeTypes.HandlesUpdated,\n  ChangeTypes.InterpolationUpdated,\n];\n\nexport default class InterpolationManager {\n  static toolNames = [];\n\n  static addTool(toolName: string) {\n    if (!this.toolNames.includes(toolName)) {\n      this.toolNames.push(toolName);\n    }\n  }\n\n  /**\n   * Accepts the autogenerated interpolations, marking them as non-autogenerated.\n   * Can provide a selector to choose which ones to accept.\n   *\n   * Rules for which items to select:\n   * 1. Only choose annotations having the same segment index and segmentationID\n   * 2. Exclude all contours having the same interpolation UID as any other contours\n   *    on the same slice.\n   * 3. Exclude autogenerated annotations\n   * 4. Exclude any reset interpolationUIDs (this is a manual operation to allow\n   *    creating a new interpolation)\n   * 5. Find the set of interpolationUID's remaining\n   *    a. If the set is of size 0, assign a new interpolationUID\n   *    b. If the set is of size 1, assign that interpolationUID\n   *    c. Otherwise (optional, otherwise do b for size>1 randomly),\n   *       for every remaining annotation, find the one whose center\n   *       point is closest to the center point of the new annotation.\n   *       Choose that interpolationUID\n   *\n   * To allow creating new interpolated groups, the idea is to just use a new\n   * segment index, then have an operation to update the segment index of an\n   * interpolation set.  That way the user can easily draw/see the difference,\n   * and then merge them as required.\n   * However, the base rules allow creating two contours on a single image to\n   * create a separate set.\n   */\n  static acceptAutoGenerated(\n    annotationGroupSelector: AnnotationGroupSelector,\n    selector: AcceptInterpolationSelector = {}\n  ) {\n    const { toolNames, segmentationId, segmentIndex, sliceIndex } = selector;\n    for (const toolName of toolNames || InterpolationManager.toolNames) {\n      const annotations = annotationState.getAnnotations(\n        toolName,\n        annotationGroupSelector\n      ) as InterpolationROIAnnotation[];\n      if (!annotations?.length) {\n        continue;\n      }\n      for (const annotation of annotations) {\n        const { interpolationUID, data, autoGenerated, metadata } = annotation;\n        if (interpolationUID) {\n          annotation.interpolationCompleted = true;\n        }\n        if (!autoGenerated) {\n          continue;\n        }\n        if (segmentIndex && segmentIndex !== data.segmentation.segmentIndex) {\n          continue;\n        }\n        if (\n          sliceIndex !== undefined &&\n          metadata &&\n          sliceIndex !== metadata.sliceIndex\n        ) {\n          continue;\n        }\n        if (\n          segmentationId &&\n          segmentationId !== data.segmentation.segmentationId\n        ) {\n          continue;\n        }\n        addContourSegmentationAnnotation(annotation);\n        annotation.autoGenerated = false;\n      }\n    }\n  }\n\n  /**\n   * When an annotation is completed, if the configuration includes interpolation,\n   * then find matching interpolations and interpolation between this segmentation\n   * and the other segmentations of the same type.\n   */\n  static handleAnnotationCompleted = (evt: AnnotationCompletedEventType) => {\n    const annotation = evt.detail.annotation as InterpolationROIAnnotation;\n    if (!annotation?.metadata) {\n      return;\n    }\n    const { toolName, originalToolName } = annotation.metadata;\n\n    if (\n      !this.toolNames.includes(toolName) &&\n      !this.toolNames.includes(originalToolName)\n    ) {\n      return;\n    }\n\n    const viewport = getViewportForAnnotation(annotation);\n    if (!viewport) {\n      console.warn('Unable to find viewport for', annotation);\n      return;\n    }\n    const sliceData: Types.ImageSliceData = getSliceData(viewport);\n    const viewportData: InterpolationViewportData = {\n      viewport,\n      sliceData,\n      annotation,\n      interpolationUID: annotation.interpolationUID,\n    };\n    const hasInterpolationUID = !!annotation.interpolationUID;\n    // If any update, triggered on an annotation, then it will be treated as non-autogenerated.\n    annotation.autoGenerated = false;\n    if (hasInterpolationUID) {\n      // This has already been configured with matching details, so just run\n      //  the interpolation again.\n      deleteRelatedAnnotations(viewportData);\n      interpolate(viewportData);\n      return;\n    }\n    const filterData = [\n      {\n        key: 'segmentIndex',\n        value: annotation.data.segmentation.segmentIndex,\n        parentKey: (annotation) => annotation.data.segmentation,\n      },\n      {\n        key: 'viewPlaneNormal',\n        value: annotation.metadata.viewPlaneNormal,\n        parentKey: (annotation) => annotation.metadata,\n      },\n      {\n        key: 'viewUp',\n        value: annotation.metadata.viewUp,\n        parentKey: (annotation) => annotation.metadata,\n      },\n    ];\n    let interpolationAnnotations = getInterpolationDataCollection(\n      viewportData,\n      filterData\n    );\n    // Skip other type of annotation interpolationUID's that are co-located\n    const { sliceIndex } = annotation.metadata;\n    const skipUIDs = new Set<string>();\n    interpolationAnnotations.forEach((interpolationAnnotation) => {\n      if (\n        interpolationAnnotation.interpolationCompleted ||\n        interpolationAnnotation.metadata.sliceIndex === sliceIndex\n      ) {\n        const { interpolationUID } = interpolationAnnotation;\n        skipUIDs.add(interpolationUID);\n      }\n    });\n    interpolationAnnotations = interpolationAnnotations.filter(\n      (interpolationAnnotation) =>\n        !skipUIDs.has(interpolationAnnotation.interpolationUID)\n    );\n\n    // Assign a new interpolationUID (this is checked above, so will be empty initially)\n    annotation.interpolationUID =\n      interpolationAnnotations[0]?.interpolationUID || uuidv4();\n    viewportData.interpolationUID = annotation.interpolationUID;\n    interpolate(viewportData);\n  };\n\n  /**\n   * This method gets called when an annotation changes.  It will then trigger\n   * related already interpolated annotations to be updated with the modified data.\n   */\n  static handleAnnotationUpdate = (evt: AnnotationModifiedEventType) => {\n    const annotation = evt.detail.annotation as InterpolationROIAnnotation;\n    const { changeType = ChangeTypes.HandlesUpdated } = evt.detail;\n    if (!annotation?.metadata) {\n      return;\n    }\n    const { toolName, originalToolName } = annotation.metadata;\n\n    if (\n      (!this.toolNames.includes(toolName) &&\n        !this.toolNames.includes(originalToolName)) ||\n      !ChangeTypesForInterpolation.includes(changeType)\n    ) {\n      return;\n    }\n    const viewport = getViewportForAnnotation(annotation);\n    if (!viewport) {\n      console.warn(\n        'Unable to find matching viewport for annotation interpolation',\n        annotation\n      );\n      return;\n    }\n    if (annotation.autoGenerated) {\n      // Dont fire the annotation changed events here, as that leads to recursion,\n      // although this is in fact completing the event, so trigger the segmentation add\n      addContourSegmentationAnnotation(annotation);\n      annotation.autoGenerated = false;\n    }\n\n    const sliceData: Types.ImageSliceData = getSliceData(viewport);\n    const viewportData: InterpolationViewportData = {\n      viewport,\n      sliceData,\n      annotation,\n      interpolationUID: annotation.interpolationUID,\n      isInterpolationUpdate: changeType === ChangeTypes.InterpolationUpdated,\n    };\n    interpolate(viewportData);\n  };\n\n  /**\n   * Delete interpolated annotations when their endpoints are deleted.\n   */\n  static handleAnnotationDelete = (evt: AnnotationRemovedEventType) => {\n    const annotation = evt.detail.annotation as InterpolationROIAnnotation;\n    if (!annotation?.metadata) {\n      return;\n    }\n    const { toolName } = annotation.metadata;\n\n    if (!this.toolNames.includes(toolName) || annotation.autoGenerated) {\n      return;\n    }\n    const viewport = getViewportForAnnotation(annotation);\n\n    if (!viewport) {\n      console.warn(\n        \"No viewport, can't delete interpolated results\",\n        annotation\n      );\n      return;\n    }\n\n    const sliceData: Types.ImageSliceData = getSliceData(viewport);\n    const viewportData: InterpolationViewportData = {\n      viewport,\n      sliceData,\n      annotation,\n      interpolationUID: annotation.interpolationUID,\n    };\n    // If any update, triggered on an annotation, then it will be treated as non-interpolated.\n    annotation.autoGenerated = false;\n    deleteRelatedAnnotations(viewportData);\n  };\n}\n\nfunction getSliceData(viewport): Types.ImageSliceData {\n  const sliceData: Types.ImageSliceData = {\n    numberOfSlices: viewport.getNumberOfSlices(),\n    imageIndex: viewport.getCurrentImageIdIndex(),\n  };\n  return sliceData;\n}\n","import { generateContourSetsFromLabelmap } from '../contours';\nimport SegmentationRepresentations from '../../enums/SegmentationRepresentations';\nimport findLargestBidirectional from './findLargestBidirectional';\n\nconst { Labelmap } = SegmentationRepresentations;\n\n/**\n * Generates a contour object over the segment, and then uses the contouring to\n * find the largest bidirectional object that can be applied within the acquisition\n * plane that is within the segment index, or the contained segment indices.\n *\n * @param segmentation.segments - a list of segments to apply the contour to.\n * @param segmentation.segments.containedSegmentIndices - a set of segment indexes equivalent to the primary segment\n * @param segmentation.segments.label - the label for the segment\n * @param segmentation.segments.color - the color to use for the segment label\n */\nexport default function contourAndFindLargestBidirectional(segmentation) {\n  const contours = generateContourSetsFromLabelmap({\n    segmentations: segmentation,\n  });\n\n  if (!contours?.length || !contours[0].sliceContours.length) {\n    return;\n  }\n\n  const {\n    representationData,\n    segments = [\n      null,\n      { label: 'Unspecified', color: null, containedSegmentIndices: null },\n    ],\n  } = segmentation;\n  const { volumeId: segVolumeId } = representationData[Labelmap];\n\n  const segmentIndex = segments.findIndex((it) => !!it);\n  if (segmentIndex === -1) {\n    return;\n  }\n  segments[segmentIndex].segmentIndex = segmentIndex;\n  return findLargestBidirectional(\n    contours[0],\n    segVolumeId,\n    segments[segmentIndex]\n  );\n}\n","/**\n * Creates a map that associates each imageId with a set of segmentation imageIds.\n * Note that this function assumes that the imageIds and segmentationImageIds arrays\n * are the same length and same order.\n *\n * @param imageIdsArray - An array of imageIds.\n * @param segmentationImageIds - An array of segmentation imageIds.\n * @returns A map that maps each imageId to a set of segmentation imageIds.\n */\nfunction createImageIdReferenceMap(\n  imageIdsArray: string[],\n  segmentationImageIds: string[]\n): Map<string, string> {\n  const imageIdReferenceMap = new Map<string, string>(\n    imageIdsArray.map((imageId, index) => {\n      return [imageId, segmentationImageIds[index]];\n    })\n  );\n\n  return imageIdReferenceMap;\n}\n\nexport { createImageIdReferenceMap };\n","import type {\n  FloodFillResult,\n  FloodFillGetter,\n  FloodFillOptions,\n} from '../../types';\nimport { Types } from '@cornerstonejs/core';\n\n/**\n * floodFill.js - Taken from MIT OSS lib - https://github.com/tuzz/n-dimensional-flood-fill\n * Refactored to ES6.  Fixed the bounds/visits checks to use integer keys, restricting the\n * total search spacing to +/- 32k in each dimension, but resulting in about a hundred time\n * performance gain for larger regions since JavaScript does not have a hash map to allow the\n * map to work on keys.\n *\n * @param getter The getter to the elements of your data structure,\n *                          e.g. getter(x,y) for a 2D interprettation of your structure.\n * @param seed The seed for your fill. The dimensionality is infered\n *                        by the number of dimensions of the seed.\n * @param options.onFlood - An optional callback to execute when each pixel is flooded.\n *                             e.g. onFlood(x,y).\n * @param options.onBoundary - An optional callback to execute whenever a boundary is reached.\n *                                a boundary could be another segmentIndex, or the edge of your\n *                                data structure (i.e. when your getter returns undefined).\n * @param options.equals - An optional equality method for your datastructure.\n *                            Default is simply value1 = value2.\n * @param options.diagonals - Whether you allow flooding through diagonals. Defaults to false.\n *\n * @returns Flood fill results\n */\nfunction floodFill(\n  getter: FloodFillGetter,\n  seed: Types.Point2 | Types.Point3,\n  options: FloodFillOptions = {}\n): FloodFillResult {\n  const onFlood = options.onFlood;\n  const onBoundary = options.onBoundary;\n  const equals = options.equals;\n  const diagonals = options.diagonals || false;\n  const startNode = get(seed);\n  const permutations = prunedPermutations();\n  const stack = [];\n  const flooded = [];\n  const visits = new Set();\n  const bounds = new Map();\n\n  stack.push({ currentArgs: seed });\n\n  while (stack.length > 0) {\n    flood(stack.pop());\n  }\n\n  return {\n    flooded,\n    boundaries: boundaries(),\n  };\n\n  function flood(job) {\n    const getArgs = job.currentArgs;\n    const prevArgs = job.previousArgs;\n\n    if (visited(getArgs)) {\n      return;\n    }\n    markAsVisited(getArgs);\n\n    if (member(getArgs)) {\n      markAsFlooded(getArgs);\n      pushAdjacent(getArgs);\n    } else {\n      markAsBoundary(prevArgs);\n    }\n  }\n\n  /**\n   * Indicates if the key has been visited.\n   * @param key is a 2 or 3 element vector with values -32768...32767\n   */\n  function visited(key) {\n    const [x, y, z = 0] = key;\n    // Use an integer key value for checking visited, since JavaScript does not\n    // provide a generic hash key indexed hash map.\n    const iKey = x + 32768 + 65536 * (y + 32768 + 65536 * (z + 32768));\n    return visits.has(iKey);\n  }\n\n  function markAsVisited(key) {\n    const [x, y, z = 0] = key;\n    const iKey = x + 32768 + 65536 * (y + 32768 + 65536 * (z + 32768));\n    visits.add(iKey);\n  }\n\n  function member(getArgs) {\n    const node = get(getArgs);\n\n    return equals ? equals(node, startNode) : node === startNode;\n  }\n\n  function markAsFlooded(getArgs) {\n    flooded.push(getArgs);\n    if (onFlood) {\n      //@ts-ignore\n      onFlood(...getArgs);\n    }\n  }\n\n  function markAsBoundary(prevArgs) {\n    const [x, y, z = 0] = prevArgs;\n    // Use an integer key value for checking visited, since JavaScript does not\n    // provide a generic hash key indexed hash map.\n    const iKey = x + 32768 + 65536 * (y + 32768 + 65536 * (z + 32768));\n    bounds.set(iKey, prevArgs);\n    if (onBoundary) {\n      //@ts-ignore\n      onBoundary(...prevArgs);\n    }\n  }\n\n  function pushAdjacent(getArgs) {\n    for (let i = 0; i < permutations.length; i += 1) {\n      const perm = permutations[i];\n      const nextArgs = getArgs.slice(0);\n\n      for (let j = 0; j < getArgs.length; j += 1) {\n        nextArgs[j] += perm[j];\n      }\n\n      stack.push({\n        currentArgs: nextArgs,\n        previousArgs: getArgs,\n      });\n    }\n  }\n\n  function get(getArgs) {\n    //@ts-ignore\n    return getter(...getArgs);\n  }\n\n  // This is a significant performance hit - should be done as a wrapper\n  // only when needed.\n  // function safely(f, args) {\n  //   try {\n  //     return f(...args);\n  //   } catch (error) {\n  //     return;\n  //   }\n  // }\n\n  function prunedPermutations() {\n    const permutations = permute(seed.length);\n\n    return permutations.filter(function (perm) {\n      const count = countNonZeroes(perm);\n\n      return count !== 0 && (count === 1 || diagonals);\n    });\n  }\n\n  function permute(length) {\n    const perms = [];\n\n    const permutation = function (string) {\n      return string.split('').map(function (c) {\n        return parseInt(c, 10) - 1;\n      });\n    };\n\n    for (let i = 0; i < Math.pow(3, length); i += 1) {\n      const string = lpad(i.toString(3), '0', length);\n\n      perms.push(permutation(string));\n    }\n\n    return perms;\n  }\n\n  function boundaries() {\n    const array = Array.from(bounds.values());\n    array.reverse();\n    return array;\n  }\n}\n\nfunction defaultEquals(a, b) {\n  return a === b;\n}\n\nfunction countNonZeroes(array) {\n  let count = 0;\n\n  for (let i = 0; i < array.length; i += 1) {\n    if (array[i] !== 0) {\n      count += 1;\n    }\n  }\n\n  return count;\n}\n\nfunction lpad(string, character, length) {\n  const array = new Array(length + 1);\n  const pad = array.join(character);\n\n  return (pad + string).slice(-length);\n}\n\nexport default floodFill;\n","import { getAnnotation } from '../../stateManagement';\nimport { getSegmentation } from '../../stateManagement/segmentation/segmentationState';\n\n/**\n * Retrieves the index of the hovered contour segmentation annotation for a given segmentation ID.\n *\n * @param segmentationId - The ID of the segmentation.\n * @returns The index of the hovered contour segmentation annotation, or undefined if none is found.\n */\nexport function getHoveredContourSegmentationAnnotation(segmentationId) {\n  const segmentation = getSegmentation(segmentationId);\n  const { annotationUIDsMap } = segmentation.representationData.CONTOUR;\n\n  for (const [segmentIndex, annotationUIDs] of annotationUIDsMap.entries()) {\n    const highlightedAnnotationUID = Array.from(annotationUIDs).find(\n      (annotationUID) => getAnnotation(annotationUID).highlighted\n    );\n\n    if (highlightedAnnotationUID) {\n      return segmentIndex;\n    }\n  }\n\n  return undefined;\n}\n","import { cache, utilities } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\nimport {\n  getSegmentation,\n  getSegmentationIdRepresentations,\n} from '../../stateManagement/segmentation/segmentationState';\nimport {\n  LabelmapSegmentationDataStack,\n  LabelmapSegmentationDataVolume,\n} from '../../types/LabelmapTypes';\nimport { isVolumeSegmentation } from '../../tools/segmentation/strategies/utils/stackVolumeCheck';\n\ntype Options = {\n  viewport?: Types.IViewport;\n  searchRadius?: number;\n};\n\n/**\n * Retrieves the segment index at the border of a labelmap in a segmentation.\n *\n * @param segmentationId - The ID of the segmentation.\n * @param worldPoint - The world coordinates of the point.\n * @param options - Additional options.\n * @param options.viewport - The viewport to use.\n * @param options.searchRadius - The search radius to use.\n * @returns The segment index at the labelmap border, or undefined if not found.\n */\nexport function getSegmentAtLabelmapBorder(\n  segmentationId: string,\n  worldPoint: Types.Point3,\n  { viewport, searchRadius }: Options\n): number {\n  const segmentation = getSegmentation(segmentationId);\n\n  const labelmapData = segmentation.representationData.LABELMAP;\n\n  if (isVolumeSegmentation(labelmapData)) {\n    const { volumeId } = labelmapData as LabelmapSegmentationDataVolume;\n    const segmentationVolume = cache.getVolume(volumeId);\n\n    if (!segmentationVolume) {\n      return;\n    }\n\n    const imageData = segmentationVolume.imageData;\n\n    const segmentIndex = imageData.getScalarValueFromWorld(worldPoint);\n\n    const canvasPoint = viewport.worldToCanvas(worldPoint);\n\n    const onEdge = isSegmentOnEdgeCanvas(\n      canvasPoint as Types.Point2,\n      segmentIndex,\n      viewport,\n      imageData,\n      searchRadius\n    );\n\n    return onEdge ? segmentIndex : undefined;\n  }\n\n  // stack segmentation case\n  const { imageIdReferenceMap } = labelmapData as LabelmapSegmentationDataStack;\n\n  const currentImageId = (viewport as Types.IStackViewport).getCurrentImageId();\n\n  const segmentationImageId = imageIdReferenceMap.get(currentImageId);\n  const image = cache.getImage(segmentationImageId);\n\n  if (!image) {\n    return;\n  }\n\n  // find the first segmentationRepresentationUID for the segmentationId, since\n  // that is what we use as actorUID in the viewport\n\n  const segmentationRepresentations = getSegmentationIdRepresentations(\n    segmentation.segmentationId\n  );\n\n  const { segmentationRepresentationUID } = segmentationRepresentations[0];\n  const segmentationActor = viewport.getActor(segmentationRepresentationUID);\n  const imageData = segmentationActor?.actor.getMapper().getInputData();\n  const indexIJK = utilities.transformWorldToIndex(imageData, worldPoint);\n\n  const dimensions = imageData.getDimensions();\n  const voxelManager = (imageData.voxelManager ||\n    utilities.VoxelManager.createVolumeVoxelManager(\n      dimensions,\n      imageData.getPointData().getScalars().getData()\n    )) as utilities.VoxelManager<number>;\n\n  const segmentIndex = voxelManager.getAtIJKPoint(indexIJK as Types.Point3);\n\n  const onEdge = isSegmentOnEdgeIJK(\n    indexIJK as Types.Point3,\n    dimensions,\n    voxelManager,\n    segmentIndex\n  );\n\n  return onEdge ? segmentIndex : undefined;\n}\n\n/**\n * Checks if a segment is on the edge of a labelmap.\n * @param getNeighborIndex - A function that returns the neighbor index given the delta values.\n * @param segmentIndex - The index of the segment to check.\n * @param searchRadius - The radius within which to search for neighboring segments. Default is 1.\n * @returns A boolean indicating whether the segment is on the edge.\n */\nfunction isSegmentOnEdge(\n  getNeighborIndex: (\n    deltaI: number,\n    deltaJ: number,\n    deltaK: number\n  ) => number | undefined,\n  segmentIndex: number,\n  searchRadius = 1 // Default search radius\n): boolean {\n  const neighborRange = Array.from(\n    { length: 2 * searchRadius + 1 },\n    (_, i) => i - searchRadius\n  );\n\n  for (const deltaI of neighborRange) {\n    for (const deltaJ of neighborRange) {\n      for (const deltaK of neighborRange) {\n        if (deltaI === 0 && deltaJ === 0 && deltaK === 0) {\n          continue; // Skipping the central point\n        }\n\n        const neighborIndex = getNeighborIndex(deltaI, deltaJ, deltaK);\n\n        if (neighborIndex !== undefined && segmentIndex !== neighborIndex) {\n          return true; // On the edge\n        }\n      }\n    }\n  }\n\n  return false; // No edge neighbors found\n}\n\nfunction isSegmentOnEdgeIJK(\n  indexIJK: Types.Point3,\n  dimensions: Types.Point3,\n  voxelManager: any,\n  segmentIndex: number,\n  searchRadius?: number\n): boolean {\n  const getNeighborIndex = (deltaI: number, deltaJ: number, deltaK: number) => {\n    const neighborIJK = [\n      indexIJK[0] + deltaI,\n      indexIJK[1] + deltaJ,\n      indexIJK[2] + deltaK,\n    ];\n\n    return voxelManager.getAtIJK(...neighborIJK);\n  };\n\n  return isSegmentOnEdge(getNeighborIndex, segmentIndex, searchRadius);\n}\n\nfunction isSegmentOnEdgeCanvas(\n  canvasPoint: Types.Point2,\n  segmentIndex: number,\n  viewport: Types.IViewport,\n  imageData: any,\n  searchRadius?: number\n): boolean {\n  const getNeighborIndex = (deltaI: number, deltaJ: number) => {\n    const neighborCanvas = [canvasPoint[0] + deltaI, canvasPoint[1] + deltaJ];\n\n    const worldPoint = viewport.canvasToWorld(neighborCanvas as Types.Point2);\n    return imageData.getScalarValueFromWorld(worldPoint);\n  };\n\n  return isSegmentOnEdge(getNeighborIndex, segmentIndex, searchRadius);\n}\n","import { cache, utilities } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\nimport { SegmentationRepresentations } from '../../enums';\nimport {\n  getSegmentation,\n  getSegmentationIdRepresentations,\n} from '../../stateManagement/segmentation/segmentationState';\nimport {\n  LabelmapSegmentationDataStack,\n  LabelmapSegmentationDataVolume,\n} from '../../types/LabelmapTypes';\nimport { isVolumeSegmentation } from '../../tools/segmentation/strategies/utils/stackVolumeCheck';\nimport { ContourSegmentationAnnotation, Segmentation } from '../../types';\nimport { getAnnotation } from '../../stateManagement';\nimport { isPointInsidePolyline3D } from '../math/polyline';\n\ntype Options = {\n  representationType?: SegmentationRepresentations;\n  viewport?: Types.IViewport;\n};\n\n/**\n * Get the segment at the specified world point in the viewport.\n * @param segmentationId - The ID of the segmentation to get the segment for.\n * @param worldPoint - The world point to get the segment for.\n *\n * @returns The index of the segment at the world point, or undefined if not found.\n */\nexport function getSegmentAtWorldPoint(\n  segmentationId: string,\n  worldPoint: Types.Point3,\n  options = {} as Options\n): number {\n  const segmentation = getSegmentation(segmentationId);\n\n  const representationData = segmentation.representationData;\n\n  // if representationType is not provided, we will use the first representation\n  const desiredRepresentation =\n    options?.representationType ?? Object.keys(representationData)[0];\n\n  if (!desiredRepresentation) {\n    throw new Error(\n      `Segmentation ${segmentationId} does not have any representations`\n    );\n  }\n\n  switch (desiredRepresentation) {\n    case SegmentationRepresentations.Labelmap:\n      return getSegmentAtWorldForLabelmap(segmentation, worldPoint, options);\n    case SegmentationRepresentations.Contour:\n      return getSegmentAtWorldForContour(segmentation, worldPoint, options);\n    default:\n      return;\n  }\n}\n\n/**\n * Retrieves the segment index at a given world point for a labelmap.\n *\n * @param labelmapData - The labelmap segmentation data.\n * @param worldPoint - The world point to retrieve the segment at.\n *\n * @returns The segment index at the given world point, or undefined if not found.\n */\nexport function getSegmentAtWorldForLabelmap(\n  segmentation: Segmentation,\n  worldPoint: Types.Point3,\n  { viewport }: Options\n): number | undefined {\n  const labelmapData = segmentation.representationData.LABELMAP;\n\n  if (isVolumeSegmentation(labelmapData)) {\n    const { volumeId } = labelmapData as LabelmapSegmentationDataVolume;\n    const segmentationVolume = cache.getVolume(volumeId);\n\n    if (!segmentationVolume) {\n      return;\n    }\n\n    const segmentIndex =\n      segmentationVolume.imageData.getScalarValueFromWorld(worldPoint);\n\n    return segmentIndex;\n  }\n\n  // stack segmentation case\n  const { imageIdReferenceMap } = labelmapData as LabelmapSegmentationDataStack;\n\n  const currentImageId = (viewport as Types.IStackViewport).getCurrentImageId();\n\n  const segmentationImageId = imageIdReferenceMap.get(currentImageId);\n  const image = cache.getImage(segmentationImageId);\n\n  if (!image) {\n    return;\n  }\n\n  // find the first segmentationRepresentationUID for the segmentationId, since\n  // that is what we use as actorUID in the viewport\n\n  const segmentationRepresentations = getSegmentationIdRepresentations(\n    segmentation.segmentationId\n  );\n\n  const { segmentationRepresentationUID } = segmentationRepresentations[0];\n\n  const segmentationActor = viewport.getActor(segmentationRepresentationUID);\n  const imageData = segmentationActor?.actor.getMapper().getInputData();\n  const indexIJK = utilities.transformWorldToIndex(imageData, worldPoint);\n\n  const dimensions = imageData.getDimensions();\n  const voxelManager = (imageData.voxelManager ||\n    utilities.VoxelManager.createVolumeVoxelManager(\n      dimensions,\n      imageData.getPointData().getScalars().getData()\n    )) as utilities.VoxelManager<number>;\n\n  const segmentIndex = voxelManager.getAtIJKPoint(indexIJK as Types.Point3);\n\n  return segmentIndex;\n}\n\n/**\n * Retrieves the segment index at a given world point for contour segmentation.\n *\n * @param segmentation - The segmentation data.\n * @param worldPoint - The world point to check.\n * @param options - The options for segmentation.\n * @returns The segment index at the given world point, or undefined if not found.\n */\nexport function getSegmentAtWorldForContour(\n  segmentation: Segmentation,\n  worldPoint: Types.Point3,\n  { viewport }: Options\n): number {\n  const contourData = segmentation.representationData.CONTOUR;\n\n  const segmentIndices = Array.from(contourData.annotationUIDsMap.keys());\n  const { viewPlaneNormal } = viewport.getCamera();\n\n  for (const segmentIndex of segmentIndices) {\n    const annotationsSet = contourData.annotationUIDsMap.get(segmentIndex);\n\n    if (!annotationsSet) {\n      continue;\n    }\n\n    for (const annotationUID of annotationsSet) {\n      const annotation = getAnnotation(\n        annotationUID\n      ) as ContourSegmentationAnnotation;\n\n      if (!annotation) {\n        continue;\n      }\n\n      const { polyline } = annotation.data.contour;\n\n      if (\n        !utilities.isEqual(viewPlaneNormal, annotation.metadata.viewPlaneNormal)\n      ) {\n        continue;\n      }\n\n      // This function checks whether we are inside the contour. It does not\n      // check if we are exactly on the contour, which is highly unlikely given\n      // the canvas pixel resolution of 1 decimal place we have by design.\n      if (isPointInsidePolyline3D(worldPoint, polyline)) {\n        return Number(segmentIndex);\n      }\n    }\n  }\n}\n","import { getToolGroup } from '../../store/ToolGroupManager';\nimport BrushTool from '../../tools/segmentation/BrushTool';\nimport triggerAnnotationRenderForViewportIds from '../triggerAnnotationRenderForViewportIds';\nimport { getRenderingEngine } from '@cornerstonejs/core';\nimport { getBrushToolInstances } from './utilities';\n\n/**\n * Invalidates the brush cursor for a specific tool group.\n * This function triggers the update of the brush being rendered.\n * It also triggers an annotation render for any viewports on the tool group.\n *\n * @param toolGroupId - The ID of the tool group.\n */\nexport function invalidateBrushCursor(toolGroupId: string): void {\n  const toolGroup = getToolGroup(toolGroupId);\n\n  if (toolGroup === undefined) {\n    return;\n  }\n\n  const brushBasedToolInstances = getBrushToolInstances(toolGroupId);\n\n  brushBasedToolInstances.forEach((tool: BrushTool) => {\n    // Invalidate the brush being rendered so it can update.\n    tool.invalidateBrushCursor();\n  });\n\n  // Trigger an annotation render for any viewports on the toolgroup\n  const viewportsInfo = toolGroup.getViewportsInfo();\n\n  const viewportsInfoArray = Object.keys(viewportsInfo).map(\n    (key) => viewportsInfo[key]\n  );\n\n  if (!viewportsInfoArray.length) {\n    return;\n  }\n\n  const { renderingEngineId } = viewportsInfoArray[0];\n\n  // Use helper to get array of viewportIds, or we just end up doing this mapping\n  // ourselves here.\n  const viewportIds = toolGroup.getViewportIds();\n\n  const renderingEngine = getRenderingEngine(renderingEngineId);\n\n  triggerAnnotationRenderForViewportIds(renderingEngine, viewportIds);\n}\n","import { Types } from '@cornerstonejs/core';\nimport { utilities as csUtils } from '@cornerstonejs/core';\nimport { getToolGroup } from '../../store/ToolGroupManager';\nimport BrushTool from '../../tools/segmentation/BrushTool';\nimport { getBoundingBoxAroundShapeIJK } from '../boundingBox/getBoundingBoxAroundShape';\n\nexport type ThresholdInformation = {\n  volume: Types.IImageVolume;\n  lower: number;\n  upper: number;\n};\n\nexport function getBrushToolInstances(toolGroupId: string, toolName?: string) {\n  const toolGroup = getToolGroup(toolGroupId);\n\n  if (toolGroup === undefined) {\n    return;\n  }\n\n  const toolInstances = toolGroup._toolInstances;\n\n  if (!Object.keys(toolInstances).length) {\n    return;\n  }\n\n  if (toolName && toolInstances[toolName]) {\n    return [toolInstances[toolName]];\n  }\n\n  // For each tool that has BrushTool as base class, set the brush size.\n  const brushBasedToolInstances = Object.values(toolInstances).filter(\n    (toolInstance) => toolInstance instanceof BrushTool\n  ) as BrushTool[];\n\n  return brushBasedToolInstances;\n}\n\nconst equalsCheck = (a, b) => {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\n\n/**\n * Given the center of a voxel in world coordinates, calculate the voxel\n * corners in world coords to calculate the voxel overlap in another volume\n */\nexport function getVoxelOverlap(\n  imageData,\n  dimensions,\n  voxelSpacing,\n  voxelCenter\n) {\n  const voxelCornersWorld = [];\n  for (let i = 0; i < 2; i++) {\n    for (let j = 0; j < 2; j++) {\n      for (let k = 0; k < 2; k++) {\n        const point = [...voxelCenter]; // Create a new point from voxelCenter\n        point[0] = point[0] + ((i * 2 - 1) * voxelSpacing[0]) / 2;\n        point[1] = point[1] + ((j * 2 - 1) * voxelSpacing[1]) / 2;\n        point[2] = point[2] + ((k * 2 - 1) * voxelSpacing[2]) / 2;\n        voxelCornersWorld.push(point);\n      }\n    }\n  }\n  const voxelCornersIJK = voxelCornersWorld.map(\n    (world) => csUtils.transformWorldToIndex(imageData, world) as Types.Point3\n  );\n  const overlapBounds = getBoundingBoxAroundShapeIJK(\n    voxelCornersIJK,\n    dimensions\n  );\n\n  return overlapBounds;\n}\n\n/**\n * Prepare a list of volume information objects for callback functions\n */\nexport function processVolumes(\n  segmentationVolume: Types.IImageVolume,\n  thresholdVolumeInformation: ThresholdInformation[]\n) {\n  const { spacing: segmentationSpacing } = segmentationVolume;\n  const scalarData = segmentationVolume.getScalarData();\n\n  // prepare a list of volume information objects for callback functions\n  const volumeInfoList = [];\n  let baseVolumeIdx = 0;\n  for (let i = 0; i < thresholdVolumeInformation.length; i++) {\n    const { imageData, spacing, dimensions } =\n      thresholdVolumeInformation[i].volume;\n\n    const volumeSize =\n      thresholdVolumeInformation[i].volume.getScalarData().length;\n    // discover the index of the volume the segmentation data is based on\n    if (\n      volumeSize === scalarData.length &&\n      equalsCheck(spacing, segmentationSpacing)\n    ) {\n      baseVolumeIdx = i;\n    }\n\n    // prepare information used in callback functions\n    const referenceValues = imageData.getPointData().getScalars().getData();\n    const lower = thresholdVolumeInformation[i].lower;\n    const upper = thresholdVolumeInformation[i].upper;\n\n    volumeInfoList.push({\n      imageData,\n      referenceValues,\n      lower,\n      upper,\n      spacing,\n      dimensions,\n      volumeSize,\n    });\n  }\n\n  return {\n    volumeInfoList,\n    baseVolumeIdx,\n  };\n}\n","import debounce from './debounce';\nimport isObject from './isObject';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds (or once per browser frame). The throttled function\n * comes with a `cancel` method to cancel delayed `func` invocations and a\n * `flush` method to immediately invoke them. Provide `options` to indicate\n * whether `func` should be invoked on the leading and/or trailing edge of the\n * `wait` timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * If `wait` is omitted in an environment with `requestAnimationFrame`, `func`\n * invocation will be deferred until the next frame is drawn (typically about\n * 16ms).\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `throttle` and `debounce`.\n *\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0]\n *  The number of milliseconds to throttle invocations to; if omitted,\n *  `requestAnimationFrame` is used (if available).\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', throttle(updatePosition, 100))\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * const throttled = throttle(renewToken, 300000, { 'trailing': false })\n * jQuery(element).on('click', throttled)\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel)\n */\nfunction throttle(func, wait, options) {\n  let leading = true;\n  let trailing = true;\n\n  if (typeof func !== 'function') {\n    throw new TypeError('Expected a function');\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? Boolean(options.leading) : leading;\n    trailing = 'trailing' in options ? Boolean(options.trailing) : trailing;\n  }\n\n  return debounce(func, wait, {\n    leading,\n    trailing,\n    maxWait: wait,\n  });\n}\n\nexport default throttle;\n","import { IDistance, IPoints, ITouchPoints } from '../../types';\nimport { Types } from '@cornerstonejs/core';\n\n/**\n * Returns the difference between multiple `IPoints` instances.\n * @param currentPoints - The current points.\n * @param lastPoints - The last points, to be subtracted from the `currentPoints`.\n *\n * @returns The difference in IPoints format\n */\nfunction getDeltaPoints(\n  currentPoints: IPoints[],\n  lastPoints: IPoints[]\n): IPoints {\n  const curr = getMeanPoints(currentPoints);\n  const last = getMeanPoints(lastPoints);\n  return {\n    page: _subtractPoints2D(curr.page, last.page),\n    client: _subtractPoints2D(curr.client, last.client),\n    canvas: _subtractPoints2D(curr.canvas, last.canvas),\n    world: _subtractPoints3D(curr.world, last.world),\n  };\n}\n\n/**\n * Returns the distance between multiple `IPoints` instances.\n * @param currentPoints - The current points.\n * @param lastPoints - The last points, to be subtracted from the `currentPoints`.\n *\n * @returns The distance difference in IDistance format\n */\nfunction getDeltaDistance(\n  currentPoints: IPoints[],\n  lastPoints: IPoints[]\n): IDistance {\n  const curr = getMeanPoints(currentPoints);\n  const last = getMeanPoints(lastPoints);\n  return {\n    page: _getDistance2D(curr.page, last.page),\n    client: _getDistance2D(curr.client, last.client),\n    canvas: _getDistance2D(curr.canvas, last.canvas),\n    world: _getDistance3D(curr.world, last.world),\n  };\n}\n\nfunction getDeltaRotation(\n  currentPoints: ITouchPoints[],\n  lastPoints: ITouchPoints[]\n) {\n  // TODO\n}\n\n/**\n * Returns the distance difference between multiple `IPoints` instances.\n * @param currentPoints - The current points.\n * @param lastPoints -- The last points.\n *\n * @returns The difference in IPoints format\n */\nfunction getDeltaDistanceBetweenIPoints(\n  currentPoints: IPoints[],\n  lastPoints: IPoints[]\n): IDistance {\n  const currentDistance = _getMeanDistanceBetweenAllIPoints(currentPoints);\n  const lastDistance = _getMeanDistanceBetweenAllIPoints(lastPoints);\n  const deltaDistance = {\n    page: currentDistance.page - lastDistance.page,\n    client: currentDistance.client - lastDistance.client,\n    canvas: currentDistance.canvas - lastDistance.canvas,\n    world: currentDistance.world - lastDistance.world,\n  };\n  return deltaDistance;\n}\n\n/**\n * Copies a set of points.\n * @param points - The `IPoints` instance to copy.\n *\n * @returns A copy of the points.\n */\nfunction copyPointsList(points: ITouchPoints[]): ITouchPoints[] {\n  return JSON.parse(JSON.stringify(points));\n}\n\nfunction copyPoints(points: ITouchPoints): ITouchPoints {\n  return JSON.parse(JSON.stringify(points));\n}\n\nfunction getMeanPoints(points: IPoints[]): IPoints {\n  return points.reduce(\n    (prev, curr) => {\n      return {\n        page: [\n          prev.page[0] + curr.page[0] / points.length,\n          prev.page[1] + curr.page[1] / points.length,\n        ],\n        client: [\n          prev.client[0] + curr.client[0] / points.length,\n          prev.client[1] + curr.client[1] / points.length,\n        ],\n        canvas: [\n          prev.canvas[0] + curr.canvas[0] / points.length,\n          prev.canvas[1] + curr.canvas[1] / points.length,\n        ],\n        world: [\n          prev.world[0] + curr.world[0] / points.length,\n          prev.world[1] + curr.world[1] / points.length,\n          prev.world[2] + curr.world[2] / points.length,\n        ],\n      };\n    },\n    {\n      page: [0, 0],\n      client: [0, 0],\n      canvas: [0, 0],\n      world: [0, 0, 0],\n    }\n  );\n}\n\nfunction getMeanTouchPoints(points: ITouchPoints[]): ITouchPoints {\n  return points.reduce(\n    (prev, curr) => {\n      return {\n        page: [\n          prev.page[0] + curr.page[0] / points.length,\n          prev.page[1] + curr.page[1] / points.length,\n        ],\n        client: [\n          prev.client[0] + curr.client[0] / points.length,\n          prev.client[1] + curr.client[1] / points.length,\n        ],\n        canvas: [\n          prev.canvas[0] + curr.canvas[0] / points.length,\n          prev.canvas[1] + curr.canvas[1] / points.length,\n        ],\n        world: [\n          prev.world[0] + curr.world[0] / points.length,\n          prev.world[1] + curr.world[1] / points.length,\n          prev.world[2] + curr.world[2] / points.length,\n        ],\n        touch: {\n          identifier: null,\n          radiusX: prev.touch.radiusX + curr.touch.radiusX / points.length,\n          radiusY: prev.touch.radiusY + curr.touch.radiusY / points.length,\n          force: prev.touch.force + curr.touch.force / points.length,\n          rotationAngle:\n            prev.touch.rotationAngle + curr.touch.rotationAngle / points.length,\n        },\n      };\n    },\n    {\n      page: [0, 0],\n      client: [0, 0],\n      canvas: [0, 0],\n      world: [0, 0, 0],\n      touch: {\n        identifier: null,\n        radiusX: 0,\n        radiusY: 0,\n        force: 0,\n        rotationAngle: 0,\n      },\n    }\n  );\n}\n/**\n * _subtractPoints - Subtracts `point1` from `point0`.\n * @param point0 - The first point.\n * @param point1 - The second point to subtract from the first.\n *\n * @returns The difference.\n */\nfunction _subtractPoints2D(\n  point0: Types.Point2,\n  point1: Types.Point2\n): Types.Point2 {\n  return [point0[0] - point1[0], point0[1] - point1[1]];\n}\n\nfunction _subtractPoints3D(\n  point0: Types.Point3,\n  point1: Types.Point3\n): Types.Point3 {\n  return [point0[0] - point1[0], point0[1] - point1[1], point0[2] - point1[2]];\n}\n\nfunction _getMeanDistanceBetweenAllIPoints(points: IPoints[]): IDistance {\n  // get mean distance between all unordered pairs of points\n  const pairedDistance: IDistance[] = [];\n  for (let i = 0; i < points.length; i++) {\n    for (let j = 0; j < points.length; j++) {\n      if (i < j) {\n        pairedDistance.push({\n          page: _getDistance2D(points[i].page, points[j].page),\n          client: _getDistance2D(points[i].client, points[j].client),\n          canvas: _getDistance2D(points[i].canvas, points[j].canvas),\n          world: _getDistance3D(points[i].world, points[j].world),\n        });\n      }\n    }\n  }\n\n  // take the average distance\n  return pairedDistance.reduce(\n    (prev, curr) => {\n      return {\n        page: prev.page + curr.page / pairedDistance.length,\n        client: prev.client + curr.client / pairedDistance.length,\n        canvas: prev.canvas + curr.canvas / pairedDistance.length,\n        world: prev.world + curr.world / pairedDistance.length,\n      };\n    },\n    {\n      page: 0,\n      client: 0,\n      canvas: 0,\n      world: 0,\n    }\n  );\n}\n\nfunction _getDistance2D(point0: Types.Point2, point1: Types.Point2): number {\n  return Math.sqrt(\n    Math.pow(point0[0] - point1[0], 2) + Math.pow(point0[1] - point1[1], 2)\n  );\n}\n\nfunction _getDistance3D(point0: Types.Point3, point1: Types.Point3): number {\n  return Math.sqrt(\n    Math.pow(point0[0] - point1[0], 2) +\n      Math.pow(point0[1] - point1[1], 2) +\n      Math.pow(point0[2] - point1[2], 2)\n  );\n}\n\nexport {\n  getMeanPoints,\n  getMeanTouchPoints,\n  copyPoints,\n  copyPointsList,\n  getDeltaDistanceBetweenIPoints,\n  getDeltaPoints,\n  getDeltaDistance,\n  getDeltaRotation,\n};\n","import { getRenderingEngine, type Types } from '@cornerstonejs/core';\nimport triggerAnnotationRender from './triggerAnnotationRender';\nimport { getToolGroup } from '../store/ToolGroupManager';\n\n/**\n * Triggers annotation rendering for the specified tool group IDs.\n *\n * @param toolGroupIds - An array of tool group IDs.\n */\nexport function triggerAnnotationRenderForToolGroupIds(\n  toolGroupIds: string[]\n): void {\n  toolGroupIds.forEach((toolGroupId) => {\n    const toolGroup = getToolGroup(toolGroupId);\n\n    if (!toolGroup) {\n      console.warn(`ToolGroup not available for ${toolGroupId}`);\n      return;\n    }\n\n    const viewportsInfo = toolGroup.getViewportsInfo();\n\n    viewportsInfo.forEach((viewportInfo) => {\n      const { renderingEngineId, viewportId } = viewportInfo;\n\n      const renderingEngine = getRenderingEngine(renderingEngineId);\n      if (!renderingEngine) {\n        console.warn(`RenderingEngine not available for ${renderingEngineId}`);\n        return;\n      }\n\n      const viewport = renderingEngine.getViewport(viewportId);\n      triggerAnnotationRender(viewport.element);\n    });\n  });\n}\n\nexport default triggerAnnotationRenderForToolGroupIds;\n","import {\n  cache,\n  StackViewport,\n  Types,\n  BaseVolumeViewport,\n} from '@cornerstonejs/core';\n\nfunction isViewportPreScaled(\n  viewport: Types.IStackViewport | Types.IVolumeViewport,\n  targetId: string\n): boolean {\n  if (viewport instanceof BaseVolumeViewport) {\n    const targetIdTokens = targetId.split('volumeId:');\n    const volumeId =\n      targetIdTokens.length > 1\n        ? targetIdTokens[1].split('?')[0]\n        : targetIdTokens[0];\n    const volume = cache.getVolume(volumeId);\n    return !!volume?.scaling && Object.keys(volume.scaling).length > 0;\n  } else if (viewport instanceof StackViewport) {\n    const { preScale } = viewport.getImageData() || {};\n    return !!preScale?.scaled;\n  } else {\n    return false;\n  }\n}\n\nexport { isViewportPreScaled };\n","import { VolumeViewport } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport { vec3 } from 'gl-matrix';\n\n// Todo: merge this utility functionality with Crosshair _jump\n/**\n * Uses the viewport's current camera to jump to a specific world coordinate\n * @param enabledElement - enabled element\n * @param jumpWorld - location in the world to jump to\n * @returns True if successful\n */\nexport default function jumpToWorld(\n  viewport: Types.IVolumeViewport,\n  jumpWorld: Types.Point3\n): true | undefined {\n  // if not instance of volumeViewport, return\n  if (!(viewport instanceof VolumeViewport)) {\n    return;\n  }\n\n  const { focalPoint } = viewport.getCamera();\n\n  const delta: Types.Point3 = [0, 0, 0];\n  vec3.sub(delta, jumpWorld, focalPoint);\n\n  _applyShift(viewport, delta);\n\n  return true;\n}\n\nfunction _applyShift(viewport, delta) {\n  const camera = viewport.getCamera();\n  const normal = camera.viewPlaneNormal;\n\n  const dotProd = vec3.dot(delta, normal);\n  const projectedDelta = vec3.fromValues(normal[0], normal[1], normal[2]);\n\n  vec3.scale(projectedDelta, projectedDelta, dotProd);\n\n  if (\n    Math.abs(projectedDelta[0]) > 1e-3 ||\n    Math.abs(projectedDelta[1]) > 1e-3 ||\n    Math.abs(projectedDelta[2]) > 1e-3\n  ) {\n    const newFocalPoint: Types.Point3 = [0, 0, 0];\n    const newPosition: Types.Point3 = [0, 0, 0];\n\n    vec3.add(newFocalPoint, camera.focalPoint, projectedDelta);\n    vec3.add(newPosition, camera.position, projectedDelta);\n\n    viewport.setCamera({\n      focalPoint: newFocalPoint,\n      position: newPosition,\n    });\n    viewport.render();\n  }\n}\n","import type { Types } from '@cornerstonejs/core';\nimport type { IToolGroup } from '../../types';\nimport { ToolGroupManager } from '../../store';\nimport { ToolModes } from '../../enums';\n\nconst { Active, Passive, Enabled } = ToolModes;\n\n/**\n * Given an array of viewports, returns a list of viewports that have the the specified tool enabled.\n *\n * @param viewports - An array of viewports.\n * @param toolName - The name of the tool to filter on.\n *\n * @returns A filtered array of viewports.\n */\nexport default function filterViewportsWithToolEnabled(\n  viewports: Array<Types.IViewport>,\n  toolName: string\n): Array<Types.IStackViewport | Types.IVolumeViewport> {\n  const numViewports = viewports.length;\n\n  const viewportsWithToolEnabled = [];\n\n  for (let vp = 0; vp < numViewports; vp++) {\n    const viewport = viewports[vp];\n\n    const toolGroup = ToolGroupManager.getToolGroupForViewport(\n      viewport.id,\n      viewport.renderingEngineId\n    );\n\n    if (!toolGroup) {\n      continue;\n    }\n\n    const hasTool = _toolGroupHasActiveEnabledOrPassiveTool(\n      toolGroup,\n      toolName\n    );\n\n    if (hasTool) {\n      viewportsWithToolEnabled.push(viewport);\n    }\n  }\n\n  return viewportsWithToolEnabled;\n}\n\n/**\n * Given a toolGroup, return true if it contains the tool with the given `toolName` and it is\n * active, passive or enabled.\n *\n * @param toolGroup - The `toolGroup` to check.\n * @param toolName - The name of the tool.\n *\n * @returns True if the tool is enabled, passive or active in the `toolGroup`.\n */\nfunction _toolGroupHasActiveEnabledOrPassiveTool(\n  toolGroup: IToolGroup,\n  toolName: string\n) {\n  const { toolOptions } = toolGroup;\n  const tool = toolOptions[toolName];\n\n  if (!tool) {\n    return false;\n  }\n\n  const toolMode = tool.mode;\n\n  return toolMode === Active || toolMode === Passive || toolMode === Enabled;\n}\n","import { vec3 } from 'gl-matrix';\n\n/**\n * It filters the viewports that are looking in the same view as the camera\n * It basically checks if the viewPlaneNormal is parallel to the camera viewPlaneNormal\n * @param viewports - Array of viewports to filter\n * @param camera - Camera to compare against\n * @returns - Array of viewports with the same view\n */\nexport function filterViewportsWithParallelNormals(\n  viewports,\n  camera,\n  EPS = 0.999\n) {\n  return viewports.filter((viewport) => {\n    const vpCamera = viewport.getCamera();\n\n    const isParallel =\n      Math.abs(vec3.dot(vpCamera.viewPlaneNormal, camera.viewPlaneNormal)) >\n      EPS;\n\n    return isParallel;\n  });\n}\n\nexport default filterViewportsWithParallelNormals;\n","import { getEnabledElement } from '@cornerstonejs/core';\nimport filterViewportsWithFrameOfReferenceUID from './filterViewportsWithFrameOfReferenceUID';\nimport filterViewportsWithToolEnabled from './filterViewportsWithToolEnabled';\nimport filterViewportsWithParallelNormals from './filterViewportsWithParallelNormals';\n\n/**\n * Given a cornerstone3D enabled `element`, and a `toolName`, find all viewportIds\n * looking at the same Frame Of Reference that have the tool with the given `toolName`\n * active, passive or enabled.\n *\n * @param element - The target cornerstone3D enabled element.\n * @param toolName - The string toolName.\n * @param requireParallelNormals - If true, only return viewports that have parallel normals.\n *\n * @returns An array of viewportIds.\n */\nexport default function getViewportIdsWithToolToRender(\n  element: HTMLDivElement,\n  toolName: string,\n  requireParallelNormals = true\n): string[] {\n  const enabledElement = getEnabledElement(element);\n  const { renderingEngine, FrameOfReferenceUID } = enabledElement;\n  // console.log('FORUID TO MATCH : ', FrameOfReferenceUID)\n\n  let viewports = renderingEngine.getViewports();\n\n  viewports = filterViewportsWithFrameOfReferenceUID(\n    viewports,\n    FrameOfReferenceUID\n  );\n  viewports = filterViewportsWithToolEnabled(viewports, toolName);\n\n  const viewport = renderingEngine.getViewport(enabledElement.viewportId);\n\n  if (requireParallelNormals) {\n    viewports = filterViewportsWithParallelNormals(\n      viewports,\n      viewport.getCamera()\n    );\n  }\n\n  const viewportIds = viewports.map((vp) => vp.id);\n\n  return viewportIds;\n}\n","import type { Types } from '@cornerstonejs/core';\n\n/**\n * Given an array of viewports, returns a list of viewports that are viewing a\n * world space with the given `FrameOfReferenceUID`.\n *\n * @param viewports - An array of viewports.\n * @param FrameOfReferenceUID - The UID defining a particular world space/Frame Of Reference.\n *\n * @returns A filtered array of viewports.\n */\nexport default function filterViewportsWithFrameOfReferenceUID(\n  viewports: Array<Types.IViewport>,\n  FrameOfReferenceUID: string\n): Array<Types.IStackViewport | Types.IVolumeViewport> {\n  const numViewports = viewports.length;\n  const viewportsWithFrameOfReferenceUID = [];\n\n  for (let vp = 0; vp < numViewports; vp++) {\n    const viewport = viewports[vp];\n\n    console.log(`VIEWPORT ${vp} WITH FORUID ${viewport.getFrameOfReferenceUID()}`)\n    if (viewport.getFrameOfReferenceUID() === FrameOfReferenceUID) {\n      viewportsWithFrameOfReferenceUID.push(viewport);\n    }\n  }\n\n  return viewportsWithFrameOfReferenceUID;\n}\n","/**\n * Linear interpolation between two vec3.\n * Can be used, for example, to interpolate between two RGB colors.\n * @param a - First vec3\n * @param b - Second vec3\n * @param t - Time \"t\".\n *   - Vector A is returned for values smaller than or equel to 0.\n *   - Vector B is returned for values greater than or equal to 1.\n *   - An interpolation between vectors A and B is returned otherwise.\n * @returns\n */\nconst interpolateVec3 = (a, b, t) => {\n  return [\n    a[0] * (1 - t) + b[0] * t,\n    a[1] * (1 - t) + b[1] * t,\n    a[2] * (1 - t) + b[2] * t,\n  ];\n};\n\nexport { interpolateVec3 as default, interpolateVec3 };\n","import { IColorMapPreset } from '@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps';\nimport { utilities } from '@cornerstonejs/core';\nimport interpolateVec3 from '../../math/vec3/interpolateVec3';\nimport { ColorbarCanvasProps } from './types/ColorbarCanvasProps';\nimport type { ColorbarImageRange, ColorbarVOIRange } from './types';\nimport type { ColorbarSize } from './types/ColorbarSize';\nimport {\n  isRangeValid,\n  areColorbarRangesEqual,\n  isColorbarSizeValid,\n  areColorbarSizesEqual,\n} from './common';\n\nconst { clamp } = utilities;\n\n/**\n * Canvas referenced by the color bar where the colormap is rendered. It may\n * show the full image range or only the VOI range.\n */\nclass ColorbarCanvas {\n  private _canvas: HTMLCanvasElement;\n  private _imageRange: ColorbarImageRange;\n  private _voiRange: ColorbarVOIRange;\n  private _colormap: IColorMapPreset;\n  private _showFullImageRange: boolean;\n\n  constructor(props: ColorbarCanvasProps) {\n    ColorbarCanvas.validateProps(props);\n\n    const {\n      colormap,\n      size = { width: 20, height: 100 },\n      imageRange = { lower: 0, upper: 1 },\n      voiRange = { lower: 0, upper: 1 },\n      container,\n      showFullPixelValueRange = false,\n    } = props;\n\n    this._colormap = colormap;\n    this._imageRange = imageRange;\n    this._voiRange = voiRange;\n    this._showFullImageRange = showFullPixelValueRange;\n    this._canvas = this._createRootElement(size);\n\n    if (container) {\n      this.appendTo(container);\n    }\n  }\n\n  public get colormap(): IColorMapPreset {\n    return this._colormap;\n  }\n\n  public set colormap(colormap: IColorMapPreset) {\n    this._colormap = colormap;\n    this.render();\n  }\n\n  public get size(): ColorbarSize {\n    const { width, height } = this._canvas;\n    return { width, height };\n  }\n\n  public set size(size: ColorbarSize) {\n    const { _canvas: canvas } = this;\n\n    if (!isColorbarSizeValid(size) || areColorbarSizesEqual(canvas, size)) {\n      return;\n    }\n\n    this._setCanvasSize(canvas, size);\n    this.render();\n  }\n\n  public get imageRange(): ColorbarImageRange {\n    return { ...this._imageRange };\n  }\n\n  public set imageRange(imageRange: ColorbarImageRange) {\n    if (\n      !isRangeValid(imageRange) ||\n      areColorbarRangesEqual(imageRange, this._imageRange)\n    ) {\n      return;\n    }\n\n    this._imageRange = imageRange;\n    this.render();\n  }\n\n  public get voiRange(): ColorbarVOIRange {\n    return { ...this._voiRange };\n  }\n\n  public set voiRange(voiRange: ColorbarVOIRange) {\n    if (\n      !isRangeValid(voiRange) ||\n      areColorbarRangesEqual(voiRange, this._voiRange)\n    ) {\n      return;\n    }\n\n    this._voiRange = voiRange;\n    this.render();\n  }\n\n  public get showFullImageRange(): boolean {\n    return this._showFullImageRange;\n  }\n\n  public set showFullImageRange(showFullImageRange: boolean) {\n    if (showFullImageRange === this._showFullImageRange) {\n      return;\n    }\n\n    this._showFullImageRange = showFullImageRange;\n    this.render();\n  }\n\n  public appendTo(container: HTMLElement) {\n    container.appendChild(this._canvas);\n    this.render();\n  }\n\n  public dispose() {\n    const { _canvas: canvas } = this;\n    const { parentElement } = canvas;\n\n    parentElement?.removeChild(canvas);\n  }\n\n  private static validateProps(props: ColorbarCanvasProps) {\n    const { size, imageRange, voiRange } = props;\n\n    if (size && !isColorbarSizeValid(size)) {\n      throw new Error('Invalid \"size\"');\n    }\n\n    if (imageRange && !isRangeValid(imageRange)) {\n      throw new Error('Invalid \"imageRange\"');\n    }\n\n    if (voiRange && !isRangeValid(voiRange)) {\n      throw new Error('Invalid \"voiRange\"');\n    }\n  }\n\n  private _setCanvasSize(canvas: HTMLCanvasElement, size: ColorbarSize) {\n    const { width, height } = size;\n\n    canvas.width = width;\n    canvas.height = height;\n\n    Object.assign(canvas.style, {\n      width: `${width}px`,\n      height: `${height}px`,\n    });\n  }\n\n  private _createRootElement(size: ColorbarSize) {\n    const canvas = document.createElement('canvas');\n\n    Object.assign(canvas.style, {\n      position: 'absolute',\n      top: '0',\n      left: '0',\n      pointerEvents: 'none',\n      boxSizing: 'border-box',\n    });\n\n    this._setCanvasSize(canvas, size);\n\n    return canvas;\n  }\n\n  private render(): void {\n    if (!this._canvas.isConnected) {\n      return;\n    }\n\n    const { _colormap: colormap } = this;\n    const { RGBPoints: rgbPoints } = colormap;\n    const colorsCount = rgbPoints.length / 4;\n\n    // Returns a color point from rgbPoints. Each point has position, red,\n    // green and blue components which means each point has an offset equal\n    // to `4 * index`\n    const getColorPoint = (index) => {\n      const offset = 4 * index;\n\n      // It can get out of bounds when `voiRange.upper` is smaller than\n      // `imageRange.upper`. It's also checking if is smaller than zero\n      // for safety only because that should never happens.\n      if (index < 0 || index >= colorsCount) {\n        return;\n      }\n\n      return {\n        index,\n        position: rgbPoints[offset],\n        color: [\n          rgbPoints[offset + 1],\n          rgbPoints[offset + 2],\n          rgbPoints[offset + 3],\n        ],\n      };\n    };\n\n    const { width, height } = this._canvas;\n    const canvasContext = this._canvas.getContext('2d');\n    const isHorizontal = width > height;\n    const maxValue = isHorizontal ? width : height;\n    const { _voiRange: voiRange } = this;\n    const range = this._showFullImageRange ? this._imageRange : { ...voiRange };\n\n    const { windowWidth } = utilities.windowLevel.toWindowLevel(\n      voiRange.lower,\n      voiRange.upper\n    );\n\n    let previousColorPoint = undefined;\n    let currentColorPoint = getColorPoint(0);\n\n    // Starts from `range.lower` incrementing by incRawPixelValue on each iteration\n    const incRawPixelValue = (range.upper - range.lower) / (maxValue - 1);\n    let rawPixelValue = range.lower;\n\n    for (let i = 0; i < maxValue; i++) {\n      const tVoiRange = (rawPixelValue - voiRange.lower) / windowWidth;\n\n      // Find the color in a linear way (O(n) complexity).\n      // currentColorPoint shall move to the next color until tVoiRange is smaller\n      // than or equal to next color position.\n      if (currentColorPoint) {\n        for (let i = currentColorPoint.index; i < colorsCount; i++) {\n          if (tVoiRange <= currentColorPoint.position) {\n            break;\n          }\n\n          previousColorPoint = currentColorPoint;\n          currentColorPoint = getColorPoint(i + 1);\n        }\n      }\n\n      let normColor;\n\n      // For:\n      //   - firstColorPoint = getColorPoint(0)\n      //   - secondColorPoint = getColorPoint(1)\n      //   - lastColorPoint = getColorPoint(colorsCount - 1)\n      // Then\n      //   - previousColorPoint shall be undefined when tVoiRange < firstColorPoint.position\n      //   - currentColorPoint shall be undefined when tVoiRange > lastColorPoint.position\n      //   - previousColorPoint and currentColorPoint will be defined when\n      //     currentColorPoint.position is between secondColorPoint.position and\n      //     lastColorPoint.position.\n      if (!previousColorPoint) {\n        normColor = [...currentColorPoint.color];\n      } else if (!currentColorPoint) {\n        normColor = [...previousColorPoint.color];\n      } else {\n        const tColorRange =\n          (tVoiRange - previousColorPoint.position) /\n          (currentColorPoint.position - previousColorPoint.position);\n\n        normColor = interpolateVec3(\n          previousColorPoint.color,\n          currentColorPoint.color,\n          tColorRange\n        );\n      }\n\n      const color = normColor.map((color) =>\n        clamp(Math.round(color * 255), 0, 255)\n      );\n\n      canvasContext.fillStyle = `rgb(${color[0]}, ${color[1]}, ${color[2]})`;\n\n      if (isHorizontal) {\n        canvasContext.fillRect(i, 0, 1, height);\n      } else {\n        canvasContext.fillRect(0, height - i - 1, width, 1);\n      }\n\n      rawPixelValue += incRawPixelValue;\n    }\n  }\n}\n\nexport { ColorbarCanvas as default, ColorbarCanvas };\n","import { IColorMapPreset } from '@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps';\nimport { vec2 } from 'gl-matrix';\nimport { utilities as csUtils, Types } from '@cornerstonejs/core';\nimport type { ColorbarProps, ColorbarVOIRange } from './types';\nimport { isRangeValid, areColorbarRangesEqual } from './common';\nimport { ColorbarRangeTextPosition } from './enums/ColorbarRangeTextPosition';\nimport { ColorbarCanvas } from './ColorbarCanvas';\nimport { ColorbarTicks } from './ColorbarTicks';\nimport isRangeTextPositionValid from './common/isRangeTextPositionValid';\nimport Widget from '../../../widgets/Widget';\n\nconst DEFAULTS = {\n  MULTIPLIER: 1,\n  RANGE_TEXT_POSITION: ColorbarRangeTextPosition.Right,\n  TICKS_BAR_SIZE: 50,\n};\n\ntype ColorbarPoints = {\n  page: Types.Point2;\n  client: Types.Point2;\n  local: Types.Point2;\n};\n\n/**\n * A base colorbar class that is not associated with any viewport. It is\n * possible to click and drag to change the VOI range, shows the ticks during\n * interaction and it can show full image range or VOI range.\n */\nclass Colorbar extends Widget {\n  private _colormaps: Map<string, IColorMapPreset>;\n  private _activeColormapName: string;\n  private _eventListenersManager: csUtils.eventListener.MultiTargetEventListenerManager;\n  private _canvas: ColorbarCanvas;\n  private _ticksBar: ColorbarTicks;\n  private _rangeTextPosition: ColorbarRangeTextPosition;\n\n  private _isMouseOver = false;\n  private _isInteracting = false;\n\n  constructor(props: ColorbarProps) {\n    super(props);\n\n    this._eventListenersManager =\n      new csUtils.eventListener.MultiTargetEventListenerManager();\n    this._colormaps = Colorbar.getColormapsMap(props);\n    this._activeColormapName = Colorbar.getInitialColormapName(props);\n    this._canvas = this._createCanvas(props);\n    this._ticksBar = this._createTicksBar(props);\n    this._rangeTextPosition =\n      props.ticks?.position ?? DEFAULTS.RANGE_TEXT_POSITION;\n\n    this._canvas.appendTo(this.rootElement);\n    this._ticksBar.appendTo(this.rootElement);\n\n    this._addRootElementEventListeners();\n  }\n\n  /**\n   * Returns the active LUT name\n   */\n  public get activeColormapName() {\n    return this._activeColormapName;\n  }\n\n  /**\n   * Set the current active LUT name and re-renders the color bar\n   */\n  public set activeColormapName(colormapName: string) {\n    if (colormapName === this._activeColormapName) {\n      return;\n    }\n\n    const colormap = this._colormaps.get(colormapName);\n\n    if (!colormap) {\n      console.warn(`Invalid colormap name (${colormapName})`);\n      return;\n    }\n\n    this._activeColormapName = colormapName;\n    this._canvas.colormap = colormap;\n  }\n\n  public get imageRange() {\n    return this._canvas.imageRange;\n  }\n\n  public set imageRange(imageRange: ColorbarVOIRange) {\n    this._canvas.imageRange = imageRange;\n    this._ticksBar.imageRange = imageRange;\n  }\n\n  public get voiRange() {\n    return this._canvas.voiRange;\n  }\n\n  public set voiRange(voiRange: ColorbarVOIRange) {\n    const { voiRange: currentVoiRange } = this._canvas;\n\n    if (\n      !isRangeValid(voiRange) ||\n      areColorbarRangesEqual(voiRange, currentVoiRange)\n    ) {\n      return;\n    }\n\n    this._canvas.voiRange = voiRange;\n    this._ticksBar.voiRange = voiRange;\n    this.onVoiChange(voiRange);\n  }\n\n  public get showFullImageRange() {\n    return this._canvas.showFullImageRange;\n  }\n\n  public set showFullImageRange(value: boolean) {\n    this._canvas.showFullImageRange = value;\n    this._ticksBar.showFullPixelValueRange = value;\n  }\n\n  public destroy() {\n    super.destroy();\n    this._eventListenersManager.reset();\n  }\n\n  protected createRootElement(): HTMLElement {\n    const rootElement = document.createElement('div');\n\n    Object.assign(rootElement.style, {\n      position: 'relative',\n      fontSize: '0',\n      width: '100%',\n      height: '100%',\n    });\n\n    return rootElement;\n  }\n\n  protected onContainerResize() {\n    super.onContainerResize();\n    this.updateTicksBar();\n    this._canvas.size = this.containerSize;\n  }\n\n  protected getVOIMultipliers(): [number, number] {\n    return [DEFAULTS.MULTIPLIER, DEFAULTS.MULTIPLIER];\n  }\n\n  protected onVoiChange(voiRange: ColorbarVOIRange) {\n    // no-op\n  }\n\n  protected showTicks() {\n    this.updateTicksBar();\n    this._ticksBar.visible = true;\n  }\n\n  protected hideTicks() {\n    if (this._isInteracting || this._isMouseOver) {\n      return;\n    }\n\n    this._ticksBar.visible = false;\n  }\n\n  private static getColormapsMap(props: ColorbarProps) {\n    const { colormaps } = props;\n\n    return colormaps.reduce(\n      (items, item) => items.set(item.Name, item),\n      new Map<string, IColorMapPreset>()\n    );\n  }\n\n  private static getInitialColormapName(props: ColorbarProps) {\n    const { activeColormapName, colormaps } = props;\n    const colormapExists =\n      !!activeColormapName &&\n      colormaps.some((cm) => cm.Name === activeColormapName);\n\n    return colormapExists ? activeColormapName : colormaps[0].Name;\n  }\n\n  private _createCanvas(props: ColorbarProps) {\n    const { imageRange, voiRange, showFullPixelValueRange } = props;\n    const colormap = this._colormaps.get(this._activeColormapName);\n\n    return new ColorbarCanvas({\n      colormap,\n      imageRange,\n      voiRange: voiRange,\n      showFullPixelValueRange,\n    });\n  }\n\n  public _createTicksBar(props: ColorbarProps): ColorbarTicks {\n    const ticksProps = props.ticks;\n\n    return new ColorbarTicks({\n      imageRange: props.imageRange,\n      voiRange: props.voiRange,\n      ticks: ticksProps,\n      showFullPixelValueRange: props.showFullPixelValueRange,\n    });\n  }\n\n  private _getPointsFromMouseEvent(evt: MouseEvent): ColorbarPoints {\n    const { rootElement: element } = this;\n    const clientPoint: Types.Point2 = [evt.clientX, evt.clientY];\n    const pagePoint: Types.Point2 = [evt.pageX, evt.pageY];\n    const rect = element.getBoundingClientRect();\n    const localPoints: Types.Point2 = [\n      pagePoint[0] - rect.left - window.pageXOffset,\n      pagePoint[1] - rect.top - window.pageYOffset,\n    ];\n\n    return { client: clientPoint, page: pagePoint, local: localPoints };\n  }\n\n  private updateTicksBar() {\n    const { width: containerWidth, height: containerHeight } =\n      this.containerSize;\n\n    // ResizeObserver have not triggered any event when this happen\n    if (containerWidth === 0 && containerHeight === 0) {\n      return;\n    }\n\n    const { _ticksBar: ticksBar, _rangeTextPosition: rangeTextPosition } = this;\n    const isHorizontal = containerWidth >= containerHeight;\n    const width = isHorizontal ? containerWidth : DEFAULTS.TICKS_BAR_SIZE;\n    const height = isHorizontal ? DEFAULTS.TICKS_BAR_SIZE : containerHeight;\n\n    if (\n      !isRangeTextPositionValid(\n        containerWidth,\n        containerHeight,\n        rangeTextPosition\n      )\n    ) {\n      throw new Error(\n        'Invalid rangeTextPosition value for the current colobar orientation'\n      );\n    }\n\n    let ticksBarTop;\n    let ticksBarLeft;\n\n    ticksBar.size = { width, height };\n\n    if (isHorizontal) {\n      ticksBarLeft = 0;\n      ticksBarTop =\n        rangeTextPosition === ColorbarRangeTextPosition.Top\n          ? -height\n          : containerHeight;\n    } else {\n      ticksBarTop = 0;\n      ticksBarLeft =\n        rangeTextPosition === ColorbarRangeTextPosition.Left\n          ? -width\n          : containerWidth;\n    }\n\n    ticksBar.top = ticksBarTop;\n    ticksBar.left = ticksBarLeft;\n  }\n\n  private _mouseOverCallback = (evt) => {\n    this._isMouseOver = true;\n    this.showTicks();\n    evt.stopPropagation();\n  };\n\n  private _mouseOutCallback = (evt) => {\n    this._isMouseOver = false;\n    this.hideTicks();\n    evt.stopPropagation();\n  };\n\n  private _mouseDownCallback = (evt: MouseEvent) => {\n    this._isInteracting = true;\n    this.showTicks();\n    this._addVOIEventListeners(evt);\n    evt.stopPropagation();\n  };\n\n  private _mouseDragCallback = (evt, initialState) => {\n    const multipliers = this.getVOIMultipliers();\n    const currentPoints = this._getPointsFromMouseEvent(evt);\n    const { points: startPoints, voiRange: startVOIRange } = initialState;\n    const canvasDelta = vec2.sub(\n      vec2.create(),\n      currentPoints.local,\n      startPoints.local\n    );\n\n    const wwDelta = canvasDelta[0] * multipliers[0];\n    const wcDelta = canvasDelta[1] * multipliers[1];\n\n    if (!wwDelta && !wcDelta) {\n      return;\n    }\n\n    const { lower: voiLower, upper: voiUpper } = startVOIRange;\n    let { windowWidth, windowCenter } = csUtils.windowLevel.toWindowLevel(\n      voiLower,\n      voiUpper\n    );\n\n    windowWidth = Math.max(windowWidth + wwDelta, 1);\n    windowCenter += wcDelta;\n\n    const newVoiRange = csUtils.windowLevel.toLowHighRange(\n      windowWidth,\n      windowCenter\n    );\n\n    this.voiRange = newVoiRange;\n    evt.stopPropagation();\n    evt.preventDefault();\n  };\n\n  private _mouseUpCallback = (evt) => {\n    this._isInteracting = false;\n    this.hideTicks();\n    this._removeVOIEventListeners();\n    evt.stopPropagation();\n  };\n\n  private _addRootElementEventListeners() {\n    const { _eventListenersManager: manager } = this;\n    const { rootElement: element } = this;\n\n    manager.addEventListener(element, 'mouseover', this._mouseOverCallback);\n    manager.addEventListener(element, 'mouseout', this._mouseOutCallback);\n    manager.addEventListener(\n      element,\n      'mousedown',\n      this._mouseDownCallback as EventListener\n    );\n  }\n\n  private _addVOIEventListeners(evt: MouseEvent) {\n    const { _eventListenersManager: manager } = this;\n    const points = this._getPointsFromMouseEvent(evt);\n    const voiRange = { ...this._canvas.voiRange };\n    const initialDragState = { points, voiRange };\n\n    this._removeVOIEventListeners();\n\n    manager.addEventListener(document, 'voi.mouseup', this._mouseUpCallback);\n    manager.addEventListener(document, 'voi.mousemove', (evt) =>\n      this._mouseDragCallback(evt, initialDragState)\n    );\n  }\n\n  private _removeVOIEventListeners() {\n    const { _eventListenersManager: manager } = this;\n\n    manager.removeEventListener(document, 'voi.mouseup');\n    manager.removeEventListener(document, 'voi.mousemove');\n  }\n}\n\nexport { Colorbar as default, Colorbar };\n","import {\n  eventTarget,\n  VolumeViewport,\n  StackViewport,\n  Types,\n  Enums,\n  utilities,\n  getEnabledElement,\n} from '@cornerstonejs/core';\nimport { Colorbar } from './Colorbar';\nimport type { ViewportColorbarProps, ColorbarVOIRange } from './types';\nimport { getVOIMultipliers } from '../../getVOIMultipliers';\n\nconst { Events } = Enums;\nconst defaultImageRange = { lower: -1000, upper: 1000 };\n/**\n * A colorbar associated with a viewport that updates automatically when the\n * viewport VOI changes or when the stack/volume are updated..\n */\nclass ViewportColorbar extends Colorbar {\n  private _element: HTMLDivElement;\n  private _volumeId: string;\n\n  private _hideTicksTime: number;\n  private _hideTicksTimeoutId: number;\n\n  constructor(props: ViewportColorbarProps) {\n    const { element, volumeId } = props;\n    const imageRange = ViewportColorbar._getImageRange(element, volumeId);\n    const voiRange = ViewportColorbar._getVOIRange(element, volumeId);\n\n    super({ ...props, imageRange, voiRange });\n\n    this._element = element;\n    this._volumeId = volumeId;\n\n    this._addCornerstoneEventListener();\n  }\n\n  public get element() {\n    return this._element;\n  }\n\n  public get enabledElement() {\n    return getEnabledElement(this._element);\n  }\n\n  protected getVOIMultipliers(): [number, number] {\n    const { viewport } = this.enabledElement;\n    return getVOIMultipliers(viewport, this._volumeId);\n  }\n\n  protected onVoiChange(voiRange: ColorbarVOIRange) {\n    super.onVoiChange(voiRange);\n\n    const { viewport } = this.enabledElement;\n\n    if (viewport instanceof StackViewport) {\n      viewport.setProperties({\n        voiRange: voiRange,\n      });\n      viewport.render();\n    } else if (viewport instanceof VolumeViewport) {\n      const { _volumeId: volumeId } = this;\n      const viewportsContainingVolumeUID = utilities.getViewportsWithVolumeId(\n        volumeId,\n        viewport.renderingEngineId\n      );\n\n      viewport.setProperties({ voiRange }, volumeId);\n      viewportsContainingVolumeUID.forEach((vp) => vp.render());\n    }\n  }\n\n  private static _getImageRange(element, volumeId?) {\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n\n    const actor = volumeId\n      ? viewport.getActor(volumeId)\n      : viewport.getDefaultActor();\n\n    if (!actor) {\n      return defaultImageRange;\n    }\n\n    const imageData = actor.actor.getMapper().getInputData();\n    const imageRange = imageData.getPointData().getScalars().getRange();\n\n    return imageRange[0] === 0 && imageRange[1] === 0\n      ? defaultImageRange\n      : { lower: imageRange[0], upper: imageRange[1] };\n  }\n\n  private static _getVOIRange(element, volumeId) {\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n\n    const volumeActor = volumeId\n      ? viewport.getActor(volumeId)\n      : viewport.getDefaultActor();\n\n    if (!volumeActor || !utilities.isImageActor(volumeActor)) {\n      return defaultImageRange;\n    }\n\n    const voiRange = (volumeActor.actor as Types.ImageActor)\n      .getProperty()\n      .getRGBTransferFunction(0)\n      .getRange();\n\n    return voiRange[0] === 0 && voiRange[1] === 0\n      ? defaultImageRange\n      : { lower: voiRange[0], upper: voiRange[1] };\n  }\n\n  private autoHideTicks = () => {\n    // Avoiding calling setTimeout multiple times when manipulating the VOI\n    // via WindowLevel tool for better performance\n    if (this._hideTicksTimeoutId) {\n      return;\n    }\n\n    const timeLeft = this._hideTicksTime - Date.now();\n\n    if (timeLeft <= 0) {\n      this.hideTicks();\n    } else {\n      this._hideTicksTimeoutId = window.setTimeout(() => {\n        // Recursive call until there is no more time left\n        this._hideTicksTimeoutId = 0;\n        this.autoHideTicks();\n      }, timeLeft);\n    }\n  };\n\n  private showAndAutoHideTicks(interval = 1000) {\n    this._hideTicksTime = Date.now() + interval;\n    this.showTicks();\n    this.autoHideTicks();\n  }\n\n  private _stackNewImageCallback = () => {\n    this.imageRange = ViewportColorbar._getImageRange(this._element);\n  };\n\n  private _imageVolumeModifiedCallback = (\n    evt: Types.EventTypes.ImageVolumeModifiedEvent\n  ) => {\n    const { volumeId } = evt.detail.imageVolume;\n\n    if (volumeId !== this._volumeId) {\n      return;\n    }\n\n    const { _element: element } = this;\n    this.imageRange = ViewportColorbar._getImageRange(element, volumeId);\n  };\n\n  private _viewportVOIModifiedCallback = (\n    evt: Types.EventTypes.VoiModifiedEvent\n  ) => {\n    const { viewportId, volumeId, range: voiRange, colormap } = evt.detail;\n    const { viewport } = this.enabledElement;\n    if (viewportId !== viewport.id || volumeId !== this._volumeId) {\n      return;\n    }\n\n    this.voiRange = voiRange;\n\n    if (colormap) {\n      this.activeColormapName = colormap.name;\n    }\n    this.showAndAutoHideTicks();\n  };\n\n  private _viewportColormapModifiedCallback = (\n    evt: Types.EventTypes.ColormapModifiedEvent\n  ) => {\n    const { viewportId, colormap, volumeId } = evt.detail;\n    const { viewport } = this.enabledElement;\n\n    if (viewportId !== viewport.id || volumeId !== this._volumeId) {\n      return;\n    }\n\n    this.activeColormapName = colormap.name;\n  };\n\n  private _addCornerstoneEventListener() {\n    const { _element: element } = this;\n\n    eventTarget.addEventListener(\n      Events.IMAGE_VOLUME_MODIFIED,\n      this._imageVolumeModifiedCallback\n    );\n\n    element.addEventListener(\n      Events.STACK_NEW_IMAGE,\n      this._stackNewImageCallback\n    );\n\n    element.addEventListener(\n      Events.VOI_MODIFIED,\n      this._viewportVOIModifiedCallback as EventListener\n    );\n\n    element.addEventListener(\n      Events.COLORMAP_MODIFIED,\n      this._viewportColormapModifiedCallback as EventListener\n    );\n  }\n}\n\nexport { ViewportColorbar as default, ViewportColorbar };\n","/**\n * Specify the position of the text/ticks.\n * Left/Right are the valid options for a vertical colorbars and Top/Bottom\n * for the horizontal ones.\n */\nexport enum ColorbarRangeTextPosition {\n  Top = 'top',\n  Left = 'left',\n  Bottom = 'bottom',\n  Right = 'right',\n}\n","/**\n * Extracts the luminance values from a specified region of an image.\n *\n * @param {Object} imageData - The image data object containing pixel information.\n * @param {Uint8Array} imageData.scalarData - The pixel data array.\n * @param {boolean} imageData.color - A flag indicating if the image is in color (true) or grayscale (false).\n * @param {number} imageData.columns - The number of columns (width) in the image.\n * @param {number} x - The x-coordinate of the top-left corner of the region.\n * @param {number} y - The y-coordinate of the top-left corner of the region.\n * @param {number} width - The width of the region.\n * @param {number} height - The height of the region.\n * @returns {number[]} An array containing the luminance values of the specified region.\n */\nfunction getLuminanceFromRegion(imageData, x, y, width, height) {\n  const luminance = [];\n  let index = 0;\n  const pixelData = imageData.scalarData;\n  let spIndex, row, column;\n\n  if (imageData.color) {\n    for (row = 0; row < height; row++) {\n      for (column = 0; column < width; column++) {\n        spIndex = ((row + y) * imageData.columns + (column + x)) * 4;\n        const red = pixelData[spIndex];\n        const green = pixelData[spIndex + 1];\n        const blue = pixelData[spIndex + 2];\n\n        luminance[index++] = 0.2126 * red + 0.7152 * green + 0.0722 * blue;\n      }\n    }\n  } else {\n    for (row = 0; row < height; row++) {\n      for (column = 0; column < width; column++) {\n        spIndex = (row + y) * imageData.columns + (column + x);\n        luminance[index++] = pixelData[spIndex];\n      }\n    }\n  }\n\n  return luminance;\n}\n\nexport { getLuminanceFromRegion };\n","function calculateMinMaxMean(pixelLuminance, globalMin, globalMax) {\n  const numPixels = pixelLuminance.length;\n  let min = globalMax;\n  let max = globalMin;\n  let sum = 0;\n\n  if (numPixels < 2) {\n    return {\n      min,\n      max,\n      mean: (globalMin + globalMax) / 2,\n    };\n  }\n\n  for (let index = 0; index < numPixels; index++) {\n    const spv = pixelLuminance[index];\n\n    min = Math.min(min, spv);\n    max = Math.max(max, spv);\n    sum += spv;\n  }\n\n  return {\n    min,\n    max,\n    mean: sum / numPixels,\n  };\n}\n\nexport { calculateMinMaxMean };\n","import {\n  VolumeViewport,\n  utilities as csUtils,\n  cache,\n  StackViewport,\n} from '@cornerstonejs/core';\n\nfunction extractWindowLevelRegionToolData(viewport) {\n  if (viewport instanceof VolumeViewport) {\n    return extractImageDataVolume(viewport);\n  }\n  if (viewport instanceof StackViewport) {\n    return extractImageDataStack(viewport);\n  }\n\n  throw new Error('Viewport not supported');\n}\n\nfunction extractImageDataVolume(viewport) {\n  const { scalarData, width, height } =\n    csUtils.getCurrentVolumeViewportSlice(viewport);\n  const { min: minPixelValue, max: maxPixelValue } =\n    csUtils.getMinMax(scalarData);\n  const volumeId = viewport.getVolumeId();\n  const volume = cache.getVolume(volumeId);\n  // @ts-ignore\n  const { metadata, cornerstoneImageMetaData } = volume;\n  const { Rows: rows, Columns: columns } = metadata;\n  const { color } = cornerstoneImageMetaData;\n  return {\n    scalarData,\n    width,\n    height,\n    minPixelValue,\n    maxPixelValue,\n    rows,\n    columns,\n    color,\n  };\n}\n\nfunction extractImageDataStack(viewport) {\n  const imageData = viewport.getImageData();\n  const { scalarData } = imageData;\n  const { min: minPixelValue, max: maxPixelValue } =\n    csUtils.getMinMax(scalarData);\n  const width = imageData.dimensions[0];\n  const height = imageData.dimensions[1];\n  const { rows, columns, color } = viewport.getCornerstoneImage();\n\n  return {\n    scalarData,\n    width,\n    height,\n    minPixelValue,\n    maxPixelValue,\n    rows,\n    columns,\n    color,\n  };\n}\n\nexport { extractWindowLevelRegionToolData };\n","\nvar ICRPolySegApp = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  \n  return (\nfunction(ICRPolySegApp) {\n  ICRPolySegApp = ICRPolySegApp || {};\n\nvar Module=typeof ICRPolySegApp!=\"undefined\"?ICRPolySegApp:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=true;var ENVIRONMENT_IS_WORKER=false;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var POINTER_SIZE=4;var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heapOrArray,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function keepRuntimeAlive(){return noExitRuntime}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}var wasmBinaryFile;wasmBinaryFile=\"ICRPolySeg.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"Q\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"T\"];addOnInit(Module[\"asm\"][\"R\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(wasmBinaryFile)&&typeof fetch==\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);readyPromiseReject(e)}}instantiateAsync().catch(readyPromiseReject);return{}}var ASM_CONSTS={638383:$0=>{if(Module.updateProgress){Module.updateProgress($0)}}};function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){callbacks.shift()(Module)}}function ExceptionInfo(excPtr){this.excPtr=excPtr;this.ptr=excPtr-24;this.set_type=function(type){HEAPU32[this.ptr+4>>2]=type};this.get_type=function(){return HEAPU32[this.ptr+4>>2]};this.set_destructor=function(destructor){HEAPU32[this.ptr+8>>2]=destructor};this.get_destructor=function(){return HEAPU32[this.ptr+8>>2]};this.set_refcount=function(refcount){HEAP32[this.ptr>>2]=refcount};this.set_caught=function(caught){caught=caught?1:0;HEAP8[this.ptr+12>>0]=caught};this.get_caught=function(){return HEAP8[this.ptr+12>>0]!=0};this.set_rethrown=function(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13>>0]=rethrown};this.get_rethrown=function(){return HEAP8[this.ptr+13>>0]!=0};this.init=function(type,destructor){this.set_adjusted_ptr(0);this.set_type(type);this.set_destructor(destructor);this.set_refcount(0);this.set_caught(false);this.set_rethrown(false)};this.add_ref=function(){var value=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=value+1};this.release_ref=function(){var prev=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=prev-1;return prev===1};this.set_adjusted_ptr=function(adjustedPtr){HEAPU32[this.ptr+16>>2]=adjustedPtr};this.get_adjusted_ptr=function(){return HEAPU32[this.ptr+16>>2]};this.get_exception_ptr=function(){var isPointer=___cxa_is_pointer_type(this.get_type());if(isPointer){return HEAPU32[this.excPtr>>2]}var adjusted=this.get_adjusted_ptr();if(adjusted!==0)return adjusted;return this.excPtr}}var exceptionLast=0;var uncaughtExceptionCount=0;function ___cxa_throw(ptr,type,destructor){var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw ptr}var SYSCALLS={varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret}};function ___syscall_getcwd(buf,size){}function ___syscall_getdents64(fd,dirp,count){}function ___syscall_openat(dirfd,path,flags,varargs){SYSCALLS.varargs=varargs}function ___syscall_readlinkat(dirfd,path,buf,bufsize){}function ___syscall_stat64(path,buf){}var structRegistrations={};function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAP32[pointer>>2])}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}return name}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\")(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}};return errorClass}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach((dt,i)=>{if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(()=>{typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}}function __embind_finalize_value_object(structType){var reg=structRegistrations[structType];delete structRegistrations[structType];var rawConstructor=reg.rawConstructor;var rawDestructor=reg.rawDestructor;var fieldRecords=reg.fields;var fieldTypes=fieldRecords.map(field=>field.getterReturnType).concat(fieldRecords.map(field=>field.setterArgumentType));whenDependentTypesAreResolved([structType],fieldTypes,fieldTypes=>{var fields={};fieldRecords.forEach((field,i)=>{var fieldName=field.fieldName;var getterReturnType=fieldTypes[i];var getter=field.getter;var getterContext=field.getterContext;var setterArgumentType=fieldTypes[i+fieldRecords.length];var setter=field.setter;var setterContext=field.setterContext;fields[fieldName]={read:ptr=>{return getterReturnType[\"fromWireType\"](getter(getterContext,ptr))},write:(ptr,o)=>{var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,o));runDestructors(destructors)}}});return[{name:reg.name,\"fromWireType\":function(ptr){var rv={};for(var i in fields){rv[i]=fields[i].read(ptr)}rawDestructor(ptr);return rv},\"toWireType\":function(destructors,o){for(var fieldName in fields){if(!(fieldName in o)){throw new TypeError('Missing field:  \"'+fieldName+'\"')}}var ptr=rawConstructor();for(fieldName in fields){fields[fieldName].write(ptr,o[fieldName])}if(destructors!==null){destructors.push(rawDestructor,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:rawDestructor}]})}function __embind_register_bigint(primitiveType,name,size,minRange,maxRange){}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}function registerType(rawType,registeredInstance,options={}){if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(cb=>cb())}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":8,\"readValueFromPointer\":function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])},destructorFunction:null})}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}var Emval={toValue:handle=>{if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handle_array[handle].value},toHandle:value=>{switch(value){case undefined:return 1;case null:return 2;case true:return 3;case false:return 4;default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}};function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(handle){var rv=Emval.toValue(handle);__emval_decref(handle);return rv},\"toWireType\":function(destructors,value){return Emval.toHandle(value)},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 3:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(value){return value},\"toWireType\":function(destructors,value){return value},\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",function(){});dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAPU32[firstElement+i*4>>2])}return array}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function dynCallLegacy(sig,ptr,args){var f=Module[\"dynCall_\"+sig];return args&&args.length?f.apply(null,[ptr].concat(args)):f.call(null,ptr)}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func}function dynCall(sig,ptr,args){if(sig.includes(\"j\")){return dynCallLegacy(sig,ptr,args)}var rtn=getWasmTableEntry(ptr).apply(null,args);return rtn}function getDynCaller(sig,ptr){var argCache=[];return function(){argCache.length=0;Object.assign(argCache,arguments);return dynCall(sig,ptr,argCache)}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(){if(signature.includes(\"j\")){return getDynCaller(signature,rawFunction)}return getWasmTableEntry(rawFunction)}var fp=makeDynCaller();if(typeof fp!=\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_function(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn){var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr);name=readLatin1String(name);rawInvoker=embind__requireFunction(signature,rawInvoker);exposePublicSymbol(name,function(){throwUnboundTypeError(\"Cannot call \"+name+\" due to unbound types\",argTypes)},argCount-1);whenDependentTypesAreResolved([],argTypes,function(argTypes){var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));replacePublicSymbol(name,craftInvokerFunction(name,invokerArgsArray,null,rawInvoker,fn),argCount-1);return[]})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=value=>value<<bitshift>>>bitshift}var isUnsignedType=name.includes(\"unsigned\");var checkAssertions=(value,toTypeName)=>{};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":toWireType,\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var payload=value+4;var str;if(stdStringIsUTF8){var decodeStartPtr=payload;for(var i=0;i<=length;++i){var currentBytePtr=payload+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[payload+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\":function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var length;var valueIsOfTypeString=typeof value==\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){length=lengthBytesUTF8(value)}else{length=value.length}var base=_malloc(4+length+1);var ptr=base+4;HEAPU32[base>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+i]=value[i]}}}if(destructors!==null){destructors.push(_free,base)}return base},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}var UTF16Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function UTF16ToString(ptr,maxBytesToRead){var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder)return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr));var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str}function stringToUTF16(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr}function lengthBytesUTF16(str){return str.length*2}function UTF32ToString(ptr,maxBytesToRead){var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str}function stringToUTF32(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr}function lengthBytesUTF32(str){var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var decodeString,encodeString,getHeap,lengthBytesUTF,shift;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;getHeap=()=>HEAPU16;shift=1}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;getHeap=()=>HEAPU32;shift=2}registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var HEAP=getHeap();var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||HEAP[currentBytePtr>>shift]==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":function(destructors,value){if(!(typeof value==\"string\")){throwBindingError(\"Cannot pass non-string to C++ string type \"+name)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length>>shift;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_value_object(rawType,name,constructorSignature,rawConstructor,destructorSignature,rawDestructor){structRegistrations[rawType]={name:readLatin1String(name),rawConstructor:embind__requireFunction(constructorSignature,rawConstructor),rawDestructor:embind__requireFunction(destructorSignature,rawDestructor),fields:[]}}function __embind_register_value_object_field(structType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){structRegistrations[structType].fields.push({fieldName:readLatin1String(fieldName),getterReturnType:getterReturnType,getter:embind__requireFunction(getterSignature,getter),getterContext:getterContext,setterArgumentType:setterArgumentType,setter:embind__requireFunction(setterSignature,setter),setterContext:setterContext})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":function(){return undefined},\"toWireType\":function(destructors,o){return undefined}})}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(humanName+\" has unknown type \"+getTypeName(rawType))}return impl}function __emval_as(handle,returnType,destructorsRef){handle=Emval.toValue(handle);returnType=requireRegisteredType(returnType,\"emval::as\");var destructors=[];var rd=Emval.toHandle(destructors);HEAPU32[destructorsRef>>2]=rd;return returnType[\"toWireType\"](destructors,handle)}var emval_symbols={};function getStringOrSymbol(address){var symbol=emval_symbols[address];if(symbol===undefined){return readLatin1String(address)}return symbol}var emval_methodCallers=[];function __emval_call_void_method(caller,handle,methodName,args){caller=emval_methodCallers[caller];handle=Emval.toValue(handle);methodName=getStringOrSymbol(methodName);caller(handle,methodName,null,args)}function emval_get_global(){if(typeof globalThis==\"object\"){return globalThis}return function(){return Function}()(\"return this\")()}function __emval_get_global(name){if(name===0){return Emval.toHandle(emval_get_global())}else{name=getStringOrSymbol(name);return Emval.toHandle(emval_get_global()[name])}}function emval_addMethodCaller(caller){var id=emval_methodCallers.length;emval_methodCallers.push(caller);return id}function emval_lookupTypes(argCount,argTypes){var a=new Array(argCount);for(var i=0;i<argCount;++i){a[i]=requireRegisteredType(HEAPU32[argTypes+i*POINTER_SIZE>>2],\"parameter \"+i)}return a}var emval_registeredMethods=[];function __emval_get_method_caller(argCount,argTypes){var types=emval_lookupTypes(argCount,argTypes);var retType=types[0];var signatureName=retType.name+\"_$\"+types.slice(1).map(function(t){return t.name}).join(\"_\")+\"$\";var returnId=emval_registeredMethods[signatureName];if(returnId!==undefined){return returnId}var params=[\"retType\"];var args=[retType];var argsList=\"\";for(var i=0;i<argCount-1;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;params.push(\"argType\"+i);args.push(types[1+i])}var functionName=makeLegalFunctionName(\"methodCaller_\"+signatureName);var functionBody=\"return function \"+functionName+\"(handle, name, destructors, args) {\\n\";var offset=0;for(var i=0;i<argCount-1;++i){functionBody+=\"    var arg\"+i+\" = argType\"+i+\".readValueFromPointer(args\"+(offset?\"+\"+offset:\"\")+\");\\n\";offset+=types[i+1][\"argPackAdvance\"]}functionBody+=\"    var rv = handle[name](\"+argsList+\");\\n\";for(var i=0;i<argCount-1;++i){if(types[i+1][\"deleteObject\"]){functionBody+=\"    argType\"+i+\".deleteObject(arg\"+i+\");\\n\"}}if(!retType.isVoid){functionBody+=\"    return retType.toWireType(destructors, rv);\\n\"}functionBody+=\"};\\n\";params.push(functionBody);var invokerFunction=new_(Function,params).apply(null,args);returnId=emval_addMethodCaller(invokerFunction);emval_registeredMethods[signatureName]=returnId;return returnId}function __emval_get_property(handle,key){handle=Emval.toValue(handle);key=Emval.toValue(key);return Emval.toHandle(handle[key])}function __emval_incref(handle){if(handle>4){emval_handle_array[handle].refcount+=1}}function craftEmvalAllocator(argCount){var argsList=\"\";for(var i=0;i<argCount;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i}var getMemory=()=>HEAPU32;var functionBody=\"return function emval_allocator_\"+argCount+\"(constructor, argTypes, args) {\\n\"+\"  var HEAPU32 = getMemory();\\n\";for(var i=0;i<argCount;++i){functionBody+=\"var argType\"+i+\" = requireRegisteredType(HEAPU32[((argTypes)>>2)], 'parameter \"+i+\"');\\n\"+\"var arg\"+i+\" = argType\"+i+\".readValueFromPointer(args);\\n\"+\"args += argType\"+i+\"['argPackAdvance'];\\n\"+\"argTypes += 4;\\n\"}functionBody+=\"var obj = new constructor(\"+argsList+\");\\n\"+\"return valueToHandle(obj);\\n\"+\"}\\n\";return new Function(\"requireRegisteredType\",\"Module\",\"valueToHandle\",\"getMemory\",functionBody)(requireRegisteredType,Module,Emval.toHandle,getMemory)}var emval_newers={};function __emval_new(handle,argCount,argTypes,args){handle=Emval.toValue(handle);var newer=emval_newers[argCount];if(!newer){newer=craftEmvalAllocator(argCount);emval_newers[argCount]=newer}return newer(handle,argTypes,args)}function __emval_new_cstring(v){return Emval.toHandle(getStringOrSymbol(v))}function __emval_run_destructors(handle){var destructors=Emval.toValue(handle);runDestructors(destructors);__emval_decref(handle)}function __emval_take_value(type,arg){type=requireRegisteredType(type,\"_emval_take_value\");var v=type[\"readValueFromPointer\"](arg);return Emval.toHandle(v)}function _abort(){abort(\"\")}var readEmAsmArgsArray=[];function readEmAsmArgs(sigPtr,buf){readEmAsmArgsArray.length=0;var ch;buf>>=2;while(ch=HEAPU8[sigPtr++]){buf+=ch!=105&buf;readEmAsmArgsArray.push(ch==105?HEAP32[buf]:HEAPF64[buf++>>1]);++buf}return readEmAsmArgsArray}function runEmAsmFunction(code,sigPtr,argbuf){var args=readEmAsmArgs(sigPtr,argbuf);return ASM_CONSTS[code].apply(null,args)}function _emscripten_asm_const_int(code,sigPtr,argbuf){return runEmAsmFunction(code,sigPtr,argbuf)}function getHeapMax(){return 2147483648}function _emscripten_get_heap_max(){return getHeapMax()}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}let alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var ENV={};function getExecutableName(){return thisProgram||\"./this.program\"}function getEnvStrings(){if(!getEnvStrings.strings){var lang=(typeof navigator==\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\";var env={\"USER\":\"web_user\",\"LOGNAME\":\"web_user\",\"PATH\":\"/\",\"PWD\":\"/\",\"HOME\":\"/home/web_user\",\"LANG\":lang,\"_\":getExecutableName()};for(var x in ENV){if(ENV[x]===undefined)delete env[x];else env[x]=ENV[x]}var strings=[];for(var x in env){strings.push(x+\"=\"+env[x])}getEnvStrings.strings=strings}return getEnvStrings.strings}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}function _environ_get(__environ,environ_buf){var bufSize=0;getEnvStrings().forEach(function(string,i){var ptr=environ_buf+bufSize;HEAPU32[__environ+i*4>>2]=ptr;writeAsciiToMemory(string,ptr);bufSize+=string.length+1});return 0}function _environ_sizes_get(penviron_count,penviron_buf_size){var strings=getEnvStrings();HEAPU32[penviron_count>>2]=strings.length;var bufSize=0;strings.forEach(function(string){bufSize+=string.length+1});HEAPU32[penviron_buf_size>>2]=bufSize;return 0}function _fd_close(fd){return 52}function _fd_read(fd,iov,iovcnt,pnum){return 52}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){return 70}var printCharBuffers=[null,[],[]];function printChar(stream,curr){var buffer=printCharBuffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}}function _fd_write(fd,iov,iovcnt,pnum){var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;for(var j=0;j<len;j++){printChar(fd,HEAPU8[ptr+j])}num+=len}HEAPU32[pnum>>2]=num;return 0}function __isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0)}function __arraySum(array,index){var sum=0;for(var i=0;i<=index;sum+=array[i++]){}return sum}var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date,days){var newDate=new Date(date.getTime());while(days>0){var leap=__isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1)}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1)}}else{newDate.setDate(newDate.getDate()+days);return newDate}}return newDate}function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function _strftime(s,maxsize,format,tm){var tm_zone=HEAP32[tm+40>>2];var date={tm_sec:HEAP32[tm>>2],tm_min:HEAP32[tm+4>>2],tm_hour:HEAP32[tm+8>>2],tm_mday:HEAP32[tm+12>>2],tm_mon:HEAP32[tm+16>>2],tm_year:HEAP32[tm+20>>2],tm_wday:HEAP32[tm+24>>2],tm_yday:HEAP32[tm+28>>2],tm_isdst:HEAP32[tm+32>>2],tm_gmtoff:HEAP32[tm+36>>2],tm_zone:tm_zone?UTF8ToString(tm_zone):\"\"};var pattern=UTF8ToString(format);var EXPANSION_RULES_1={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_1[rule])}var WEEKDAYS=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];var MONTHS=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];function leadingSomething(value,digits,character){var str=typeof value==\"number\"?value.toString():value||\"\";while(str.length<digits){str=character[0]+str}return str}function leadingNulls(value,digits){return leadingSomething(value,digits,\"0\")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate())}}return compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var thisDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1}return thisDate.getFullYear()}return thisDate.getFullYear()-1}var EXPANSION_RULES_2={\"%a\":function(date){return WEEKDAYS[date.tm_wday].substring(0,3)},\"%A\":function(date){return WEEKDAYS[date.tm_wday]},\"%b\":function(date){return MONTHS[date.tm_mon].substring(0,3)},\"%B\":function(date){return MONTHS[date.tm_mon]},\"%C\":function(date){var year=date.tm_year+1900;return leadingNulls(year/100|0,2)},\"%d\":function(date){return leadingNulls(date.tm_mday,2)},\"%e\":function(date){return leadingSomething(date.tm_mday,2,\" \")},\"%g\":function(date){return getWeekBasedYear(date).toString().substring(2)},\"%G\":function(date){return getWeekBasedYear(date)},\"%H\":function(date){return leadingNulls(date.tm_hour,2)},\"%I\":function(date){var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2)},\"%j\":function(date){return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900)?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,date.tm_mon-1),3)},\"%m\":function(date){return leadingNulls(date.tm_mon+1,2)},\"%M\":function(date){return leadingNulls(date.tm_min,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(date){if(date.tm_hour>=0&&date.tm_hour<12){return\"AM\"}return\"PM\"},\"%S\":function(date){return leadingNulls(date.tm_sec,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(date){return date.tm_wday||7},\"%U\":function(date){var days=date.tm_yday+7-date.tm_wday;return leadingNulls(Math.floor(days/7),2)},\"%V\":function(date){var val=Math.floor((date.tm_yday+7-(date.tm_wday+6)%7)/7);if((date.tm_wday+371-date.tm_yday-2)%7<=2){val++}if(!val){val=52;var dec31=(date.tm_wday+7-date.tm_yday-1)%7;if(dec31==4||dec31==5&&__isLeapYear(date.tm_year%400-1)){val++}}else if(val==53){var jan1=(date.tm_wday+371-date.tm_yday)%7;if(jan1!=4&&(jan1!=3||!__isLeapYear(date.tm_year)))val=1}return leadingNulls(val,2)},\"%w\":function(date){return date.tm_wday},\"%W\":function(date){var days=date.tm_yday+7-(date.tm_wday+6)%7;return leadingNulls(Math.floor(days/7),2)},\"%y\":function(date){return(date.tm_year+1900).toString().substring(2)},\"%Y\":function(date){return date.tm_year+1900},\"%z\":function(date){var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?\"+\":\"-\")+String(\"0000\"+off).slice(-4)},\"%Z\":function(date){return date.tm_zone},\"%%\":function(){return\"%\"}};pattern=pattern.replace(/%%/g,\"\\0\\0\");for(var rule in EXPANSION_RULES_2){if(pattern.includes(rule)){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_2[rule](date))}}pattern=pattern.replace(/\\0\\0/g,\"%\");var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0}writeArrayToMemory(bytes,s);return bytes.length-1}function _strftime_l(s,maxsize,format,tm,loc){return _strftime(s,maxsize,format,tm)}function _proc_exit(code){EXITSTATUS=code;if(!keepRuntimeAlive()){if(Module[\"onExit\"])Module[\"onExit\"](code);ABORT=true}quit_(code,new ExitStatus(code))}function exitJS(status,implicit){EXITSTATUS=status;_proc_exit(status)}function handleException(e){if(e instanceof ExitStatus||e==\"unwind\"){return EXITSTATUS}quit_(1,e)}InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");init_emval();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");var asmLibraryArg={\"b\":___cxa_throw,\"J\":___syscall_getcwd,\"F\":___syscall_getdents64,\"L\":___syscall_openat,\"E\":___syscall_readlinkat,\"G\":___syscall_stat64,\"x\":__embind_finalize_value_object,\"A\":__embind_register_bigint,\"O\":__embind_register_bool,\"N\":__embind_register_emval,\"v\":__embind_register_float,\"g\":__embind_register_function,\"d\":__embind_register_integer,\"c\":__embind_register_memory_view,\"u\":__embind_register_std_string,\"m\":__embind_register_std_wstring,\"y\":__embind_register_value_object,\"e\":__embind_register_value_object_field,\"P\":__embind_register_void,\"r\":__emval_as,\"i\":__emval_call_void_method,\"a\":__emval_decref,\"p\":__emval_get_global,\"j\":__emval_get_method_caller,\"s\":__emval_get_property,\"f\":__emval_incref,\"o\":__emval_new,\"w\":__emval_new_cstring,\"q\":__emval_run_destructors,\"k\":__emval_take_value,\"n\":_abort,\"h\":_emscripten_asm_const_int,\"D\":_emscripten_get_heap_max,\"M\":_emscripten_memcpy_big,\"C\":_emscripten_resize_heap,\"H\":_environ_get,\"I\":_environ_sizes_get,\"l\":_fd_close,\"K\":_fd_read,\"z\":_fd_seek,\"t\":_fd_write,\"B\":_strftime_l};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"R\"]).apply(null,arguments)};var _main=Module[\"_main\"]=function(){return(_main=Module[\"_main\"]=Module[\"asm\"][\"S\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"U\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"V\"]).apply(null,arguments)};var ___getTypeName=Module[\"___getTypeName\"]=function(){return(___getTypeName=Module[\"___getTypeName\"]=Module[\"asm\"][\"W\"]).apply(null,arguments)};var __embind_initialize_bindings=Module[\"__embind_initialize_bindings\"]=function(){return(__embind_initialize_bindings=Module[\"__embind_initialize_bindings\"]=Module[\"asm\"][\"X\"]).apply(null,arguments)};var ___cxa_is_pointer_type=Module[\"___cxa_is_pointer_type\"]=function(){return(___cxa_is_pointer_type=Module[\"___cxa_is_pointer_type\"]=Module[\"asm\"][\"Y\"]).apply(null,arguments)};var dynCall_viij=Module[\"dynCall_viij\"]=function(){return(dynCall_viij=Module[\"dynCall_viij\"]=Module[\"asm\"][\"Z\"]).apply(null,arguments)};var dynCall_vij=Module[\"dynCall_vij\"]=function(){return(dynCall_vij=Module[\"dynCall_vij\"]=Module[\"asm\"][\"_\"]).apply(null,arguments)};var dynCall_iij=Module[\"dynCall_iij\"]=function(){return(dynCall_iij=Module[\"dynCall_iij\"]=Module[\"asm\"][\"$\"]).apply(null,arguments)};var dynCall_viji=Module[\"dynCall_viji\"]=function(){return(dynCall_viji=Module[\"dynCall_viji\"]=Module[\"asm\"][\"aa\"]).apply(null,arguments)};var dynCall_jiji=Module[\"dynCall_jiji\"]=function(){return(dynCall_jiji=Module[\"dynCall_jiji\"]=Module[\"asm\"][\"ba\"]).apply(null,arguments)};var dynCall_viijii=Module[\"dynCall_viijii\"]=function(){return(dynCall_viijii=Module[\"dynCall_viijii\"]=Module[\"asm\"][\"ca\"]).apply(null,arguments)};var dynCall_iiiiij=Module[\"dynCall_iiiiij\"]=function(){return(dynCall_iiiiij=Module[\"dynCall_iiiiij\"]=Module[\"asm\"][\"da\"]).apply(null,arguments)};var dynCall_iiiiijj=Module[\"dynCall_iiiiijj\"]=function(){return(dynCall_iiiiijj=Module[\"dynCall_iiiiijj\"]=Module[\"asm\"][\"ea\"]).apply(null,arguments)};var dynCall_iiiiiijj=Module[\"dynCall_iiiiiijj\"]=function(){return(dynCall_iiiiiijj=Module[\"dynCall_iiiiiijj\"]=Module[\"asm\"][\"fa\"]).apply(null,arguments)};var ___start_em_js=Module[\"___start_em_js\"]=638316;var ___stop_em_js=Module[\"___stop_em_js\"]=638383;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function callMain(args){var entryFunction=Module[\"_main\"];var argc=0;var argv=0;try{var ret=entryFunction(argc,argv);exitJS(ret,true);return ret}catch(e){return handleException(e)}}function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();preMain();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();if(shouldRunNow)callMain(args);postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}var shouldRunNow=true;if(Module[\"noInitialRun\"])shouldRunNow=false;run();\n\n\n  return ICRPolySegApp.ready\n}\n);\n})();\nexport default ICRPolySegApp;","import launcher from './ICRPolySeg.js';\r\nimport wasm from './ICRPolySeg.wasm';\r\n\r\nexport default class ICRPolySeg {\r\n  constructor() {\r\n    this._instance;\r\n  }\r\n\r\n  get instance() {\r\n    if (this._instance) {\r\n      return this._instance;\r\n    }\r\n\r\n    throw new Error('ICRPolySeg is not initialized.');\r\n  }\r\n\r\n  async initialize(params = {}) {\r\n    this._instance = await launcher({\r\n      locateFile: (f) => {\r\n        if (f.endsWith('.wasm')) {\r\n          return wasm;\r\n        }\r\n        return f;\r\n      },\r\n      ...params\r\n    });\r\n  }\r\n}\r\n","import { m as macro } from '../../macros2.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\n\nconst Dir = {\n  Forward: 1,\n  Backward: -1\n};\nconst visited = new Set();\nfunction vtkContourLoopExtraction(publicAPI, model) {\n  publicAPI.requestData = (inData, outData) => {\n    const [input] = inData;\n    if (!outData[0]) {\n      outData[0] = vtkPolyData.newInstance();\n    }\n    const [output] = outData;\n    publicAPI.extractContours(input, output);\n    output.modified();\n  };\n  publicAPI.traverseLoop = (pd, dir, startLineId, startPtId, loopPoints) => {\n    let lineId = startLineId;\n    let lastPtId = startPtId;\n    let terminated = false;\n    let numInserted = 0;\n    while (!terminated) {\n      const {\n        cellPointIds\n      } = pd.getCellPoints(lineId);\n      if (!cellPointIds) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n      lastPtId = cellPointIds[0] !== lastPtId ? cellPointIds[0] : cellPointIds[1];\n      numInserted++;\n\n      // parametric point value\n      const t = dir * numInserted;\n      loopPoints.push({\n        t,\n        ptId: lastPtId\n      });\n      const lineCell = pd.getPointCells(lastPtId);\n      if (lineCell.length !== 2 || lastPtId === startPtId) {\n        // looped\n        return lastPtId;\n      }\n      if (lineCell.length === 2) {\n        // continue along loop\n        lineId = lineCell[0] !== lineId ? lineCell[0] : lineCell[1];\n        visited.add(lineId);\n      } else {\n        // empty or invalid cell\n        terminated = true;\n      }\n    }\n    return lastPtId;\n  };\n  publicAPI.extractContours = (input, output) => {\n    const loops = [];\n    visited.clear();\n    const inLines = input.getLines();\n    output.getPoints().setData(Float32Array.from(input.getPoints().getData()));\n\n    // TODO skip if cached input mtime hasn't changed.\n    // iterate over input lines\n    for (let li = 0; li < inLines.getNumberOfCells(); li++) {\n      if (visited.has(li)) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n      const {\n        cellPointIds\n      } = input.getCellPoints(li);\n      if (!cellPointIds) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n      visited.add(li);\n      const startPtId = cellPointIds[0];\n      const loopPoints = [];\n      loopPoints.push({\n        t: 0,\n        ptId: startPtId\n      });\n      const endPtId = publicAPI.traverseLoop(input, Dir.Forward, li, startPtId, loopPoints);\n      if (startPtId !== endPtId) {\n        // didn't find a loop. Go other direction to see where we end up\n        publicAPI.traverseLoop(input, Dir.Backward, li, startPtId, loopPoints);\n        loopPoints.sort((a, b) => a.t < b.t ? -1 : 1);\n        // make closed contour\n        if (loopPoints.length && loopPoints[0].ptId !== loopPoints[loopPoints.length - 1]?.ptId) {\n          loopPoints.push({\n            ...loopPoints[loopPoints.length - 1]\n          });\n        }\n      }\n      if (loopPoints.length) {\n        loops.push(loopPoints);\n      }\n    }\n\n    // clear output lines\n    const outLines = output.getLines();\n    outLines.resize(0);\n    loops.forEach(loop => {\n      outLines.insertNextCell(loop.map(pt => pt.ptId));\n    });\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.obj(publicAPI, model);\n  macro.algo(publicAPI, model, 1, 1);\n  vtkContourLoopExtraction(publicAPI);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkContourLoopExtraction');\n\n// ----------------------------------------------------------------------------\n\nvar index = {\n  newInstance,\n  extend\n};\n\nexport { index as default, extend, newInstance };\n","import { expose } from 'comlink';\nimport vtkImageData from '@kitware/vtk.js/Common/DataModel/ImageData';\nimport vtkDataArray from '@kitware/vtk.js/Common/Core/DataArray';\nimport ICRPolySeg from '@icr/polyseg-wasm';\nimport { utilities } from '@cornerstonejs/core';\nimport vtkPlane from '@kitware/vtk.js/Common/DataModel/Plane';\nimport vtkPolyData from '@kitware/vtk.js/Common/DataModel/PolyData';\nimport vtkContourLoopExtraction from '@kitware/vtk.js/Filters/General/ContourLoopExtraction';\nimport vtkCutter from '@kitware/vtk.js/Filters/Core/Cutter';\n\nimport { getBoundingBoxAroundShapeWorld } from '../utilities/boundingBox';\nimport { pointInShapeCallback } from '../utilities';\nimport {\n  containsPoint,\n  getAABB,\n  projectTo2D,\n} from '../utilities/math/polyline';\nimport { isPlaneIntersectingAABB } from '../utilities/planar';\n\n/**\n * Object containing methods for converting between different representations of\n * segmentations (e.g., contour, labelmap, surface, etc.) These logics\n * are used in a webworker to avoid blocking the main thread. You can\n * search for workerManager.executeTask('polySeg', ...) to see\n * how these methods are used.\n *\n * See also the webworker docs at packages/docs/docs/concepts/cornerstone-core/web-worker.md\n * to learn more about how to use webworkers in the context of Cornerstone.\n */\nconst polySegConverters = {\n  /**\n   * The polySeg instance that is used to convert between different representations\n   */\n  polySeg: null,\n  /**\n   * Utilities to keep track of the initialization state of the polySeg instance\n   * and avoid initializing it multiple times\n   */\n  polySegInitializing: false,\n  polySegInitializingPromise: null,\n  /**\n   * This method initializes the polySeg instance and sets it to this.polySeg\n   */\n  async initializePolySeg(progressCallback) {\n    if (this.polySegInitializing) {\n      await this.polySegInitializingPromise;\n      return;\n    }\n\n    if (this.polySeg?.instance) {\n      return;\n    }\n\n    this.polySegInitializing = true;\n    this.polySegInitializingPromise = new Promise((resolve) => {\n      this.polySeg = new ICRPolySeg();\n      this.polySeg\n        .initialize({\n          updateProgress: progressCallback,\n        })\n        .then(() => {\n          this.polySegInitializing = false;\n          resolve();\n        });\n    });\n\n    await this.polySegInitializingPromise;\n  },\n  /**\n   * Converts a contour to a surface using the PolySeg library.\n   * @param {Object} args - The arguments for the conversion.\n   * @param {Array} args.polylines - The polylines representing the contour.\n   * @param {Array} args.numPointsArray - The number of points in each polyline.\n   * @param {...Function} callbacks - Optional callback functions.\n   * @returns {Promise} - A promise that resolves to the converted surface.\n   */\n  async convertContourToSurface(args, ...callbacks) {\n    const { polylines, numPointsArray } = args;\n    const [progressCallback] = callbacks;\n    await this.initializePolySeg(progressCallback);\n    const results = await this.polySeg.instance.convertContourRoiToSurface(\n      polylines,\n      numPointsArray\n    );\n\n    return results;\n  },\n  /**\n   * Converts a labelmap to a surface using the specified arguments.\n   * @param {Object} args - The arguments for the conversion.\n   * @param {Array} args.scalarData - The scalar data of the labelmap.\n   * @param {Array} args.dimensions - The dimensions of the labelmap.\n   * @param {Array} args.spacing - The spacing of the labelmap.\n   * @param {Array} args.direction - The direction of the labelmap.\n   * @param {Array} args.origin - The origin of the labelmap.\n   * @param {number} args.segmentIndex - The segment index of the labelmap.\n   * @param {Function} progressCallback - The callback function for progress updates.\n   * @returns {Promise} - A promise that resolves with the converted surface results.\n   */\n  async convertLabelmapToSurface(args, ...callbacks) {\n    const [progressCallback] = callbacks;\n    await this.initializePolySeg(progressCallback);\n\n    const results = this.polySeg.instance.convertLabelmapToSurface(\n      args.scalarData,\n      args.dimensions,\n      args.spacing,\n      args.direction,\n      args.origin,\n      [args.segmentIndex]\n    );\n    return results;\n  },\n  /**\n   * Converts a contour to a volume labelmap.\n   * @param {Object} args - The arguments for the conversion.\n   * @param {Array} args.segmentIndices - The indices of the segments.\n   * @param {Array} args.scalarData - The scalar data.\n   * @param {Map} args.annotationUIDsInSegmentMap - The map of annotation UIDs in segment.\n   * @param {Array} args.dimensions - The dimensions of the image data.\n   * @param {Array} args.origin - The origin of the image data.\n   * @param {Array} args.direction - The direction of the image data.\n   * @param {Array} args.spacing - The spacing of the image data.\n   * @param {...Function} callbacks - Optional callbacks.\n   * @param {Function} callbacks[0] - The progress callback.\n   * @returns {Array} - The scalar data of the segmentation voxel manager.\n   */\n  async convertContourToVolumeLabelmap(args, ...callbacks) {\n    const [progressCallback] = callbacks;\n    const polySeg = await new ICRPolySeg();\n    await polySeg.initialize({\n      updateProgress: progressCallback,\n    });\n\n    const {\n      segmentIndices,\n      scalarData,\n      annotationUIDsInSegmentMap,\n      dimensions,\n      origin,\n      direction,\n      spacing,\n    } = args;\n\n    const segmentationVoxelManager =\n      utilities.VoxelManager.createVolumeVoxelManager(dimensions, scalarData);\n\n    const imageData = vtkImageData.newInstance();\n    imageData.setDimensions(dimensions);\n    imageData.setOrigin(origin);\n    imageData.setDirection(direction);\n    imageData.setSpacing(spacing);\n\n    const scalarArray = vtkDataArray.newInstance({\n      name: 'Pixels',\n      numberOfComponents: 1,\n      values: scalarData,\n    });\n\n    imageData.getPointData().setScalars(scalarArray);\n\n    imageData.modified();\n\n    for (const index of segmentIndices) {\n      const annotations = annotationUIDsInSegmentMap.get(index);\n\n      for (const annotation of annotations) {\n        if (!annotation.polyline) {\n          continue;\n        }\n\n        const { polyline, holesPolyline } = annotation;\n        const bounds = getBoundingBoxAroundShapeWorld(polyline);\n\n        const [iMin, jMin, kMin] = utilities.transformWorldToIndex(imageData, [\n          bounds[0][0],\n          bounds[1][0],\n          bounds[2][0],\n        ]);\n\n        const [iMax, jMax, kMax] = utilities.transformWorldToIndex(imageData, [\n          bounds[0][1],\n          bounds[1][1],\n          bounds[2][1],\n        ]);\n\n        const { projectedPolyline, sharedDimensionIndex } =\n          projectTo2D(polyline);\n\n        const holes = holesPolyline?.map((hole) => {\n          const { projectedPolyline: projectedHole } = projectTo2D(hole);\n          return projectedHole;\n        });\n\n        const firstDim = (sharedDimensionIndex + 1) % 3;\n        const secondDim = (sharedDimensionIndex + 2) % 3;\n\n        // Run the pointInShapeCallback for the combined bounding box\n        pointInShapeCallback(\n          imageData,\n          (pointLPS) => {\n            const point2D = [pointLPS[firstDim], pointLPS[secondDim]];\n\n            // Check if the point is inside any of the polylines for this segment\n            const isInside = containsPoint(projectedPolyline, point2D, {\n              holes,\n            });\n\n            return isInside;\n          },\n          ({ pointIJK }) => {\n            segmentationVoxelManager.setAtIJKPoint(pointIJK, index);\n          },\n          [\n            [iMin, iMax],\n            [jMin, jMax],\n            [kMin, kMax],\n          ]\n        );\n      }\n    }\n\n    return segmentationVoxelManager.scalarData;\n  },\n  /**\n   * Converts a contour to a stack labelmap.\n   * @param {Object} args - The arguments for the conversion.\n   * @param {Array} callbacks - Optional callbacks for progress updates.\n   * @returns {Promise<Object>} - The converted segmentations information.\n   */\n  async convertContourToStackLabelmap(args, ...callbacks) {\n    const [progressCallback] = callbacks;\n    const polySeg = await new ICRPolySeg();\n    await polySeg.initialize({\n      updateProgress: progressCallback,\n    });\n\n    const { segmentationsInfo, annotationUIDsInSegmentMap, segmentIndices } =\n      args;\n\n    const segmentationVoxelManagers = new Map();\n\n    segmentationsInfo.forEach((segmentationInfo, referencedImageId) => {\n      const { dimensions, scalarData, direction, spacing, origin } =\n        segmentationInfo;\n      const manager = utilities.VoxelManager.createVolumeVoxelManager(\n        dimensions,\n        scalarData\n      );\n\n      const imageData = vtkImageData.newInstance();\n      imageData.setDimensions(dimensions);\n      imageData.setOrigin(origin);\n      imageData.setDirection(direction);\n      imageData.setSpacing(spacing);\n\n      const scalarArray = vtkDataArray.newInstance({\n        name: 'Pixels',\n        numberOfComponents: 1,\n        values: scalarData,\n      });\n\n      imageData.getPointData().setScalars(scalarArray);\n\n      imageData.modified();\n\n      segmentationVoxelManagers.set(referencedImageId, { manager, imageData });\n    });\n\n    for (const index of segmentIndices) {\n      const annotations = annotationUIDsInSegmentMap.get(index);\n\n      for (const annotation of annotations) {\n        if (!annotation.polyline) {\n          continue;\n        }\n\n        const { polyline, holesPolyline, referencedImageId } = annotation;\n        const bounds = getBoundingBoxAroundShapeWorld(polyline);\n\n        const { manager: segmentationVoxelManager, imageData } =\n          segmentationVoxelManagers.get(referencedImageId);\n\n        const [iMin, jMin, kMin] = utilities.transformWorldToIndex(imageData, [\n          bounds[0][0],\n          bounds[1][0],\n          bounds[2][0],\n        ]);\n\n        const [iMax, jMax, kMax] = utilities.transformWorldToIndex(imageData, [\n          bounds[0][1],\n          bounds[1][1],\n          bounds[2][1],\n        ]);\n\n        const { projectedPolyline, sharedDimensionIndex } =\n          projectTo2D(polyline);\n\n        const holes = holesPolyline?.map((hole) => {\n          const { projectedPolyline: projectedHole } = projectTo2D(hole);\n          return projectedHole;\n        });\n\n        const firstDim = (sharedDimensionIndex + 1) % 3;\n        const secondDim = (sharedDimensionIndex + 2) % 3;\n\n        // Run the pointInShapeCallback for the combined bounding box\n        pointInShapeCallback(\n          imageData,\n          (pointLPS) => {\n            const point2D = [pointLPS[firstDim], pointLPS[secondDim]];\n\n            // Check if the point is inside any of the polylines for this segment\n            const isInside = containsPoint(projectedPolyline, point2D, {\n              holes,\n            });\n\n            return isInside;\n          },\n          ({ pointIJK }) => {\n            segmentationVoxelManager.setAtIJKPoint(pointIJK, index);\n          },\n          [\n            [iMin, iMax],\n            [jMin, jMax],\n            [kMin, kMax],\n          ]\n        );\n      }\n    }\n\n    segmentationsInfo.forEach((segmentationInfo, referencedImageId) => {\n      const { manager: segmentationVoxelManager } =\n        segmentationVoxelManagers.get(referencedImageId);\n\n      segmentationInfo.scalarData = segmentationVoxelManager.scalarData;\n    });\n    return segmentationsInfo;\n  },\n  /**\n   * Converts a surface to a volume labelmap.\n   *\n   * @param {Object} args - The arguments for the conversion.\n   * @param {Array} args.points - The points defining the surface.\n   * @param {Array} args.polys - The polygons defining the surface.\n   * @param {Array} args.dimensions - The dimensions of the volume.\n   * @param {Array} args.spacing - The spacing between voxels in the volume.\n   * @param {Array} args.direction - The direction of the volume.\n   * @param {Array} args.origin - The origin of the volume.\n   * @param {Function} progressCallback - The callback function for reporting progress.\n   * @returns {Promise} - A promise that resolves with the converted labelmap.\n   */\n  async convertSurfaceToVolumeLabelmap(args, ...callbacks) {\n    const [progressCallback] = callbacks;\n    await this.initializePolySeg(progressCallback);\n\n    const results = this.polySeg.instance.convertSurfaceToLabelmap(\n      args.points,\n      args.polys,\n      args.dimensions,\n      args.spacing,\n      args.direction,\n      args.origin\n    );\n\n    return results;\n  },\n  /**\n   * Converts surfaces to a volume labelmap.\n   * @param {Object} args - The arguments for the conversion.\n   * @param {Map} args.segmentsInfo - A map containing information about the segments.\n   * @param {Function} progressCallback - A callback function for reporting progress.\n   * @returns {Uint8Array} - The resulting volume labelmap.\n   */\n  async convertSurfacesToVolumeLabelmap(args, ...callbacks) {\n    const [progressCallback] = callbacks;\n    await this.initializePolySeg(progressCallback);\n\n    const { segmentsInfo } = args;\n\n    const promises = Array.from(segmentsInfo.keys()).map((segmentIndex) => {\n      const { points, polys } = segmentsInfo.get(segmentIndex);\n      const result = this.polySeg.instance.convertSurfaceToLabelmap(\n        points,\n        polys,\n        args.dimensions,\n        args.spacing,\n        args.direction,\n        args.origin\n      );\n\n      return {\n        ...result,\n        segmentIndex,\n      };\n    });\n\n    const results = await Promise.all(promises);\n\n    const targetImageData = vtkImageData.newInstance();\n    targetImageData.setDimensions(args.dimensions);\n    targetImageData.setOrigin(args.origin);\n    targetImageData.setSpacing(args.spacing);\n    targetImageData.setDirection(args.direction);\n\n    const totalSize =\n      args.dimensions[0] * args.dimensions[1] * args.dimensions[2];\n\n    const scalarArray = vtkDataArray.newInstance({\n      name: 'Pixels',\n      numberOfComponents: 1,\n      values: new Uint8Array(totalSize),\n    });\n\n    targetImageData.getPointData().setScalars(scalarArray);\n    targetImageData.modified();\n\n    // we need to then consolidate the results into a single volume\n    // by looping into each voxel with pointInShapeCallback\n    // and check if the voxel is inside any of the reconstructed\n    // labelmaps\n\n    const segmentationVoxelManager =\n      utilities.VoxelManager.createVolumeVoxelManager(\n        args.dimensions,\n        targetImageData.getPointData().getScalars().getData()\n      );\n\n    const outputVolumesInfo = results.map((result) => {\n      const { data, dimensions, direction, origin, spacing } = result;\n      const volume = vtkImageData.newInstance();\n      volume.setDimensions(dimensions);\n      volume.setOrigin(origin);\n      volume.setSpacing(spacing);\n      volume.setDirection(direction);\n\n      const scalarArray = vtkDataArray.newInstance({\n        name: 'Pixels',\n        numberOfComponents: 1,\n        values: data,\n      });\n\n      volume.getPointData().setScalars(scalarArray);\n\n      volume.modified();\n\n      const voxelManager = utilities.VoxelManager.createVolumeVoxelManager(\n        dimensions,\n        data\n      );\n\n      const extent = volume.getExtent(); // e.g., [0, 176, 0, 268, 0, 337] for dimensions of [177, 269, 338]\n\n      return {\n        volume,\n        voxelManager,\n        extent,\n        scalarData: data,\n        segmentIndex: result.segmentIndex,\n      };\n    });\n\n    pointInShapeCallback(\n      targetImageData,\n      () => true, // we want to loop into all voxels\n      ({ pointIJK, pointLPS }) => {\n        // Check if the point is inside any of the reconstructed labelmaps\n        // Todo: we can optimize this by returning early if the bounding box\n        // of the point is outside the bounding box of the labelmap\n\n        try {\n          for (const volumeInfo of outputVolumesInfo) {\n            const { volume, extent, voxelManager, segmentIndex } = volumeInfo;\n\n            const index = volume.worldToIndex(pointLPS);\n\n            // check if the ijk point is inside the volume\n            if (\n              index[0] < extent[0] ||\n              index[0] > extent[1] ||\n              index[1] < extent[2] ||\n              index[1] > extent[3] ||\n              index[2] < extent[4] ||\n              index[2] > extent[5]\n            ) {\n              continue;\n            }\n\n            const roundedIndex = index.map(Math.round);\n            const value = voxelManager.getAtIJK(...roundedIndex);\n            if (value > 0) {\n              segmentationVoxelManager.setAtIJKPoint(pointIJK, segmentIndex);\n              break;\n            }\n          }\n        } catch (error) {\n          // right now there is weird error if the point is outside the volume\n        }\n      }\n    );\n\n    return segmentationVoxelManager.scalarData;\n  },\n  getSurfacesAABBs({ surfacesInfo }) {\n    const aabbs = new Map();\n    for (const { points, id } of surfacesInfo) {\n      const aabb = getAABB(points, { numDimensions: 3 });\n      aabbs.set(id, aabb);\n    }\n    return aabbs;\n  },\n  /**\n   * Cuts the surfaces into planes.\n   *\n   * @param {Object} options - The options object.\n   * @param {Array} options.planesInfo - The information about the planes.\n   * @param {Array} options.surfacesInfo - The information about the surfaces.\n   * @param {Function} progressCallback - The callback function for progress updates.\n   * @param {Function} updateCacheCallback - The callback function for updating the cache.\n   */\n  cutSurfacesIntoPlanes(\n    { planesInfo, surfacesInfo, surfacesAABB = new Map() },\n    progressCallback,\n    updateCacheCallback\n  ) {\n    const numberOfPlanes = planesInfo.length;\n    const cutter = vtkCutter.newInstance();\n\n    const plane1 = vtkPlane.newInstance();\n\n    cutter.setCutFunction(plane1);\n\n    const surfacePolyData = vtkPolyData.newInstance();\n\n    try {\n      for (const [index, planeInfo] of planesInfo.entries()) {\n        const { sliceIndex, planes } = planeInfo;\n\n        const polyDataResults = new Map();\n        for (const polyDataInfo of surfacesInfo) {\n          const { points, polys, id } = polyDataInfo;\n\n          const aabb3 =\n            surfacesAABB.get(id) || getAABB(points, { numDimensions: 3 });\n\n          if (!surfacesAABB.has(id)) {\n            surfacesAABB.set(id, aabb3);\n          }\n\n          const { minX, minY, minZ, maxX, maxY, maxZ } = aabb3;\n\n          const { origin, normal } = planes[0];\n\n          // Check if the plane intersects the AABB\n          if (\n            !isPlaneIntersectingAABB(\n              origin,\n              normal,\n              minX,\n              minY,\n              minZ,\n              maxX,\n              maxY,\n              maxZ\n            )\n          ) {\n            continue;\n          }\n\n          surfacePolyData.getPoints().setData(points, 3);\n          surfacePolyData.getPolys().setData(polys, 3);\n          surfacePolyData.modified();\n\n          cutter.setInputData(surfacePolyData);\n          plane1.setOrigin(origin);\n          plane1.setNormal(normal);\n\n          try {\n            cutter.update();\n          } catch (e) {\n            console.warn('Error during clipping', e);\n            continue;\n          }\n\n          const polyData = cutter.getOutputData();\n\n          const cutterOutput = polyData;\n          cutterOutput.buildLinks();\n          const loopExtraction = vtkContourLoopExtraction.newInstance();\n          loopExtraction.setInputData(cutterOutput);\n\n          const loopOutput = loopExtraction.getOutputData();\n          if (polyData) {\n            polyDataResults.set(id, {\n              points: loopOutput.getPoints().getData(),\n              lines: loopOutput.getLines().getData(),\n              numberOfCells: loopOutput.getLines().getNumberOfCells(),\n            });\n          }\n        }\n\n        progressCallback({ progress: (index + 1) / numberOfPlanes });\n\n        updateCacheCallback({ sliceIndex, polyDataResults });\n      }\n    } catch (e) {\n      console.warn('Error during processing', e);\n    } finally {\n      // Cleanup on completion\n      surfacesInfo = null;\n      plane1.delete();\n    }\n  },\n};\n\nexpose(polySegConverters);\n","import { m as macro } from '../../macros2.js';\nimport { b as roundVector, c as clampVector } from '../Core/Math/index.js';\nimport vtkBoundingBox from './BoundingBox.js';\nimport vtkDataSet from './DataSet.js';\nimport vtkStructuredData from './StructuredData.js';\nimport { StructuredType } from './StructuredData/Constants.js';\nimport { mat3, mat4, vec3 } from 'gl-matrix';\n\nconst {\n  vtkErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkImageData methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageData(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageData');\n  publicAPI.setExtent = function () {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return false;\n    }\n    for (var _len = arguments.length, inExtent = new Array(_len), _key = 0; _key < _len; _key++) {\n      inExtent[_key] = arguments[_key];\n    }\n    const extentArray = inExtent.length === 1 ? inExtent[0] : inExtent;\n    if (extentArray.length !== 6) {\n      return false;\n    }\n    const changeDetected = model.extent.some((item, index) => item !== extentArray[index]);\n    if (changeDetected) {\n      model.extent = extentArray.slice();\n      model.dataDescription = vtkStructuredData.getDataDescriptionFromExtent(model.extent);\n      publicAPI.modified();\n    }\n    return changeDetected;\n  };\n  publicAPI.setDimensions = function () {\n    let i;\n    let j;\n    let k;\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    if (arguments.length === 1) {\n      const array = arguments.length <= 0 ? undefined : arguments[0];\n      i = array[0];\n      j = array[1];\n      k = array[2];\n    } else if (arguments.length === 3) {\n      i = arguments.length <= 0 ? undefined : arguments[0];\n      j = arguments.length <= 1 ? undefined : arguments[1];\n      k = arguments.length <= 2 ? undefined : arguments[2];\n    } else {\n      vtkErrorMacro('Bad dimension specification');\n      return;\n    }\n    publicAPI.setExtent(0, i - 1, 0, j - 1, 0, k - 1);\n  };\n  publicAPI.getDimensions = () => [model.extent[1] - model.extent[0] + 1, model.extent[3] - model.extent[2] + 1, model.extent[5] - model.extent[4] + 1];\n  publicAPI.getNumberOfCells = () => {\n    const dims = publicAPI.getDimensions();\n    let nCells = 1;\n    for (let i = 0; i < 3; i++) {\n      if (dims[i] === 0) {\n        return 0;\n      }\n      if (dims[i] > 1) {\n        nCells *= dims[i] - 1;\n      }\n    }\n    return nCells;\n  };\n  publicAPI.getNumberOfPoints = () => {\n    const dims = publicAPI.getDimensions();\n    return dims[0] * dims[1] * dims[2];\n  };\n  publicAPI.getPoint = index => {\n    const dims = publicAPI.getDimensions();\n    if (dims[0] === 0 || dims[1] === 0 || dims[2] === 0) {\n      vtkErrorMacro('Requesting a point from an empty image.');\n      return null;\n    }\n    const ijk = new Float64Array(3);\n    switch (model.dataDescription) {\n      case StructuredType.EMPTY:\n        return null;\n      case StructuredType.SINGLE_POINT:\n        break;\n      case StructuredType.X_LINE:\n        ijk[0] = index;\n        break;\n      case StructuredType.Y_LINE:\n        ijk[1] = index;\n        break;\n      case StructuredType.Z_LINE:\n        ijk[2] = index;\n        break;\n      case StructuredType.XY_PLANE:\n        ijk[0] = index % dims[0];\n        ijk[1] = index / dims[0];\n        break;\n      case StructuredType.YZ_PLANE:\n        ijk[1] = index % dims[1];\n        ijk[2] = index / dims[1];\n        break;\n      case StructuredType.XZ_PLANE:\n        ijk[0] = index % dims[0];\n        ijk[2] = index / dims[0];\n        break;\n      case StructuredType.XYZ_GRID:\n        ijk[0] = index % dims[0];\n        ijk[1] = index / dims[0] % dims[1];\n        ijk[2] = index / (dims[0] * dims[1]);\n        break;\n      default:\n        vtkErrorMacro('Invalid dataDescription');\n        break;\n    }\n    const coords = [0, 0, 0];\n    publicAPI.indexToWorld(ijk, coords);\n    return coords;\n  };\n\n  // vtkCell *GetCell(vtkIdType cellId) VTK_OVERRIDE;\n  // void GetCell(vtkIdType cellId, vtkGenericCell *cell) VTK_OVERRIDE;\n  // void GetCellBounds(vtkIdType cellId, double bounds[6]) VTK_OVERRIDE;\n  // virtual vtkIdType FindPoint(double x, double y, double z)\n  // {\n  //   return this->vtkDataSet::FindPoint(x, y, z);\n  // }\n  // vtkIdType FindPoint(double x[3]) VTK_OVERRIDE;\n  // vtkIdType FindCell(\n  //   double x[3], vtkCell *cell, vtkIdType cellId, double tol2,\n  //   int& subId, double pcoords[3], double *weights) VTK_OVERRIDE;\n  // vtkIdType FindCell(\n  //   double x[3], vtkCell *cell, vtkGenericCell *gencell,\n  //   vtkIdType cellId, double tol2, int& subId,\n  //   double pcoords[3], double *weights) VTK_OVERRIDE;\n  // vtkCell *FindAndGetCell(double x[3], vtkCell *cell, vtkIdType cellId,\n  //                                 double tol2, int& subId, double pcoords[3],\n  //                                 double *weights) VTK_OVERRIDE;\n  // int GetCellType(vtkIdType cellId) VTK_OVERRIDE;\n  // void GetCellPoints(vtkIdType cellId, vtkIdList *ptIds) VTK_OVERRIDE\n  //   {vtkStructuredData::GetCellPoints(cellId,ptIds,this->DataDescription,\n  //                                     this->GetDimensions());}\n  // void GetPointCells(vtkIdType ptId, vtkIdList *cellIds) VTK_OVERRIDE\n  //   {vtkStructuredData::GetPointCells(ptId,cellIds,this->GetDimensions());}\n  // void ComputeBounds() VTK_OVERRIDE;\n  // int GetMaxCellSize() VTK_OVERRIDE {return 8;}; //voxel is the largest\n\n  publicAPI.getBounds = () => publicAPI.extentToBounds(publicAPI.getSpatialExtent());\n  publicAPI.extentToBounds = ex => vtkBoundingBox.transformBounds(ex, model.indexToWorld);\n  publicAPI.getSpatialExtent = () => vtkBoundingBox.inflate([...model.extent], 0.5);\n\n  // Internal, shouldn't need to call this manually.\n  publicAPI.computeTransforms = () => {\n    mat4.fromTranslation(model.indexToWorld, model.origin);\n    model.indexToWorld[0] = model.direction[0];\n    model.indexToWorld[1] = model.direction[1];\n    model.indexToWorld[2] = model.direction[2];\n    model.indexToWorld[4] = model.direction[3];\n    model.indexToWorld[5] = model.direction[4];\n    model.indexToWorld[6] = model.direction[5];\n    model.indexToWorld[8] = model.direction[6];\n    model.indexToWorld[9] = model.direction[7];\n    model.indexToWorld[10] = model.direction[8];\n    mat4.scale(model.indexToWorld, model.indexToWorld, model.spacing);\n    mat4.invert(model.worldToIndex, model.indexToWorld);\n  };\n  publicAPI.indexToWorld = function (ain) {\n    let aout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    vec3.transformMat4(aout, ain, model.indexToWorld);\n    return aout;\n  };\n  publicAPI.indexToWorldVec3 = publicAPI.indexToWorld;\n  publicAPI.worldToIndex = function (ain) {\n    let aout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    vec3.transformMat4(aout, ain, model.worldToIndex);\n    return aout;\n  };\n  publicAPI.worldToIndexVec3 = publicAPI.worldToIndex;\n  publicAPI.indexToWorldBounds = function (bin) {\n    let bout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    return vtkBoundingBox.transformBounds(bin, model.indexToWorld, bout);\n  };\n  publicAPI.worldToIndexBounds = function (bin) {\n    let bout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    return vtkBoundingBox.transformBounds(bin, model.worldToIndex, bout);\n  };\n\n  // Make sure the transform is correct\n  publicAPI.onModified(publicAPI.computeTransforms);\n  publicAPI.computeTransforms();\n  publicAPI.getCenter = () => vtkBoundingBox.getCenter(publicAPI.getBounds());\n  publicAPI.computeHistogram = function (worldBounds) {\n    let voxelFunc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    const bounds = [0, 0, 0, 0, 0, 0];\n    publicAPI.worldToIndexBounds(worldBounds, bounds);\n    const point1 = [0, 0, 0];\n    const point2 = [0, 0, 0];\n    vtkBoundingBox.computeCornerPoints(bounds, point1, point2);\n    roundVector(point1, point1);\n    roundVector(point2, point2);\n    const dimensions = publicAPI.getDimensions();\n    clampVector(point1, [0, 0, 0], [dimensions[0] - 1, dimensions[1] - 1, dimensions[2] - 1], point1);\n    clampVector(point2, [0, 0, 0], [dimensions[0] - 1, dimensions[1] - 1, dimensions[2] - 1], point2);\n    const yStride = dimensions[0];\n    const zStride = dimensions[0] * dimensions[1];\n    const pixels = publicAPI.getPointData().getScalars().getData();\n    let maximum = -Infinity;\n    let minimum = Infinity;\n    let sumOfSquares = 0;\n    let isum = 0;\n    let inum = 0;\n    for (let z = point1[2]; z <= point2[2]; z++) {\n      for (let y = point1[1]; y <= point2[1]; y++) {\n        let index = point1[0] + y * yStride + z * zStride;\n        for (let x = point1[0]; x <= point2[0]; x++) {\n          if (!voxelFunc || voxelFunc([x, y, z], bounds)) {\n            const pixel = pixels[index];\n            if (pixel > maximum) maximum = pixel;\n            if (pixel < minimum) minimum = pixel;\n            sumOfSquares += pixel * pixel;\n            isum += pixel;\n            inum += 1;\n          }\n          ++index;\n        }\n      }\n    }\n    const average = inum > 0 ? isum / inum : 0;\n    const variance = inum ? Math.abs(sumOfSquares / inum - average * average) : 0;\n    const sigma = Math.sqrt(variance);\n    return {\n      minimum,\n      maximum,\n      average,\n      variance,\n      sigma,\n      count: inum\n    };\n  };\n\n  // TODO: use the unimplemented `vtkDataSetAttributes` for scalar length, that is currently also a TODO (GetNumberOfComponents).\n  // Scalar data could be tuples for color information?\n  publicAPI.computeIncrements = function (extent) {\n    let numberOfComponents = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    const increments = [];\n    let incr = numberOfComponents;\n\n    // Calculate array increment offsets\n    // similar to c++ vtkImageData::ComputeIncrements\n    for (let idx = 0; idx < 3; ++idx) {\n      increments[idx] = incr;\n      incr *= extent[idx * 2 + 1] - extent[idx * 2] + 1;\n    }\n    return increments;\n  };\n\n  /**\n   * @param {Number[]} index the localized `[i,j,k]` pixel array position. Float values will be rounded.\n   * @return {Number} the corresponding flattened index in the scalar array\n   */\n  publicAPI.computeOffsetIndex = _ref => {\n    let [i, j, k] = _ref;\n    const extent = publicAPI.getExtent();\n    const numberOfComponents = publicAPI.getPointData().getScalars().getNumberOfComponents();\n    const increments = publicAPI.computeIncrements(extent, numberOfComponents);\n    // Use the array increments to find the pixel index\n    // similar to c++ vtkImageData::GetArrayPointer\n    // Math.floor to catch \"practically 0\" e^-15 scenarios.\n    return Math.floor((Math.round(i) - extent[0]) * increments[0] + (Math.round(j) - extent[2]) * increments[1] + (Math.round(k) - extent[4]) * increments[2]);\n  };\n\n  /**\n   * @param {Number[]} xyz the [x,y,z] Array in world coordinates\n   * @return {Number|NaN} the corresponding pixel's index in the scalar array\n   */\n  publicAPI.getOffsetIndexFromWorld = xyz => {\n    const extent = publicAPI.getExtent();\n    const index = publicAPI.worldToIndex(xyz);\n\n    // Confirm indexed i,j,k coords are within the bounds of the volume\n    for (let idx = 0; idx < 3; ++idx) {\n      if (index[idx] < extent[idx * 2] || index[idx] > extent[idx * 2 + 1]) {\n        vtkErrorMacro(`GetScalarPointer: Pixel ${index} is not in memory. Current extent = ${extent}`);\n        return NaN;\n      }\n    }\n\n    // Assumed the index here is within 0 <-> scalarData.length, but doesn't hurt to check upstream\n    return publicAPI.computeOffsetIndex(index);\n  };\n  /**\n   * @param {Number[]} xyz the [x,y,z] Array in world coordinates\n   * @param {Number?} comp the scalar component index for multi-component scalars\n   * @return {Number|NaN} the corresponding pixel's scalar value\n   */\n  publicAPI.getScalarValueFromWorld = function (xyz) {\n    let comp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    const numberOfComponents = publicAPI.getPointData().getScalars().getNumberOfComponents();\n    if (comp < 0 || comp >= numberOfComponents) {\n      vtkErrorMacro(`GetScalarPointer: Scalar Component ${comp} is not within bounds. Current Scalar numberOfComponents: ${numberOfComponents}`);\n      return NaN;\n    }\n    const offsetIndex = publicAPI.getOffsetIndexFromWorld(xyz);\n    if (Number.isNaN(offsetIndex)) {\n      // VTK Error Macro will have been tripped already, no need to do it again,\n      return offsetIndex;\n    }\n    return publicAPI.getPointData().getScalars().getComponent(offsetIndex, comp);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  direction: null,\n  // a mat3\n  indexToWorld: null,\n  // a mat4\n  worldToIndex: null,\n  // a mat4\n  spacing: [1.0, 1.0, 1.0],\n  origin: [0.0, 0.0, 0.0],\n  extent: [0, -1, 0, -1, 0, -1],\n  dataDescription: StructuredType.EMPTY\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkDataSet.extend(publicAPI, model, initialValues);\n  if (!model.direction) {\n    model.direction = mat3.identity(new Float64Array(9));\n  } else if (Array.isArray(model.direction)) {\n    model.direction = new Float64Array(model.direction.slice(0, 9));\n  }\n  model.indexToWorld = new Float64Array(16);\n  model.worldToIndex = new Float64Array(16);\n\n  // Set/Get methods\n  macro.get(publicAPI, model, ['indexToWorld', 'worldToIndex']);\n  macro.setGetArray(publicAPI, model, ['origin', 'spacing'], 3);\n  macro.setGetArray(publicAPI, model, ['direction'], 9);\n  macro.getArray(publicAPI, model, ['extent'], 6);\n\n  // Object specific methods\n  vtkImageData(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkImageData');\n\n// ----------------------------------------------------------------------------\n\nvar vtkImageData$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkImageData$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkPiecewiseFunction methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPiecewiseFunction(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPiecewiseFunction');\n\n  // Return the number of points which specify this function\n  publicAPI.getSize = () => model.nodes.length;\n\n  // Return the type of function stored in object:\n  // Function Types:\n  //    0 : Constant        (No change in slope between end points)\n  //    1 : NonDecreasing   (Always increasing or zero slope)\n  //    2 : NonIncreasing   (Always decreasing or zero slope)\n  //    3 : Varied          (Contains both decreasing and increasing slopes)\n  //    4 : Unknown         (Error condition)\n  //\n  publicAPI.getType = () => {\n    let value;\n    let prevValue = 0.0;\n    let functionType = 0;\n    if (model.nodes.length > 0) {\n      prevValue = model.nodes[0].y;\n    }\n    for (let i = 1; i < model.nodes.length; i++) {\n      value = model.nodes[i].y;\n\n      // Do not change the function type if equal\n      if (value !== prevValue) {\n        if (value > prevValue) {\n          switch (functionType) {\n            case 0:\n            case 1:\n              // NonDecreasing\n              functionType = 1;\n              break;\n            case 2:\n            default:\n              // Varied\n              functionType = 3;\n              break;\n          }\n        } else {\n          // value < prev_value\n          switch (functionType) {\n            case 0:\n            case 2:\n              // NonIncreasing\n              functionType = 2;\n              break;\n            case 1:\n            default:\n              // Varied\n              functionType = 3;\n              break;\n          }\n        }\n      }\n      prevValue = value;\n\n      // Exit loop if we find a Varied function\n      if (functionType === 3) {\n        break;\n      }\n    }\n    switch (functionType) {\n      case 0:\n        return 'Constant';\n      case 1:\n        return 'NonDecreasing';\n      case 2:\n        return 'NonIncreasing';\n      case 3:\n      default:\n        return 'Varied';\n    }\n  };\n\n  // Since we no longer store the data in an array, we must\n  // copy out of the vector into an array. No modified check -\n  // could be added if performance is a problem\n  publicAPI.getDataPointer = () => {\n    const size = model.nodes.length;\n    model.function = null;\n    if (size > 0) {\n      model.function = [];\n      for (let i = 0; i < size; i++) {\n        model.function[2 * i] = model.nodes[i].x;\n        model.function[2 * i + 1] = model.nodes[i].y;\n      }\n    }\n    return model.function;\n  };\n\n  // Returns the first point location which starts a non-zero segment of the\n  // function. Note that the value at this point may be zero.\n  publicAPI.getFirstNonZeroValue = () => {\n    // Check if no points specified\n    if (model.nodes.length === 0) {\n      return 0;\n    }\n    let allZero = 1;\n    let x = 0.0;\n    let i = 0;\n    for (; i < model.nodes.length; i++) {\n      if (model.nodes[i].y !== 0.0) {\n        allZero = 0;\n        break;\n      }\n    }\n\n    // If every specified point has a zero value then return\n    // a large value\n    if (allZero) {\n      x = Number.MAX_VALUE;\n    } else if (i > 0) {\n      // A point was found with a non-zero value\n      // Return the value of the point that precedes this one\n      x = model.nodes[i - 1].x;\n    } else if (model.clamping) {\n      // If this is the first point in the function, return its\n      // value is clamping is off, otherwise VTK_DOUBLE_MIN if\n      // clamping is on.\n      x = -Number.MAX_VALUE;\n    } else {\n      x = model.nodes[0].x;\n    }\n    return x;\n  };\n\n  // For a specified index value, get the node parameters\n  publicAPI.getNodeValue = (index, val) => {\n    const size = model.nodes.length;\n    if (index < 0 || index >= size) {\n      vtkErrorMacro('Index out of range!');\n      return -1;\n    }\n    val[0] = model.nodes[index].x;\n    val[1] = model.nodes[index].y;\n    val[2] = model.nodes[index].midpoint;\n    val[3] = model.nodes[index].sharpness;\n    return 1;\n  };\n\n  // For a specified index value, get the node parameters\n  publicAPI.setNodeValue = (index, val) => {\n    const size = model.nodes.length;\n    if (index < 0 || index >= size) {\n      vtkErrorMacro('Index out of range!');\n      return -1;\n    }\n    const oldX = model.nodes[index].x;\n    model.nodes[index].x = val[0];\n    model.nodes[index].y = val[1];\n    model.nodes[index].midpoint = val[2];\n    model.nodes[index].sharpness = val[3];\n    if (oldX !== val[0]) {\n      // The point has been moved, the order of points or the range might have\n      // been modified.\n      publicAPI.sortAndUpdateRange();\n      // No need to call Modified() here because SortAndUpdateRange() has done it\n      // already.\n    } else {\n      publicAPI.modified();\n    }\n    return 1;\n  };\n\n  // Adds a point to the function. If a duplicate point is inserted\n  // then the function value at that location is set to the new value.\n  // This is the legacy version that assumes midpoint = 0.5 and\n  // sharpness = 0.0\n  publicAPI.addPoint = (x, y) => publicAPI.addPointLong(x, y, 0.5, 0.0);\n\n  // Adds a point to the function and returns the array index of the point.\n  publicAPI.addPointLong = (x, y, midpoint, sharpness) => {\n    // Error check\n    if (midpoint < 0.0 || midpoint > 1.0) {\n      vtkErrorMacro('Midpoint outside range [0.0, 1.0]');\n      return -1;\n    }\n    if (sharpness < 0.0 || sharpness > 1.0) {\n      vtkErrorMacro('Sharpness outside range [0.0, 1.0]');\n      return -1;\n    }\n\n    // remove any node already at this X location\n    if (!model.allowDuplicateScalars) {\n      publicAPI.removePoint(x);\n    }\n\n    // Create the new node\n    const node = {\n      x,\n      y,\n      midpoint,\n      sharpness\n    };\n\n    // Add it, then sort to get everything in order\n    model.nodes.push(node);\n    publicAPI.sortAndUpdateRange();\n\n    // Now find this node so we can return the index\n    let i;\n    for (i = 0; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === x) {\n        break;\n      }\n    }\n\n    // If we didn't find it, something went horribly wrong so\n    // return -1\n    if (i < model.nodes.length) {\n      return i;\n    }\n    return -1;\n  };\n  publicAPI.setNodes = nodes => {\n    if (model.nodes !== nodes) {\n      model.nodes = nodes;\n      publicAPI.sortAndUpdateRange();\n    }\n  };\n\n  // Sort the vector in increasing order, then fill in\n  // the Range\n  publicAPI.sortAndUpdateRange = () => {\n    model.nodes.sort((a, b) => a.x - b.x);\n    const modifiedInvoked = publicAPI.updateRange();\n    // If range is updated, Modified() has been called, don't call it again.\n    if (!modifiedInvoked) {\n      publicAPI.modified();\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.updateRange = () => {\n    const oldRange = model.range.slice();\n    const size = model.nodes.length;\n    if (size) {\n      model.range[0] = model.nodes[0].x;\n      model.range[1] = model.nodes[size - 1].x;\n    } else {\n      model.range[0] = 0;\n      model.range[1] = 0;\n    }\n    // If the rage is the same, then no need to call Modified()\n    if (oldRange[0] === model.range[0] && oldRange[1] === model.range[1]) {\n      return false;\n    }\n    publicAPI.modified();\n    return true;\n  };\n\n  // Removes a point from the function. If no point is found then function\n  // remains the same.\n  publicAPI.removePoint = x => {\n    // First find the node since we need to know its\n    // index as our return value\n    let i;\n    for (i = 0; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === x) {\n        break;\n      }\n    }\n\n    // If the node doesn't exist, we return -1\n    if (i >= model.nodes.length) {\n      return -1;\n    }\n    const retVal = i;\n\n    // If the first or last point has been removed, then we update the range\n    // No need to sort here as the order of points hasn't changed.\n    let modifiedInvoked = false;\n    model.nodes.splice(i, 1);\n    if (i === 0 || i === model.nodes.length) {\n      modifiedInvoked = publicAPI.updateRange();\n    }\n    if (!modifiedInvoked) {\n      publicAPI.modified();\n    }\n    return retVal;\n  };\n\n  // Removes all points from the function.\n  publicAPI.removeAllPoints = () => {\n    model.nodes = [];\n    publicAPI.sortAndUpdateRange();\n  };\n\n  // Add in end points of line and remove any points between them\n  // Legacy method with no way to specify midpoint and sharpness\n  publicAPI.addSegment = (x1, y1, x2, y2) => {\n    // First, find all points in this range and remove them\n    publicAPI.sortAndUpdateRange();\n    for (let i = 0; i < model.nodes.length;) {\n      if (model.nodes[i].x >= x1 && model.nodes[i].x <= x2) {\n        model.nodes.splice(i, 1);\n      } else {\n        i++;\n      }\n    }\n\n    // Now add the points\n    publicAPI.addPoint(x1, y1, 0.5, 0.0);\n    publicAPI.addPoint(x2, y2, 0.5, 0.0);\n  };\n\n  // Return the value of the function at a position\n  publicAPI.getValue = x => {\n    const table = [];\n    publicAPI.getTable(x, x, 1, table);\n    return table[0];\n  };\n\n  // Remove all points outside the range, and make sure a point\n  // exists at each end of the range. Used as a convenience method\n  // for transfer function editors\n  publicAPI.adjustRange = range => {\n    if (range.length < 2) {\n      return 0;\n    }\n    const functionRange = publicAPI.getRange();\n\n    // Make sure we have points at each end of the range\n    if (functionRange[0] < range[0]) {\n      publicAPI.addPoint(range[0], publicAPI.getValue(range[0]));\n    } else {\n      publicAPI.addPoint(range[0], publicAPI.getValue(functionRange[0]));\n    }\n    if (functionRange[1] > range[1]) {\n      publicAPI.addPoint(range[1], publicAPI.getValue(range[1]));\n    } else {\n      publicAPI.addPoint(range[1], publicAPI.getValue(functionRange[1]));\n    }\n\n    // Remove all points out-of-range\n    publicAPI.sortAndUpdateRange();\n    for (let i = 0; i < model.nodes.length;) {\n      if (model.nodes[i].x >= range[0] && model.nodes[i].x <= range[1]) {\n        model.nodes.splice(i, 1);\n      } else {\n        ++i;\n      }\n    }\n    publicAPI.sortAndUpdateRange();\n    return 1;\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.estimateMinNumberOfSamples = (x1, x2) => {\n    const d = publicAPI.findMinimumXDistance();\n    return Math.ceil((x2 - x1) / d);\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.findMinimumXDistance = () => {\n    const size = model.nodes.length;\n    if (size < 2) {\n      return -1.0;\n    }\n    let distance = model.nodes[1].x - model.nodes[0].x;\n    for (let i = 0; i < size - 1; i++) {\n      const currentDist = model.nodes[i + 1].x - model.nodes[i].x;\n      if (currentDist < distance) {\n        distance = currentDist;\n      }\n    }\n    return distance;\n  };\n\n  // Returns a table of function values evaluated at regular intervals\n  /* eslint-disable prefer-destructuring */\n  /* eslint-disable no-continue */\n  publicAPI.getTable = function (xStart, xEnd, size, table) {\n    let stride = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n    let i;\n    let idx = 0;\n    const numNodes = model.nodes.length;\n\n    // Need to keep track of the last value so that\n    // we can fill in table locations past this with\n    // this value if Clamping is On.\n    let lastValue = 0.0;\n    if (numNodes !== 0) {\n      lastValue = model.nodes[numNodes - 1].y;\n    }\n    let x = 0.0;\n    let x1 = 0.0;\n    let x2 = 0.0;\n    let y1 = 0.0;\n    let y2 = 0.0;\n    let midpoint = 0.0;\n    let sharpness = 0.0;\n\n    // For each table entry\n    for (i = 0; i < size; i++) {\n      // Find our location in the table\n      const tidx = stride * i;\n\n      // Find our X location. If we are taking only 1 sample, make\n      // it halfway between start and end (usually start and end will\n      // be the same in this case)\n      if (size > 1) {\n        x = xStart + i / (size - 1.0) * (xEnd - xStart);\n      } else {\n        x = 0.5 * (xStart + xEnd);\n      }\n\n      // Do we need to move to the next node?\n      while (idx < numNodes && x > model.nodes[idx].x) {\n        idx++;\n        // If we are at a valid point index, fill in\n        // the value at this node, and the one before (the\n        // two that surround our current sample location)\n        // idx cannot be 0 since we just incremented it.\n        if (idx < numNodes) {\n          x1 = model.nodes[idx - 1].x;\n          x2 = model.nodes[idx].x;\n          y1 = model.nodes[idx - 1].y;\n          y2 = model.nodes[idx].y;\n\n          // We only need the previous midpoint and sharpness\n          // since these control this region\n          midpoint = model.nodes[idx - 1].midpoint;\n          sharpness = model.nodes[idx - 1].sharpness;\n\n          // Move midpoint away from extreme ends of range to avoid\n          // degenerate math\n          if (midpoint < 0.00001) {\n            midpoint = 0.00001;\n          }\n          if (midpoint > 0.99999) {\n            midpoint = 0.99999;\n          }\n        }\n      }\n\n      // Are we at the end? If so, just use the last value\n      if (idx >= numNodes) {\n        table[tidx] = model.clamping ? lastValue : 0.0;\n      } else if (idx === 0) {\n        // Are we before the first node? If so, duplicate this nodes values\n        table[tidx] = model.clamping ? model.nodes[0].y : 0.0;\n      } else {\n        // Otherwise, we are between two nodes - interpolate\n        // Our first attempt at a normalized location [0,1] -\n        // we will be modifying this based on midpoint and\n        // sharpness to get the curve shape we want and to have\n        // it pass through (y1+y2)/2 at the midpoint.\n        let s = (x - x1) / (x2 - x1);\n\n        // Readjust based on the midpoint - linear adjustment\n        if (s < midpoint) {\n          s = 0.5 * s / midpoint;\n        } else {\n          s = 0.5 + 0.5 * (s - midpoint) / (1.0 - midpoint);\n        }\n\n        // override for sharpness > 0.99\n        // In this case we just want piecewise constant\n        if (sharpness > 0.99) {\n          // Use the first value since we are below the midpoint\n          if (s < 0.5) {\n            table[tidx] = y1;\n            continue;\n          } else {\n            // Use the second value at or above the midpoint\n            table[tidx] = y2;\n            continue;\n          }\n        }\n\n        // Override for sharpness < 0.01\n        // In this case we want piecewise linear\n        if (sharpness < 0.01) {\n          // Simple linear interpolation\n          table[tidx] = (1 - s) * y1 + s * y2;\n          continue;\n        }\n\n        // We have a sharpness between [0.01, 0.99] - we will\n        // used a modified hermite curve interpolation where we\n        // derive the slope based on the sharpness, and we compress\n        // the curve non-linearly based on the sharpness\n\n        // First, we will adjust our position based on sharpness in\n        // order to make the curve sharper (closer to piecewise constant)\n        if (s < 0.5) {\n          s = 0.5 * (s * 2) ** (1.0 + 10 * sharpness);\n        } else if (s > 0.5) {\n          s = 1.0 - 0.5 * ((1.0 - s) * 2) ** (1 + 10 * sharpness);\n        }\n\n        // Compute some coefficients we will need for the hermite curve\n        const ss = s * s;\n        const sss = ss * s;\n        const h1 = 2 * sss - 3 * ss + 1;\n        const h2 = -2 * sss + 3 * ss;\n        const h3 = sss - 2 * ss + s;\n        const h4 = sss - ss;\n\n        // Use one slope for both end points\n        const slope = y2 - y1;\n        const t = (1.0 - sharpness) * slope;\n\n        // Compute the value\n        table[tidx] = h1 * y1 + h2 * y2 + h3 * t + h4 * t;\n\n        // Final error check to make sure we don't go outside\n        // the Y range\n        const min = y1 < y2 ? y1 : y2;\n        const max = y1 > y2 ? y1 : y2;\n        table[tidx] = table[tidx] < min ? min : table[tidx];\n        table[tidx] = table[tidx] > max ? max : table[tidx];\n      }\n    }\n  };\n}\n/* eslint-enable prefer-destructuring */\n/* eslint-enable no-continue */\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // model.function = NULL;\n  range: [0, 0],\n  clamping: true,\n  allowDuplicateScalars: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  macro.obj(publicAPI, model);\n\n  // Internal objects initialization\n  model.nodes = [];\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['allowDuplicateScalars', 'clamping']);\n  macro.setArray(publicAPI, model, ['range'], 2);\n\n  // Create get macros for array\n  macro.getArray(publicAPI, model, ['range']);\n\n  // For more macro methods, see \"Sources/macros.js\"\n\n  // Object specific methods\n  vtkPiecewiseFunction(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkPiecewiseFunction');\n\n// ----------------------------------------------------------------------------\n\nvar vtkPiecewiseFunction$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkPiecewiseFunction$1 as default, extend, newInstance };\n","import { s as subtract, d as dot, j as cross, k as add } from '../Core/Math/index.js';\nimport { m as macro } from '../../macros2.js';\n\nconst PLANE_TOLERANCE = 1.0e-6;\nconst COINCIDE = 'coincide';\nconst DISJOINT = 'disjoint';\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction evaluate(normal, origin, x) {\n  return normal[0] * (x[0] - origin[0]) + normal[1] * (x[1] - origin[1]) + normal[2] * (x[2] - origin[2]);\n}\nfunction distanceToPlane(x, origin, normal) {\n  const distance = normal[0] * (x[0] - origin[0]) + normal[1] * (x[1] - origin[1]) + normal[2] * (x[2] - origin[2]);\n  return Math.abs(distance);\n}\nfunction projectPoint(x, origin, normal, xproj) {\n  const xo = [];\n  subtract(x, origin, xo);\n  const t = dot(normal, xo);\n  xproj[0] = x[0] - t * normal[0];\n  xproj[1] = x[1] - t * normal[1];\n  xproj[2] = x[2] - t * normal[2];\n}\nfunction projectVector(v, normal, vproj) {\n  const t = dot(v, normal);\n  let n2 = dot(normal, normal);\n  if (n2 === 0) {\n    n2 = 1.0;\n  }\n  vproj[0] = v[0] - t * normal[0] / n2;\n  vproj[1] = v[1] - t * normal[1] / n2;\n  vproj[2] = v[2] - t * normal[2] / n2;\n  return vproj;\n}\nfunction generalizedProjectPoint(x, origin, normal, xproj) {\n  const xo = [];\n  subtract(x, origin, xo);\n  const t = dot(normal, xo);\n  const n2 = dot(normal, normal);\n  if (n2 !== 0) {\n    xproj[0] = x[0] - t * normal[0] / n2;\n    xproj[1] = x[1] - t * normal[1] / n2;\n    xproj[2] = x[2] - t * normal[2] / n2;\n  } else {\n    xproj[0] = x[0];\n    xproj[1] = x[1];\n    xproj[2] = x[2];\n  }\n}\nfunction intersectWithLine(p1, p2, origin, normal) {\n  const outObj = {\n    intersection: false,\n    betweenPoints: false,\n    t: Number.MAX_VALUE,\n    x: []\n  };\n  const p21 = [];\n  const p1Origin = [];\n  // Compute line vector\n  subtract(p2, p1, p21);\n  subtract(origin, p1, p1Origin);\n\n  // Compute denominator.  If ~0, line and plane are parallel.\n  // const num = vtkMath.dot(normal, origin) - vtkMath.dot(normal, p1);\n  const num = dot(normal, p1Origin);\n  const den = dot(normal, p21);\n\n  // If denominator with respect to numerator is \"zero\", then the line and\n  // plane are considered parallel.\n  let fabsden;\n  let fabstolerance;\n\n  // Trying to avoid an expensive call to fabs()\n  if (den < 0.0) {\n    fabsden = -den;\n  } else {\n    fabsden = den;\n  }\n  if (num < 0.0) {\n    fabstolerance = -num * PLANE_TOLERANCE;\n  } else {\n    fabstolerance = num * PLANE_TOLERANCE;\n  }\n  if (fabsden <= fabstolerance) {\n    return outObj;\n  }\n\n  // Where on the line between p1 and p2 is the intersection\n  // If between 0 and 1, it is between the two points. If < 0 it's before p1, if > 1 it's after p2\n  outObj.t = num / den;\n  outObj.x[0] = p1[0] + outObj.t * p21[0];\n  outObj.x[1] = p1[1] + outObj.t * p21[1];\n  outObj.x[2] = p1[2] + outObj.t * p21[2];\n  outObj.intersection = true;\n  outObj.betweenPoints = outObj.t >= 0.0 && outObj.t <= 1.0;\n  return outObj;\n}\nfunction intersectWithPlane(plane1Origin, plane1Normal, plane2Origin, plane2Normal) {\n  const outObj = {\n    intersection: false,\n    l0: [],\n    l1: [],\n    error: null\n  };\n  const cross$1 = [];\n  cross(plane1Normal, plane2Normal, cross$1);\n  const absCross = cross$1.map(n => Math.abs(n));\n\n  // test if the two planes are parallel\n  if (absCross[0] + absCross[1] + absCross[2] < PLANE_TOLERANCE) {\n    // test if disjoint or coincide\n    const v = [];\n    subtract(plane1Origin, plane2Origin, v);\n    if (dot(plane1Normal, v) === 0) {\n      outObj.error = COINCIDE;\n    } else {\n      outObj.error = DISJOINT;\n    }\n    return outObj;\n  }\n\n  // Plane1 and Plane2 intersect in a line\n  // first determine max abs coordinate of the cross product\n  let maxc;\n  if (absCross[0] > absCross[1] && absCross[0] > absCross[2]) {\n    maxc = 'x';\n  } else if (absCross[1] > absCross[2]) {\n    maxc = 'y';\n  } else {\n    maxc = 'z';\n  }\n\n  // To get a point on the intersect line, zero the max coord, and solve for the other two\n  const iP = []; // intersectionPoint\n  // the constants in the 2 plane equations\n  const d1 = -dot(plane1Normal, plane1Origin);\n  const d2 = -dot(plane2Normal, plane2Origin);\n\n  // eslint-disable-next-line default-case\n  switch (maxc) {\n    case 'x':\n      // intersect with x=0\n      iP[0] = 0;\n      iP[1] = (d2 * plane1Normal[2] - d1 * plane2Normal[2]) / cross$1[0];\n      iP[2] = (d1 * plane2Normal[1] - d2 * plane1Normal[1]) / cross$1[0];\n      break;\n    case 'y':\n      // intersect with y=0\n      iP[0] = (d1 * plane2Normal[2] - d2 * plane1Normal[2]) / cross$1[1];\n      iP[1] = 0;\n      iP[2] = (d2 * plane1Normal[0] - d1 * plane2Normal[0]) / cross$1[1];\n      break;\n    case 'z':\n      // intersect with z=0\n      iP[0] = (d2 * plane1Normal[1] - d1 * plane2Normal[1]) / cross$1[2];\n      iP[1] = (d1 * plane2Normal[0] - d2 * plane1Normal[0]) / cross$1[2];\n      iP[2] = 0;\n      break;\n  }\n  outObj.l0 = iP;\n  add(iP, cross$1, outObj.l1);\n  outObj.intersection = true;\n  return outObj;\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nconst STATIC = {\n  evaluate,\n  distanceToPlane,\n  projectPoint,\n  projectVector,\n  generalizedProjectPoint,\n  intersectWithLine,\n  intersectWithPlane,\n  DISJOINT,\n  COINCIDE\n};\n\n// ----------------------------------------------------------------------------\n// vtkPlane methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPlane(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPlane');\n  publicAPI.distanceToPlane = x => distanceToPlane(x, model.origin, model.normal);\n  publicAPI.projectPoint = (x, xproj) => {\n    projectPoint(x, model.origin, model.normal, xproj);\n  };\n  publicAPI.projectVector = (v, vproj) => projectVector(v, model.normal, vproj);\n  publicAPI.push = distance => {\n    if (distance === 0.0) {\n      return;\n    }\n    for (let i = 0; i < 3; i++) {\n      model.origin[i] += distance * model.normal[i];\n    }\n  };\n  publicAPI.generalizedProjectPoint = (x, xproj) => {\n    generalizedProjectPoint(x, model.origin, model.normal, xproj);\n  };\n  publicAPI.evaluateFunction = (x, y, z) => {\n    if (!Array.isArray(x)) {\n      return model.normal[0] * (x - model.origin[0]) + model.normal[1] * (y - model.origin[1]) + model.normal[2] * (z - model.origin[2]);\n    }\n    return model.normal[0] * (x[0] - model.origin[0]) + model.normal[1] * (x[1] - model.origin[1]) + model.normal[2] * (x[2] - model.origin[2]);\n  };\n  publicAPI.evaluateGradient = xyz => {\n    const retVal = [model.normal[0], model.normal[1], model.normal[2]];\n    return retVal;\n  };\n  publicAPI.intersectWithLine = (p1, p2) => intersectWithLine(p1, p2, model.origin, model.normal);\n  publicAPI.intersectWithPlane = (planeOrigin, planeNormal) => intersectWithPlane(planeOrigin, planeNormal, model.origin, model.normal);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  normal: [0.0, 0.0, 1.0],\n  origin: [0.0, 0.0, 0.0]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.setGetArray(publicAPI, model, ['normal', 'origin'], 3);\n  vtkPlane(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkPlane');\n\n// ----------------------------------------------------------------------------\n\nvar vtkPlane$1 = {\n  newInstance,\n  extend,\n  ...STATIC\n};\n\nexport { STATIC, vtkPlane$1 as default, extend, newInstance, vtkPlane };\n","import { m as macro } from '../../macros2.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nimport vtkEdgeLocator from '../../Common/DataModel/EdgeLocator.js';\nimport vtkCaseTable from './ImageMarchingSquares/caseTable.js';\n\nconst {\n  vtkErrorMacro,\n  vtkDebugMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkImageMarchingSquares methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageMarchingSquares(publicAPI, model) {\n  /**\n   * Get the X,Y kernels based on the set slicing mode.\n   * @returns {[number, number]}\n   */\n  function getKernels() {\n    let kernelX = 0; // default K slicing mode\n    let kernelY = 1;\n    if (model.slicingMode === 1) {\n      kernelX = 0;\n      kernelY = 2;\n    } else if (model.slicingMode === 0) {\n      kernelX = 1;\n      kernelY = 2;\n    }\n    return [kernelX, kernelY];\n  }\n\n  // Set our className\n  model.classHierarchy.push('vtkImageMarchingSquares');\n\n  /**\n   * Get the list of contour values.\n   * @returns {number[]}\n   */\n  publicAPI.getContourValues = () => model.contourValues;\n\n  /**\n   * Set the list contour values.\n   * @param {number[]} cValues\n   */\n  publicAPI.setContourValues = cValues => {\n    model.contourValues = cValues;\n    publicAPI.modified();\n  };\n  const ids = [];\n  const pixelScalars = [];\n  const pixelPts = [];\n  const edgeLocator = vtkEdgeLocator.newInstance();\n\n  /**\n   * Retrieve scalars and pixel coordinates.\n   * @param {Vector3} ijk origin of the pixel\n   * @param {Vector3} dims dimensions of the image\n   * @param {TypedArray} scalars list of scalar values\n   * @param {Vector3} increments IJK slice increments\n   * @param {number} kernelX index of the X element\n   * @param {number} kernelY index of the Y element\n   */\n  publicAPI.getPixelScalars = (ijk, dims, scalars, increments, kernelX, kernelY) => {\n    const [i, j, k] = ijk;\n\n    // First get the indices for the pixel\n    ids[0] = k * dims[1] * dims[0] + j * dims[0] + i; // i, j, k\n    ids[1] = ids[0] + increments[kernelX]; // i+1, j, k\n    ids[2] = ids[0] + increments[kernelY]; // i, j+1, k\n    ids[3] = ids[2] + increments[kernelX]; // i+1, j+1, k\n\n    // Now retrieve the scalars\n    for (let ii = 0; ii < 4; ++ii) {\n      pixelScalars[ii] = scalars[ids[ii]];\n    }\n  };\n\n  /**\n   * Retrieve pixel coordinates.\n   * @param {Vector3} ijk origin of the pixel\n   * @param {Vector3} origin origin of the image\n   * @param {Vector3} spacing spacing of the image\n   * @param {number} kernelX index of the X element\n   * @param {number} kernelY index of the Y element\n   */\n  publicAPI.getPixelPoints = (ijk, origin, spacing, kernelX, kernelY) => {\n    const i = ijk[kernelX];\n    const j = ijk[kernelY];\n\n    // (i,i+1),(j,j+1),(k,k+1) - i varies fastest; then j; then k\n    pixelPts[0] = origin[kernelX] + i * spacing[kernelX]; // 0\n    pixelPts[1] = origin[kernelY] + j * spacing[kernelY];\n    pixelPts[2] = pixelPts[0] + spacing[kernelX]; // 1\n    pixelPts[3] = pixelPts[1];\n    pixelPts[4] = pixelPts[0]; // 2\n    pixelPts[5] = pixelPts[1] + spacing[kernelY];\n    pixelPts[6] = pixelPts[2]; // 3\n    pixelPts[7] = pixelPts[5];\n  };\n\n  /**\n   * Produce points and lines for the polydata.\n   * @param {number[]} cVal list of contour values\n   * @param {Vector3} ijk origin of the pixel\n   * @param {Vector3} dims dimensions of the image\n   * @param {Vector3} origin origin of the image\n   * @param {Vector3} spacing sapcing of the image\n   * @param {TypedArray} scalars list of scalar values\n   * @param {number[]} points list of points\n   * @param {number[]} lines list of lines\n   * @param {Vector3} increments IJK slice increments\n   * @param {number} kernelX index of the X element\n   * @param {number} kernelY index of the Y element\n   */\n  publicAPI.produceLines = (cVal, ijk, dims, origin, spacing, scalars, points, lines, increments, kernelX, kernelY) => {\n    const k = ijk[model.slicingMode];\n    const CASE_MASK = [1, 2, 8, 4]; // case table is actually for quad\n    const xyz = [];\n    let pId;\n    publicAPI.getPixelScalars(ijk, dims, scalars, increments, kernelX, kernelY);\n    let index = 0;\n    for (let idx = 0; idx < 4; idx++) {\n      if (pixelScalars[idx] >= cVal) {\n        index |= CASE_MASK[idx]; // eslint-disable-line no-bitwise\n      }\n    }\n\n    const pixelLines = vtkCaseTable.getCase(index);\n    if (pixelLines[0] < 0) {\n      return; // don't get the pixel coordinates, nothing to do\n    }\n\n    publicAPI.getPixelPoints(ijk, origin, spacing, kernelX, kernelY);\n    const z = origin[model.slicingMode] + k * spacing[model.slicingMode];\n    for (let idx = 0; pixelLines[idx] >= 0; idx += 2) {\n      lines.push(2);\n      for (let eid = 0; eid < 2; eid++) {\n        const edgeVerts = vtkCaseTable.getEdge(pixelLines[idx + eid]);\n        pId = undefined;\n        if (model.mergePoints) {\n          pId = edgeLocator.isInsertedEdge(ids[edgeVerts[0]], ids[edgeVerts[1]])?.value;\n        }\n        if (pId === undefined) {\n          const t = (cVal - pixelScalars[edgeVerts[0]]) / (pixelScalars[edgeVerts[1]] - pixelScalars[edgeVerts[0]]);\n          const x0 = pixelPts.slice(edgeVerts[0] * 2, (edgeVerts[0] + 1) * 2);\n          const x1 = pixelPts.slice(edgeVerts[1] * 2, (edgeVerts[1] + 1) * 2);\n          xyz[kernelX] = x0[0] + t * (x1[0] - x0[0]);\n          xyz[kernelY] = x0[1] + t * (x1[1] - x0[1]);\n          xyz[model.slicingMode] = z;\n          pId = points.length / 3;\n          points.push(xyz[0], xyz[1], xyz[2]);\n          if (model.mergePoints) {\n            edgeLocator.insertEdge(ids[edgeVerts[0]], ids[edgeVerts[1]], pId);\n          }\n        }\n        lines.push(pId);\n      }\n    }\n  };\n  publicAPI.requestData = (inData, outData) => {\n    // implement requestData\n    const input = inData[0];\n    if (!input) {\n      vtkErrorMacro('Invalid or missing input');\n      return;\n    }\n    if (model.slicingMode == null || model.slicingMode < 0 || model.slicingMode > 2) {\n      vtkErrorMacro('Invalid or missing slicing mode');\n      return;\n    }\n    console.time('msquares');\n\n    // Retrieve output and volume data\n    const origin = input.getOrigin();\n    const spacing = input.getSpacing();\n    const dims = input.getDimensions();\n    const extent = input.getExtent();\n    const increments = input.computeIncrements(extent);\n    const scalars = input.getPointData().getScalars().getData();\n    const [kernelX, kernelY] = getKernels();\n\n    // Points - dynamic array\n    const points = [];\n\n    // Cells - dynamic array\n    const lines = [];\n\n    // Ensure slice is valid\n    let k = Math.round(model.slice);\n    if (k >= dims[model.slicingMode]) {\n      k = 0;\n    }\n\n    // Loop over all contour values, and then pixels, determine case and process\n    const ijk = [0, 0, 0];\n    ijk[model.slicingMode] = k;\n    for (let cv = 0; cv < model.contourValues.length; ++cv) {\n      for (let j = 0; j < dims[kernelY] - 1; ++j) {\n        ijk[kernelY] = j;\n        for (let i = 0; i < dims[kernelX] - 1; ++i) {\n          ijk[kernelX] = i;\n          publicAPI.produceLines(model.contourValues[cv], ijk, dims, origin, spacing, scalars, points, lines, increments, kernelX, kernelY);\n        }\n      }\n      edgeLocator.initialize();\n    }\n\n    // Update output\n    const polydata = vtkPolyData.newInstance();\n    polydata.getPoints().setData(new Float32Array(points), 3);\n    polydata.getLines().setData(new Uint32Array(lines));\n    outData[0] = polydata;\n    vtkDebugMacro('Produced output');\n    console.timeEnd('msquares');\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  contourValues: [],\n  slicingMode: 2,\n  slice: 0,\n  mergePoints: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Make this a VTK object\n  macro.obj(publicAPI, model);\n\n  // Also make it an algorithm with one input and one output\n  macro.algo(publicAPI, model, 1, 1);\n  macro.setGet(publicAPI, model, ['slicingMode', 'slice', 'mergePoints']);\n\n  // Object specific methods\n  macro.algo(publicAPI, model, 1, 1);\n  vtkImageMarchingSquares(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkImageMarchingSquares');\n\n// ----------------------------------------------------------------------------\n\nvar vtkImageMarchingSquares$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkImageMarchingSquares$1 as default, extend, newInstance };\n","import { mat4, vec4, vec3, quat } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport { r as radiansFromDegrees, k as add, j as cross } from '../../Common/Core/Math/index.js';\n\nconst {\n  vtkDebugMacro\n} = macro;\n\n/* eslint-disable new-cap */\n\n/*\n * Convenience function to access elements of a gl-matrix.  If it turns\n * out I have rows and columns swapped everywhere, then I'll just change\n * the order of 'row' and 'col' parameters in this function\n */\n// function getMatrixElement(matrix, row, col) {\n//   const idx = (row * 4) + col;\n//   return matrix[idx];\n// }\n\n// ----------------------------------------------------------------------------\n// vtkCamera methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCamera(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCamera');\n\n  // Set up private variables and methods\n  const origin = new Float64Array(3);\n  const dopbasis = new Float64Array([0.0, 0.0, -1.0]);\n  const upbasis = new Float64Array([0.0, 1.0, 0.0]);\n  const tmpMatrix = mat4.identity(new Float64Array(16));\n  const tmpMatrix2 = mat4.identity(new Float64Array(16));\n  const tmpvec1 = new Float64Array(3);\n  const tmpvec2 = new Float64Array(3);\n  const tmpvec3 = new Float64Array(3);\n  const rotateMatrix = mat4.identity(new Float64Array(16));\n  const trans = mat4.identity(new Float64Array(16));\n  const newPosition = new Float64Array(3);\n  const newFocalPoint = new Float64Array(3);\n\n  // Internal Functions that don't need to be public\n  function computeViewPlaneNormal() {\n    // VPN is -DOP\n    model.viewPlaneNormal[0] = -model.directionOfProjection[0];\n    model.viewPlaneNormal[1] = -model.directionOfProjection[1];\n    model.viewPlaneNormal[2] = -model.directionOfProjection[2];\n  }\n  publicAPI.orthogonalizeViewUp = () => {\n    const vt = publicAPI.getViewMatrix();\n    model.viewUp[0] = vt[4];\n    model.viewUp[1] = vt[5];\n    model.viewUp[2] = vt[6];\n    publicAPI.modified();\n  };\n  publicAPI.setPosition = (x, y, z) => {\n    if (x === model.position[0] && y === model.position[1] && z === model.position[2]) {\n      return;\n    }\n    model.position[0] = x;\n    model.position[1] = y;\n    model.position[2] = z;\n\n    // recompute the focal distance\n    publicAPI.computeDistance();\n    publicAPI.modified();\n  };\n  publicAPI.setFocalPoint = (x, y, z) => {\n    if (x === model.focalPoint[0] && y === model.focalPoint[1] && z === model.focalPoint[2]) {\n      return;\n    }\n    model.focalPoint[0] = x;\n    model.focalPoint[1] = y;\n    model.focalPoint[2] = z;\n\n    // recompute the focal distance\n    publicAPI.computeDistance();\n    publicAPI.modified();\n  };\n  publicAPI.setDistance = d => {\n    if (model.distance === d) {\n      return;\n    }\n    model.distance = d;\n    if (model.distance < 1e-20) {\n      model.distance = 1e-20;\n      vtkDebugMacro('Distance is set to minimum.');\n    }\n\n    // we want to keep the camera pointing in the same direction\n    const vec = model.directionOfProjection;\n\n    // recalculate FocalPoint\n    model.focalPoint[0] = model.position[0] + vec[0] * model.distance;\n    model.focalPoint[1] = model.position[1] + vec[1] * model.distance;\n    model.focalPoint[2] = model.position[2] + vec[2] * model.distance;\n    publicAPI.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  // This method must be called when the focal point or camera position changes\n  publicAPI.computeDistance = () => {\n    const dx = model.focalPoint[0] - model.position[0];\n    const dy = model.focalPoint[1] - model.position[1];\n    const dz = model.focalPoint[2] - model.position[2];\n    model.distance = Math.sqrt(dx * dx + dy * dy + dz * dz);\n    if (model.distance < 1e-20) {\n      model.distance = 1e-20;\n      vtkDebugMacro('Distance is set to minimum.');\n      const vec = model.directionOfProjection;\n\n      // recalculate FocalPoint\n      model.focalPoint[0] = model.position[0] + vec[0] * model.distance;\n      model.focalPoint[1] = model.position[1] + vec[1] * model.distance;\n      model.focalPoint[2] = model.position[2] + vec[2] * model.distance;\n    }\n    model.directionOfProjection[0] = dx / model.distance;\n    model.directionOfProjection[1] = dy / model.distance;\n    model.directionOfProjection[2] = dz / model.distance;\n    computeViewPlaneNormal();\n  };\n\n  //----------------------------------------------------------------------------\n  // Move the position of the camera along the view plane normal. Moving\n  // towards the focal point (e.g., > 1) is a dolly-in, moving away\n  // from the focal point (e.g., < 1) is a dolly-out.\n  publicAPI.dolly = amount => {\n    if (amount <= 0.0) {\n      return;\n    }\n\n    // dolly moves the camera towards the focus\n    const d = model.distance / amount;\n    publicAPI.setPosition(model.focalPoint[0] - d * model.directionOfProjection[0], model.focalPoint[1] - d * model.directionOfProjection[1], model.focalPoint[2] - d * model.directionOfProjection[2]);\n  };\n  publicAPI.roll = angle => {\n    const eye = model.position;\n    const at = model.focalPoint;\n    const up = model.viewUp;\n    const viewUpVec4 = new Float64Array([up[0], up[1], up[2], 0.0]);\n    mat4.identity(rotateMatrix);\n    const viewDir = new Float64Array([at[0] - eye[0], at[1] - eye[1], at[2] - eye[2]]);\n    mat4.rotate(rotateMatrix, rotateMatrix, radiansFromDegrees(angle), viewDir);\n    vec4.transformMat4(viewUpVec4, viewUpVec4, rotateMatrix);\n    model.viewUp[0] = viewUpVec4[0];\n    model.viewUp[1] = viewUpVec4[1];\n    model.viewUp[2] = viewUpVec4[2];\n    publicAPI.modified();\n  };\n  publicAPI.azimuth = angle => {\n    const fp = model.focalPoint;\n    mat4.identity(trans);\n\n    // translate the focal point to the origin,\n    // rotate about view up,\n    // translate back again\n    mat4.translate(trans, trans, fp);\n    mat4.rotate(trans, trans, radiansFromDegrees(angle), model.viewUp);\n    mat4.translate(trans, trans, [-fp[0], -fp[1], -fp[2]]);\n\n    // apply the transform to the position\n    vec3.transformMat4(newPosition, model.position, trans);\n    publicAPI.setPosition(newPosition[0], newPosition[1], newPosition[2]);\n  };\n  publicAPI.yaw = angle => {\n    const position = model.position;\n    mat4.identity(trans);\n\n    // translate the camera to the origin,\n    // rotate about axis,\n    // translate back again\n    mat4.translate(trans, trans, position);\n    mat4.rotate(trans, trans, radiansFromDegrees(angle), model.viewUp);\n    mat4.translate(trans, trans, [-position[0], -position[1], -position[2]]);\n\n    // apply the transform to the position\n    vec3.transformMat4(newFocalPoint, model.focalPoint, trans);\n    publicAPI.setFocalPoint(newFocalPoint[0], newFocalPoint[1], newFocalPoint[2]);\n  };\n  publicAPI.elevation = angle => {\n    const fp = model.focalPoint;\n\n    // get the eye / camera position from the viewMatrix\n    const vt = publicAPI.getViewMatrix();\n    const axis = [-vt[0], -vt[1], -vt[2]];\n    mat4.identity(trans);\n\n    // translate the focal point to the origin,\n    // rotate about view up,\n    // translate back again\n    mat4.translate(trans, trans, fp);\n    mat4.rotate(trans, trans, radiansFromDegrees(angle), axis);\n    mat4.translate(trans, trans, [-fp[0], -fp[1], -fp[2]]);\n\n    // apply the transform to the position\n    vec3.transformMat4(newPosition, model.position, trans);\n    publicAPI.setPosition(newPosition[0], newPosition[1], newPosition[2]);\n  };\n  publicAPI.pitch = angle => {\n    const position = model.position;\n    const vt = publicAPI.getViewMatrix();\n    const axis = [vt[0], vt[1], vt[2]];\n    mat4.identity(trans);\n\n    // translate the camera to the origin,\n    // rotate about axis,\n    // translate back again\n    mat4.translate(trans, trans, position);\n    mat4.rotate(trans, trans, radiansFromDegrees(angle), axis);\n    mat4.translate(trans, trans, [-position[0], -position[1], -position[2]]);\n\n    // apply the transform to the focal point\n    vec3.transformMat4(newFocalPoint, model.focalPoint, trans);\n    publicAPI.setFocalPoint(...newFocalPoint);\n  };\n  publicAPI.zoom = factor => {\n    if (factor <= 0) {\n      return;\n    }\n    if (model.parallelProjection) {\n      model.parallelScale /= factor;\n    } else {\n      model.viewAngle /= factor;\n    }\n    publicAPI.modified();\n  };\n  publicAPI.translate = (x, y, z) => {\n    const offset = [x, y, z];\n    add(model.position, offset, model.position);\n    add(model.focalPoint, offset, model.focalPoint);\n    publicAPI.computeDistance();\n    publicAPI.modified();\n  };\n  publicAPI.applyTransform = transformMat4 => {\n    const vuOld = [...model.viewUp, 1.0];\n    const posNew = [];\n    const fpNew = [];\n    const vuNew = [];\n    vuOld[0] += model.position[0];\n    vuOld[1] += model.position[1];\n    vuOld[2] += model.position[2];\n    vec4.transformMat4(posNew, [...model.position, 1.0], transformMat4);\n    vec4.transformMat4(fpNew, [...model.focalPoint, 1.0], transformMat4);\n    vec4.transformMat4(vuNew, vuOld, transformMat4);\n    vuNew[0] -= posNew[0];\n    vuNew[1] -= posNew[1];\n    vuNew[2] -= posNew[2];\n    publicAPI.setPosition(...posNew.slice(0, 3));\n    publicAPI.setFocalPoint(...fpNew.slice(0, 3));\n    publicAPI.setViewUp(...vuNew.slice(0, 3));\n  };\n  publicAPI.getThickness = () => model.clippingRange[1] - model.clippingRange[0];\n  publicAPI.setThickness = thickness => {\n    let t = thickness;\n    if (t < 1e-20) {\n      t = 1e-20;\n      vtkDebugMacro('Thickness is set to minimum.');\n    }\n    publicAPI.setClippingRange(model.clippingRange[0], model.clippingRange[0] + t);\n  };\n  publicAPI.setThicknessFromFocalPoint = thickness => {\n    let t = thickness;\n    if (t < 1e-20) {\n      t = 1e-20;\n      vtkDebugMacro('Thickness is set to minimum.');\n    }\n    publicAPI.setClippingRange(model.distance - t / 2, model.distance + t / 2);\n  };\n\n  // Unimplemented functions\n  publicAPI.setRoll = angle => {}; // dependency on GetOrientation() and a model.ViewTransform object, see https://github.com/Kitware/VTK/blob/master/Common/Transforms/vtkTransform.cxx and https://vtk.org/doc/nightly/html/classvtkTransform.html\n  publicAPI.getRoll = () => {};\n  publicAPI.setObliqueAngles = (alpha, beta) => {};\n  publicAPI.getOrientation = () => {};\n  publicAPI.getOrientationWXYZ = () => {};\n  publicAPI.getFrustumPlanes = aspect => {\n    // Return array of 24 params (4 params for each of 6 plane equations)\n  };\n  publicAPI.getCameraLightTransformMatrix = matrix => {\n    mat4.copy(matrix, model.cameraLightTransform);\n    return matrix;\n  };\n  publicAPI.computeCameraLightTransform = () => {\n    // not sure if this is the correct transformation, based on the same funciton in VTK\n    mat4.copy(tmpMatrix, publicAPI.getViewMatrix());\n    mat4.invert(tmpMatrix, tmpMatrix);\n    mat4.fromScaling(tmpMatrix2, [model.distance, model.distance, model.distance]);\n    mat4.multiply(tmpMatrix, tmpMatrix, tmpMatrix2);\n    mat4.identity(model.cameraLightTransform);\n    mat4.translate(model.cameraLightTransform, tmpMatrix, [0.0, 0.0, -1.0]);\n  };\n  publicAPI.deepCopy = sourceCamera => {};\n  publicAPI.physicalOrientationToWorldDirection = ori => {\n    // push the x axis through the orientation quat\n    const oriq = quat.fromValues(ori[0], ori[1], ori[2], ori[3]);\n    const coriq = quat.create();\n    const qdir = quat.fromValues(0.0, 0.0, 1.0, 0.0);\n    quat.conjugate(coriq, oriq);\n\n    // rotate the z axis by the quat\n    quat.multiply(qdir, oriq, qdir);\n    quat.multiply(qdir, qdir, coriq);\n\n    // return the z axis in world coords\n    return [qdir[0], qdir[1], qdir[2]];\n  };\n  publicAPI.getPhysicalToWorldMatrix = result => {\n    publicAPI.getWorldToPhysicalMatrix(result);\n    mat4.invert(result, result);\n  };\n  publicAPI.getWorldToPhysicalMatrix = result => {\n    mat4.identity(result);\n\n    // now the physical to vtk world rotation tform\n    const physVRight = [3];\n    cross(model.physicalViewNorth, model.physicalViewUp, physVRight);\n    result[0] = physVRight[0];\n    result[1] = physVRight[1];\n    result[2] = physVRight[2];\n    result[4] = model.physicalViewUp[0];\n    result[5] = model.physicalViewUp[1];\n    result[6] = model.physicalViewUp[2];\n    result[8] = -model.physicalViewNorth[0];\n    result[9] = -model.physicalViewNorth[1];\n    result[10] = -model.physicalViewNorth[2];\n    mat4.transpose(result, result);\n    vec3.set(tmpvec1, 1 / model.physicalScale, 1 / model.physicalScale, 1 / model.physicalScale);\n    mat4.scale(result, result, tmpvec1);\n    mat4.translate(result, result, model.physicalTranslation);\n  };\n  publicAPI.computeViewParametersFromViewMatrix = vmat => {\n    // invert to get view to world\n    mat4.invert(tmpMatrix, vmat);\n\n    // note with glmatrix operations happen in\n    // the reverse order\n    // mat.scale\n    // mat.translate\n    // will result in the translation then the scale\n    // mat.mult(a,b)\n    // results in perform the B transformation then A\n\n    // then extract the params position, orientation\n    // push 0,0,0 through to get a translation\n    vec3.transformMat4(tmpvec1, origin, tmpMatrix);\n    publicAPI.computeDistance();\n    const oldDist = model.distance;\n    publicAPI.setPosition(tmpvec1[0], tmpvec1[1], tmpvec1[2]);\n\n    // push basis vectors to get orientation\n    vec3.transformMat4(tmpvec2, dopbasis, tmpMatrix);\n    vec3.subtract(tmpvec2, tmpvec2, tmpvec1);\n    vec3.normalize(tmpvec2, tmpvec2);\n    publicAPI.setDirectionOfProjection(tmpvec2[0], tmpvec2[1], tmpvec2[2]);\n    vec3.transformMat4(tmpvec3, upbasis, tmpMatrix);\n    vec3.subtract(tmpvec3, tmpvec3, tmpvec1);\n    vec3.normalize(tmpvec3, tmpvec3);\n    publicAPI.setViewUp(tmpvec3[0], tmpvec3[1], tmpvec3[2]);\n    publicAPI.setDistance(oldDist);\n  };\n\n  // the provided matrix should include\n  // translation and orientation only\n  // mat is physical to view\n  publicAPI.computeViewParametersFromPhysicalMatrix = mat => {\n    // get the WorldToPhysicalMatrix\n    publicAPI.getWorldToPhysicalMatrix(tmpMatrix);\n\n    // first convert the physical -> view matrix to be\n    // world -> view\n    mat4.multiply(tmpMatrix, mat, tmpMatrix);\n    publicAPI.computeViewParametersFromViewMatrix(tmpMatrix);\n  };\n  publicAPI.setViewMatrix = mat => {\n    model.viewMatrix = mat;\n    if (model.viewMatrix) {\n      mat4.copy(tmpMatrix, model.viewMatrix);\n      publicAPI.computeViewParametersFromViewMatrix(tmpMatrix);\n      mat4.transpose(model.viewMatrix, model.viewMatrix);\n    }\n  };\n  publicAPI.getViewMatrix = () => {\n    if (model.viewMatrix) {\n      return model.viewMatrix;\n    }\n    mat4.lookAt(tmpMatrix, model.position,\n    // eye\n    model.focalPoint,\n    // at\n    model.viewUp // up\n    );\n\n    mat4.transpose(tmpMatrix, tmpMatrix);\n    const result = new Float64Array(16);\n    mat4.copy(result, tmpMatrix);\n    return result;\n  };\n  publicAPI.setProjectionMatrix = mat => {\n    model.projectionMatrix = mat;\n  };\n  publicAPI.getProjectionMatrix = (aspect, nearz, farz) => {\n    const result = new Float64Array(16);\n    mat4.identity(result);\n    if (model.projectionMatrix) {\n      const scale = 1 / model.physicalScale;\n      vec3.set(tmpvec1, scale, scale, scale);\n      mat4.copy(result, model.projectionMatrix);\n      mat4.scale(result, result, tmpvec1);\n      mat4.transpose(result, result);\n      return result;\n    }\n    mat4.identity(tmpMatrix);\n\n    // FIXME: Not sure what to do about adjust z buffer here\n    // adjust Z-buffer range\n    // this->ProjectionTransform->AdjustZBuffer( -1, +1, nearz, farz );\n    const cWidth = model.clippingRange[1] - model.clippingRange[0];\n    const cRange = [model.clippingRange[0] + (nearz + 1) * cWidth / 2.0, model.clippingRange[0] + (farz + 1) * cWidth / 2.0];\n    if (model.parallelProjection) {\n      // set up a rectangular parallelipiped\n      const width = model.parallelScale * aspect;\n      const height = model.parallelScale;\n      const xmin = (model.windowCenter[0] - 1.0) * width;\n      const xmax = (model.windowCenter[0] + 1.0) * width;\n      const ymin = (model.windowCenter[1] - 1.0) * height;\n      const ymax = (model.windowCenter[1] + 1.0) * height;\n      mat4.ortho(tmpMatrix, xmin, xmax, ymin, ymax, cRange[0], cRange[1]);\n      mat4.transpose(tmpMatrix, tmpMatrix);\n    } else if (model.useOffAxisProjection) {\n      throw new Error('Off-Axis projection is not supported at this time');\n    } else {\n      const tmp = Math.tan(radiansFromDegrees(model.viewAngle) / 2.0);\n      let width;\n      let height;\n      if (model.useHorizontalViewAngle === true) {\n        width = model.clippingRange[0] * tmp;\n        height = model.clippingRange[0] * tmp / aspect;\n      } else {\n        width = model.clippingRange[0] * tmp * aspect;\n        height = model.clippingRange[0] * tmp;\n      }\n      const xmin = (model.windowCenter[0] - 1.0) * width;\n      const xmax = (model.windowCenter[0] + 1.0) * width;\n      const ymin = (model.windowCenter[1] - 1.0) * height;\n      const ymax = (model.windowCenter[1] + 1.0) * height;\n      const znear = cRange[0];\n      const zfar = cRange[1];\n      tmpMatrix[0] = 2.0 * znear / (xmax - xmin);\n      tmpMatrix[5] = 2.0 * znear / (ymax - ymin);\n      tmpMatrix[2] = (xmin + xmax) / (xmax - xmin);\n      tmpMatrix[6] = (ymin + ymax) / (ymax - ymin);\n      tmpMatrix[10] = -(znear + zfar) / (zfar - znear);\n      tmpMatrix[14] = -1.0;\n      tmpMatrix[11] = -2.0 * znear * zfar / (zfar - znear);\n      tmpMatrix[15] = 0.0;\n    }\n    mat4.copy(result, tmpMatrix);\n    return result;\n  };\n  publicAPI.getCompositeProjectionMatrix = (aspect, nearz, farz) => {\n    const vMat = publicAPI.getViewMatrix();\n    const pMat = publicAPI.getProjectionMatrix(aspect, nearz, farz);\n    // mats are transposed so the order is A then B\n    // we reuse pMat as it is a copy so we can do what we want with it\n    mat4.multiply(pMat, vMat, pMat);\n    return pMat;\n  };\n  publicAPI.setDirectionOfProjection = (x, y, z) => {\n    if (model.directionOfProjection[0] === x && model.directionOfProjection[1] === y && model.directionOfProjection[2] === z) {\n      return;\n    }\n    model.directionOfProjection[0] = x;\n    model.directionOfProjection[1] = y;\n    model.directionOfProjection[2] = z;\n    const vec = model.directionOfProjection;\n\n    // recalculate FocalPoint\n    model.focalPoint[0] = model.position[0] + vec[0] * model.distance;\n    model.focalPoint[1] = model.position[1] + vec[1] * model.distance;\n    model.focalPoint[2] = model.position[2] + vec[2] * model.distance;\n    computeViewPlaneNormal();\n  };\n\n  // used to handle convert js device orientation angles\n  // when you use this method the camera will adjust to the\n  // device orientation such that the physicalViewUp you set\n  // in world coordinates looks up, and the physicalViewNorth\n  // you set in world coorindates will (maybe) point north\n  //\n  // NOTE WARNING - much of the documentation out there on how\n  // orientation works is seriously wrong. Even worse the Chrome\n  // device orientation simulator is completely wrong and should\n  // never be used. OMG it is so messed up.\n  //\n  // how it seems to work on iOS is that the device orientation\n  // is specified in extrinsic angles with a alpha, beta, gamma\n  // convention with axes of Z, X, Y (the code below substitutes\n  // the physical coordinate system for these axes to get the right\n  // modified coordinate system.\n  publicAPI.setDeviceAngles = (alpha, beta, gamma, screen) => {\n    const physVRight = [3];\n    cross(model.physicalViewNorth, model.physicalViewUp, physVRight);\n\n    // phone to physical coordinates\n    const rotmat = mat4.identity(new Float64Array(16));\n    mat4.rotate(rotmat, rotmat, radiansFromDegrees(alpha), model.physicalViewUp);\n    mat4.rotate(rotmat, rotmat, radiansFromDegrees(beta), physVRight);\n    mat4.rotate(rotmat, rotmat, radiansFromDegrees(gamma), model.physicalViewNorth);\n    mat4.rotate(rotmat, rotmat, radiansFromDegrees(-screen), model.physicalViewUp);\n    const dop = new Float64Array([-model.physicalViewUp[0], -model.physicalViewUp[1], -model.physicalViewUp[2]]);\n    const vup = new Float64Array(model.physicalViewNorth);\n    vec3.transformMat4(dop, dop, rotmat);\n    vec3.transformMat4(vup, vup, rotmat);\n    publicAPI.setDirectionOfProjection(dop[0], dop[1], dop[2]);\n    publicAPI.setViewUp(vup[0], vup[1], vup[2]);\n    publicAPI.modified();\n  };\n  publicAPI.setOrientationWXYZ = (degrees, x, y, z) => {\n    const quatMat = mat4.identity(new Float64Array(16));\n    if (degrees !== 0.0 && (x !== 0.0 || y !== 0.0 || z !== 0.0)) {\n      // convert to radians\n      const angle = radiansFromDegrees(degrees);\n      const q = quat.create();\n      quat.setAxisAngle(q, [x, y, z], angle);\n      mat4.fromQuat(quatMat, q);\n    }\n    const newdop = new Float64Array(3);\n    vec3.transformMat4(newdop, [0.0, 0.0, -1.0], quatMat);\n    const newvup = new Float64Array(3);\n    vec3.transformMat4(newvup, [0.0, 1.0, 0.0], quatMat);\n    publicAPI.setDirectionOfProjection(...newdop);\n    publicAPI.setViewUp(...newvup);\n    publicAPI.modified();\n  };\n  publicAPI.computeClippingRange = bounds => {\n    let vn = null;\n    let position = null;\n    vn = model.viewPlaneNormal;\n    position = model.position;\n    const a = -vn[0];\n    const b = -vn[1];\n    const c = -vn[2];\n    const d = -(a * position[0] + b * position[1] + c * position[2]);\n\n    // Set the max near clipping plane and the min far clipping plane\n    const range = [a * bounds[0] + b * bounds[2] + c * bounds[4] + d, 1e-18];\n\n    // Find the closest / farthest bounding box vertex\n    for (let k = 0; k < 2; k++) {\n      for (let j = 0; j < 2; j++) {\n        for (let i = 0; i < 2; i++) {\n          const dist = a * bounds[i] + b * bounds[2 + j] + c * bounds[4 + k] + d;\n          range[0] = dist < range[0] ? dist : range[0];\n          range[1] = dist > range[1] ? dist : range[1];\n        }\n      }\n    }\n    return range;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  position: [0, 0, 1],\n  focalPoint: [0, 0, 0],\n  viewUp: [0, 1, 0],\n  directionOfProjection: [0, 0, -1],\n  parallelProjection: false,\n  useHorizontalViewAngle: false,\n  viewAngle: 30,\n  parallelScale: 1,\n  clippingRange: [0.01, 1000.01],\n  windowCenter: [0, 0],\n  viewPlaneNormal: [0, 0, 1],\n  useOffAxisProjection: false,\n  screenBottomLeft: [-0.5, -0.5, -0.5],\n  screenBottomRight: [0.5, -0.5, -0.5],\n  screenTopRight: [0.5, 0.5, -0.5],\n  freezeFocalPoint: false,\n  projectionMatrix: null,\n  viewMatrix: null,\n  cameraLightTransform: mat4.create(),\n  // used for world to physical transformations\n  physicalTranslation: [0, 0, 0],\n  physicalScale: 1.0,\n  physicalViewUp: [0, 1, 0],\n  physicalViewNorth: [0, 0, -1]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['distance']);\n  macro.setGet(publicAPI, model, ['parallelProjection', 'useHorizontalViewAngle', 'viewAngle', 'parallelScale', 'useOffAxisProjection', 'freezeFocalPoint', 'physicalScale']);\n  macro.getArray(publicAPI, model, ['directionOfProjection', 'viewPlaneNormal', 'position', 'focalPoint']);\n  macro.setGetArray(publicAPI, model, ['clippingRange', 'windowCenter'], 2);\n  macro.setGetArray(publicAPI, model, ['viewUp', 'screenBottomLeft', 'screenBottomRight', 'screenTopRight', 'physicalTranslation', 'physicalViewUp', 'physicalViewNorth'], 3);\n\n  // Object methods\n  vtkCamera(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkCamera');\n\n// ----------------------------------------------------------------------------\n\nvar vtkCamera$1 = {\n  newInstance,\n  extend\n};\n\nexport { DEFAULT_VALUES, vtkCamera$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport { h as hsv2rgb, i as isNan, J as floor, K as isInf, L as rgb2hsv, M as rgb2lab, N as lab2rgb } from '../../Common/Core/Math/index.js';\nimport vtkScalarsToColors from '../../Common/Core/ScalarsToColors.js';\nimport Constants from './ColorTransferFunction/Constants.js';\n\nconst {\n  ColorSpace,\n  Scale\n} = Constants;\nconst {\n  ScalarMappingTarget\n} = vtkScalarsToColors;\nconst {\n  vtkDebugMacro,\n  vtkErrorMacro,\n  vtkWarningMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n/* eslint-disable no-continue                                                */\n\n// Convert to and from a special polar version of CIELAB (useful for creating\n// continuous diverging color maps).\nfunction vtkColorTransferFunctionLabToMsh(lab, msh) {\n  const L = lab[0];\n  const a = lab[1];\n  const b = lab[2];\n  const M = Math.sqrt(L * L + a * a + b * b);\n  const s = M > 0.001 ? Math.acos(L / M) : 0.0;\n  const h = s > 0.001 ? Math.atan2(b, a) : 0.0;\n  msh[0] = M;\n  msh[1] = s;\n  msh[2] = h;\n}\nfunction vtkColorTransferFunctionMshToLab(msh, lab) {\n  const M = msh[0];\n  const s = msh[1];\n  const h = msh[2];\n  lab[0] = M * Math.cos(s);\n  lab[1] = M * Math.sin(s) * Math.cos(h);\n  lab[2] = M * Math.sin(s) * Math.sin(h);\n}\n\n// For the case when interpolating from a saturated color to an unsaturated\n// color, find a hue for the unsaturated color that makes sense.\nfunction vtkColorTransferFunctionAdjustHue(msh, unsatM) {\n  if (msh[0] >= unsatM - 0.1) {\n    // The best we can do is hold hue constant.\n    return msh[2];\n  }\n\n  // This equation is designed to make the perceptual change of the\n  // interpolation to be close to constant.\n  const hueSpin = msh[1] * Math.sqrt(unsatM * unsatM - msh[0] * msh[0]) / (msh[0] * Math.sin(msh[1]));\n  // Spin hue away from 0 except in purple hues.\n  if (msh[2] > -0.3 * Math.PI) {\n    return msh[2] + hueSpin;\n  }\n  return msh[2] - hueSpin;\n}\nfunction vtkColorTransferFunctionAngleDiff(a1, a2) {\n  let adiff = a1 - a2;\n  if (adiff < 0.0) {\n    adiff = -adiff;\n  }\n  while (adiff >= 2.0 * Math.PI) {\n    adiff -= 2.0 * Math.PI;\n  }\n  if (adiff > Math.PI) {\n    adiff = 2.0 * Math.PI - adiff;\n  }\n  return adiff;\n}\n\n// Interpolate a diverging color map.\nfunction vtkColorTransferFunctionInterpolateDiverging(s, rgb1, rgb2, result) {\n  const lab1 = [];\n  const lab2 = [];\n  rgb2lab(rgb1, lab1);\n  rgb2lab(rgb2, lab2);\n  const msh1 = [];\n  const msh2 = [];\n  vtkColorTransferFunctionLabToMsh(lab1, msh1);\n  vtkColorTransferFunctionLabToMsh(lab2, msh2);\n\n  // If the endpoints are distinct saturated colors, then place white in between\n  // them.\n  let localS = s;\n  if (msh1[1] > 0.05 && msh2[1] > 0.05 && vtkColorTransferFunctionAngleDiff(msh1[2], msh2[2]) > 0.33 * Math.PI) {\n    // Insert the white midpoint by setting one end to white and adjusting the\n    // scalar value.\n    let Mmid = Math.max(msh1[0], msh2[0]);\n    Mmid = Math.max(88.0, Mmid);\n    if (s < 0.5) {\n      msh2[0] = Mmid;\n      msh2[1] = 0.0;\n      msh2[2] = 0.0;\n      localS *= 2.0;\n    } else {\n      msh1[0] = Mmid;\n      msh1[1] = 0.0;\n      msh1[2] = 0.0;\n      localS = 2.0 * localS - 1.0;\n    }\n  }\n\n  // If one color has no saturation, then its hue value is invalid.  In this\n  // case, we want to set it to something logical so that the interpolation of\n  // hue makes sense.\n  if (msh1[1] < 0.05 && msh2[1] > 0.05) {\n    msh1[2] = vtkColorTransferFunctionAdjustHue(msh2, msh1[0]);\n  } else if (msh2[1] < 0.05 && msh1[1] > 0.05) {\n    msh2[2] = vtkColorTransferFunctionAdjustHue(msh1, msh2[0]);\n  }\n  const mshTmp = [];\n  mshTmp[0] = (1 - localS) * msh1[0] + localS * msh2[0];\n  mshTmp[1] = (1 - localS) * msh1[1] + localS * msh2[1];\n  mshTmp[2] = (1 - localS) * msh1[2] + localS * msh2[2];\n\n  // Now convert back to RGB\n  const labTmp = [];\n  vtkColorTransferFunctionMshToLab(mshTmp, labTmp);\n  lab2rgb(labTmp, result);\n}\n\n// ----------------------------------------------------------------------------\n// vtkColorTransferFunction methods\n// ----------------------------------------------------------------------------\n\nfunction vtkColorTransferFunction(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkColorTransferFunction');\n\n  // Return the number of points which specify this function\n  publicAPI.getSize = () => model.nodes.length;\n\n  //----------------------------------------------------------------------------\n  // Add a point defined in RGB\n  publicAPI.addRGBPoint = (x, r, g, b) => publicAPI.addRGBPointLong(x, r, g, b, 0.5, 0.0);\n\n  //----------------------------------------------------------------------------\n  // Add a point defined in RGB\n  publicAPI.addRGBPointLong = function (x, r, g, b) {\n    let midpoint = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0.5;\n    let sharpness = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0.0;\n    // Error check\n    if (midpoint < 0.0 || midpoint > 1.0) {\n      vtkErrorMacro('Midpoint outside range [0.0, 1.0]');\n      return -1;\n    }\n    if (sharpness < 0.0 || sharpness > 1.0) {\n      vtkErrorMacro('Sharpness outside range [0.0, 1.0]');\n      return -1;\n    }\n\n    // remove any node already at this X location\n    if (!model.allowDuplicateScalars) {\n      publicAPI.removePoint(x);\n    }\n\n    // Create the new node\n    const node = {\n      x,\n      r,\n      g,\n      b,\n      midpoint,\n      sharpness\n    };\n\n    // Add it, then sort to get everything in order\n    model.nodes.push(node);\n    publicAPI.sortAndUpdateRange();\n\n    // We need to find the index of the node we just added in order\n    // to return this value\n    let i = 0;\n    for (; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === x) {\n        break;\n      }\n    }\n\n    // If we didn't find it, something went horribly wrong so\n    // return -1\n    if (i < model.nodes.length) {\n      return i;\n    }\n    return -1;\n  };\n\n  //----------------------------------------------------------------------------\n  // Add a point defined in HSV\n  publicAPI.addHSVPoint = (x, h, s, v) => publicAPI.addHSVPointLong(x, h, s, v, 0.5, 0.0);\n\n  //----------------------------------------------------------------------------\n  // Add a point defined in HSV\n  publicAPI.addHSVPointLong = function (x, h, s, v) {\n    let midpoint = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0.5;\n    let sharpness = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0.0;\n    const rgb = [];\n    const hsv = [h, s, v];\n    hsv2rgb(hsv, rgb);\n    return publicAPI.addRGBPoint(x, rgb[0], rgb[1], rgb[2], midpoint, sharpness);\n  };\n\n  //----------------------------------------------------------------------------\n  // Set nodes directly\n  publicAPI.setNodes = nodes => {\n    if (model.nodes !== nodes) {\n      const before = JSON.stringify(model.nodes);\n      model.nodes = nodes;\n      const after = JSON.stringify(model.nodes);\n      if (publicAPI.sortAndUpdateRange() || before !== after) {\n        publicAPI.modified();\n        return true;\n      }\n    }\n    return false;\n  };\n\n  //----------------------------------------------------------------------------\n  // Sort the vector in increasing order, then fill in\n  // the Range\n  publicAPI.sortAndUpdateRange = () => {\n    const before = JSON.stringify(model.nodes);\n    model.nodes.sort((a, b) => a.x - b.x);\n    const after = JSON.stringify(model.nodes);\n    const modifiedInvoked = publicAPI.updateRange();\n    // If range is updated, Modified() has been called, don't call it again.\n    if (!modifiedInvoked && before !== after) {\n      publicAPI.modified();\n      return true;\n    }\n    return modifiedInvoked;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.updateRange = () => {\n    const oldRange = [2];\n    oldRange[0] = model.mappingRange[0];\n    oldRange[1] = model.mappingRange[1];\n    const size = model.nodes.length;\n    if (size) {\n      model.mappingRange[0] = model.nodes[0].x;\n      model.mappingRange[1] = model.nodes[size - 1].x;\n    } else {\n      model.mappingRange[0] = 0;\n      model.mappingRange[1] = 0;\n    }\n\n    // If the range is the same, then no need to call Modified()\n    if (oldRange[0] === model.mappingRange[0] && oldRange[1] === model.mappingRange[1]) {\n      return false;\n    }\n    publicAPI.modified();\n    return true;\n  };\n\n  //----------------------------------------------------------------------------\n  // Remove a point\n  publicAPI.removePoint = x => {\n    // First find the node since we need to know its\n    // index as our return value\n    let i = 0;\n    for (; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === x) {\n        break;\n      }\n    }\n    const retVal = i;\n\n    // If the node doesn't exist, we return -1\n    if (i >= model.nodes.length) {\n      return -1;\n    }\n\n    // If the first or last point has been removed, then we update the range\n    // No need to sort here as the order of points hasn't changed.\n    let modifiedInvoked = false;\n    model.nodes.splice(i, 1);\n    if (i === 0 || i === model.nodes.length) {\n      modifiedInvoked = publicAPI.updateRange();\n    }\n    if (!modifiedInvoked) {\n      publicAPI.modified();\n    }\n    return retVal;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.movePoint = (oldX, newX) => {\n    if (oldX === newX) {\n      // Nothing to do.\n      return;\n    }\n    publicAPI.removePoint(newX);\n    for (let i = 0; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === oldX) {\n        model.nodes[i].x = newX;\n        publicAPI.sortAndUpdateRange();\n        break;\n      }\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  // Remove all points\n  publicAPI.removeAllPoints = () => {\n    model.nodes = [];\n    publicAPI.sortAndUpdateRange();\n  };\n\n  //----------------------------------------------------------------------------\n  // Add a line defined in RGB\n  publicAPI.addRGBSegment = (x1, r1, g1, b1, x2, r2, g2, b2) => {\n    // First, find all points in this range and remove them\n    publicAPI.sortAndUpdateRange();\n    for (let i = 0; i < model.nodes.length;) {\n      if (model.nodes[i].x >= x1 && model.nodes[i].x <= x2) {\n        model.nodes.splice(i, 1);\n      } else {\n        i++;\n      }\n    }\n\n    // Now add the points\n    publicAPI.addRGBPointLong(x1, r1, g1, b1, 0.5, 0.0);\n    publicAPI.addRGBPointLong(x2, r2, g2, b2, 0.5, 0.0);\n    publicAPI.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  // Add a line defined in HSV\n  publicAPI.addHSVSegment = (x1, h1, s1, v1, x2, h2, s2, v2) => {\n    const hsv1 = [h1, s1, v1];\n    const hsv2 = [h2, s2, v2];\n    const rgb1 = [];\n    const rgb2 = [];\n    hsv2rgb(hsv1, rgb1);\n    hsv2rgb(hsv2, rgb2);\n    publicAPI.addRGBSegment(x1, rgb1[0], rgb1[1], rgb1[2], x2, rgb2[0], rgb2[1], rgb2[2]);\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns the RGBA color evaluated at the specified location\n  publicAPI.mapValue = x => {\n    const rgb = [];\n    publicAPI.getColor(x, rgb);\n    return [Math.floor(255.0 * rgb[0] + 0.5), Math.floor(255.0 * rgb[1] + 0.5), Math.floor(255.0 * rgb[2] + 0.5), 255];\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns the RGB color evaluated at the specified location\n  publicAPI.getColor = (x, rgb) => {\n    if (model.indexedLookup) {\n      const numNodes = publicAPI.getSize();\n      // todo\n      const idx = publicAPI.getAnnotatedValueIndexInternal(x);\n      if (idx < 0 || numNodes === 0) {\n        const nanColor = publicAPI.getNanColorByReference();\n        rgb[0] = nanColor[0];\n        rgb[1] = nanColor[1];\n        rgb[2] = nanColor[2];\n      } else {\n        const nodeVal = [];\n        publicAPI.getNodeValue(idx % numNodes, nodeVal);\n        // nodeVal[0] is the x value. nodeVal[1...3] is rgb.\n        rgb[0] = nodeVal[1];\n        rgb[1] = nodeVal[2];\n        rgb[2] = nodeVal[3];\n      }\n      return;\n    }\n    publicAPI.getTable(x, x, 1, rgb);\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns the red color evaluated at the specified location\n  publicAPI.getRedValue = x => {\n    const rgb = [];\n    publicAPI.getColor(x, rgb);\n    return rgb[0];\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns the green color evaluated at the specified location\n  publicAPI.getGreenValue = x => {\n    const rgb = [];\n    publicAPI.getColor(x, rgb);\n    return rgb[1];\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns the blue color evaluated at the specified location\n  publicAPI.getBlueValue = x => {\n    const rgb = [];\n    publicAPI.getColor(x, rgb);\n    return rgb[2];\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns a table of RGB colors at regular intervals along the function\n  publicAPI.getTable = (xStart_, xEnd_, size, table) => {\n    // To handle BigInt limitation\n    const xStart = Number(xStart_);\n    const xEnd = Number(xEnd_);\n\n    // Special case: If either the start or end is a NaN, then all any\n    // interpolation done on them is also a NaN.  Therefore, fill the table with\n    // the NaN color.\n    if (isNan(xStart) || isNan(xEnd)) {\n      for (let i = 0; i < size; i++) {\n        table[i * 3 + 0] = model.nanColor[0];\n        table[i * 3 + 1] = model.nanColor[1];\n        table[i * 3 + 2] = model.nanColor[2];\n      }\n      return;\n    }\n    let idx = 0;\n    const numNodes = model.nodes.length;\n\n    // Need to keep track of the last value so that\n    // we can fill in table locations past this with\n    // this value if Clamping is On.\n    let lastR = 0.0;\n    let lastG = 0.0;\n    let lastB = 0.0;\n    if (numNodes !== 0) {\n      lastR = model.nodes[numNodes - 1].r;\n      lastG = model.nodes[numNodes - 1].g;\n      lastB = model.nodes[numNodes - 1].b;\n    }\n    let x = 0.0;\n    let x1 = 0.0;\n    let x2 = 0.0;\n    const rgb1 = [0.0, 0.0, 0.0];\n    const rgb2 = [0.0, 0.0, 0.0];\n    let midpoint = 0.0;\n    let sharpness = 0.0;\n    const tmpVec = [];\n\n    // If the scale is logarithmic, make sure the range is valid.\n    let usingLogScale = model.scale === Scale.LOG10;\n    if (usingLogScale) {\n      // Note: This requires range[0] <= range[1].\n      usingLogScale = model.mappingRange[0] > 0.0;\n    }\n    let logStart = 0.0;\n    let logEnd = 0.0;\n    let logX = 0.0;\n    if (usingLogScale) {\n      logStart = Math.log10(xStart);\n      logEnd = Math.log10(xEnd);\n    }\n\n    // For each table entry\n    for (let i = 0; i < size; i++) {\n      // Find our location in the table\n      const tidx = 3 * i;\n\n      // Find our X location. If we are taking only 1 sample, make\n      // it halfway between start and end (usually start and end will\n      // be the same in this case)\n      if (size > 1) {\n        if (usingLogScale) {\n          logX = logStart + i / (size - 1.0) * (logEnd - logStart);\n          x = 10.0 ** logX;\n        } else {\n          x = xStart + i / (size - 1.0) * (xEnd - xStart);\n        }\n      } else if (usingLogScale) {\n        logX = 0.5 * (logStart + logEnd);\n        x = 10.0 ** logX;\n      } else {\n        x = 0.5 * (xStart + xEnd);\n      }\n\n      // Linearly map x from mappingRange to [0, numberOfValues-1],\n      // discretize (round down to the closest integer),\n      // then map back to mappingRange\n      if (model.discretize) {\n        const range = model.mappingRange;\n        if (x >= range[0] && x <= range[1]) {\n          const numberOfValues = model.numberOfValues;\n          const deltaRange = range[1] - range[0];\n          if (numberOfValues <= 1) {\n            x = range[0] + deltaRange / 2.0;\n          } else {\n            // normalize x\n            const xn = (x - range[0]) / deltaRange;\n            // discretize\n            const discretizeIndex = floor(numberOfValues * xn);\n            // get discretized x\n            x = range[0] + discretizeIndex / (numberOfValues - 1) * deltaRange;\n          }\n        }\n      }\n\n      // Do we need to move to the next node?\n      while (idx < numNodes && x > model.nodes[idx].x) {\n        idx++;\n        // If we are at a valid point index, fill in\n        // the value at this node, and the one before (the\n        // two that surround our current sample location)\n        // idx cannot be 0 since we just incremented it.\n        if (idx < numNodes) {\n          x1 = model.nodes[idx - 1].x;\n          x2 = model.nodes[idx].x;\n          if (usingLogScale) {\n            x1 = Math.log10(x1);\n            x2 = Math.log10(x2);\n          }\n          rgb1[0] = model.nodes[idx - 1].r;\n          rgb2[0] = model.nodes[idx].r;\n          rgb1[1] = model.nodes[idx - 1].g;\n          rgb2[1] = model.nodes[idx].g;\n          rgb1[2] = model.nodes[idx - 1].b;\n          rgb2[2] = model.nodes[idx].b;\n\n          // We only need the previous midpoint and sharpness\n          // since these control this region\n          midpoint = model.nodes[idx - 1].midpoint;\n          sharpness = model.nodes[idx - 1].sharpness;\n\n          // Move midpoint away from extreme ends of range to avoid\n          // degenerate math\n          if (midpoint < 0.00001) {\n            midpoint = 0.00001;\n          }\n          if (midpoint > 0.99999) {\n            midpoint = 0.99999;\n          }\n        }\n      }\n\n      // Are we at or past the end? If so, just use the last value\n      if (x > model.mappingRange[1]) {\n        table[tidx] = 0.0;\n        table[tidx + 1] = 0.0;\n        table[tidx + 2] = 0.0;\n        if (model.clamping) {\n          if (publicAPI.getUseAboveRangeColor()) {\n            table[tidx] = model.aboveRangeColor[0];\n            table[tidx + 1] = model.aboveRangeColor[1];\n            table[tidx + 2] = model.aboveRangeColor[2];\n          } else {\n            table[tidx] = lastR;\n            table[tidx + 1] = lastG;\n            table[tidx + 2] = lastB;\n          }\n        }\n      } else if (x < model.mappingRange[0] || isInf(x) && x < 0) {\n        // we are before the first node? If so, duplicate this node's values.\n        // We have to deal with -inf here\n        table[tidx] = 0.0;\n        table[tidx + 1] = 0.0;\n        table[tidx + 2] = 0.0;\n        if (model.clamping) {\n          if (publicAPI.getUseBelowRangeColor()) {\n            table[tidx] = model.belowRangeColor[0];\n            table[tidx + 1] = model.belowRangeColor[1];\n            table[tidx + 2] = model.belowRangeColor[2];\n          } else if (numNodes > 0) {\n            table[tidx] = model.nodes[0].r;\n            table[tidx + 1] = model.nodes[0].g;\n            table[tidx + 2] = model.nodes[0].b;\n          }\n        }\n      } else if (idx === 0 && (Math.abs(x - xStart) < 1e-6 || model.discretize)) {\n        if (numNodes > 0) {\n          table[tidx] = model.nodes[0].r;\n          table[tidx + 1] = model.nodes[0].g;\n          table[tidx + 2] = model.nodes[0].b;\n        } else {\n          table[tidx] = 0.0;\n          table[tidx + 1] = 0.0;\n          table[tidx + 2] = 0.0;\n        }\n      } else {\n        // OK, we are between two nodes - interpolate\n        // Our first attempt at a normalized location [0,1] -\n        // we will be modifying this based on midpoint and\n        // sharpness to get the curve shape we want and to have\n        // it pass through (y1+y2)/2 at the midpoint.\n        let s = 0.0;\n        if (usingLogScale) {\n          s = (logX - x1) / (x2 - x1);\n        } else {\n          s = (x - x1) / (x2 - x1);\n        }\n\n        // Readjust based on the midpoint - linear adjustment\n        if (s < midpoint) {\n          s = 0.5 * s / midpoint;\n        } else {\n          s = 0.5 + 0.5 * (s - midpoint) / (1.0 - midpoint);\n        }\n\n        // override for sharpness > 0.99\n        // In this case we just want piecewise constant\n        if (sharpness > 0.99) {\n          // Use the first value since we are below the midpoint\n          if (s < 0.5) {\n            table[tidx] = rgb1[0];\n            table[tidx + 1] = rgb1[1];\n            table[tidx + 2] = rgb1[2];\n            continue;\n          } else {\n            // Use the second value at or above the midpoint\n            table[tidx] = rgb2[0];\n            table[tidx + 1] = rgb2[1];\n            table[tidx + 2] = rgb2[2];\n            continue;\n          }\n        }\n\n        // Override for sharpness < 0.01\n        // In this case we want piecewise linear\n        if (sharpness < 0.01) {\n          // Simple linear interpolation\n          if (model.colorSpace === ColorSpace.RGB) {\n            table[tidx] = (1 - s) * rgb1[0] + s * rgb2[0];\n            table[tidx + 1] = (1 - s) * rgb1[1] + s * rgb2[1];\n            table[tidx + 2] = (1 - s) * rgb1[2] + s * rgb2[2];\n          } else if (model.colorSpace === ColorSpace.HSV) {\n            const hsv1 = [];\n            const hsv2 = [];\n            rgb2hsv(rgb1, hsv1);\n            rgb2hsv(rgb2, hsv2);\n            if (model.hSVWrap && (hsv1[0] - hsv2[0] > 0.5 || hsv2[0] - hsv1[0] > 0.5)) {\n              if (hsv1[0] > hsv2[0]) {\n                hsv1[0] -= 1.0;\n              } else {\n                hsv2[0] -= 1.0;\n              }\n            }\n            const hsvTmp = [];\n            hsvTmp[0] = (1.0 - s) * hsv1[0] + s * hsv2[0];\n            if (hsvTmp[0] < 0.0) {\n              hsvTmp[0] += 1.0;\n            }\n            hsvTmp[1] = (1.0 - s) * hsv1[1] + s * hsv2[1];\n            hsvTmp[2] = (1.0 - s) * hsv1[2] + s * hsv2[2];\n\n            // Now convert this back to RGB\n            hsv2rgb(hsvTmp, tmpVec);\n            table[tidx] = tmpVec[0];\n            table[tidx + 1] = tmpVec[1];\n            table[tidx + 2] = tmpVec[2];\n          } else if (model.colorSpace === ColorSpace.LAB) {\n            const lab1 = [];\n            const lab2 = [];\n            rgb2lab(rgb1, lab1);\n            rgb2lab(rgb2, lab2);\n            const labTmp = [];\n            labTmp[0] = (1 - s) * lab1[0] + s * lab2[0];\n            labTmp[1] = (1 - s) * lab1[1] + s * lab2[1];\n            labTmp[2] = (1 - s) * lab1[2] + s * lab2[2];\n\n            // Now convert back to RGB\n            lab2rgb(labTmp, tmpVec);\n            table[tidx] = tmpVec[0];\n            table[tidx + 1] = tmpVec[1];\n            table[tidx + 2] = tmpVec[2];\n          } else if (model.colorSpace === ColorSpace.DIVERGING) {\n            vtkColorTransferFunctionInterpolateDiverging(s, rgb1, rgb2, tmpVec);\n            table[tidx] = tmpVec[0];\n            table[tidx + 1] = tmpVec[1];\n            table[tidx + 2] = tmpVec[2];\n          } else {\n            vtkErrorMacro('ColorSpace set to invalid value.', model.colorSpace);\n          }\n          continue;\n        }\n\n        // We have a sharpness between [0.01, 0.99] - we will\n        // used a modified hermite curve interpolation where we\n        // derive the slope based on the sharpness, and we compress\n        // the curve non-linearly based on the sharpness\n\n        // First, we will adjust our position based on sharpness in\n        // order to make the curve sharper (closer to piecewise constant)\n        if (s < 0.5) {\n          s = 0.5 * (s * 2.0) ** (1.0 + 10.0 * sharpness);\n        } else if (s > 0.5) {\n          s = 1.0 - 0.5 * ((1.0 - s) * 2) ** (1 + 10.0 * sharpness);\n        }\n\n        // Compute some coefficients we will need for the hermite curve\n        const ss = s * s;\n        const sss = ss * s;\n        const h1 = 2.0 * sss - 3 * ss + 1;\n        const h2 = -2 * sss + 3 * ss;\n        const h3 = sss - 2 * ss + s;\n        const h4 = sss - ss;\n        let slope;\n        let t;\n        if (model.colorSpace === ColorSpace.RGB) {\n          for (let j = 0; j < 3; j++) {\n            // Use one slope for both end points\n            slope = rgb2[j] - rgb1[j];\n            t = (1.0 - sharpness) * slope;\n\n            // Compute the value\n            table[tidx + j] = h1 * rgb1[j] + h2 * rgb2[j] + h3 * t + h4 * t;\n          }\n        } else if (model.colorSpace === ColorSpace.HSV) {\n          const hsv1 = [];\n          const hsv2 = [];\n          rgb2hsv(rgb1, hsv1);\n          rgb2hsv(rgb2, hsv2);\n          if (model.hSVWrap && (hsv1[0] - hsv2[0] > 0.5 || hsv2[0] - hsv1[0] > 0.5)) {\n            if (hsv1[0] > hsv2[0]) {\n              hsv1[0] -= 1.0;\n            } else {\n              hsv2[0] -= 1.0;\n            }\n          }\n          const hsvTmp = [];\n          for (let j = 0; j < 3; j++) {\n            // Use one slope for both end points\n            slope = hsv2[j] - hsv1[j];\n            t = (1.0 - sharpness) * slope;\n\n            // Compute the value\n            hsvTmp[j] = h1 * hsv1[j] + h2 * hsv2[j] + h3 * t + h4 * t;\n            if (j === 0 && hsvTmp[j] < 0.0) {\n              hsvTmp[j] += 1.0;\n            }\n          }\n          // Now convert this back to RGB\n          hsv2rgb(hsvTmp, tmpVec);\n          table[tidx] = tmpVec[0];\n          table[tidx + 1] = tmpVec[1];\n          table[tidx + 2] = tmpVec[2];\n        } else if (model.colorSpace === ColorSpace.LAB) {\n          const lab1 = [];\n          const lab2 = [];\n          rgb2lab(rgb1, lab1);\n          rgb2lab(rgb2, lab2);\n          const labTmp = [];\n          for (let j = 0; j < 3; j++) {\n            // Use one slope for both end points\n            slope = lab2[j] - lab1[j];\n            t = (1.0 - sharpness) * slope;\n\n            // Compute the value\n            labTmp[j] = h1 * lab1[j] + h2 * lab2[j] + h3 * t + h4 * t;\n          }\n          // Now convert this back to RGB\n          lab2rgb(labTmp, tmpVec);\n          table[tidx] = tmpVec[0];\n          table[tidx + 1] = tmpVec[1];\n          table[tidx + 2] = tmpVec[2];\n        } else if (model.colorSpace === ColorSpace.DIVERGING) {\n          // I have not implemented proper interpolation by a hermite curve for\n          // the diverging color map, but I cannot think of a good use case for\n          // that anyway.\n          vtkColorTransferFunctionInterpolateDiverging(s, rgb1, rgb2, tmpVec);\n          table[tidx] = tmpVec[0];\n          table[tidx + 1] = tmpVec[1];\n          table[tidx + 2] = tmpVec[2];\n        } else {\n          vtkErrorMacro('ColorSpace set to invalid value.');\n        }\n\n        // Final error check to make sure we don't go outside [0,1]\n        for (let j = 0; j < 3; j++) {\n          table[tidx + j] = table[tidx + j] < 0.0 ? 0.0 : table[tidx + j];\n          table[tidx + j] = table[tidx + j] > 1.0 ? 1.0 : table[tidx + j];\n        }\n      }\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getUint8Table = function (xStart, xEnd, size) {\n    let withAlpha = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    if (publicAPI.getMTime() <= model.buildTime && model.tableSize === size && model.tableWithAlpha !== withAlpha) {\n      return model.table;\n    }\n    if (model.nodes.length === 0) {\n      vtkErrorMacro('Attempting to lookup a value with no points in the function');\n      return model.table;\n    }\n    const nbChannels = withAlpha ? 4 : 3;\n    if (model.tableSize !== size || model.tableWithAlpha !== withAlpha) {\n      model.table = new Uint8Array(size * nbChannels);\n      model.tableSize = size;\n      model.tableWithAlpha = withAlpha;\n    }\n    const tmpTable = [];\n    publicAPI.getTable(xStart, xEnd, size, tmpTable);\n    for (let i = 0; i < size; i++) {\n      model.table[i * nbChannels + 0] = Math.floor(tmpTable[i * 3 + 0] * 255.0 + 0.5);\n      model.table[i * nbChannels + 1] = Math.floor(tmpTable[i * 3 + 1] * 255.0 + 0.5);\n      model.table[i * nbChannels + 2] = Math.floor(tmpTable[i * 3 + 2] * 255.0 + 0.5);\n      if (withAlpha) {\n        model.table[i * nbChannels + 3] = 255;\n      }\n    }\n    model.buildTime.modified();\n    return model.table;\n  };\n  publicAPI.buildFunctionFromArray = array => {\n    publicAPI.removeAllPoints();\n    const numComponents = array.getNumberOfComponents();\n    for (let i = 0; i < array.getNumberOfTuples(); i++) {\n      switch (numComponents) {\n        case 3:\n          {\n            model.nodes.push({\n              x: i,\n              r: array.getComponent(i, 0),\n              g: array.getComponent(i, 1),\n              b: array.getComponent(i, 2),\n              midpoint: 0.5,\n              sharpness: 0.0\n            });\n            break;\n          }\n        case 4:\n          {\n            model.nodes.push({\n              x: array.getComponent(i, 0),\n              r: array.getComponent(i, 1),\n              g: array.getComponent(i, 2),\n              b: array.getComponent(i, 3),\n              midpoint: 0.5,\n              sharpness: 0.0\n            });\n            break;\n          }\n        case 5:\n          {\n            model.nodes.push({\n              x: i,\n              r: array.getComponent(i, 0),\n              g: array.getComponent(i, 1),\n              b: array.getComponent(i, 2),\n              midpoint: array.getComponent(i, 4),\n              sharpness: array.getComponent(i, 5)\n            });\n            break;\n          }\n        case 6:\n          {\n            model.nodes.push({\n              x: array.getComponent(i, 0),\n              r: array.getComponent(i, 1),\n              g: array.getComponent(i, 2),\n              b: array.getComponent(i, 3),\n              midpoint: array.getComponent(i, 4),\n              sharpness: array.getComponent(i, 5)\n            });\n            break;\n          }\n      }\n    }\n    publicAPI.sortAndUpdateRange();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.buildFunctionFromTable = (xStart, xEnd, size, table) => {\n    let inc = 0.0;\n    publicAPI.removeAllPoints();\n    if (size > 1) {\n      inc = (xEnd - xStart) / (size - 1.0);\n    }\n    for (let i = 0; i < size; i++) {\n      const node = {\n        x: xStart + inc * i,\n        r: table[i * 3],\n        g: table[i * 3 + 1],\n        b: table[i * 3 + 2],\n        sharpness: 0.0,\n        midpoint: 0.5\n      };\n      model.nodes.push(node);\n    }\n    publicAPI.sortAndUpdateRange();\n  };\n\n  //----------------------------------------------------------------------------\n  // For a specified index value, get the node parameters\n  publicAPI.getNodeValue = (index, val) => {\n    if (index < 0 || index >= model.nodes.length) {\n      vtkErrorMacro('Index out of range!');\n      return -1;\n    }\n    val[0] = model.nodes[index].x;\n    val[1] = model.nodes[index].r;\n    val[2] = model.nodes[index].g;\n    val[3] = model.nodes[index].b;\n    val[4] = model.nodes[index].midpoint;\n    val[5] = model.nodes[index].sharpness;\n    return 1;\n  };\n\n  //----------------------------------------------------------------------------\n  // For a specified index value, get the node parameters\n  publicAPI.setNodeValue = (index, val) => {\n    if (index < 0 || index >= model.nodes.length) {\n      vtkErrorMacro('Index out of range!');\n      return -1;\n    }\n    const oldX = model.nodes[index].x;\n    model.nodes[index].x = val[0];\n    model.nodes[index].r = val[1];\n    model.nodes[index].g = val[2];\n    model.nodes[index].b = val[3];\n    model.nodes[index].midpoint = val[4];\n    model.nodes[index].sharpness = val[5];\n    if (oldX !== val[0]) {\n      // The point has been moved, the order of points or the range might have\n      // been modified.\n      publicAPI.sortAndUpdateRange();\n      // No need to call Modified() here because SortAndUpdateRange() has done it\n      // already.\n    } else {\n      publicAPI.modified();\n    }\n    return 1;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getNumberOfAvailableColors = () => {\n    if (model.indexedLookup && publicAPI.getSize()) {\n      return publicAPI.getSize();\n    }\n    if (model.tableSize) {\n      // Not sure if this is correct since it is only set if\n      // \"const unsigned char *::GetTable(double xStart, double xEnd,int size)\"\n      // has been called.\n      return model.tableSize;\n    }\n    return 16777216; // 2^24\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getIndexedColor = (idx, rgba) => {\n    const n = publicAPI.getSize();\n    if (n > 0 && idx >= 0) {\n      const nodeValue = [];\n      publicAPI.getNodeValue(idx % n, nodeValue);\n      for (let j = 0; j < 3; ++j) {\n        rgba[j] = nodeValue[j + 1];\n      }\n      rgba[3] = 1.0; // NodeColor is RGB-only.\n      return;\n    }\n    const nanColor = publicAPI.getNanColorByReference();\n    rgba[0] = nanColor[0];\n    rgba[1] = nanColor[1];\n    rgba[2] = nanColor[2];\n    rgba[3] = 1.0; // NanColor is RGB-only.\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.fillFromDataPointer = (nb, ptr) => {\n    if (nb <= 0 || !ptr) {\n      return;\n    }\n    publicAPI.removeAllPoints();\n    for (let i = 0; i < nb; i++) {\n      publicAPI.addRGBPoint(ptr[i * 4], ptr[i * 4 + 1], ptr[i * 4 + 2], ptr[i * 4 + 3]);\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.setMappingRange = (min, max) => {\n    const range = [min, max];\n    const originalRange = publicAPI.getRange();\n    if (originalRange[1] === range[1] && originalRange[0] === range[0]) {\n      return;\n    }\n    if (range[1] === range[0]) {\n      vtkErrorMacro('attempt to set zero width color range');\n      return;\n    }\n    const scale = (range[1] - range[0]) / (originalRange[1] - originalRange[0]);\n    const shift = range[0] - originalRange[0] * scale;\n    for (let i = 0; i < model.nodes.length; ++i) {\n      model.nodes[i].x = model.nodes[i].x * scale + shift;\n    }\n    model.mappingRange[0] = range[0];\n    model.mappingRange[1] = range[1];\n    publicAPI.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.adjustRange = range => {\n    const functionRange = publicAPI.getRange();\n\n    // Make sure we have points at each end of the range\n    const rgb = [];\n    if (functionRange[0] < range[0]) {\n      publicAPI.getColor(range[0], rgb);\n      publicAPI.addRGBPoint(range[0], rgb[0], rgb[1], rgb[2]);\n    } else {\n      publicAPI.getColor(functionRange[0], rgb);\n      publicAPI.addRGBPoint(range[0], rgb[0], rgb[1], rgb[2]);\n    }\n    if (functionRange[1] > range[1]) {\n      publicAPI.getColor(range[1], rgb);\n      publicAPI.addRGBPoint(range[1], rgb[0], rgb[1], rgb[2]);\n    } else {\n      publicAPI.getColor(functionRange[1], rgb);\n      publicAPI.addRGBPoint(range[1], rgb[0], rgb[1], rgb[2]);\n    }\n\n    // Remove all points out-of-range\n    publicAPI.sortAndUpdateRange();\n    for (let i = 0; i < model.nodes.length;) {\n      if (model.nodes[i].x >= range[0] && model.nodes[i].x <= range[1]) {\n        model.nodes.splice(i, 1);\n      } else {\n        ++i;\n      }\n    }\n    return 1;\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.estimateMinNumberOfSamples = (x1, x2) => {\n    const d = publicAPI.findMinimumXDistance();\n    return Math.ceil((x2 - x1) / d);\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.findMinimumXDistance = () => {\n    if (model.nodes.length < 2) {\n      return -1.0;\n    }\n    let distance = Number.MAX_VALUE;\n    for (let i = 0; i < model.nodes.length - 1; i++) {\n      const currentDist = model.nodes[i + 1].x - model.nodes[i].x;\n      if (currentDist < distance) {\n        distance = currentDist;\n      }\n    }\n    return distance;\n  };\n  publicAPI.mapScalarsThroughTable = (input, output, outFormat, inputOffset) => {\n    if (publicAPI.getSize() === 0) {\n      vtkDebugMacro('Transfer Function Has No Points!');\n      return;\n    }\n    if (model.indexedLookup) {\n      publicAPI.mapDataIndexed(input, output, outFormat, inputOffset);\n    } else {\n      publicAPI.mapData(input, output, outFormat, inputOffset);\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.mapData = (input, output, outFormat, inputOffset) => {\n    if (publicAPI.getSize() === 0) {\n      vtkWarningMacro('Transfer Function Has No Points!');\n      return;\n    }\n    const alpha = Math.floor(publicAPI.getAlpha() * 255.0 + 0.5);\n    const length = input.getNumberOfTuples();\n    const inIncr = input.getNumberOfComponents();\n    const outputV = output.getData();\n    const inputV = input.getData();\n    const rgb = [];\n    if (outFormat === ScalarMappingTarget.RGBA) {\n      for (let i = 0; i < length; i++) {\n        const x = inputV[i * inIncr + inputOffset];\n        publicAPI.getColor(x, rgb);\n        outputV[i * 4] = Math.floor(rgb[0] * 255.0 + 0.5);\n        outputV[i * 4 + 1] = Math.floor(rgb[1] * 255.0 + 0.5);\n        outputV[i * 4 + 2] = Math.floor(rgb[2] * 255.0 + 0.5);\n        outputV[i * 4 + 3] = alpha;\n      }\n    }\n    if (outFormat === ScalarMappingTarget.RGB) {\n      for (let i = 0; i < length; i++) {\n        const x = inputV[i * inIncr + inputOffset];\n        publicAPI.getColor(x, rgb);\n        outputV[i * 3] = Math.floor(rgb[0] * 255.0 + 0.5);\n        outputV[i * 3 + 1] = Math.floor(rgb[1] * 255.0 + 0.5);\n        outputV[i * 3 + 2] = Math.floor(rgb[2] * 255.0 + 0.5);\n      }\n    }\n    if (outFormat === ScalarMappingTarget.LUMINANCE) {\n      for (let i = 0; i < length; i++) {\n        const x = inputV[i * inIncr + inputOffset];\n        publicAPI.getColor(x, rgb);\n        outputV[i] = Math.floor(rgb[0] * 76.5 + rgb[1] * 150.45 + rgb[2] * 28.05 + 0.5);\n      }\n    }\n    if (outFormat === ScalarMappingTarget.LUMINANCE_ALPHA) {\n      for (let i = 0; i < length; i++) {\n        const x = inputV[i * inIncr + inputOffset];\n        publicAPI.getColor(x, rgb);\n        outputV[i * 2] = Math.floor(rgb[0] * 76.5 + rgb[1] * 150.45 + rgb[2] * 28.05 + 0.5);\n        outputV[i * 2 + 1] = alpha;\n      }\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.applyColorMap = colorMap => {\n    const oldColorSpace = JSON.stringify(model.colorSpace);\n    if (colorMap.ColorSpace) {\n      model.colorSpace = ColorSpace[colorMap.ColorSpace.toUpperCase()];\n      if (model.colorSpace === undefined) {\n        vtkErrorMacro(`ColorSpace ${colorMap.ColorSpace} not supported, using RGB instead`);\n        model.colorSpace = ColorSpace.RGB;\n      }\n    }\n    let isModified = oldColorSpace !== JSON.stringify(model.colorSpace);\n    const oldNanColor = isModified || JSON.stringify(model.nanColor);\n    if (colorMap.NanColor) {\n      model.nanColor = [].concat(colorMap.NanColor);\n      while (model.nanColor.length < 4) {\n        model.nanColor.push(1.0);\n      }\n    }\n    isModified = isModified || oldNanColor !== JSON.stringify(model.nanColor);\n    const oldNodes = isModified || JSON.stringify(model.nodes);\n    if (colorMap.RGBPoints) {\n      const size = colorMap.RGBPoints.length;\n      model.nodes = [];\n      const midpoint = 0.5;\n      const sharpness = 0.0;\n      for (let i = 0; i < size; i += 4) {\n        model.nodes.push({\n          x: colorMap.RGBPoints[i],\n          r: colorMap.RGBPoints[i + 1],\n          g: colorMap.RGBPoints[i + 2],\n          b: colorMap.RGBPoints[i + 3],\n          midpoint,\n          sharpness\n        });\n      }\n    }\n    const modifiedInvoked = publicAPI.sortAndUpdateRange();\n    const callModified = !modifiedInvoked && (isModified || oldNodes !== JSON.stringify(model.nodes));\n    if (callModified) publicAPI.modified();\n    return modifiedInvoked || callModified;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  clamping: true,\n  colorSpace: ColorSpace.RGB,\n  hSVWrap: true,\n  scale: Scale.LINEAR,\n  nanColor: null,\n  belowRangeColor: null,\n  aboveRangeColor: null,\n  useAboveRangeColor: false,\n  useBelowRangeColor: false,\n  allowDuplicateScalars: false,\n  table: null,\n  tableSize: 0,\n  buildTime: null,\n  nodes: null,\n  discretize: false,\n  numberOfValues: 256\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkScalarsToColors.extend(publicAPI, model, initialValues);\n\n  // Internal objects initialization\n  model.table = [];\n  model.nodes = [];\n  model.nanColor = [0.5, 0.0, 0.0, 1.0];\n  model.belowRangeColor = [0.0, 0.0, 0.0, 1.0];\n  model.aboveRangeColor = [1.0, 1.0, 1.0, 1.0];\n  model.buildTime = {};\n  macro.obj(model.buildTime);\n\n  // Create get-only macros\n  macro.get(publicAPI, model, ['buildTime', 'mappingRange']);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['useAboveRangeColor', 'useBelowRangeColor', 'colorSpace', 'discretize', 'numberOfValues']);\n  macro.setArray(publicAPI, model, ['nanColor', 'belowRangeColor', 'aboveRangeColor'], 4);\n\n  // Create get macros for array\n  macro.getArray(publicAPI, model, ['nanColor', 'belowRangeColor', 'aboveRangeColor']);\n\n  // For more macro methods, see \"Sources/macros.js\"\n\n  // Object specific methods\n  vtkColorTransferFunction(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkColorTransferFunction');\n\n// ----------------------------------------------------------------------------\n\nvar vtkColorTransferFunction$1 = {\n  newInstance,\n  extend,\n  ...Constants\n};\n\nexport { vtkColorTransferFunction$1 as default, extend, newInstance };\n","import { v as vtkColorMaps$1 } from './ColorMaps.json.js';\n\nconst presetMap = Object.create(null);\nvtkColorMaps$1.filter(p => p.RGBPoints).filter(p => p.ColorSpace !== 'CIELAB').forEach(p => {\n  presetMap[p.Name] = p;\n});\n\n// ----------------------------------------------------------------------------\n\nconst rgbPresetNames = Object.keys(presetMap);\nrgbPresetNames.sort();\n\n// ----------------------------------------------------------------------------\n\nfunction getPresetByName(name) {\n  return presetMap[name];\n}\n\n// ----------------------------------------------------------------------------\n\nfunction addPreset(preset) {\n  if (!preset.RGBPoints || preset.ColorSpace === 'CIELAB') {\n    return;\n  }\n  if (!presetMap[preset.Name]) {\n    rgbPresetNames.push(preset.Name);\n    rgbPresetNames.sort();\n  }\n  presetMap[preset.Name] = preset;\n}\n\n// ----------------------------------------------------------------------------\n\nfunction removePresetByName(name) {\n  const index = rgbPresetNames.indexOf(name);\n  if (index > -1) {\n    rgbPresetNames.splice(index, 1);\n  }\n  delete presetMap[name];\n}\n\n// ----------------------------------------------------------------------------\n\nvar vtkColorMaps = {\n  addPreset,\n  removePresetByName,\n  getPresetByName,\n  rgbPresetNames\n};\n\nexport { vtkColorMaps as default };\n","import Constants from './ImageMapper/Constants.js';\nimport { m as macro } from '../../macros2.js';\nimport vtkAbstractImageMapper from './AbstractImageMapper.js';\nimport { intersectWithLineForPointPicking, intersectWithLineForCellPicking } from './AbstractImageMapper/helper.js';\nimport { C as clampValue, R as multiply3x3_vect3, F as createUninitializedBounds, S as getSparseOrthogonalMatrix } from '../../Common/Core/Math/index.js';\nimport CoincidentTopologyHelper from './Mapper/CoincidentTopologyHelper.js';\n\nconst {\n  staticOffsetAPI,\n  otherStaticMethods\n} = CoincidentTopologyHelper;\nconst {\n  SlicingMode\n} = Constants;\n\n// ----------------------------------------------------------------------------\n// vtkImageMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageMapper');\n  publicAPI.getSliceAtPosition = pos => {\n    const image = publicAPI.getCurrentImage();\n    let pos3;\n    if (pos.length === 3) {\n      pos3 = pos;\n    } else if (Number.isFinite(pos)) {\n      const bds = image.getBounds();\n      switch (model.slicingMode) {\n        case SlicingMode.X:\n          pos3 = [pos, (bds[3] + bds[2]) / 2, (bds[5] + bds[4]) / 2];\n          break;\n        case SlicingMode.Y:\n          pos3 = [(bds[1] + bds[0]) / 2, pos, (bds[5] + bds[4]) / 2];\n          break;\n        case SlicingMode.Z:\n          pos3 = [(bds[1] + bds[0]) / 2, (bds[3] + bds[2]) / 2, pos];\n          break;\n      }\n    }\n    const ijk = [0, 0, 0];\n    image.worldToIndex(pos3, ijk);\n    const ex = image.getExtent();\n    const {\n      ijkMode\n    } = publicAPI.getClosestIJKAxis();\n    let slice = 0;\n    switch (ijkMode) {\n      case SlicingMode.I:\n        slice = clampValue(ijk[0], ex[0], ex[1]);\n        break;\n      case SlicingMode.J:\n        slice = clampValue(ijk[1], ex[2], ex[3]);\n        break;\n      case SlicingMode.K:\n        slice = clampValue(ijk[2], ex[4], ex[5]);\n        break;\n      default:\n        return 0;\n    }\n    return slice;\n  };\n  publicAPI.setSliceFromCamera = cam => {\n    const fp = cam.getFocalPoint();\n    switch (model.slicingMode) {\n      case SlicingMode.I:\n      case SlicingMode.J:\n      case SlicingMode.K:\n        {\n          const slice = publicAPI.getSliceAtPosition(fp);\n          publicAPI.setSlice(slice);\n        }\n        break;\n      case SlicingMode.X:\n        publicAPI.setSlice(fp[0]);\n        break;\n      case SlicingMode.Y:\n        publicAPI.setSlice(fp[1]);\n        break;\n      case SlicingMode.Z:\n        publicAPI.setSlice(fp[2]);\n        break;\n    }\n  };\n  publicAPI.setXSlice = id => {\n    publicAPI.setSlicingMode(SlicingMode.X);\n    publicAPI.setSlice(id);\n  };\n  publicAPI.setYSlice = id => {\n    publicAPI.setSlicingMode(SlicingMode.Y);\n    publicAPI.setSlice(id);\n  };\n  publicAPI.setZSlice = id => {\n    publicAPI.setSlicingMode(SlicingMode.Z);\n    publicAPI.setSlice(id);\n  };\n  publicAPI.setISlice = id => {\n    publicAPI.setSlicingMode(SlicingMode.I);\n    publicAPI.setSlice(id);\n  };\n  publicAPI.setJSlice = id => {\n    publicAPI.setSlicingMode(SlicingMode.J);\n    publicAPI.setSlice(id);\n  };\n  publicAPI.setKSlice = id => {\n    publicAPI.setSlicingMode(SlicingMode.K);\n    publicAPI.setSlice(id);\n  };\n  publicAPI.getSlicingModeNormal = () => {\n    const out = [0, 0, 0];\n    const mat3 = publicAPI.getCurrentImage().getDirection();\n    switch (model.slicingMode) {\n      case SlicingMode.X:\n        out[0] = 1;\n        break;\n      case SlicingMode.Y:\n        out[1] = 1;\n        break;\n      case SlicingMode.Z:\n        out[2] = 1;\n        break;\n      case SlicingMode.I:\n        multiply3x3_vect3(mat3, [1, 0, 0], out);\n        break;\n      case SlicingMode.J:\n        multiply3x3_vect3(mat3, [0, 1, 0], out);\n        break;\n      case SlicingMode.K:\n        multiply3x3_vect3(mat3, [0, 0, 1], out);\n        break;\n    }\n    return out;\n  };\n  function computeClosestIJKAxis() {\n    let xyzMode;\n    switch (model.slicingMode) {\n      case SlicingMode.X:\n        xyzMode = 0;\n        break;\n      case SlicingMode.Y:\n        xyzMode = 1;\n        break;\n      case SlicingMode.Z:\n        xyzMode = 2;\n        break;\n      default:\n        model.closestIJKAxis = {\n          ijkMode: model.slicingMode,\n          flip: false\n        };\n        return;\n    }\n\n    // The direction matrix in vtkImageData is the indexToWorld rotation matrix\n    // with a column-major data layout since it is stored as a WebGL matrix.\n    const direction = publicAPI.getCurrentImage().getDirection();\n    const newMatrix = getSparseOrthogonalMatrix(direction);\n    // With {foo}Vector filled with 0s except at {foo}Mode position where it is 1\n    // We have xyzVector = (+/-) newMatrix * ijkVector\n    let ijkMode = 0;\n    for (; ijkMode < 3; ++ijkMode) {\n      if (newMatrix[xyzMode + 3 * ijkMode] !== 0) {\n        break;\n      }\n    }\n    const flip = newMatrix[xyzMode + 3 * ijkMode] < 0;\n    model.closestIJKAxis = {\n      ijkMode,\n      flip\n    };\n  }\n  publicAPI.setSlicingMode = mode => {\n    if (model.slicingMode === mode) {\n      return;\n    }\n    model.slicingMode = mode;\n    if (publicAPI.getCurrentImage()) {\n      computeClosestIJKAxis();\n    }\n    publicAPI.modified();\n  };\n  publicAPI.getClosestIJKAxis = () => {\n    if ((model.closestIJKAxis === undefined || model.closestIJKAxis.ijkMode === SlicingMode.NONE) && publicAPI.getCurrentImage()) {\n      computeClosestIJKAxis();\n    }\n    return model.closestIJKAxis;\n  };\n  publicAPI.getBounds = () => {\n    const image = publicAPI.getCurrentImage();\n    if (!image) {\n      return createUninitializedBounds();\n    }\n    if (!model.useCustomExtents) {\n      return image.getBounds();\n    }\n    const ex = model.customDisplayExtent.slice();\n    const {\n      ijkMode\n    } = publicAPI.getClosestIJKAxis();\n    let nSlice = model.slice;\n    if (ijkMode !== model.slicingMode) {\n      // If not IJK slicing, get the IJK slice from the XYZ position/slice\n      nSlice = publicAPI.getSliceAtPosition(model.slice);\n    }\n    switch (ijkMode) {\n      case SlicingMode.I:\n        ex[0] = nSlice;\n        ex[1] = nSlice;\n        break;\n      case SlicingMode.J:\n        ex[2] = nSlice;\n        ex[3] = nSlice;\n        break;\n      case SlicingMode.K:\n        ex[4] = nSlice;\n        ex[5] = nSlice;\n        break;\n    }\n    return image.extentToBounds(ex);\n  };\n  publicAPI.getBoundsForSlice = function () {\n    let slice = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : model.slice;\n    let halfThickness = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    const image = publicAPI.getCurrentImage();\n    if (!image) {\n      return createUninitializedBounds();\n    }\n    const extent = image.getSpatialExtent();\n    const {\n      ijkMode\n    } = publicAPI.getClosestIJKAxis();\n    let nSlice = slice;\n    if (ijkMode !== model.slicingMode) {\n      // If not IJK slicing, get the IJK slice from the XYZ position/slice\n      nSlice = publicAPI.getSliceAtPosition(slice);\n    }\n    switch (ijkMode) {\n      case SlicingMode.I:\n        extent[0] = nSlice - halfThickness;\n        extent[1] = nSlice + halfThickness;\n        break;\n      case SlicingMode.J:\n        extent[2] = nSlice - halfThickness;\n        extent[3] = nSlice + halfThickness;\n        break;\n      case SlicingMode.K:\n        extent[4] = nSlice - halfThickness;\n        extent[5] = nSlice + halfThickness;\n        break;\n    }\n    return image.extentToBounds(extent);\n  };\n  publicAPI.intersectWithLineForPointPicking = (p1, p2) => intersectWithLineForPointPicking(p1, p2, publicAPI);\n  publicAPI.intersectWithLineForCellPicking = (p1, p2) => intersectWithLineForCellPicking(p1, p2, publicAPI);\n  publicAPI.getCurrentImage = () => publicAPI.getInputData();\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  slicingMode: SlicingMode.NONE,\n  closestIJKAxis: {\n    ijkMode: SlicingMode.NONE,\n    flip: false\n  },\n  renderToRectangle: false,\n  sliceAtFocalPoint: false,\n  preferSizeOverAccuracy: false // Whether to use halfFloat representation of float, when it is inaccurate\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  vtkAbstractImageMapper.extend(publicAPI, model, initialValues);\n  macro.get(publicAPI, model, ['slicingMode']);\n  macro.setGet(publicAPI, model, ['closestIJKAxis', 'renderToRectangle', 'sliceAtFocalPoint', 'preferSizeOverAccuracy']);\n  CoincidentTopologyHelper.implementCoincidentTopologyMethods(publicAPI, model);\n\n  // Object methods\n  vtkImageMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkImageMapper');\n\n// ----------------------------------------------------------------------------\n\nvar vtkImageMapper$1 = {\n  newInstance,\n  extend,\n  ...staticOffsetAPI,\n  ...otherStaticMethods,\n  ...Constants\n};\n\nexport { vtkImageMapper$1 as default, extend, newInstance };\n","import { mat4 } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\nimport vtkProp3D from './Prop3D.js';\nimport vtkImageProperty from './ImageProperty.js';\n\nconst {\n  vtkDebugMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkImageSlice methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageSlice(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageSlice');\n  publicAPI.getActors = () => publicAPI;\n  publicAPI.getImages = () => publicAPI;\n  publicAPI.getIsOpaque = () => {\n    if (model.forceOpaque) {\n      return true;\n    }\n    if (model.forceTranslucent) {\n      return false;\n    }\n    // make sure we have a property\n    if (!model.property) {\n      // force creation of a property\n      publicAPI.getProperty();\n    }\n    let isOpaque = model.property.getOpacity() >= 1.0;\n\n    // are we using an opaque scalar array, if any?\n    isOpaque = isOpaque && (!model.mapper || model.mapper.getIsOpaque());\n    return isOpaque;\n  };\n\n  // Always render during opaque pass, to keep the behavior\n  // predictable and because depth-peeling kills alpha-blending.\n  // In the future, the Renderer should render images in layers,\n  // i.e. where each image will have a layer number assigned to it,\n  // and the Renderer will do the images in their own pass.\n  publicAPI.hasTranslucentPolygonalGeometry = () => false;\n  publicAPI.makeProperty = vtkImageProperty.newInstance;\n  publicAPI.getProperty = () => {\n    if (model.property === null) {\n      model.property = publicAPI.makeProperty();\n    }\n    return model.property;\n  };\n  publicAPI.getBounds = () => {\n    if (model.mapper === null) {\n      return model.bounds;\n    }\n\n    // Check for the special case when the mapper's bounds are unknown\n    const bds = model.mapper.getBounds();\n    if (!bds || bds.length !== 6) {\n      return bds;\n    }\n\n    // Check for the special case when the actor is empty.\n    if (bds[0] > bds[1]) {\n      model.mapperBounds = bds.concat(); // copy the mapper's bounds\n      model.bounds = [1, -1, 1, -1, 1, -1];\n      model.boundsMTime.modified();\n      return bds;\n    }\n\n    // Check if we have cached values for these bounds - we cache the\n    // values returned by model.mapper.getBounds() and we store the time\n    // of caching. If the values returned this time are different, or\n    // the modified time of this class is newer than the cached time,\n    // then we need to rebuild.\n    const zip = rows => rows[0].map((_, c) => rows.map(row => row[c]));\n    if (!model.mapperBounds || !zip([bds, model.mapperBounds]).reduce((a, b) => a && b[0] === b[1], true) || publicAPI.getMTime() > model.boundsMTime.getMTime()) {\n      vtkDebugMacro('Recomputing bounds...');\n      model.mapperBounds = bds.map(x => x);\n      publicAPI.computeMatrix();\n      const tmp4 = new Float64Array(16);\n      mat4.transpose(tmp4, model.matrix);\n      vtkBoundingBox.transformBounds(bds, tmp4, model.bounds);\n      model.boundsMTime.modified();\n    }\n    return model.bounds;\n  };\n  publicAPI.getBoundsForSlice = (slice, thickness) => {\n    // Check for the special case when the mapper's bounds are unknown\n    const bds = model.mapper.getBoundsForSlice(slice, thickness);\n    // Check for the special case when the actor is empty.\n    if (!vtkBoundingBox.isValid(bds)) {\n      return bds;\n    }\n    publicAPI.computeMatrix();\n    const tmp4 = new Float64Array(16);\n    mat4.transpose(tmp4, model.matrix);\n    const newBounds = vtkBoundingBox.transformBounds(bds, tmp4);\n    return newBounds;\n  };\n\n  //----------------------------------------------------------------------------\n  // Get the minimum X bound\n  publicAPI.getMinXBound = () => publicAPI.getBounds()[0];\n\n  // Get the maximum X bound\n  publicAPI.getMaxXBound = () => publicAPI.getBounds()[1];\n\n  // Get the minimum Y bound\n  publicAPI.getMinYBound = () => publicAPI.getBounds()[2];\n\n  // Get the maximum Y bound\n  publicAPI.getMaxYBound = () => publicAPI.getBounds()[3];\n\n  // Get the minimum Z bound\n  publicAPI.getMinZBound = () => publicAPI.getBounds()[4];\n\n  // Get the maximum Z bound\n  publicAPI.getMaxZBound = () => publicAPI.getBounds()[5];\n  publicAPI.getMTime = () => {\n    let mt = model.mtime;\n    if (model.property !== null) {\n      const time = model.property.getMTime();\n      mt = time > mt ? time : mt;\n    }\n    return mt;\n  };\n  publicAPI.getRedrawMTime = () => {\n    let mt = model.mtime;\n    if (model.mapper !== null) {\n      let time = model.mapper.getMTime();\n      mt = time > mt ? time : mt;\n      if (model.mapper.getInput() !== null) {\n        // FIXME !!! getInputAlgorithm / getInput\n        model.mapper.getInputAlgorithm().update();\n        time = model.mapper.getInput().getMTime();\n        mt = time > mt ? time : mt;\n      }\n    }\n    if (model.property !== null) {\n      let time = model.property.getMTime();\n      mt = time > mt ? time : mt;\n      if (model.property.getRGBTransferFunction() !== null) {\n        time = model.property.getRGBTransferFunction().getMTime();\n        mt = time > mt ? time : mt;\n      }\n    }\n    return mt;\n  };\n  publicAPI.getSupportsSelection = () => model.mapper ? model.mapper.getSupportsSelection() : false;\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  mapper: null,\n  property: null,\n  bounds: [...vtkBoundingBox.INIT_BOUNDS]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkProp3D.extend(publicAPI, model, initialValues);\n\n  // vtkTimeStamp\n  model.boundsMTime = {};\n  macro.obj(model.boundsMTime);\n\n  // Build VTK API\n  macro.set(publicAPI, model, ['property']);\n  macro.setGet(publicAPI, model, ['mapper']);\n  macro.getArray(publicAPI, model, ['bounds'], 6);\n\n  // Object methods\n  vtkImageSlice(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkImageSlice');\n\n// ----------------------------------------------------------------------------\n\nvar vtkImageSlice$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkImageSlice$1 as default, extend, newInstance };\n","import { mat4, vec3 } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\nimport vtkProp3D from './Prop3D.js';\nimport vtkVolumeProperty from './VolumeProperty.js';\n\nconst {\n  vtkDebugMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkVolume methods\n// ----------------------------------------------------------------------------\n\nfunction vtkVolume(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkVolume');\n  publicAPI.getVolumes = () => publicAPI;\n  publicAPI.makeProperty = vtkVolumeProperty.newInstance;\n  publicAPI.getProperty = () => {\n    if (model.property === null) {\n      model.property = publicAPI.makeProperty();\n    }\n    return model.property;\n  };\n  publicAPI.getBounds = () => {\n    if (model.mapper === null) {\n      return model.bounds;\n    }\n\n    // Check for the special case when the mapper's bounds are unknown\n    const bds = model.mapper.getBounds();\n    if (!bds || bds.length !== 6) {\n      return bds;\n    }\n\n    // Check for the special case when the actor is empty.\n    if (bds[0] > bds[1]) {\n      model.mapperBounds = bds.concat(); // copy the mapper's bounds\n      model.bounds = [1, -1, 1, -1, 1, -1];\n      model.boundsMTime.modified();\n      return bds;\n    }\n\n    // Check if we have cached values for these bounds - we cache the\n    // values returned by model.mapper.getBounds() and we store the time\n    // of caching. If the values returned this time are different, or\n    // the modified time of this class is newer than the cached time,\n    // then we need to rebuild.\n    const zip = rows => rows[0].map((_, c) => rows.map(row => row[c]));\n    if (!model.mapperBounds || !zip([bds, model.mapperBounds]).reduce((a, b) => a && b[0] === b[1], true) || publicAPI.getMTime() > model.boundsMTime.getMTime()) {\n      vtkDebugMacro('Recomputing bounds...');\n      model.mapperBounds = bds.map(x => x);\n      const bbox = [];\n      vtkBoundingBox.getCorners(bds, bbox);\n      publicAPI.computeMatrix();\n      const tmp4 = new Float64Array(16);\n      mat4.transpose(tmp4, model.matrix);\n      bbox.forEach(pt => vec3.transformMat4(pt, pt, tmp4));\n\n      /* eslint-disable no-multi-assign */\n      model.bounds[0] = model.bounds[2] = model.bounds[4] = Number.MAX_VALUE;\n      model.bounds[1] = model.bounds[3] = model.bounds[5] = -Number.MAX_VALUE;\n      /* eslint-enable no-multi-assign */\n      model.bounds = model.bounds.map((d, i) => i % 2 === 0 ? bbox.reduce((a, b) => a > b[i / 2] ? b[i / 2] : a, d) : bbox.reduce((a, b) => a < b[(i - 1) / 2] ? b[(i - 1) / 2] : a, d));\n      model.boundsMTime.modified();\n    }\n    return model.bounds;\n  };\n  publicAPI.getMTime = () => {\n    let mt = model.mtime;\n    if (model.property !== null) {\n      const time = model.property.getMTime();\n      mt = time > mt ? time : mt;\n    }\n    return mt;\n  };\n  publicAPI.getRedrawMTime = () => {\n    let mt = model.mtime;\n    if (model.mapper !== null) {\n      let time = model.mapper.getMTime();\n      mt = time > mt ? time : mt;\n      if (model.mapper.getInput() !== null) {\n        // FIXME !!! getInputAlgorithm / getInput\n        model.mapper.getInputAlgorithm().update();\n        time = model.mapper.getInput().getMTime();\n        mt = time > mt ? time : mt;\n      }\n    }\n    return mt;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  mapper: null,\n  property: null,\n  bounds: [1, -1, 1, -1, 1, -1]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkProp3D.extend(publicAPI, model, initialValues);\n\n  // vtkTimeStamp\n  model.boundsMTime = {};\n  macro.obj(model.boundsMTime);\n\n  // Build VTK API\n  macro.set(publicAPI, model, ['property']);\n  macro.setGet(publicAPI, model, ['mapper']);\n  macro.getArray(publicAPI, model, ['bounds'], 6);\n\n  // Object methods\n  vtkVolume(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkVolume');\n\n// ----------------------------------------------------------------------------\n\nvar vtkVolume$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkVolume$1 as default, extend, newInstance };\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nconst proxyMarker = Symbol(\"Comlink.proxy\");\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\nconst finalizer = Symbol(\"Comlink.finalizer\");\nconst throwMarker = Symbol(\"Comlink.thrown\");\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler = {\n    canHandle: (val) => isObject(val) && val[proxyMarker],\n    serialize(obj) {\n        const { port1, port2 } = new MessageChannel();\n        expose(obj, port1);\n        return [port2, [port2]];\n    },\n    deserialize(port) {\n        port.start();\n        return wrap(port);\n    },\n};\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler = {\n    canHandle: (value) => isObject(value) && throwMarker in value,\n    serialize({ value }) {\n        let serialized;\n        if (value instanceof Error) {\n            serialized = {\n                isError: true,\n                value: {\n                    message: value.message,\n                    name: value.name,\n                    stack: value.stack,\n                },\n            };\n        }\n        else {\n            serialized = { isError: false, value };\n        }\n        return [serialized, []];\n    },\n    deserialize(serialized) {\n        if (serialized.isError) {\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\n        }\n        throw serialized.value;\n    },\n};\n/**\n * Allows customizing the serialization of certain values.\n */\nconst transferHandlers = new Map([\n    [\"proxy\", proxyTransferHandler],\n    [\"throw\", throwTransferHandler],\n]);\nfunction isAllowedOrigin(allowedOrigins, origin) {\n    for (const allowedOrigin of allowedOrigins) {\n        if (origin === allowedOrigin || allowedOrigin === \"*\") {\n            return true;\n        }\n        if (allowedOrigin instanceof RegExp && allowedOrigin.test(origin)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction expose(obj, ep = globalThis, allowedOrigins = [\"*\"]) {\n    ep.addEventListener(\"message\", function callback(ev) {\n        if (!ev || !ev.data) {\n            return;\n        }\n        if (!isAllowedOrigin(allowedOrigins, ev.origin)) {\n            console.warn(`Invalid origin '${ev.origin}' for comlink proxy`);\n            return;\n        }\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n        let returnValue;\n        try {\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n            switch (type) {\n                case \"GET\" /* MessageType.GET */:\n                    {\n                        returnValue = rawValue;\n                    }\n                    break;\n                case \"SET\" /* MessageType.SET */:\n                    {\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n                        returnValue = true;\n                    }\n                    break;\n                case \"APPLY\" /* MessageType.APPLY */:\n                    {\n                        returnValue = rawValue.apply(parent, argumentList);\n                    }\n                    break;\n                case \"CONSTRUCT\" /* MessageType.CONSTRUCT */:\n                    {\n                        const value = new rawValue(...argumentList);\n                        returnValue = proxy(value);\n                    }\n                    break;\n                case \"ENDPOINT\" /* MessageType.ENDPOINT */:\n                    {\n                        const { port1, port2 } = new MessageChannel();\n                        expose(obj, port2);\n                        returnValue = transfer(port1, [port1]);\n                    }\n                    break;\n                case \"RELEASE\" /* MessageType.RELEASE */:\n                    {\n                        returnValue = undefined;\n                    }\n                    break;\n                default:\n                    return;\n            }\n        }\n        catch (value) {\n            returnValue = { value, [throwMarker]: 0 };\n        }\n        Promise.resolve(returnValue)\n            .catch((value) => {\n            return { value, [throwMarker]: 0 };\n        })\n            .then((returnValue) => {\n            const [wireValue, transferables] = toWireValue(returnValue);\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n            if (type === \"RELEASE\" /* MessageType.RELEASE */) {\n                // detach and deactive after sending release response above.\n                ep.removeEventListener(\"message\", callback);\n                closeEndPoint(ep);\n                if (finalizer in obj && typeof obj[finalizer] === \"function\") {\n                    obj[finalizer]();\n                }\n            }\n        })\n            .catch((error) => {\n            // Send Serialization Error To Caller\n            const [wireValue, transferables] = toWireValue({\n                value: new TypeError(\"Unserializable return value\"),\n                [throwMarker]: 0,\n            });\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n        });\n    });\n    if (ep.start) {\n        ep.start();\n    }\n}\nfunction isMessagePort(endpoint) {\n    return endpoint.constructor.name === \"MessagePort\";\n}\nfunction closeEndPoint(endpoint) {\n    if (isMessagePort(endpoint))\n        endpoint.close();\n}\nfunction wrap(ep, target) {\n    const pendingListeners = new Map();\n    ep.addEventListener(\"message\", function handleMessage(ev) {\n        const { data } = ev;\n        if (!data || !data.id) {\n            return;\n        }\n        const resolver = pendingListeners.get(data.id);\n        if (!resolver) {\n            return;\n        }\n        try {\n            resolver(data);\n        }\n        finally {\n            pendingListeners.delete(data.id);\n        }\n    });\n    return createProxy(ep, pendingListeners, [], target);\n}\nfunction throwIfProxyReleased(isReleased) {\n    if (isReleased) {\n        throw new Error(\"Proxy has been released and is not useable\");\n    }\n}\nfunction releaseEndpoint(ep) {\n    return requestResponseMessage(ep, new Map(), {\n        type: \"RELEASE\" /* MessageType.RELEASE */,\n    }).then(() => {\n        closeEndPoint(ep);\n    });\n}\nconst proxyCounter = new WeakMap();\nconst proxyFinalizers = \"FinalizationRegistry\" in globalThis &&\n    new FinalizationRegistry((ep) => {\n        const newCount = (proxyCounter.get(ep) || 0) - 1;\n        proxyCounter.set(ep, newCount);\n        if (newCount === 0) {\n            releaseEndpoint(ep);\n        }\n    });\nfunction registerProxy(proxy, ep) {\n    const newCount = (proxyCounter.get(ep) || 0) + 1;\n    proxyCounter.set(ep, newCount);\n    if (proxyFinalizers) {\n        proxyFinalizers.register(proxy, ep, proxy);\n    }\n}\nfunction unregisterProxy(proxy) {\n    if (proxyFinalizers) {\n        proxyFinalizers.unregister(proxy);\n    }\n}\nfunction createProxy(ep, pendingListeners, path = [], target = function () { }) {\n    let isProxyReleased = false;\n    const proxy = new Proxy(target, {\n        get(_target, prop) {\n            throwIfProxyReleased(isProxyReleased);\n            if (prop === releaseProxy) {\n                return () => {\n                    unregisterProxy(proxy);\n                    releaseEndpoint(ep);\n                    pendingListeners.clear();\n                    isProxyReleased = true;\n                };\n            }\n            if (prop === \"then\") {\n                if (path.length === 0) {\n                    return { then: () => proxy };\n                }\n                const r = requestResponseMessage(ep, pendingListeners, {\n                    type: \"GET\" /* MessageType.GET */,\n                    path: path.map((p) => p.toString()),\n                }).then(fromWireValue);\n                return r.then.bind(r);\n            }\n            return createProxy(ep, pendingListeners, [...path, prop]);\n        },\n        set(_target, prop, rawValue) {\n            throwIfProxyReleased(isProxyReleased);\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n            const [value, transferables] = toWireValue(rawValue);\n            return requestResponseMessage(ep, pendingListeners, {\n                type: \"SET\" /* MessageType.SET */,\n                path: [...path, prop].map((p) => p.toString()),\n                value,\n            }, transferables).then(fromWireValue);\n        },\n        apply(_target, _thisArg, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const last = path[path.length - 1];\n            if (last === createEndpoint) {\n                return requestResponseMessage(ep, pendingListeners, {\n                    type: \"ENDPOINT\" /* MessageType.ENDPOINT */,\n                }).then(fromWireValue);\n            }\n            // We just pretend that `bind()` didn’t happen.\n            if (last === \"bind\") {\n                return createProxy(ep, pendingListeners, path.slice(0, -1));\n            }\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, pendingListeners, {\n                type: \"APPLY\" /* MessageType.APPLY */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n        construct(_target, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, pendingListeners, {\n                type: \"CONSTRUCT\" /* MessageType.CONSTRUCT */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n    });\n    registerProxy(proxy, ep);\n    return proxy;\n}\nfunction myFlat(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\nfunction processArguments(argumentList) {\n    const processed = argumentList.map(toWireValue);\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\nconst transferCache = new WeakMap();\nfunction transfer(obj, transfers) {\n    transferCache.set(obj, transfers);\n    return obj;\n}\nfunction proxy(obj) {\n    return Object.assign(obj, { [proxyMarker]: true });\n}\nfunction windowEndpoint(w, context = globalThis, targetOrigin = \"*\") {\n    return {\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\n        addEventListener: context.addEventListener.bind(context),\n        removeEventListener: context.removeEventListener.bind(context),\n    };\n}\nfunction toWireValue(value) {\n    for (const [name, handler] of transferHandlers) {\n        if (handler.canHandle(value)) {\n            const [serializedValue, transferables] = handler.serialize(value);\n            return [\n                {\n                    type: \"HANDLER\" /* WireValueType.HANDLER */,\n                    name,\n                    value: serializedValue,\n                },\n                transferables,\n            ];\n        }\n    }\n    return [\n        {\n            type: \"RAW\" /* WireValueType.RAW */,\n            value,\n        },\n        transferCache.get(value) || [],\n    ];\n}\nfunction fromWireValue(value) {\n    switch (value.type) {\n        case \"HANDLER\" /* WireValueType.HANDLER */:\n            return transferHandlers.get(value.name).deserialize(value.value);\n        case \"RAW\" /* WireValueType.RAW */:\n            return value.value;\n    }\n}\nfunction requestResponseMessage(ep, pendingListeners, msg, transfers) {\n    return new Promise((resolve) => {\n        const id = generateUUID();\n        pendingListeners.set(id, resolve);\n        if (ep.start) {\n            ep.start();\n        }\n        ep.postMessage(Object.assign({ id }, msg), transfers);\n    });\n}\nfunction generateUUID() {\n    return new Array(4)\n        .fill(0)\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n        .join(\"-\");\n}\n\nexport { createEndpoint, expose, finalizer, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","import ascending from \"./ascending.js\";\nimport descending from \"./descending.js\";\n\nexport default function bisector(f) {\n  let compare1, compare2, delta;\n\n  // If an accessor is specified, promote it to a comparator. In this case we\n  // can test whether the search value is (self-) comparable. We can’t do this\n  // for a comparator (except for specific, known comparators) because we can’t\n  // tell if the comparator is symmetric, and an asymmetric comparator can’t be\n  // used to test whether a single value is comparable.\n  if (f.length !== 2) {\n    compare1 = ascending;\n    compare2 = (d, x) => ascending(f(d), x);\n    delta = (d, x) => f(d) - x;\n  } else {\n    compare1 = f === ascending || f === descending ? f : zero;\n    compare2 = f;\n    delta = f;\n  }\n\n  function left(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function right(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) <= 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function center(a, x, lo = 0, hi = a.length) {\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction zero() {\n  return 0;\n}\n"],"names":["VideoViewport","frameRangeExtractor","constructor","props","super","canvas","element","videoWidth","videoHeight","loop","mute","isPlaying","scrollSpeed","playbackRate","frameRange","fps","videoCamera","panWorld","parallelScale","voiRange","lower","upper","getProperties","this","videoElement","muted","resetCamera","refreshRenderValues","canvasContext","fillRect","width","height","renderFrame","getNumberOfSlices","computedSlices","Math","round","duration","isNaN","numberOfFrames","getFrameOfReferenceUID","src","resize","clientWidth","clientHeight","canvasToWorld","canvasPos","destPos","pan","worldToCanvasRatio","getWorldToCanvasRatio","panOffsetCanvas","subCanvasPos","splice","worldToCanvas","worldPos","getRotation","canvasToIndex","transform","getTransform","invert","transformPoint","map","it","devicePixelRatio","indexToCanvas","indexPos","customRenderViewportToCanvas","transformationMatrix","getMatrix","ctx","resetTransform","drawImage","actor","getActors","render","triggerEvent","STACK_NEW_IMAGE","viewportId","id","viewport","renderingEngineId","time","currentTime","IMAGE_RENDERED","initialRender","frame","getFrameNumber","setFrameNumber","pause","renderWhilstPlaying","requestAnimationFrame","getContext","setAttribute","document","createElement","autoplay","crossOrigin","addEventListeners","useCustomRenderingPipeline","addEventListener","ELEMENT_DISABLED","elementDisabledHandler","removeEventListeners","removeEventListener","remove","getImageDataMetadata","image","imageId","imagePlaneModule","MetadataModules","IMAGE_PLANE","rowCosines","columnCosines","rowCosineVec","colCosineVec","rows","columns","scanAxisNormal","origin","imagePositionPatient","xSpacing","columnPixelSpacing","ySpacing","rowPixelSpacing","xVoxels","yVoxels","hasPixelSpacing","bitsAllocated","numComps","direction","dimensions","spacing","numVoxels","setDataIds","imageIds","options","setVideo","viewReference","sliceIndex","frameNumber","Array","isArray","imageUrlModule","IMAGE_URL","rendered","Error","generalSeries","GENERAL_SERIES","modality","Modality","metadata","cineRate","CINE","setVideoURL","then","setFrameRange","Promise","resolve","window","setTimeout","videoURL","preload","loadedMetadataEventHandler","getImageIds","baseImageId","replace","i","togglePlayPause","play","e","scroll","delta","newTime","seekEventListener","evt","start","paused","end","setTime","timeInSeconds","length","getFrameRange","setProperties","undefined","setPlaybackRate","setScrollSpeed","setVOI","rate","unit","FRAME","SECOND","resetProperties","getScalarData","scalarData","context","getImageData","data","getRange","imageData","getDirection","getDimensions","getSpacing","worldToIndex","point","canvasPoint","pixelCoord","indexToWorld","destPoint","calibration","preScale","scaled","Object","defineProperty","get","enumerable","hasImageURI","imageURI","framesMatch","match","testURI","substring","index","indexOf","setColorTransform","setWindowLevel","windowWidth","windowCenter","setAverageWhite","averageWhite","feFilter","white","maxWhite","max","scaleWhite","c","wlScale","wlDelta","style","filter","setCamera","camera","focalPoint","focalPointCanvas","canvasCenter","panWorldDelta","fillStyle","getCurrentImageId","getReferenceId","specifier","isReferenceViewable","viewRef","referencedImageId","colonIndex","withNavigation","currentIndex","getSliceIndex","range","split","Number","getViewReference","viewRefSpecifier","getCurrentImageIdIndex","getCamera","parallelProjection","position","viewUp","viewPlaneNormal","getPan","offsetWidth","offsetHeight","drawWidth","floor","drawHeight","xOffsetWorld","yOffsetWorld","getCanvasToWorldRatio","canvasToWorldRatio","halfCanvas","halfCanvasWorldCoordinates","scale","translate","updateCameraClippingPlanesAndRange","addImages","stackInputs","actors","forEach","stackInput","getImage","imageActor","createActorMapper","push","uid","actorUID","callback","setActors","async","renderingEngine","viewportIds","getViewport","console","warn","addStackPromises","all","volumeInputs","immediateRender","suppressEvents","addVolumePromises","addVolumes","COLOR_TRANSPARENT","getRank","array","elem","left","right","mid","midElem","makeMappingArray","N","gamma","x","y0","y1","lut","xLinSpace","a","b","n","increment","vector","linspace","pow","xLinSpaceIndexes","inputArray","values","indexes","len","sort","searchSorted","colorPercent","colorDelta","getColormap","colormapData","colormap","name","colors","segmentedData","redLut","red","greenLut","green","blueLut","blue","rgba","createLinearSegmentedColormap","numColors","getId","getColorSchemeName","setColorSchemeName","getNumberOfColors","setNumberOfColors","getColor","isValidIndex","getColorRepeating","setColor","addColor","insertColor","removeColor","clearColors","buildLookupTable","setNumberOfTableValues","setTableValue","createLookupTable","enabledElement","invalidated","stats","lastGetPixelDataTime","lastStoredPixelDataToCanvasImageDataTime","lastPutImageDataTime","lastRenderTime","lastLutGenerateTime","color","renderTimeInMs","invalid","needsRedraw","displayedArea","angle","rotation","rotate","PI","widthScale","heightScale","brhc","tlhc","y","presentationSizeMode","verticalScale","horizontalScale","min","translation","hflip","vflip","pt","shift","viewportOrientation","cosA","cos","sinA","sin","newX","newY","scaleFactor","voi","isPreScaled","pixelReplication","modalityLUT","voiLUT","imageSize","verticalRatio","horizontalRatio","isRotated","resetPan","resetZoom","forceFitToWindow","oldCanvasWidth","oldCanvasHeight","setCanvasSize","getImageSize","imageWidth","imageHeight","wasFitToWindow","getImageFitScale","fitToWindow","relWidthChange","relHeightChange","relChange","sqrt","relativeRescale","useNativeDataType","volumeId","blendMode","imageVolume","loadVolume","vtkOpenGLTexture","volumeMapper","setBlendMode","volumeActor","setMapper","getPointData","getScalars","getNumberOfComponents","getProperty","setIndependentComponents","getRGBTransferFunction","voiModifiedEventDetail","Events","VOI_MODIFIED","triggerVOIModified","REQUEST_TYPE","RequestType","Prefetch","voiLutModule","voiLut","windowLevel","getVOIFromMetadata","imageIdIndex","generalSeriesModule","modalityLutModule","numImages","bytesPerImage","byteLength","voxelsPerImage","bytePerPixel","BYTES_PER_ELEMENT","scalingParameters","rescaleSlope","rescaleIntercept","scalingParametersToUse","suvFactor","suvbw","byteOffset","targetBuffer","type","priority","requestType","enabled","referencedImageIds","loadAndCacheImage","ignoreCache","imageScalarData","getPixelData","buffer","TypedArray","volumeBufferView","set","_getImageScalarDataFromImageVolume","getMinMax","getVOIFromMinMax","scaling","PT","_isCurrentImagePTPrescaled","handlePreScaledVolume","setMappingRange","DEFAULT_VALUES","scalarTexture","extend","publicAPI","model","initialValues","assign","classHierarchy","superDelete","delete","vtkSharedVolumeMapper","newInstance","DEFAULT_SETTINGS","Symbol","RUNTIME_SETTINGS","OBJECT_SETTINGS_MAP","DICTIONARY","Settings","base","dictionary","create","seal","value","key","unset","endsWith","deleteCount","namespace","slice","deleteAll","prototype","hasOwnProperty","call","startsWith","iterate","import","root","isPlainObject","keys","dump","deepSet","assert","subject","getRuntimeSettings","getDefaultSettings","subfield","defaultSettings","settingObj","setting","runtimeSettings","getObjectSettings","from","settings","objectSettingsMap","WeakMap","extendRuntimeSettings","references","last","current","previous","isValidKey","prefix","record","failCount","has","add","field","setAll","WeakSet","getPrototypeOf","separator","subKey","subContext","subContextValue","ONE_GB","_imageCache","Map","_volumeCache","_imageCacheSize","_volumeCacheSize","_maxCacheSize","_maxInstanceSize","setMaxCacheSize","newMaxCacheSize","errorMessage","isCacheable","getBytesAvailable","getMaxCacheSize","getMaxInstanceSize","getCacheSize","_decacheImage","imageLoadObject","cancelFn","decache","_decacheVolume","cachedVolume","volumeLoadObject","volume","cancelLoading","_restoreImagesFromBuffer","purgeCache","imageIterator","done","next","removeImageLoadObject","IMAGE_CACHE_IMAGE_REMOVED","purgeVolumeCache","volumeIterator","removeVolumeLoadObject","VOLUME_CACHE_VOLUME_REMOVED","getVolumeLoadObject","timeStamp","Date","now","getGeometry","geometryId","cachedGeometry","_geometryCache","geometry","cachedImage","getVolume","getVolumes","filterVolumesByReferenceId","referencedVolumeId","incrementImageCacheSize","sizeInBytes","eventDetails","incrementVolumeCacheSize","putGeometryLoadObject","geometryLoadObject","loaded","promise","GEOMETRY_CACHE_GEOMETRY_ADDED","catch","error","decrementImageCacheSize","decrement","decrementVolumeCacheSize","decacheIfNecessaryUntilBytesAvailable","numBytes","volumeImageIds","bytesAvailable","cachedImages","cachedImageIds","im","imageIdsToPurge","includes","putImageLoadObject","sharedCacheKey","toFixed","CACHE_SIZE_EXCEEDED","IMAGE_CACHE_IMAGE_ADDED","getImageLoadObject","isLoaded","getVolumeContainingImageId","volumeIds","imageIdToUse","imageIdToURI","getImageURIIndex","getCachedImageBasedOnImageURI","imageURIToUse","foundImageId","find","putVolumeLoadObject","VOLUME_CACHE_VOLUME_ADDED","imageCacheOffsetMap","size","offset","viewPixelData","pixelData","imageFrame","bufferView","log","RENDERING_DEFAULTS","MINIMUM_SLAB_THICKNESS","MAXIMUM_RAY_DISTANCE","freeze","ViewportStatus","BlendMode","BlendModes","COMPOSITE_BLEND","MAXIMUM_INTENSITY_BLEND","MINIMUM_INTENSITY_BLEND","AVERAGE_INTENSITY_BLEND","GeometryType","DynamicOperatorType","CalibrationTypes","getEnabledElement","viewportUid","renderingEngineUid","dataset","getEnabledElementByIds","hasBeenDestroyed","FrameOfReferenceUID","getEnabledElementByViewportId","renderingEngines","getEnabledElements","enabledElements","getViewports","imageLoaders","unknownImageLoader","loadImageFromImageLoader","scheme","loader","IMAGE_LOADED","errorObject","IMAGE_LOAD_FAILED","loadImageFromCacheOrVolume","cachedVolumeInfo","loadStatus","convertToCornerstoneImage","loadImage","err","loadAndCacheImages","createAndCacheDerivedImage","preventCache","uuidv4","skipCreateBuffer","onCacheAdd","metaData","TypedArrayConstructor","getBufferConfiguration","targetBufferType","derivedImageId","genericMetadataProvider","imagePixelModule","bitsStored","highBit","samplesPerPixel","pixelRepresentation","localImage","createAndCacheLocalImage","createAndCacheDerivedImages","derivedImageIds","allPromises","newOptions","getDerivedImageId","promises","intercept","slope","minPixelValue","maxPixelValue","voiLUTFunction","getCanvas","Uint8Array","Float32Array","Uint16Array","Int16Array","cancelLoadImage","filterRequests","additionalDetails","cancelLoadImages","cancelLoadAll","requestPool","getRequestPool","requests","pop","loadObject","cancel","clearRequestStack","registerImageLoader","imageLoader","registerUnknownImageLoader","oldImageLoader","unregisterAllImageLoaders","createAndCacheDerivedSegmentationImages","createAndCacheDerivedSegmentationImage","createInternalVTKRepresentation","PhotometricInterpretation","numComponents","dataArrayAttrs","numberOfComponents","setDimensions","setSpacing","setDirection","setOrigin","isDynamicVolume","scalarDataArrays","vtkScalarArray","addArray","setActiveScalars","addScalarDataArraysToImageData","getScalarDataArrays","scalarArray","setScalars","addScalarDataToImageData","volumeLoaders","unknownVolumeLoader","loadVolumeFromVolumeLoader","setupCacheOptimizationEventListener","VOLUME_LOADED","VOLUME_LOADED_FAILED","createAndCacheVolume","createAndCacheDerivedVolume","referencedVolume","scalarLength","volumeScalarData","generateVolumeScalarData","derivedImageData","derivedVolume","createLocalVolume","validDataTypes","createAndCacheVolumeFromImages","volumeProps","generateVolumePropsFromImageIds","imagePromises","performCacheOptimizationForVolume","registerVolumeLoader","volumeLoader","getVolumeLoaderSchemes","registerUnknownVolumeLoader","oldVolumeLoader","getUnknownVolumeLoaderSchema","createAndCacheDerivedSegmentationVolume","createLocalSegmentationVolume","useNorm16Texture","rendering","use16BitTexture","isVolumeBuffer","sharedArrayBuffer","createFloat32SharedArray","createUint8SharedArray","createUint16SharedArray","imageLoadPoolManager","grabDelay","setMaxSimultaneousRequests","Interaction","Thumbnail","RequestPoolManager","numRequests","interaction","thumbnail","prefetch","compute","awake","maxNumRequests","getMaxSimultaneousRequests","destroy","timeoutHandle","clearTimeout","addRequest","requestFn","requestDetails","startGrabbing","filterFunction","sendRequests","requestsToSend","syncImageCount","getNextRequest","requestResult","finally","startAgain","interactionPriorities","getSortedPriorityGroups","hasRemainingInteractionRequests","hasRemainingThumbnailRequests","hasRemainingPrefetchRequests","hasRemainingComputeRequests","Compute","enableCacheOptimization","shouldUseSAB","addEventListenerOnce","IMAGE_VOLUME_LOADING_COMPLETED","detail","_updateImageWithScalarDataView","_processImageCacheOffsetMap","compatibleScalarData","sampleImageIdWithImage","sampleImage","samplePixelData","getImageIdIndex","_processVolumeImages","view","_colormaps","registerColormap","Name","getColormapNames","findMatchingColormap","rgbPoints","colormapsVTK","rgbPresetNames","presetName","getPresetByName","colormapsCS3D","colormapName","matchedColormap","concat","RGBPoints","presetRGBPoints","opacity","opacityPoints","getScalarOpacity","getDataPointer","createLinearRGBTransferFunction","cfun","addRGBPoint","spacingInNormalDirection","actorEntry","referenceId","sliceRange","numberOfSlices","imageIndex","getTransferFunctionNodes","transferFunction","getSize","nodeValue1","getNodeValue","setTransferFunctionNodes","nodes","removeAllPoints","node","transformWorldToIndex","el","event","CustomEvent","cancelable","dispatchEvent","workerRegistry","workerPoolManager","registerWorker","workerName","workerFn","maxWorkerInstances","overwrite","autoTerminateOnIdle","idleTimeThreshold","idleCheckIntervalId","clearInterval","workerProperties","instances","loadCounters","lastActiveTime","nativeWorkers","fill","worker","getNextWorkerAPI","workerInstances","instance","minLoadIndex","minLoadValue","currentLoadValue","api","executeTask","methodName","args","callbacks","reject","finalCallbacks","cb","processing","results","setInterval","terminateIdleWorkers","_","terminateWorkerInstance","terminate","workerInstance","BASE","iconContent","iconSize","viewBox","mousePoint","mousePointerGroupString","SEGMENTATION_CURSOR_BOUNDARIES","MINUS_RECT","PLUS_RECT","SCISSOR_ICON","RECTANGLE_ICON","CIRCLE_ICON","CursorSVG","Angle","ArrowAnnotate","Bidirectional","CobbAngle","CircleROI","EllipticalROI","FreehandROI","FreehandROISculptor","Length","Probe","RectangleROI","TextMarker","Crosshairs","Eraser","Magnify","Pan","Rotate","StackScroll","WindowLevelRegion","WindowLevel","Zoom","SegmentationFreeHandEraseInside","SegmentationFreeHandFillInside","SegmentationFreeHandEraseOutside","SegmentationFreeHandFillOutside","SegmentationRectangleEraseInside","RectangleScissor","CircleScissor","getDefinedSVGCursorDescriptor","svgCursorNames","BidirectionalTool","toolProps","defaultToolProps","supportedInteractionTypes","configuration","preventHandleOutsideImage","getTextLines","defaultGetTextLines","isPointNearTool","annotation","canvasCoords","proximity","points","handles","canvasPoint1","canvasPoint2","line","distanceToPoint","toolSelectedCallback","eventDetail","highlighted","viewportIdsToRender","getViewportIdsWithToolToRender","getToolName","editData","movingTextBox","_activateModify","hideElementCursor","preventDefault","handleSelectedCallback","handle","handleIndex","worldPosition","findIndex","p","_endCallback","newAnnotation","hasMoved","activeHandleIndex","_deactivateModify","_deactivateDraw","resetElementCursor","firstLineSegmentLength","longAxis","shortAxisPoint0","shortAxisPoint1","longAxisVector","counterClockWisePerpendicularToLongAxis","currentShortAxisVector","shortAxis","isHandleOutsideImage","removeAnnotation","annotationUID","isDrawing","_dragDrawCallback","currentPoints","world","canvasCoordPoints","shortAxisDistFromCenter","dx","dy","vectorX","vectorY","xMid","yMid","startX","startY","endX","endY","_dragModifyCallback","deltaPoints","worldPosDelta","textBox","_dragModifyHandle","movingHandleIndex","canvasCoordHandlesCurrent","firstLineSegment","secondLineSegment","proposedPoint","proposedCanvasCoord","fixedHandleCanvasCoord","fixedHandleToProposedCoordVec","fixedHandleToOldCoordVec","proposedFirstLineSegment","_movingLongAxisWouldPutItThroughShortAxis","centerOfRotation","_getSignedAngle","firstPointX","firstPointY","secondPointX","secondPointY","rotatedFirstPoint","rotatedFirstPointY","rotatedSecondPoint","rotatedSecondPointY","newFirstPoint","newSecondPoint","translateHandleIndex","canvasCoordsCurrent","longLineSegment","shortLineSegment","longLineSegmentVec","longLineSegmentVecNormalized","proposedToCurrentVec","movementLength","movementAlongLineSegmentLength","newTranslatedPoint","_activateDraw","isInteractingWithTool","MOUSE_UP","MOUSE_DRAG","MOUSE_MOVE","MOUSE_CLICK","TOUCH_TAP","TOUCH_END","TOUCH_DRAG","renderAnnotation","svgDrawingHelper","renderStatus","annotations","getAnnotations","filterInteractableAnnotationsForElement","targetId","getTargetId","getRenderingEngine","styleSpecifier","toolGroupId","toolName","canvasCoordinates","lineWidth","lineDash","shadow","getAnnotationStyle","cachedStats","_throttledCalculateCachedStats","_calculateCachedStats","activeHandleCanvasCoords","isAnnotationVisible","isAnnotationLocked","handleGroupUID","drawHandles","dataId1","dataId2","lineUID","drawLine","secondLineUID","getLinkedTextBoxStyle","visibility","worldBoundingBox","topLeft","topRight","bottomLeft","bottomRight","textLines","canvasTextBoxCoords","getTextBoxCoordsCanvas","textBoxPosition","textBoxUID","boundingBox","drawLinkedTextBox","top","vectorInSecondLineDirection","extendedSecondLineSegment","worldPos1","worldPos2","worldPos3","worldPos4","targetIds","getTargetIdImage","index1","index2","index3","index4","handles1","handles2","scale1","units","units1","scale2","units2","dist1","_calculateLength","dist2","lengthUnit","widthUnit","_isInsideVolume","vector1","vector2","atan2","trailing","addNewAnnotation","getReferencedImageId","label","addAnnotation","pos1","pos2","dz","roundNumber","AnnotationTool","createAnnotation","annotationBaseData","text","baseData","createAnnotationForViewport","createAndAddAnnotation","mouseMoveCallback","filteredAnnotations","annotationsNeedToBeRedrawn","activateHandleIndex","near","_imagePointNearToolOrHandle","nearToolAndNotMarkedActive","notNearToolAndMarkedActive","statsCalculator","getHandleNearImagePoint","isCanvasAnnotation","canvasBoundingBox","annotationCanvasCoordinate","specifications","getStyle","fontFamily","fontSize","background","isSuvScaled","BaseVolumeViewport","cache","scalingModule","property","locked","lineOpacity","fillColor","fillOpacity","textbox","defaultLabelmapConfig","renderOutline","outlineWidthActive","outlineWidthInactive","activeSegmentOutlineWidthDelta","renderFill","renderFillInactive","fillAlpha","fillAlphaInactive","outlineOpacity","outlineOpacityInactive","RectangleROIThresholdTool","RectangleROITool","StackViewport","segmentationId","triggerAnnotationRenderForViewportIds","rectangleUID","drawRect","RectangleROIStartEndThresholdTool","numSlicesToPropagate","computePointsInsideVolume","startIndex","spacingInNormal","endIndex","_getEndSliceIndex","startSlice","endSlice","pointsInVolume","projectionPoints","projectionPointsImageIds","labelmapUID","_computeProjectionPoints","calculatePointsInsideVolume","_computePointsInsideVolume","firstOrLastSlice","lineDashToUse","throttle","_calculateCachedStatsTool","startIJK","endIJK","startWorld","indexToWorldVec3","endWorld","distance","newProjectionPoints","dist","newPoint","RectanglePoints","pointsInsideVolume","projectionPoint","worldPos1Index","worldProjectionPointIndex","worldPos2Index","boundsIJK","pointsInShape","pointInShapeCallback","endPos","halfSpacingInNormalDirection","dir","dot","abs","AnnotationFrameRange","imageIdToFrames","framesToString","String","framesToImageId","newRangeString","eventBase","eventTarget","ANNOTATION_MODIFIED","getClosestImageIdForStackViewport","distanceImagePairs","ImagePositionPatient","calculateDistanceToImage","EPSILON","CONSTANTS","calculateBoundingBox","isWorld","xMin","Infinity","xMax","yMin","yMax","zMin","zMax","is3D","getBoundingBoxAroundShapeIJK","getBoundingBoxAroundShapeWorld","clipBounds","calibratedPixelSpacingMetadataProvider","utilities","Enums","clip","val","low","high","addContourSegmentationAnnotation","parentAnnotationUID","segmentation","segmentIndex","getSegmentation","representationData","CONTOUR","annotationUIDsMap","annotationsUIDsSet","Set","removeContourSegmentationAnnotation","state","polyline","closed","perimeter","point1","point2","firstPoint","lastPoint","isEqual","findHandlePolylineIndex","contour","closestDistance","reduce","closestIndex","testIndex","Labelmap","SegmentationRepresentations","AnnotationToPointData","TOOL_NAMES","convert","metadataProvider","referenceImageId","validateAnnotation","toolClass","ContourSequence","getContourSequence","ReferencedROINumber","ROIDisplayColor","random","register","RectangleROIStartEndThreshold","getContourHolesDataCanvas","worldHoleContours","childAnnotationUIDs","getContourHolesDataWorld","canvasHoleContours","worldHoleContour","numPoints","canvasHoleContour","updateContourPolyline","polylineData","transforms","targetWindingDirection","decimate","epsilon","polylineWorldPoints","currentPolylineWindingDirection","parentAnnotation","currentClosedState","lastToFirstDist","windingDirection","reverse","handlePoints","func","wait","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","useRAF","TypeError","invokeFunc","thisArg","apply","startTimer","pendingFunc","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","timeSinceLastInvoke","timeWaiting","remainingWait","debounced","isInvoking","leadingEdge","Boolean","cancelAnimationFrame","cancelTimer","flush","pending","annotationCanvasPoints","corners","canvasPoints","handlesLeftToRight","_compareX","handlesTopToBottom","_compareY","bottom","_determineCorners","centerY","PIXEL_UNITS","SUPPORTED_REGION_DATA_TYPES","SUPPORTED_LENGTH_VARIANT","SUPPORTED_PROBE_VARIANT","UNIT_MAPPING","SQUARE","getCalibratedLengthUnitsAndScale","areaUnits","calibrationType","sequenceOfUltrasoundRegions","UNCALIBRATED","imageIndex1","imageIndex2","regions","region","regionLocationMinX0","regionLocationMaxX1","regionLocationMinY0","regionLocationMaxY1","regionDataType","physicalUnitsXDirection","physicalUnitsYDirection","physicalDeltaX","physicalDeltaY","ERMF","USER","ERROR","PROJECTION","getCalibratedProbeUnitsAndValue","supportedRegionsMetadata","referencePixelX0","referencePixelY0","yValue","getCalibratedAspect","aspect","getSphereBoundsInfo","circlePoints","centerWorld","radiusWorld","topLeftWorld","bottomRightWorld","viewRight","topLeftIJK","bottomRightIJK","pointsIJK","_computeBoundsIJKWithCamera","getViewportForAnnotation","viewports","intersectAABB","aabb1","aabb2","minX","maxX","minY","maxY","distanceToPointSquared","aabb","aabbWidth","aabbHeight","aabbSize","aabbCenter","translatedPoint","PointsManager","BasicStatsCalculator","sum","count","runMean","m2","create3","statsInit","noPointsCollection","statsCallback","newValue","pointLPS","newArray","idx","delta2","getStatistics","mean","stdDev","squaredDiffSum","named","singleArrayAsNumber","pointInEllipse","ellipse","inverts","precalculated","precalculatePointInEllipse","xRadius","yRadius","zRadius","invXRadiusSq","invYRadiusSq","invZRadiusSq","center","centerL","centerP","centerS","inside","getCanvasEllipseCorners","ellipseCanvasPoints","distanceToPointSquaredInfo","lineStart","lineEnd","closestPoint","distanceSquared","math","dotProduct","sign","NaN","intersectLine","line1Start","line1End","line2Start","line2End","x1","x2","y2","x3","y3","x4","y4","a1","b1","c1","r3","r4","a2","b2","c2","r1","r2","denom","num","ORIENTATION_TOLERANCE","isPointOnLineSegment","orientation","p1","p2","z1","z2","mirror","mirrorPoint","staticPoint","isClosed","numPolylinePoints","distFirstToLastPoints","containsPoint","numIntersections","holes","hole","shouldClose","maxSegmentIndex","intersects","xIntersection","containsPoints","numPoint","getArea","area","j","getSignedArea","refPoint","aX","aY","bX","getWindingDirection","getNormal3","vecArea","aZ","bY","bZ","_getAreaVector","getNormal2","areLineSegmentsIntersecting","q1","q2","line1MinX","line1MinY","line1MaxX","line1MaxY","line2MinX","line2MinY","line2MaxX","line2MaxY","orient","onSegment","q","r","orientationValue","getLineSegmentIntersectionsIndexes","intersections","maxI","PARALLEL_LINES_TOLERANCE","getLinesIntersection","diffQ1P1","diffQ2P2","denominator","line1AABB","line2AABB","numerator2","PolylinePointType","PolylinePointPosition","PolylinePointDirection","ensuresNextPointers","polylinePoints","currentPoint","getSourceAndTargetPointsList","targetPolyline","sourcePolyline","targetPolylinePoints","sourcePolylinePoints","sourceIntersectionsCache","intersectionPointDirection","Exiting","Entering","pointInside","vertexPoint","Vertex","coordinates","Inside","Outside","visited","intersectionsInfo","intersectedLineSegment","sourceLineSegmentId","intersectionCoordinate","coordinate","targetStartPointDistSquared","intersectionInfo","targetEdgePoint","Intersection","Edge","sourceEdgePoint","Unknown","cloned","sourceIntersectionPoints","lineSegmentId","intersectionPoint","lineSegStartDistSquared","getUnvisitedOutsidePoint","mergePolylines","targetNormal","sourceNormal","dotNormals","startPoint","mergedPolyline","subtractPolylines","subtractedPolylines","subtractedPolyline","getFirstLineSegmentIntersectionIndexes","initialI","intersectPolyline","sourceLen","intersectionPointIndexes","DEFAULT_EPSILON","epsilonSquared","partitionQueue","polylinePointFlags","numDecimatedPoints","endPoint","maxDistSquared","maxDistIndex","distSquared","decimatedPolyline","srcIndex","dstIndex","getLineSegmentIntersectionsCoordinates","polylineIndexes","intersection","getClosestLineSegmentIntersection","initialQ2Index","p2Index","q2Index","distances","intersectionPoints","midpoint","minDistance","segment","subPixelResolution","xDir","yDir","volumeSpacing","iVector","jVector","kVector","absViewRightDotI","absViewRightDotJ","absViewRightDotK","absViewUpDotI","absViewUpDotJ","absViewUpDotK","closeContourProximity","newCanvasPoint","commonData","lastWorldPos","newWorldPos","worldPosDiff","xDist","yDist","numPointsToAdd","lastCanvasPoint","canvasDist","canvasDir","distPerPoint","p1p","p1p2","p1p2Mag","projectionVectorMag","p1p2UnitVector","projectionVector","projectTo2D","sharedDimensionIndex","testPoints","every","points2D","firstDim","secondDim","projectedPolyline","isPointInsidePolyline3D","projectedHoles","hole2D","rect","lineSegments","rectToLineSegments","pointInSphere","sphere","radius","radius2","INSIDE","OUTSIDE","clipT","tE","tL","t","box","da","db","pointInShapeFn","iMin","iMax","jMin","jMax","kMin","kMax","getData","rowSpacing","columnSpacing","scanAxisSpacing","worldPosStart","rowStep","columnStep","scanAxisStep","xMultiple","yMultiple","zMultiple","currentPos","k","startPosJ","startPosI","pointIJK","pointToString","decimals","parseFloat","getPoint","idx3","getPolyDataPointIndexes","polyData","linesData","getLines","segmentSize","contours","findStartingPoint","entries","nextPoint","getPolyDataPoints","contoursIndexes","rawPointsData","getPoints","contourIndexes","axisList","isAxisAlignedRectangle","rectangleCornersIJK","rectangleVec1","rectangleVec2","calculateAnglesWithAxes","vec","axes","axis","scrollSlabs","VolumeViewport","useSlabThickness","numScrollSteps","currentStepIndex","sliceRangeInfo","newFocalPoint","newPosition","desiredStepIndex","VolumeScrollEventDetail","currentImageId","EVENTS","VOLUME_SCROLL_OUT_OF_BOUNDS","VOLUME_VIEWPORT_SCROLL","scrollVolume","debounceLoading","ChangeTypesForInterpolation","HandlesUpdated","InterpolationUpdated","InterpolationManager","toolNames","addTool","acceptAutoGenerated","annotationGroupSelector","selector","interpolationUID","autoGenerated","interpolationCompleted","handleAnnotationCompleted","originalToolName","viewportData","sliceData","getSliceData","hasInterpolationUID","filterData","parentKey","interpolationAnnotations","skipUIDs","interpolationAnnotation","handleAnnotationUpdate","changeType","isInterpolationUpdate","handleAnnotationDelete","createImageIdReferenceMap","imageIdsArray","segmentationImageIds","lpad","string","character","join","getter","seed","onFlood","onBoundary","equals","diagonals","startNode","permutations","perms","permutation","parseInt","toString","permute","perm","countNonZeroes","prunedPermutations","stack","flooded","visits","bounds","currentArgs","flood","boundaries","job","getArgs","prevArgs","previousArgs","z","iKey","markAsVisited","member","markAsFlooded","nextArgs","pushAdjacent","markAsBoundary","getHoveredContourSegmentationAnnotation","annotationUIDs","getSegmentAtLabelmapBorder","worldPoint","searchRadius","labelmapData","LABELMAP","segmentationVolume","getScalarValueFromWorld","onEdge","getNeighborIndex","deltaI","deltaJ","neighborCanvas","isSegmentOnEdge","isSegmentOnEdgeCanvas","imageIdReferenceMap","segmentationImageId","segmentationRepresentations","getSegmentationIdRepresentations","segmentationRepresentationUID","segmentationActor","getActor","getMapper","getInputData","indexIJK","voxelManager","createVolumeVoxelManager","getAtIJKPoint","deltaK","neighborIJK","getAtIJK","isSegmentOnEdgeIJK","neighborRange","neighborIndex","getSegmentAtWorldPoint","desiredRepresentation","representationType","getSegmentAtWorldForLabelmap","Contour","contourData","segmentIndices","annotationsSet","getSegmentAtWorldForContour","invalidateBrushCursor","toolGroup","getToolGroup","tool","viewportsInfo","getViewportsInfo","viewportsInfoArray","getViewportIds","getBrushToolInstances","toolInstances","_toolInstances","toolInstance","getDeltaPoints","lastPoints","curr","getMeanPoints","page","_subtractPoints2D","client","point0","getDeltaDistance","_getDistance2D","_getDistance3D","getDeltaDistanceBetweenIPoints","currentDistance","_getMeanDistanceBetweenAllIPoints","lastDistance","copyPointsList","JSON","parse","stringify","copyPoints","prev","getMeanTouchPoints","touch","identifier","radiusX","radiusY","force","rotationAngle","pairedDistance","toolGroupIds","viewportInfo","isViewportPreScaled","targetIdTokens","jumpToWorld","jumpWorld","normal","dotProd","projectedDelta","_applyShift","Active","Passive","Enabled","ToolModes","filterViewportsWithToolEnabled","numViewports","viewportsWithToolEnabled","vp","_toolGroupHasActiveEnabledOrPassiveTool","toolOptions","toolMode","mode","EPS","vpCamera","requireParallelNormals","viewportsWithFrameOfReferenceUID","filterViewportsWithFrameOfReferenceUID","clamp","Right","ColorbarRangeTextPosition","getLuminanceFromRegion","luminance","spIndex","row","column","calculateMinMaxMean","pixelLuminance","globalMin","globalMax","numPixels","spv","extractWindowLevelRegionToolData","getVolumeId","cornerstoneImageMetaData","Rows","Columns","extractImageDataVolume","getCornerstoneImage","extractImageDataStack","_scriptDir","currentScript","ICRPolySegApp","readyPromiseResolve","readyPromiseReject","Module","readBinary","moduleOverrides","arguments_","thisProgram","quit_","status","toThrow","scriptDirectory","substr","lastIndexOf","wasmBinary","out","bind","wasmMemory","noExitRuntime","WebAssembly","abort","EXITSTATUS","HEAP8","HEAPU8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","ABORT","UTF8Decoder","TextDecoder","UTF8ArrayToString","heapOrArray","maxBytesToRead","endIdx","endPtr","decode","subarray","str","u0","u1","u2","fromCharCode","ch","UTF8ToString","ptr","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","u","charCodeAt","lengthBytesUTF8","updateGlobalBufferAndViews","buf","Int8Array","Int32Array","Uint32Array","Float64Array","wasmTable","wasmBinaryFile","path","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","runDependencies","runDependencyWatcher","dependenciesFulfilled","what","RuntimeError","isDataURI","filename","getBinary","file","ASM_CONSTS","$0","updateProgress","ExitStatus","message","callRuntimeCallbacks","ExceptionInfo","excPtr","set_type","get_type","set_destructor","destructor","get_destructor","set_refcount","refcount","set_caught","caught","get_caught","set_rethrown","rethrown","get_rethrown","init","set_adjusted_ptr","add_ref","release_ref","adjustedPtr","get_adjusted_ptr","get_exception_ptr","___cxa_is_pointer_type","adjusted","SYSCALLS","varargs","getStr","structRegistrations","runDestructors","destructors","del","simpleReadValueFromPointer","pointer","awaitingDependencies","registeredTypes","typeDependencies","makeLegalFunctionName","f","createNamedFunction","body","Function","extendError","baseErrorType","errorName","errorClass","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","unregisteredTypes","registered","dt","getShiftFromSize","embind_charCodes","readLatin1String","ret","BindingError","throwBindingError","rawType","registeredInstance","ignoreDuplicateRegistrations","emval_free_list","emval_handle_array","__emval_decref","count_emval_handles","get_first_emval","Emval","floatReadValueFromPointer","new_","argumentList","dummy","obj","exposePublicSymbol","numArguments","overloadTable","proto","humanName","prevFunc","arguments","argCount","ensureOverloadTable","wasmTableMirror","getWasmTableEntry","funcPtr","dynCall","sig","dynCallLegacy","embind__requireFunction","signature","rawFunction","argCache","fp","UnboundTypeError","getTypeName","___getTypeName","rv","_free","integerReadValueFromPointer","signed","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","outPtr","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","lengthBytesUTF32","requireRegisteredType","impl","emval_symbols","getStringOrSymbol","address","symbol","emval_methodCallers","emval_get_global","globalThis","emval_registeredMethods","emval_newers","readEmAsmArgsArray","runEmAsmFunction","code","sigPtr","argbuf","readEmAsmArgs","emscripten_realloc_buffer","grow","ENV","getEnvStrings","strings","env","navigator","languages","printCharBuffers","printChar","stream","__isLeapYear","year","__MONTH_DAYS_LEAP","__MONTH_DAYS_REGULAR","_strftime","s","maxsize","format","tm","tm_zone","date","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_year","tm_wday","tm_yday","tm_isdst","tm_gmtoff","pattern","EXPANSION_RULES_1","rule","RegExp","WEEKDAYS","MONTHS","leadingSomething","digits","leadingNulls","compareByDay","date1","date2","sgn","compare","getFullYear","getMonth","getDate","getFirstWeekStartDate","janFourth","getDay","getWeekBasedYear","thisDate","days","newDate","getTime","leap","currentMonth","daysInCurrentMonth","setDate","setMonth","setFullYear","__addDays","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","EXPANSION_RULES_2","twelveHour","__arraySum","jan1","dec31","off","ahead","stringy","dontAddNull","u8array","numBytesWritten","bytes","writeArrayToMemory","_proc_exit","codes","embind_init_charCodes","calledRun","asmLibraryArg","fd","dirp","dirfd","flags","bufsize","structType","reg","rawConstructor","rawDestructor","fieldRecords","fields","getterReturnType","setterArgumentType","fieldTypes","fieldName","getterContext","setter","setterContext","read","write","o","destructorFunction","primitiveType","minRange","maxRange","trueValue","falseValue","wt","rawArgTypesAddr","rawInvoker","fn","argTypes","firstElement","heap32VectorToArray","types","unboundTypes","seen","visit","throwUnboundTypeError","invokerArgsArray","replacePublicSymbol","classType","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","craftInvokerFunction","fromWireType","bitshift","isUnsignedType","dataTypeIndex","TA","decodeMemoryView","stdStringIsUTF8","payload","decodeStartPtr","currentBytePtr","stringSegment","ArrayBuffer","valueIsOfTypeString","Uint8ClampedArray","_malloc","charCode","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","constructorSignature","destructorSignature","getterSignature","setterSignature","isVoid","returnType","destructorsRef","rd","caller","emval_lookupTypes","retType","signatureName","returnId","params","functionBody","invokerFunction","newer","craftEmvalAllocator","v","arg","dest","copyWithin","requestedSize","multiple","oldSize","maxHeapSize","cutDown","overGrownHeapSize","__environ","environ_buf","bufSize","writeAsciiToMemory","penviron_count","penviron_buf_size","iov","iovcnt","pnum","offset_low","offset_high","whence","newOffset","loc","info","receiveInstance","module","exports","unshift","removeRunDependency","receiveInstantiationResult","instantiateArrayBuffer","receiver","fetch","credentials","response","binary","instantiate","reason","instantiateStreaming","createWasm","callMain","entryFunction","handleException","run","doRun","shouldRunNow","postRun","preRun","runCaller","ready","ICRPolySeg","_instance","initialize","locateFile","Dir","m","algo","requestData","inData","outData","input","output","extractContours","modified","traverseLoop","pd","startLineId","startPtId","loopPoints","lineId","lastPtId","terminated","numInserted","cellPointIds","getCellPoints","ptId","lineCell","getPointCells","loops","clear","inLines","setData","li","getNumberOfCells","outLines","insertNextCell","vtkContourLoopExtraction","polySegConverters","polySeg","polySegInitializing","polySegInitializingPromise","initializePolySeg","progressCallback","convertContourToSurface","polylines","numPointsArray","convertContourRoiToSurface","convertLabelmapToSurface","convertContourToVolumeLabelmap","annotationUIDsInSegmentMap","segmentationVoxelManager","holesPolyline","projectedHole","point2D","setAtIJKPoint","convertContourToStackLabelmap","segmentationsInfo","segmentationVoxelManagers","segmentationInfo","manager","convertSurfaceToVolumeLabelmap","convertSurfaceToLabelmap","polys","convertSurfacesToVolumeLabelmap","segmentsInfo","targetImageData","totalSize","outputVolumesInfo","extent","getExtent","volumeInfo","roundedIndex","getSurfacesAABBs","surfacesInfo","aabbs","getAABB","numDimensions","cutSurfacesIntoPlanes","planesInfo","surfacesAABB","updateCacheCallback","numberOfPlanes","cutter","plane1","setCutFunction","surfacePolyData","planeInfo","planes","polyDataResults","polyDataInfo","aabb3","minZ","maxZ","isPlaneIntersectingAABB","getPolys","setInputData","setNormal","update","getOutputData","cutterOutput","buildLinks","loopExtraction","loopOutput","lines","numberOfCells","progress","vtkErrorMacro","dataDescription","EMPTY","setGetArray","getArray","setExtent","deleted","_len","inExtent","_key","extentArray","changeDetected","some","item","dims","nCells","getNumberOfPoints","ijk","SINGLE_POINT","X_LINE","Y_LINE","Z_LINE","XY_PLANE","YZ_PLANE","XZ_PLANE","XYZ_GRID","coords","getBounds","extentToBounds","getSpatialExtent","ex","computeTransforms","ain","aout","worldToIndexVec3","indexToWorldBounds","bin","bout","worldToIndexBounds","onModified","getCenter","computeHistogram","worldBounds","voxelFunc","yStride","zStride","pixels","maximum","minimum","sumOfSquares","isum","inum","pixel","average","variance","sigma","computeIncrements","increments","incr","computeOffsetIndex","_ref","getOffsetIndexFromWorld","xyz","comp","offsetIndex","getComponent","vtkImageData","vtkImageData$1","clamping","allowDuplicateScalars","setGet","setArray","getType","prevValue","functionType","function","getFirstNonZeroValue","allZero","MAX_VALUE","sharpness","setNodeValue","oldX","sortAndUpdateRange","addPoint","addPointLong","removePoint","setNodes","updateRange","oldRange","retVal","modifiedInvoked","addSegment","getValue","table","getTable","adjustRange","functionRange","estimateMinNumberOfSamples","d","findMinimumXDistance","ceil","currentDist","xStart","xEnd","stride","numNodes","lastValue","tidx","ss","sss","h1","h2","h3","h4","vtkPiecewiseFunction","vtkPiecewiseFunction$1","PLANE_TOLERANCE","COINCIDE","DISJOINT","distanceToPlane","projectPoint","xproj","xo","projectVector","vproj","n2","generalizedProjectPoint","intersectWithLine","outObj","betweenPoints","p21","p1Origin","den","fabsden","fabstolerance","intersectWithPlane","plane1Origin","plane1Normal","plane2Origin","plane2Normal","l0","l1","cross$1","absCross","maxc","iP","d1","d2","STATIC","evaluate","evaluateFunction","evaluateGradient","planeOrigin","planeNormal","vtkPlane","vtkPlane$1","vtkDebugMacro","vtkImageMarchingSquares","getContourValues","contourValues","setContourValues","cValues","ids","pixelScalars","pixelPts","edgeLocator","getPixelScalars","scalars","kernelX","kernelY","ii","getPixelPoints","produceLines","cVal","slicingMode","CASE_MASK","pId","pixelLines","getCase","eid","edgeVerts","getEdge","mergePoints","isInsertedEdge","x0","insertEdge","getOrigin","getKernels","cv","polydata","timeEnd","directionOfProjection","useHorizontalViewAngle","viewAngle","clippingRange","useOffAxisProjection","screenBottomLeft","screenBottomRight","screenTopRight","freezeFocalPoint","projectionMatrix","viewMatrix","cameraLightTransform","physicalTranslation","physicalScale","physicalViewUp","physicalViewNorth","dopbasis","upbasis","tmpMatrix","tmpMatrix2","tmpvec1","tmpvec2","tmpvec3","rotateMatrix","trans","computeViewPlaneNormal","orthogonalizeViewUp","vt","getViewMatrix","setPosition","computeDistance","setFocalPoint","setDistance","dolly","amount","roll","eye","at","up","viewUpVec4","viewDir","azimuth","yaw","elevation","pitch","zoom","factor","applyTransform","transformMat4","vuOld","posNew","fpNew","vuNew","setViewUp","getThickness","setThickness","thickness","setClippingRange","setThicknessFromFocalPoint","setRoll","getRoll","setObliqueAngles","alpha","beta","getOrientation","getOrientationWXYZ","getFrustumPlanes","getCameraLightTransformMatrix","matrix","computeCameraLightTransform","deepCopy","sourceCamera","physicalOrientationToWorldDirection","ori","oriq","coriq","qdir","getPhysicalToWorldMatrix","getWorldToPhysicalMatrix","physVRight","computeViewParametersFromViewMatrix","vmat","oldDist","setDirectionOfProjection","computeViewParametersFromPhysicalMatrix","mat","setViewMatrix","setProjectionMatrix","getProjectionMatrix","nearz","farz","cWidth","cRange","xmin","xmax","ymin","ymax","tmp","tan","znear","zfar","getCompositeProjectionMatrix","vMat","pMat","setDeviceAngles","screen","rotmat","dop","vup","setOrientationWXYZ","degrees","quatMat","newdop","newvup","computeClippingRange","vn","vtkCamera","vtkCamera$1","ColorSpace","Scale","ScalarMappingTarget","vtkWarningMacro","vtkColorTransferFunctionLabToMsh","lab","msh","L","M","acos","h","vtkColorTransferFunctionAdjustHue","unsatM","hueSpin","vtkColorTransferFunctionInterpolateDiverging","rgb1","rgb2","lab1","lab2","msh1","msh2","localS","adiff","vtkColorTransferFunctionAngleDiff","Mmid","mshTmp","labTmp","vtkColorTransferFunctionMshToLab","colorSpace","RGB","hSVWrap","LINEAR","nanColor","belowRangeColor","aboveRangeColor","useAboveRangeColor","useBelowRangeColor","tableSize","buildTime","discretize","numberOfValues","g","addRGBPointLong","addHSVPoint","addHSVPointLong","rgb","hsv","before","after","mappingRange","movePoint","addRGBSegment","g1","g2","addHSVSegment","s1","v1","s2","v2","hsv1","hsv2","mapValue","indexedLookup","getAnnotatedValueIndexInternal","getNanColorByReference","nodeVal","getRedValue","getGreenValue","getBlueValue","xStart_","xEnd_","lastR","lastG","lastB","tmpVec","usingLogScale","LOG10","logStart","logEnd","logX","log10","deltaRange","xn","discretizeIndex","getUseAboveRangeColor","getUseBelowRangeColor","HSV","hsvTmp","LAB","DIVERGING","getUint8Table","withAlpha","getMTime","tableWithAlpha","nbChannels","tmpTable","buildFunctionFromArray","getNumberOfTuples","buildFunctionFromTable","inc","getNumberOfAvailableColors","getIndexedColor","nodeValue","fillFromDataPointer","nb","originalRange","mapScalarsThroughTable","outFormat","inputOffset","mapDataIndexed","mapData","getAlpha","inIncr","outputV","inputV","RGBA","LUMINANCE","LUMINANCE_ALPHA","applyColorMap","colorMap","oldColorSpace","toUpperCase","isModified","oldNanColor","NanColor","oldNodes","callModified","vtkColorTransferFunction","vtkColorTransferFunction$1","presetMap","vtkColorMaps","addPreset","preset","removePresetByName","staticOffsetAPI","otherStaticMethods","SlicingMode","NONE","closestIJKAxis","ijkMode","flip","renderToRectangle","sliceAtFocalPoint","preferSizeOverAccuracy","implementCoincidentTopologyMethods","computeClosestIJKAxis","xyzMode","X","Y","Z","getCurrentImage","newMatrix","getSliceAtPosition","pos","pos3","isFinite","bds","getClosestIJKAxis","I","J","K","setSliceFromCamera","cam","getFocalPoint","setSlice","setXSlice","setSlicingMode","setYSlice","setZSlice","setISlice","setJSlice","setKSlice","getSlicingModeNormal","mat3","useCustomExtents","customDisplayExtent","nSlice","getBoundsForSlice","halfThickness","intersectWithLineForPointPicking","intersectWithLineForCellPicking","vtkImageMapper","vtkImageMapper$1","mapper","INIT_BOUNDS","boundsMTime","getImages","getIsOpaque","forceOpaque","forceTranslucent","isOpaque","getOpacity","hasTranslucentPolygonalGeometry","makeProperty","mapperBounds","computeMatrix","tmp4","getMinXBound","getMaxXBound","getMinYBound","getMaxYBound","getMinZBound","getMaxZBound","mt","mtime","getRedrawMTime","getInput","getInputAlgorithm","getSupportsSelection","vtkImageSlice","vtkImageSlice$1","bbox","vtkVolume","vtkVolume$1","proxyMarker","createEndpoint","releaseProxy","finalizer","throwMarker","isObject","transferHandlers","canHandle","serialize","port1","port2","MessageChannel","expose","deserialize","port","wrap","serialized","isError","ep","allowedOrigins","ev","allowedOrigin","test","isAllowedOrigin","fromWireValue","returnValue","parent","prop","rawValue","proxy","transfers","transferCache","transfer","wireValue","transferables","toWireValue","postMessage","closeEndPoint","endpoint","isMessagePort","close","target","pendingListeners","resolver","createProxy","throwIfProxyReleased","isReleased","releaseEndpoint","requestResponseMessage","proxyCounter","proxyFinalizers","FinalizationRegistry","newCount","isProxyReleased","Proxy","_target","unregister","unregisterProxy","_thisArg","rawArgumentList","processArguments","construct","registerProxy","processed","arr","handler","serializedValue","msg","MAX_SAFE_INTEGER","bisector","compare1","compare2","lo","hi","zero"],"sourceRoot":""}