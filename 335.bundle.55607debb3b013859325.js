"use strict";(globalThis.webpackChunk=globalThis.webpackChunk||[]).push([[335,757],{97936:(e,t,n)=>{n.r(t),n.d(t,{default:()=>X});const o=JSON.parse('{"u2":"@ohif/extension-cornerstone-dicom-seg"}').u2,a=`${o}.sopClassHandlerModule.dicom-seg`;var i=n(43001),r=n(84793),s=n(62709),c=n(93725),l=n(91202),d=n(67540);const g=["1.2.840.10008.5.1.4.1.1.66.4"],m={};function p(e,t,n){const o=e[0],{StudyInstanceUID:i,SeriesInstanceUID:p,SOPInstanceUID:S,SeriesDescription:u,SeriesNumber:v,SeriesDate:f,SOPClassUID:y,wadoRoot:I,wadoUri:w,wadoUriRoot:b}=o,h={Modality:"SEG",loading:!1,isReconstructable:!0,displaySetInstanceUID:r.utils.guid(),SeriesDescription:u,SeriesNumber:v,SeriesDate:f,SOPInstanceUID:S,SeriesInstanceUID:p,StudyInstanceUID:i,SOPClassHandlerId:a,SOPClassUID:y,referencedImages:null,referencedSeriesInstanceUID:null,referencedDisplaySetInstanceUID:null,isDerivedDisplaySet:!0,isLoaded:!1,isHydrated:!1,segments:{},sopClassUids:g,instance:o,instances:[o],wadoRoot:I,wadoUriRoot:b,wadoUri:w,isOverlayDisplaySet:!0},E=o.ReferencedSeriesSequence;if(!E)return void console.error("ReferencedSeriesSequence is missing for the SEG");const D=E[0]||E;return h.referencedImages=o.ReferencedSeriesSequence.ReferencedInstanceSequence,h.referencedSeriesInstanceUID=D.SeriesInstanceUID,h.getReferenceDisplaySet=()=>{const{displaySetService:e}=t.services,n=e.getDisplaySetsForSeries(h.referencedSeriesInstanceUID);if(!n||0===n.length)throw new Error("Referenced DisplaySet is missing for the SEG");const o=n[0];h.referencedDisplaySetInstanceUID=o.displaySetInstanceUID,h.referencedVolumeURI=o.displaySetInstanceUID;const a=`cornerstoneStreamingImageVolume:${h.referencedVolumeURI}`;return h.referencedVolumeId=a,o},h.load=async({headers:e})=>await function(e,t,n,o){const{SOPInstanceUID:a}=e,{segmentationService:i}=t.services;if((e.loading||e.isLoaded)&&m[a]&&function(e,t){return t.getSegmentation(e.displaySetInstanceUID)}(e,i))return m[a];return e.loading=!0,m[a]=new Promise((async(a,r)=>{e.segments&&0!==Object.keys(e.segments).length||await async function({extensionManager:e,servicesManager:t,segDisplaySet:n,headers:o}){const a=e.getModuleEntry("@ohif/extension-cornerstone.utilityModule.common"),{segmentationService:i,uiNotificationService:r}=t.services,{dicomLoaderService:g}=a.exports,m=await g.findDicomDataPromise(n,null,o),p=s.cache.getVolume(n.referencedVolumeId);if(!p)throw new Error("Referenced Volume is missing for the SEG, and stack viewport SEG is not supported yet");const{imageIds:S}=p,u=.001,v=!0;s.eventTarget.addEventListener(l.Y.Events.SEGMENTATION_LOAD_PROGRESS,(e=>{const{percentComplete:t}=e.detail;i._broadcastEvent(i.EVENTS.SEGMENT_LOADING_COMPLETE,{percentComplete:t})}));const f=await l.adaptersSEG.Cornerstone3D.Segmentation.generateToolState(S,m,s.metaData,{skipOverlapping:v,tolerance:u,eventTarget:s.eventTarget,triggerEvent:s.triggerEvent});let y=!0;f.segMetadata.data.forEach(((e,t)=>{var n;t>0&&(e.rgba=e.RecommendedDisplayCIELabValue,e.rgba?e.rgba=(n=e.rgba,d.default.data.Colors.dicomlab2RGB(n).map((e=>Math.round(255*e)))):(y=!1,e.rgba=c.CONSTANTS.COLOR_LUT[t%c.CONSTANTS.COLOR_LUT.length]))})),f.overlappingSegments&&r.show({title:"Overlapping Segments",message:"Unsupported overlapping segments detected, segmentation rendering results may be incorrect.",type:"warning"});y||r.show({title:"DICOM SEG import",message:"RecommendedDisplayCIELabValue not found for one or more segments. The default color was used instead.",type:"warning",duration:5e3});Object.assign(n,f)}({extensionManager:n,servicesManager:t,segDisplaySet:e,headers:o});const g=!0;i.createSegmentationForSEGDisplaySet(e,null,g).then((()=>{e.loading=!1,a()})).catch((t=>{e.loading=!1,r(t)}))})),m[a]}(h,t,n,e),[h]}const S=function({servicesManager:e,extensionManager:t}){return[{name:"dicom-seg",sopClassUids:g,getDisplaySetsFromSeries:n=>p(n,e,t)}]},u={id:"@ohif/seg",name:"Segmentations",protocolMatchingRules:[],toolGroupIds:["default"],numberOfPriorsReferenced:0,defaultViewport:{viewportOptions:{viewportType:"stack",toolGroupId:"default",allowUnmatchedView:!0},displaySets:[{id:"segDisplaySetId",matchedDisplaySetsIndex:-1}]},displaySetSelectors:{segDisplaySetId:{seriesMatchingRules:[{attribute:"Modality",constraint:{equals:"SEG"}}]}},stages:[{name:"Segmentations",viewportStructure:{layoutType:"grid",properties:{rows:1,columns:1}},viewports:[{viewportOptions:{allowUnmatchedView:!0},displaySets:[{id:"segDisplaySetId"}]}]}]};const v=function(){return[{name:u.id,protocol:u}]};var f=n(52490),y=n(49023),I=n(68968),w=n(3827),b=n.n(w);let h=function(e){return e.Expanded="expanded",e.Dropdown="dropdown",e}({});const E=function(e,t,n){const o="enter-segment-label",a=({action:t,value:a})=>{switch(t.id){case"save":n(a.label,t.id);break;case"cancel":n("",t.id)}e.dismiss({id:o})};e&&e.create({id:o,centralize:!0,isDraggable:!1,showOverlay:!0,content:y.Vq,contentProps:{title:"Segment",value:{label:t},noCloseButton:!0,onClose:()=>e.dismiss({id:o}),actions:[{id:"cancel",text:"Cancel",type:y.LZ.dt.secondary},{id:"save",text:"Confirm",type:y.LZ.dt.primary}],onSubmit:a,body:({value:e,setValue:t})=>i.createElement(y.II,{label:"Enter the segment label",labelClassName:"text-white text-[14px] leading-[1.2]",autoFocus:!0,className:"border-primary-main bg-black",type:"text",value:e.label,onChange:e=>{e.persist(),t((t=>({...t,label:e.target.value})))},onKeyPress:t=>{"Enter"===t.key&&a({value:e,action:{id:"save"}})}})}})};var D=n(22831);const T=function(e,t,n){const o="pick-color",a=({action:t,value:a})=>{switch(t.id){case"save":n(a.rgbaColor,t.id);break;case"cancel":n("",t.id)}e.dismiss({id:o})};e&&e.create({id:o,centralize:!0,isDraggable:!1,showOverlay:!0,content:y.Vq,contentProps:{title:"Segment Color",value:{rgbaColor:t},noCloseButton:!0,onClose:()=>e.dismiss({id:o}),actions:[{id:"cancel",text:"Cancel",type:"primary"},{id:"save",text:"Save",type:"secondary"}],onSubmit:a,body:({value:e,setValue:t})=>i.createElement(D.AI,{color:e.rgbaColor,onChange:e=>{t({rgbaColor:e.rgb})},presetColors:[],width:300})}})};var C=n(74208),M=n(17816),V=n.n(M),R=n(68541);const x=function({segmentationService:e,uiNotificationService:t,hangingProtocolService:n,toolGroupService:o,viewportGridService:a}){return i.createElement("div",{className:"flex flex-col min-h-0 font-inter font-[300]"},i.createElement("div",{className:"bg-primary-dark pt-[6px] pb-[6px]"},i.createElement("p",{className:"text-[#d8d8d8] text-[12px] font-[300] pl-[9px] pr-[9px] pb-[6px] flex"},"Segmentation"),i.createElement("div",{className:"text-[#d8d8d8] text-[12px] font-[300] justify-evenly flex"},i.createElement(y.zx,{size:y.LZ.dp.small,onClick:()=>{if(!a.getDisplaySetsUIDsForViewport("default")[0])return void t.show({title:"Import Segmentation",message:"Default viewport not found",type:"info",duration:3e3});const n=document.createElement("input");n.type="file",n.webkitdirectory=!0,n.onchange=async i=>{const r=Array.from(n.files),s=r.filter((e=>"application/json"===e.type))[0],l=r.filter((e=>"application/octet-stream"===e.type))[0];s&&l?((n=>{const i=a.getDisplaySetsUIDsForViewport("default")[0];if(!i)return void t.show({title:"Import Segmentation",message:"Default viewport not found",type:"info",duration:3e3});const r=o.getToolGroupForViewport("default").id,s=c.Enums.SegmentationRepresentations.Labelmap,l=new FileReader;l.onload=async function(t){try{if("string"!=typeof t.target.result)return void console.error("ERROR::JSON_READING::CORRUPTED_CONTENT");const o={label:n.name.split("_").pop().replace(/\.[^/.]+$/,"")},a=await e.createSegmentationForDisplaySet(i,o);await e.addSegmentationRepresentationToToolGroup(r,a,!0,s),e.setActiveSegmentationForToolGroup(a,r);const c=JSON.parse(t.target.result);for(const t of c){if(!t)continue;const{segmentIndex:n}=t;e.addSegment(a,{segmentIndex:n,toolGroupId:r,properties:t,override:!0})}}catch(e){console.error("ERROR::JSON_READING",e)}},l.readAsText(n)})(s),(async n=>{const o=new FileReader;o.onload=async function(o){const a=new Uint8Array(o.target.result),i=n.name.split("_").pop().replace(/\.[^/.]+$/,""),r=e.getSegmentations().filter((e=>e.label===i))[0];if(!r)return void t.show({title:"Import Segmentation",message:`Segmentation with name ${i} does not match segmentation of configuration file`,type:"info",duration:3e3});const{scalarData:s}=e.getLabelmapVolume(r.id);for(let e=0;e<s.length;e++)s[e]=a[e];c.segmentation.triggerSegmentationEvents.triggerSegmentationDataModified(r.id)},o.readAsArrayBuffer(n)})(l)):t.show({title:"Import Segmentation",message:"Missing configuration or binary file",type:"info",duration:3e3})},n.click()}},"Import"),i.createElement(y.zx,{size:y.LZ.dp.small,onClick:async()=>{let o=e.getActiveSegmentation();if(!o)return void t.show({title:"Export Active Segmentation",message:"No active segmentation detected",type:"info",duration:3e3});const a=e.getDentascanSegmentations();a?.includes(o)&&(o=e.getHiddenSegmentation(o.id));const{segments:i,label:s}=o,{dimensions:c,scalarData:l}=e.getLabelmapVolume(o.id),d=c[0]*c[1],g=c[2],m=new(V());for(let e=0;e<g;e++){const t=new Uint8ClampedArray(4*d).fill(0);for(let n=0;n<d;n++){const o=l[e*d+n];if(0!==o){const{color:e}=i[o];t[4*n]=e[0],t[4*n+1]=e[1],t[4*n+2]=e[2]}t[4*n+3]=255}const n=document.createElement("canvas"),o=n.getContext("2d");n.width=c[0],n.height=c[1];const a=new ImageData(t,c[0],c[1],{colorSpace:"srgb"});o.putImageData(a,0,0),o.putImageData(a,0,0);const r=await new Promise(((e,t)=>{n.toBlob((n=>n?e(n):t(new Error("Conversion to blob failed"))),"image/png")}));m.file(`layer_${e}.png`,r)}const p=new Blob([new Uint8ClampedArray(l)],{type:"application/octet-stream"});m.file(`labelmapVolume_${s}.bin`,p);const S=new Blob([JSON.stringify(i,null,"\t")],{type:"text/plain;charset=utf-8"});m.file(`segmentsInfo_${s}.json`,S);const{activeStudyUID:u}=n.getState(),v=r.DicomMetadataStore.getStudy(u),{StudyDate:f,PatientName:y}=v?.series[0]?.instances[0],I=(0,R.kF)(y[0]),w=await m.generateAsync({type:"blob"});(0,C.saveAs)(w,`${f??""}_${I??""}_${s}.zip`)}},"Export"))))};var O=n(69190);const A={[h.Expanded]:y.s_,[h.Dropdown]:y.cX},N=(e=>{let t=e%2147483647;return()=>(t=16807*t%2147483647,t/2147483647)})(42);function U({servicesManager:e,commandsManager:t,extensionManager:n,configuration:o}){const[{activeViewportId:a,viewports:r}]=(0,y.O_)(),{segmentationService:s,viewportGridService:c,uiDialogService:l,displaySetService:d,cornerstoneViewportService:g,toolbarService:m,uiNotificationService:p,panoramicService:S,hangingProtocolService:u,toolGroupService:v}=e.services,{t:f}=(0,O.$G)("PanelSegmentation"),[w,b]=(0,i.useState)(""),[h,D]=(0,i.useState)(s.getConfiguration()),C=e=>{const{volume:t}=g.getViewportInfo(e).getViewportData().data[0];return t?.metadata.SeriesInstanceUID.includes("dentascan")||!1},M=C(c.getActiveViewportId()),[V,R]=(0,i.useState)((()=>M?s.getDentascanSegmentations():s.getAxialSegmentations())),[U,G]=(0,i.useState)((()=>M?s.getAxialSegmentations():s.getDentascanSegmentations())),[F,L]=(0,i.useState)({});(0,i.useCallback)((e=>{L((t=>({...t,[e]:!t[e]})))}),[L]);(0,i.useEffect)((()=>{const e=V[V.length-1]?.id;e&&L((t=>({...t,[e]:!1})))}),[V,L]),(0,i.useEffect)((()=>{const e=s.EVENTS.SEGMENTATION_ADDED,t=s.EVENTS.SEGMENTATION_UPDATED,n=s.EVENTS.SEGMENTATION_REMOVED,o=s.EVENTS.SEGMENTATION_CONFIGURATION_CHANGED,a=[];return[e,t,n].forEach((e=>{const{unsubscribe:t}=s.subscribe(e,(()=>{const e=C(c.getActiveViewportId());R(e?s.getDentascanSegmentations():s.getAxialSegmentations()),G(e?s.getAxialSegmentations():s.getDentascanSegmentations())}));a.push(t)})),[o].forEach((e=>{const{unsubscribe:t}=s.subscribe(e,(()=>{D(s.getConfiguration())}));a.push(t)})),()=>{a.forEach((e=>{e()}))}}),[]),(0,i.useEffect)((()=>{const e=e=>{const t=c.getDisplaySetsUIDsForViewport(e||c.getActiveViewportId());if(!t)return;const n=t?.some((e=>{const t=d.getDisplaySetByUID(e);return t?.isReconstructable}))||!1;b(n?"":"ohif-disabled")};e();const t=c.EVENTS.ACTIVE_VIEWPORT_ID_CHANGED,n=c.EVENTS.VIEWPORTS_READY,o=[];[n,t].forEach((t=>{const{unsubscribe:n}=c.subscribe(t,(({viewportId:t})=>{e(t)}));o.push(n)}));const a=g.EVENTS.VIEWPORT_DATA_CHANGED,i=[];return[a].forEach((t=>{const{unsubscribe:n}=g.subscribe(t,(()=>{e()}));i.push(n)})),()=>{o.forEach((e=>e())),i.forEach((e=>e()))}}),[]);const k=(0,i.useCallback)(((e,t)=>{s.setConfiguration({[e]:t})}),[s]),P=A[o?.segmentationPanelMode]||y.cX,_=o?.addSegment,B=o?.onSegmentationAdd&&"function"==typeof o?.onSegmentationAdd?o?.onSegmentationAdd:()=>{if("panoramicViewport"!==u.getActiveProtocol().protocol.id)t.runCommand("createEmptySegmentationForViewport",{viewportId:c.getActiveViewportId()});else{const e=g.getViewportIds();C(c.getActiveViewportId())?(t.runCommand("createEmptySegmentationForViewport",{viewportId:"default"}),t.runCommand("createEmptySegmentationForViewport",{viewportId:e[2]})):(t.runCommand("createEmptySegmentationForViewport",{viewportId:e[2]}),t.runCommand("createEmptySegmentationForViewport",{viewportId:"default"}))}};return i.createElement("div",{className:"flex flex-col flex-auto min-h-0F mt-1"},i.createElement(P,{title:f("Segmentations"),segmentations:V,hiddenSegmentations:U,segmentationConfig:{initialConfig:h},disableEditing:o.disableEditing,showAddSegment:_,showDeleteSegment:!0,onSegmentationAdd:B,onSegmentationEdit:e=>{const t=s.getSegmentation(e),{label:n}=t;E(l,n,((t,n)=>{if(""===t)return;s.addOrUpdateSegmentation({id:e,label:t},!1,!0);const o=s.getHiddenSegmentation(e);o&&s.addOrUpdateSegmentation({id:o.id,label:t},!1,!0)}))},onSegmentationClick:e=>{for(const t of s.getToolGroupIdsWithSegmentation(e))s.setActiveSegmentationForToolGroup(e,t)},onSegmentationDelete:e=>{const t=s.getHiddenSegmentation(e);t&&s.remove(t.id),s.remove(e)},onSegmentationDownload:e=>{t.runCommand("downloadSegmentation",{segmentationId:e})},onSegmentationDownloadRTSS:e=>{t.runCommand("downloadRTSS",{segmentationId:e})},storeSegmentation:async o=>{const a=n.getActiveDataSource(),i=await(0,I.createReportAsync)({servicesManager:e,getReport:()=>t.runCommand("storeSegmentation",{segmentationId:o,dataSource:a[0]}),reportType:"Segmentation"});i&&(s.remove(o),c.setDisplaySetsForViewport({viewportId:c.getActiveViewportId(),displaySetInstanceUIDs:i}))},onSegmentClick:(e,t)=>{s.setActiveSegment(e,t);for(const n of s.getToolGroupIdsWithSegmentation(e))s.setActiveSegmentationForToolGroup(e,n),s.jumpToSegmentCenter(e,t,n);const n=s.getHiddenSegmentation(e);if(n){s.setActiveSegment(n.id,t);for(const e of s.getToolGroupIdsWithSegmentation(n.id))s.jumpToSegmentCenter(n.id,t,e)}},onSegmentAdd:e=>{const t=s.getSegmentation(e).segments.length,n={segmentIndex:t,properties:{label:`Segment ${t}`,color:[Math.floor(256*N()),Math.floor(256*N()),Math.floor(256*N())],opacity:255,visibility:!0,isLocked:!1,active:!0}};s.addSegment(e,n);const o=s.getHiddenSegmentation(e);o&&s.addSegment(o.id,n)},onSegmentDelete:(e,t)=>{s.removeSegment(e,t);const n=s.getHiddenSegmentation(e);n&&s.removeSegment(n.id,t)},onSegmentEdit:(e,t)=>{const n=s.getSegmentation(e).segments[t],{label:o}=n;E(l,o,((n,o)=>{if(""===n)return;s.setSegmentLabel(e,t,n);const a=s.getHiddenSegmentation(e);a&&s.setSegmentLabel(a.id,t,n)}))},onToggleSegmentationVisibility:e=>{s.toggleSegmentationVisibility(e);const t=s.getSegmentation(e),n=t.isVisible,o=t.segments;s.getToolGroupIdsWithSegmentation(e).forEach((t=>{o.forEach(((o,a)=>{s.setSegmentVisibility(e,a,n,t)}))}))},onToggleSegmentVisibility:(e,t)=>{const n=!s.getSegmentation(e).segments[t].isVisible;for(const o of s.getToolGroupIdsWithSegmentation(e))s.setSegmentVisibility(e,t,n,o);const o=s.getHiddenSegmentation(e);if(o)for(const e of s.getToolGroupIdsWithSegmentation(o.id))s.setSegmentVisibility(o.id,t,n,e)},onToggleSegmentLock:(e,t)=>{s.toggleSegmentLocked(e,t);const n=s.getHiddenSegmentation(e);n&&s.toggleSegmentLocked(n.id,t)},onSegmentColorClick:(e,t)=>{const n=s.getSegmentation(e).segments[t],{color:o,opacity:a}=n,i={r:o[0],g:o[1],b:o[2],a:a/255};T(l,i,((n,o)=>{if("cancel"===o)return;s.setSegmentRGBAColor(e,t,[n.r,n.g,n.b,255*n.a]);const a=s.getHiddenSegmentation(e);a&&s.setSegmentRGBAColor(a.id,t,[n.r,n.g,n.b,255*n.a])}))},setFillAlpha:e=>k("fillAlpha",e),setFillAlphaInactive:e=>k("fillAlphaInactive",e),setOutlineWidthActive:e=>k("outlineWidthActive",e),setOutlineOpacityActive:e=>k("outlineOpacity",e),setRenderFill:e=>k("renderFill",e),setRenderInactiveSegmentations:e=>k("renderInactiveSegmentations",e),setRenderOutline:e=>k("renderOutline",e),addSegmentationClassName:w}),i.createElement("div",{className:"h-[6px] bg-black "}),i.createElement(x,{segmentationService:s,uiNotificationService:p,hangingProtocolService:u,toolGroupService:v,viewportGridService:c}))}U.propTypes={commandsManager:b().shape({runCommand:b().func.isRequired}),servicesManager:b().shape({services:b().shape({segmentationService:b().shape({getSegmentation:b().func.isRequired,getSegmentations:b().func.isRequired,toggleSegmentationVisibility:b().func.isRequired,subscribe:b().func.isRequired,EVENTS:b().object.isRequired}).isRequired}).isRequired}).isRequired};const G=({commandsManager:e,servicesManager:t,extensionManager:n,configuration:o,title:a})=>{const{customizationService:r}=t.services;return[{name:"panelSegmentation",iconName:"tab-segmentation",iconLabel:"Segmentation",label:"Segmentation",component:o=>{const[a]=(0,f.M)();return i.createElement(U,{commandsManager:e,servicesManager:t,extensionManager:n,configuration:{...o,disableEditing:a.disableEditing,...r.get("segmentation.panel")}})}},{name:"panelSegmentationWithTools",iconName:"tab-segmentation",iconLabel:"Segmentation",label:"Segmentation",component:o=>{const[a]=(0,f.M)();return i.createElement(i.Fragment,null,i.createElement(y.vb,{commandsManager:e,servicesManager:t,extensionManager:n,buttonSectionId:"segmentationToolbox",title:"Segmentation Tools",configuration:{...o}}),i.createElement(U,{commandsManager:e,servicesManager:t,extensionManager:n,configuration:{...o,disableEditing:a.disableEditing,...r.get("segmentation.panel")}}))}}]};var F=n(60318),L=n(54131),k=n(8455);async function P({viewportId:e,loadFn:t,servicesManager:n,displaySet:o,initialSliceIndex:a=null}){const{cornerstoneViewportService:i,segmentationService:r,viewportGridService:c}=n.services,l=_({viewportId:e,viewportGridService:c}),d=l.viewportOptions.viewportId,g=o?.referencedDisplaySetInstanceUID||l?.displaySetInstanceUIDs[0],m=B({viewportId:e,servicesManager:n,displaySet:o}),p=async()=>{const e=await t();r.hydrateSegmentation(e)},S=Array.from(s.cache._volumeCache.keys()).some((e=>e.includes(g)));return m.forEach((async e=>{e.viewportOptions={...e.viewportOptions,viewportType:"RTSTRUCT"===o?.Modality?"stack":"volume",needsRerendering:!0};const t=e.viewportId;t===d&&(e.viewportOptions.initialImageOptions={index:a,useOnce:!0});const n=i.getCornerstoneViewport(t),r=n.getCamera();if((S||"RTSTRUCT"===o.Modality)&&t===d)return void await p();const c=async e=>{const n=e.detail.volumeActors?.find((e=>e.uid.includes(g))),o=i.getCornerstoneViewport(t);o.setCamera(r),o.element.removeEventListener(s.Enums.Events.VOLUME_VIEWPORT_NEW_VOLUME,c),n&&t===d&&await p()};n.element.addEventListener(s.Enums.Events.VOLUME_VIEWPORT_NEW_VOLUME,c)})),c.setDisplaySetsForViewports(m),!0}const _=({viewportId:e,viewportGridService:t})=>{const{viewports:n,activeViewportId:o}=t.getState(),a=e||o;return n.get(a)};function B({viewportId:e,servicesManager:t,displaySet:n}){const{hangingProtocolService:o,displaySetService:a,segmentationService:i,viewportGridService:r}=t.services,{viewports:s,isHangingProtocolLayout:c}=r.getState(),l=_({viewportId:e,viewportGridService:r}).viewportOptions.viewportId,d=s.get(l).displaySetInstanceUIDs,g=n?.referencedDisplaySetInstanceUID||d[0],m=a.getDisplaySetByUID(g).instances[0].FrameOfReferenceUID,p=o.getViewportsRequireUpdate(l,g,c);return s.forEach(((e,t)=>{if(l===t||p.find((e=>e.viewportId===t)))return;i.shouldRenderSegmentation(e.displaySetInstanceUIDs,m)&&p.push({viewportId:t,displaySetInstanceUIDs:e.displaySetInstanceUIDs,viewportOptions:{viewportType:"RTSTRUCT"===n?.Modality?"stack":"volume",needsRerendering:!0}})})),p.filter((e=>"volume3d"!==e.viewportOptions?.viewportType))}const{segmentation:H}=c.utilities,{datasetToBlob:q}=d.default.data,{Cornerstone3D:{Segmentation:{generateLabelMaps2DFrom3D:$,generateSegmentation:W}}}=l.adaptersSEG,{Cornerstone3D:{RTSS:{generateRTSSFromSegmentations:z}}}=l.adaptersRT,{downloadDICOMData:j}=l.helpers,Y=({servicesManager:e,extensionManager:t})=>{const{uiNotificationService:n,segmentationService:o,uiDialogService:a,displaySetService:i,viewportGridService:l,toolGroupService:g,cornerstoneViewportService:m}=e.services,p={getUpdatedViewportsForSegmentation:B,createEmptySegmentationForViewport:async({viewportId:t})=>{const a=_({viewportId:t,viewportGridService:l}),r=a.displaySetInstanceUIDs[0],s=i.getDisplaySetByUID(r);s.isReconstructable?P({viewportId:t,servicesManager:e,displaySet:s,loadFn:async()=>{const e=o.getSegmentations(),t=await o.createSegmentationForDisplaySet(r,{label:`Segmentation ${e.length+1}`}),n=a.viewportOptions.toolGroupId;return await o.addSegmentationRepresentationToToolGroup(n,t),o.addSegment(t,{toolGroupId:n,segmentIndex:1,properties:{label:"Segment 1",color:[255,0,0],opacity:255,visibility:!0,isLocked:!1,active:!0}}),t}}):n.show({title:"Segmentation",message:"Segmentation is not supported for non-reconstructible displaysets yet",type:"error"})},loadSegmentationsForViewport:async({segmentations:t,viewportId:n})=>{P({viewportId:n,servicesManager:e,loadFn:async()=>{const e=_({viewportId:n,viewportGridService:l}),a=e.displaySetInstanceUIDs[0],i=t[0],r=i.id,s=i.label,c=i.segments;if(delete i.segments,await o.createSegmentationForDisplaySet(a,{segmentationId:r,label:s}),i.scalarData){o.getLabelmapVolume(r).scalarData.set(i.scalarData)}o.addOrUpdateSegmentation(i);const d=e.viewportOptions.toolGroupId;return await o.addSegmentationRepresentationToToolGroup(d,r),c.forEach((e=>{null!==e&&o.addSegment(r,{segmentIndex:e.segmentIndex,toolGroupId:d,properties:{color:e.color,label:e.label,opacity:e.opacity,isLocked:e.isLocked,visibility:e.isVisible,active:i.activeSegmentIndex===e.segmentIndex}})})),i.centroidsIJK&&o.setCentroids(i.id,i.centroidsIJK),r}})},loadSegmentationDisplaySetsForViewport:async({viewportId:t,displaySets:n})=>{const a=n[0],r=i.getDisplaySetByUID(a.referencedDisplaySetInstanceUID),s=m.getCornerstoneViewport(t).getSliceIndex();P({viewportId:t,servicesManager:e,displaySet:a,loadFn:async()=>{const e=a,t="SEG"===e.Modality?"createSegmentationForSEGDisplaySet":"createSegmentationForRTDisplaySet",n=o[t].bind(o),i=await n(e,null,!1);return o.getSegmentation(i).description=`S${r.SeriesNumber}: ${r.SeriesDescription}`,i},initialSliceIndex:s})},generateSegmentation:({segmentationId:e,options:t={}})=>{const n=c.segmentation.state.getSegmentation(e),{referencedVolumeId:a}=n.representationData.LABELMAP,i=s.cache.getVolume(e),r=s.cache.getVolume(a).getCornerstoneImages(),l=$(i);l.metadata=[];o.getSegmentation(e).segments.forEach((e=>{if(!e)return;const t=e.segmentIndex,{label:n,color:o}=e,a=d.default.data.Colors.rgb2DICOMLAB(o.slice(0,3).map((e=>e/255))).map((e=>Math.round(e))),i={SegmentNumber:t.toString(),SegmentLabel:n,SegmentAlgorithmType:e?.algorithmType||"MANUAL",SegmentAlgorithmName:e?.algorithmName||"OHIF Brush",RecommendedDisplayCIELabValue:a,SegmentedPropertyCategoryCodeSequence:{CodeValue:"T-D0050",CodingSchemeDesignator:"SRT",CodeMeaning:"Tissue"},SegmentedPropertyTypeCodeSequence:{CodeValue:"T-D0050",CodingSchemeDesignator:"SRT",CodeMeaning:"Tissue"}};l.metadata[t]=i}));return W(r,l,s.metaData,t)},downloadSegmentation:({segmentationId:e})=>{const t=o.getSegmentation(e),n=p.generateSegmentation({segmentationId:e});j(n.dataset,`${t.label}`)},storeSegmentation:async({segmentationId:e,dataSource:n})=>{const i=await(0,I.createReportDialogPrompt)(a,{extensionManager:t});if(1!==i.action&&i.value)return;const s=o.getSegmentation(e);if(!s)throw new Error("No segmentation found");const{label:c}=s,l=i.value||c||"Research Derived Series",d=p.generateSegmentation({segmentationId:e,options:{SeriesDescription:l}});if(!d||!d.dataset)throw new Error("Error during segmentation generation");const{dataset:g}=d;return await n.store.dicom(g),g.wadoRoot=n.getConfig().wadoRoot,r.DicomMetadataStore.addInstances([g],!0),g},downloadRTSS:({segmentationId:e})=>{const t=o.getSegmentation(e),n={vtkImageMarchingSquares:F.ZP,vtkDataArray:L.default,vtkImageData:k.ZP},a=z(t,r.classes.MetadataProvider,r.DicomMetadataStore,s.cache,c.Enums,n);try{const e=q(a),t=URL.createObjectURL(e);window.location.assign(t)}catch(e){console.warn(e)}},setBrushSize:({value:e,toolNames:t})=>{const n=Number(e);g.getToolGroupIds()?.forEach((e=>{0===t?.length?H.setBrushSizeForToolGroup(e,n):t?.forEach((t=>{H.setBrushSizeForToolGroup(e,n,t)}))}))},setThresholdRange:({value:e,toolNames:t=["ThresholdCircularBrush","ThresholdSphereBrush"],toolGroupIds:n=g.getToolGroupIds()})=>{n?.forEach((n=>{const o=g.getToolGroup(n);o&&t?.forEach((t=>{o.setToolConfiguration(t,{strategySpecificConfiguration:{THRESHOLD:{threshold:e}}})}))}))}},S={getUpdatedViewportsForSegmentation:{commandFn:p.getUpdatedViewportsForSegmentation},loadSegmentationDisplaySetsForViewport:{commandFn:p.loadSegmentationDisplaySetsForViewport},loadSegmentationsForViewport:{commandFn:p.loadSegmentationsForViewport},createEmptySegmentationForViewport:{commandFn:p.createEmptySegmentationForViewport},generateSegmentation:{commandFn:p.generateSegmentation},downloadSegmentation:{commandFn:p.downloadSegmentation},storeSegmentation:{commandFn:p.storeSegmentation},downloadRTSS:{commandFn:p.downloadRTSS},setBrushSize:{commandFn:p.setBrushSize},setThresholdRange:{commandFn:p.setThresholdRange}};return{actions:p,definitions:S,defaultContext:"SEGMENTATION"}};function J(){return J=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)({}).hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},J.apply(null,arguments)}const Z=i.lazy((()=>n.e(315).then(n.bind(n,88315)))),K=e=>i.createElement(i.Suspense,{fallback:i.createElement("div",null,"Loading...")},i.createElement(Z,e)),X={id:o,getPanelModule:G,getCommandsModule:Y,getToolbarModule:function({servicesManager:e}){const{segmentationService:t,toolbarService:n,toolGroupService:o}=e.services;return[{name:"evaluate.cornerstone.segmentation",evaluate:({viewportId:e,button:a,toolNames:i,disabledText:r})=>{const s=t.getSegmentations();if(!s?.length)return{disabled:!0,className:"!text-common-bright !bg-black opacity-50",disabledText:r??"No segmentations available"};const c=o.getToolGroupForViewport(e);if(!c)return{disabled:!0,className:"!text-common-bright ohif-disabled",disabledText:r??"Not available on the current viewport"};const l=n.getToolNameForButton(a);if(!c.hasTool(l)&&!i)return{disabled:!0,className:"!text-common-bright ohif-disabled",disabledText:r??"Not available on the current viewport"};const d=i?i.includes(c.getActivePrimaryMouseButtonTool()):c.getActivePrimaryMouseButtonTool()===l;return{disabled:!1,className:d?"!text-black !bg-primary-light hover:bg-primary-light hover-text-black hover:cursor-pointer":"!text-common-bright !bg-black hover:bg-primary-light hover:cursor-pointer hover:text-black",isActive:d}}}]},getViewportModule:({servicesManager:e,extensionManager:t,commandsManager:n})=>[{name:"dicom-seg",component:o=>i.createElement(K,J({servicesManager:e,extensionManager:t,commandsManager:n},o))}],getSopClassHandlerModule:S,getHangingProtocolModule:v}},68541:(e,t,n)=>{n.d(t,{h0:()=>s,kF:()=>c,pw:()=>r,z5:()=>i});var o=n(71271),a=n.n(o);n(62709);function i(e,t=0){if(null!==e)return parseFloat(e).toFixed(t)}function r(e,t="MMM D, YYYY"){return a()(e,"YYYYMMDD").format(t)}function s(e,t="HH:mm:ss"){return a()(e,"HH:mm:ss").format(t)}function c(e){if(!e)return"";if("object"==typeof e&&!(e=e.Alphabetic))return"";const t=e.split("^").filter((e=>!!e)).join(", ").trim();return","===t||""===t?"":t}}}]);
//# sourceMappingURL=335.bundle.55607debb3b013859325.js.map