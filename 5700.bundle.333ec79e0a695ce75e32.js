"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5700],{95700:(e,t,a)=>{a.d(t,{A:()=>S,n:()=>x});var n=a(84793),r=a(93725);var o=a(17854),s=a(10673);const i=(e,t)=>{const a=t+1,n=Array(a).fill(0),r=Array.from({length:a},(()=>Array(a).fill(0)));for(let t=0;t<a;t++){for(let n=0;n<a;n++)r[t][n]=e.reduce(((e,a)=>null!==a.y?e+a.x**(t+n):e),0);n[t]=e.reduce(((e,a)=>null!==a.y?e+a.x**t*a.y:e),0)}r.push(n);const o=function(e,t){const a=e.length-1,n=Array(t);for(let t=0;t<a;t++){let n=t;for(let r=t+1;r<a;r++)Math.abs(e[t][r])>Math.abs(e[t][n])&&(n=r);for(let r=t;r<=a;r++)[e[r][t],e[r][n]]=[e[r][n],e[r][t]];for(let n=t+1;n<a;n++)for(let r=a;r>=t;r--)e[r][n]-=e[r][t]*e[t][n]/e[t][t]}for(let t=a-1;t>=0;t--){let r=0;for(let o=t+1;o<a;o++)r+=e[o][t]*n[o];n[t]=(e[a][t]-r)/e[t][t]}return n}(r,a).map((e=>e));return{predict:e=>o.reduce(((t,a,n)=>t+a*e**n),0),equation:[...o].reverse()}};var l=a(62709);const c=(e,t,a=1e-5)=>(e(t+a)-e(t))/a,d=e=>{const[t,a]=[1,e],n=Math.sqrt(1+e*e);return[t/n,a/n]},h=(e,t)=>{const a=c(e,t);return d(a)},f=(e,t,a)=>Math.round(a*e+(1-a)*t),u=(e,t,a,n,r)=>Math.round(n*e+(r-n)*a+(1-r)*t),y=(e,t,a,n)=>{let[r,o]=((e,t)=>{const a=c(e,t);return d(-1/a)})(t,e);const s=t(e);let i=[e-35*r,s-35*o],l=[e+35*r,s+35*o];i[1]>=t(i[0])&&([i,l]=[l,i],[r,o]=[-r,-o]);const h=140,y=new Float32Array(h*n.nbLayers).fill(-1e3);for(let e=0;e<n.nbLayers;e++)for(let t=0;t<h;t+=1){const s=i[0]+t/2*r,l=i[1]+t/2*o,c=i[0]+(t/2+.5)*r,d=i[1]+(t/2+.5)*o,[m,I,g,M]=[Math.floor(s),Math.floor(c),Math.floor(l),Math.floor(d)];if(s>=0&&l>=0&&c<n.layerWidth&&d<n.layerHeight){const i=(n.minLayer+e)*n.layerSize+g*n.layerWidth+m;if(m===I&&g===M)y[e*h+t]=a[i];else if(g===M){const o=m<I?(1-s%1)/r:-s%1/r,l=(n.minLayer+e)*n.layerSize+g*n.layerWidth+I;y[e*h+t]=f(a[i],a[l],o)}else if(m===I){const r=g<M?(1-l%1)/o:-l%1/o,s=(n.minLayer+e)*n.layerSize+M*n.layerWidth+m;y[e*h+t]=f(a[i],a[s],r)}else{const c=m<I?(1-s%1)/r:-s%1/r,d=g<M?(1-l%1)/o:-l%1/o,f=(n.minLayer+e)*n.layerSize+M*n.layerWidth+I,p=c<d?(n.minLayer+e)*n.layerSize+g*n.layerWidth+I:(n.minLayer+e)*n.layerSize+M*n.layerWidth+m,w=Math.min(c,d),D=Math.max(c,d);y[e*h+t]=u(a[i],a[f],a[p],w,D)}}}return{dentascan:y,width:h,height:n.nbLayers,interval:[i,l],director:[r,o],middlePoint:[e,s],minLayer:n.minLayer}},m=a(2196),I=n.uc.classes.MetadataProvider;const g=70,M=(e,t)=>new Promise(((a,n)=>{e.toBlob((async e=>{const n=new o.Z(e),r=n.addFile(e),s=await n.loadFile(e,r),i=await n.getDataset(s,r,t);var l;await(l=()=>i.imageId,new Promise(((e,t)=>{const a=()=>{const t=l();if(t)return e(t);setTimeout((()=>a()),50)};a()})));const{StudyInstanceUID:c,SeriesInstanceUID:d,SOPInstanceUID:h}=i;I.addImageIdToUIDs(r,{StudyInstanceUID:c,SeriesInstanceUID:d,SOPInstanceUID:h,frameIndex:i.NumberOfFrames>1?i.InstanceNumber:1}),a(i)}))})),p=async(e,t,{extensionManager:a,servicesManager:r},o)=>{const{displaySetService:s,cornerstoneCacheService:i}=r.services;n.DicomMetadataStore.addInstances(e);const l=s.getActiveDisplaySets(),c=[l[l.length-1]],d={toolGroupId:"mpr",viewportType:t,orientation:"axial",initialImageOptions:{preset:"middle"}},h=a.getDataSources()[0];return await i.createViewportData(c,d,h,o)},w=e=>{let t=e.length,a=-1/0;for(;t--;)a=e[t]>a?e[t]:a;return a},D=(e,t)=>{const a=((e,t,a)=>{const n=[];for(let r=0;r<t;r++)for(let o=0;o<a;o++)n.push(e[o*t+r]);return n})(e.map((e=>e>1100?e:-1e3)),70,t.nbLayers);let n=Array.from(a).map(((e,a)=>-1e3===e?null:{x:a%t.nbLayers,y:Math.floor(a/t.nbLayers)})).filter((e=>e));for(let e=0;e<t.nbLayers;e+=10)n.push({x:e,y:35});let r=i(n,3),o=e=>35;if(w(a)>-1e3&&!r.equation.some((e=>isNaN(e)))){const e=a.reduce(((e,a,n)=>n%t.nbLayers<e&&-1e3!=a?n%t.nbLayers:e),1/0),n=a.reduce(((e,a,n)=>n%t.nbLayers>e&&-1e3!=a?n%t.nbLayers:e),-1/0);o=((e,t,a)=>n=>{const r=1/(1+Math.exp(-.1*(n-t))),o=1/(1+Math.exp(.1*(n-a)));return e(n)*r*o+35*(1-r)+35*(1-o)})(r.predict,e,n)}return o},S=async(e,t,{servicesManager:a})=>{const{cornerstoneViewportService:n,panoramicService:o}=a.services,s=e.getImageData(),l=s.scalarData,[c,d,h]=s.dimensions,f=Math.floor(l.findIndex((e=>e>-1e3))/c/d),u=Math.floor(l.findLastIndex((e=>e>-1e3))/c/d)+1,y={layerWidth:c,layerHeight:d,layerSize:c*d,minLayer:f,nbLayers:u-f},I=((e,t)=>{const a=new Float32Array(t.layerWidth*t.nbLayers);for(let n=0;n<t.nbLayers;n++)for(let r=0;r<t.layerWidth;r++){let o=-1/0;for(let a=0;a<t.layerHeight;a++){const s=e[(n+t.minLayer)*t.layerSize+r*t.layerHeight+a];s>o&&(o=s)}a[n*t.layerHeight+r]=o}return a})(l,y),g=m(I,6),{centroids:M,idxs:p}=g,D=M.indexOf(Math.max(...M)),S=f+Math.floor(p.findIndex((e=>e===D))/d),x=f+Math.floor(p.findLastIndex((e=>e===D))/d)+1;console.log("MINLAYER, MAXLAYER",S,x),console.log("CENTROIDS",M);const v=((e,t,a,n)=>{const r=a-t,o=new Float32Array(n.layerWidth*n.layerHeight);for(let a=0;a<n.layerWidth;a++)for(let s=0;s<n.layerHeight;s++){let i=0;for(let o=0;o<r;o++)i+=e[(t+o)*n.layerSize+s*n.layerWidth+a];o[s*n.layerWidth+a]=i/r}return o})(l,S,x,y),A=m(v,5),{centroids:b,idxs:L}=A,U=b.indexOf(w(b));const W=((e,t,a,n)=>{const r=new Array(t*a).fill(-1e3),o=(a,n)=>e[n*t+a]||0;for(let s=0;s<n;s++){for(let e=1;e<a-1;e++)for(let a=1;a<t-1;a++){const n=[o(a-1,e-1),o(a,e-1),o(a+1,e-1),o(a-1,e),o(a,e),o(a+1,e),o(a-1,e+1),o(a,e+1),o(a+1,e+1)];r[e*t+a]=Math.max(...n)}for(let n=0;n<t*a;n++)e[n]=r[n]}return r})(Array.from(v.map(((e,t)=>L[t]===U?e:-1e3))),c,d,5),P=((e,t,a)=>{const n=[],r=new Array(t*a).fill(!1),o=e=>{const n=[],r=e%t,o=Math.floor(e/t);for(let e=Math.max(0,r-1);e<=Math.min(t-1,r+1);e++)for(let r=Math.max(0,o-1);r<=Math.min(a-1,o+1);r++){const a=r*t+e;n.push(a)}return n},s=(t,a)=>{const n=[t];for(;n.length>0;){const t=n.shift();if(!r[t]&&-1e3!==e[t]){r[t]=!0,a.push(t);const s=o(t);for(const t of s)r[t]||-1e3===e[t]||n.push(t)}}};for(let o=0;o<t*a;o++)if(!r[o]&&-1e3!==e[o]){const e=[];s(o,e),n.push(e)}return n})(W,c,d);P.sort(((e,t)=>t.length-e.length));const C=P[0].map((e=>({x:e%c,y:Math.floor(e/c)})));let N=i(C,2).predict,V=W.reduce(((e,t,a)=>a%c<e&&-1e3!=t?a%c:e),1/0),F=W.reduce(((e,t,a)=>a%c>e&&-1e3!=t?a%c:e),-1/0);const O=[],z=(F-V)/(t-1);for(let e=V;e<F+.01;e+=z)O.push([e,N(e)]);const T=r.ToolGroupManager.getToolGroupForViewport(e.id,e.renderingEngineId),H=Math.ceil((u-f)/2)-1,E=O.map((e=>s.imageData.indexToWorld([e[0],e[1],H]))),G=T.getToolInstance("ArrowAnnotate");console.log("Tool Group",T,G);const R=G.addNewAnnotationWithMode(e.element,E,"movable","rgb(0, 255, 0)"),B=n.getViewportInfo("default").getViewportData().data[0].displaySetInstanceUID,k=o.getPanoramicState(B),j={...k,annotation:{uid:R.annotationUID,visible:k?.annotation||!1}};return o.addDisplaySetUID(B),o.setPanoramicState(B,j),R.annotationUID},x=async(e,t,{commandsManager:a,extensionManager:n,servicesManager:r})=>{const{displaySetService:o,cornerstoneViewportService:c,uiNotificationService:d,panoramicService:f}=r.services,u=c.getViewportInfo("default").getViewportData().data[0],m=u.displaySetInstanceUID,I=u.volume,S=f.getPanoramicState(m);S.panoramic?.width&&f._deletePanoramic();const x=e.getImageData().imageData,v=f._getControlPoints(m,x),[A,b,L]=I.dimensions,U=I.getScalarData(),W=Math.floor(U.findIndex((e=>e>-1e3))/A/b),P=Math.floor(U.findLastIndex((e=>e>-1e3))/A/b)+1-W;let C={layerWidth:A,layerHeight:b,layerSize:A*b,minLayer:W,nbLayers:P};const N=i(v,6).predict,V=v[0].x,F=v[t-1].x;let O=[y(V,N,U,C)],z=V;for(;z<F;){z+=h(N,z)[0]/2;const e=y(z,N,U,C);O.push(e)}let T=[];for(let e=0;e<Math.floor(O.length/2);e++){let t=O[2*e];const a=Math.floor(t.width/2);let n=new Float32Array(a*P).fill(0);for(let t=0;t<a*P;t++)n[t]+=O[2*e].dentascan[2*t],n[t]+=O[2*e+1].dentascan[2*t],n[t]+=O[2*e].dentascan[2*t+1],n[t]+=O[2*e+1].dentascan[2*t+1],n[t]=Math.floor(n[t]/4);t.dentascan=n,t.width=a,T.push(t)}O=T;const H=O.length;console.log("PANORAMIC WIDTH",H),C.panoramicWidth=H;const E=((e,t,a)=>{const n=Math.floor(a.panoramicWidth/1),r=Math.floor(a.nbLayers/1);let o;"curveAIP"===t&&(o=new Float32Array(a.panoramicWidth*a.nbLayers),e.forEach(((e,t)=>{const n=D(e.dentascan,a);for(let e=0;e<a.nbLayers;e++)o[t*a.nbLayers+e]=n(e)})));const s=new Array(n*r).fill(null);for(let i=0;i<n;i++){const l=1*i,c=e[l],[d,h]=c.interval,[f,u]=c.director,y=Math.max(l-20,0),m=Math.min(l+20,a.panoramicWidth-1);let I;if("default"===t)I=D(c.dentascan,a);else if("valueMIP"===t){let t=[];for(let a=y;a<=m;a+=2)t.push(e[i].dentascan);const n=new Float32Array(c.length);for(let e=0;e<c.length;e++)n[e]=w(t.map((t=>t[e])));I=D(n,a)}for(let e=0;e<r;e++){const r=1*e;let l;if("curveAIP"===t){let e=[];for(let t=y;t<=m;t+=2)e.push(o[t*a.nbLayers+r]);l=e.reduce(((e,t)=>e+t),0)/e.length}else l=I(r);l<0?l=0:l>g&&(l=g);const c=Math.round(d[0]+l*f),h=Math.round(d[1]+l*u);s[e*n+i]={x:c,y:h,xpos:l}}}return s})(O,"curveAIP",C),G=Math.floor(H/1);Math.floor(P/1);let R=new Float32Array(H*P).fill(-1e3);for(let e=0;e<H;e++){let t=O[e];const[a,n]=t.interval,[r,o]=t.director;for(let a=0;a<P;a++){const n=E[Math.floor(a/1)*G+Math.floor(e/1)],[s,i,l]=[n.x,n.y,n.xpos];let c=[s-20*r,i-20*o];const d=[];for(let e=0;e<41;e++){Math.round(c[0]+e*r),Math.round(c[1]+e*o);const n=e+Math.floor(l-20.5),s=t.dentascan[a*g+n],i=Math.floor((s+1e3)/16)/255;isNaN(i)||d.push(1-.15*Math.pow(i,3))}let h=d.reduce(((e,t)=>e*t),1);R[H*(P-a-1)+e]=255*(1-h)*16-1e3}}let B=new Array(H*P).fill(-1e3);const k=function(e,t,a){const n=e.slice(),r=.8,o=e=>Math.exp(-e/(1.6*r))/(2*Math.PI*r*r),[s,i,l]=[o(0),o(1),o(2)],c=[[l,i,l],[i,s,i],[l,i,l]],d=1/(s+4*i+4*l),h=c.length,f=Math.floor(h/2);for(let r=f;r<a-f;r++)for(let a=f;a<t-f;a++){let o=0;for(let n=0;n<h;n++)for(let s=0;s<h;s++)o+=e[(r+n-f)*t+(a+s-f)]*c[n][s];o*=d,n[r*t+a]=o}return n}(R,H,P);for(let e=0;e<H*P;e++){const t=R[e],a=k[e],n=.9;B[e]=n*t+(1-n)*(t-a)}let j=R;const q=f._getImageId(m),_=l.metaData.get("voiLutModule",q),Y=l.metaData.get("imagePixelModule",q),$=l.metaData.get("generalSeriesModule",q);if(!c.getCornerstoneViewport("default"))return void d.show({title:"Panoramic Generation Error",message:"No viewport detected.",type:"error",duration:3e3});const X={SeriesInstanceUID:$.seriesInstanceUID+".panoramic",StudyInstanceUID:$.studyInstanceUID,BitsAllocated:Y.bitsAllocated,BitsStored:Y.bitsStored,Rows:P,Columns:H,WindowCenter:_.windowCenter[0],WindowWidth:_.windowWidth[0],PixelData:j},Z=await(async(e,{extensionManager:t,servicesManager:a})=>{const n={prefilledValues:{SeriesInstanceUID:e.SeriesInstanceUID,StudyInstanceUID:e.StudyInstanceUID}},r=await(0,s.j)(e),o=(0,s.G)(r),i=await M(o,n),l=new Array(e.Columns).fill(i),c=Math.round(e.Columns/2);return await p(l,"stack",{extensionManager:t,servicesManager:a},c)})(X,{extensionManager:n,servicesManager:r}),J={SeriesInstanceUID:$.seriesInstanceUID+".dentascan",StudyInstanceUID:$.studyInstanceUID,BitsAllocated:Y.bitsAllocated,BitsStored:Y.bitsStored,Rows:P,Columns:g,WindowCenter:_.windowCenter[0],WindowWidth:_.windowWidth[0],PixelData:O.map((e=>e.dentascan))},K=await(async(e,{extensionManager:t,servicesManager:a})=>{const n={SeriesInstanceUID:e.SeriesInstanceUID,StudyInstanceUID:e.StudyInstanceUID,SOPInstanceUID:Math.random().toString(36).substring(2,10),FrameOfReferenceUID:Math.random().toString(36).substring(2,10)},r=e.PixelData.length,o=Math.round(r/2),i=await Promise.all(e.PixelData.map((async(t,a)=>{const r=`${n.SOPInstanceUID}.${a+1}`,o={prefilledValues:{...n,SOPInstanceUID:r,InstanceNumber:a+1,ImagePositionPatient:[0,0,.4*a]}},i=await(0,s.j)({...e,PixelData:t},!0),l=(0,s.G)(i);return await M(l,o)})));return await p(i,"volume",{extensionManager:t,servicesManager:a},o)})(J,{extensionManager:n,servicesManager:r}),Q={annotation:S.annotation,dentascanViewportData:K,panoramicViewportData:Z,panoramic:{width:H,height:P},dentascans:O};f.setPanoramicState(m,Q)}},10673:(e,t,a)=>{a.d(t,{G:()=>o,j:()=>r});const n=a(37202),r=(e,t=!1,a=!0)=>{const{BitsAllocated:r,BitsStored:o,Rows:s,Columns:i,WindowCenter:l,WindowWidth:c,PixelData:d}=e,h=16===r?new Int16Array(d):new Int8Array(d),f=n([s,i]),u=a&&l&&c,y=l-.5-(c-1)/2,m=l-.5+(c-1)/2,I=e=>{let t=e;return u?t=e<=y?0:e>m?255:~~(255*((e-(l-.5))/(c-1)+.5)):16===r&&(t=256*(e+1e3)/2**o),t};for(let e=0;e<s;e++){const a=t?s-e-1:e;for(let t=0;t<i;t++){const n=I(h[e*i+t]);f.set(a,t,n)}}return{buffer:f,height:s,width:i,ext:"png"}},o=e=>{const t=new Uint8ClampedArray(e.width*e.height*4);e.buffer.data.forEach(((e,a)=>{t[4*a]=e,t[4*a+1]=e,t[4*a+2]=e,t[4*a+3]=255}));const a=document.createElement("canvas");a.width=e.width,a.height=e.height;const n=new ImageData(new Uint8ClampedArray(t),e.width,e.height);return a.getContext("2d").putImageData(n,0,0),a}}}]);
//# sourceMappingURL=5700.bundle.333ec79e0a695ce75e32.js.map