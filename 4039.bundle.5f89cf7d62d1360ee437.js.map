{"version":3,"file":"4039.bundle.5f89cf7d62d1360ee437.js","mappings":"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","sources":["webpack:///../../../extensions/default/src/DicomWebDataSource/qido.js","webpack:///../../../extensions/default/src/DicomWebDataSource/utils/getImageId.js","webpack:///../../../extensions/default/src/DicomWebDataSource/utils/getWADORSImageId.js","webpack:///../../../extensions/default/src/DicomWebDataSource/wado/retrieveMetadataLoader.js","webpack:///../../../extensions/default/src/DicomWebDataSource/wado/retrieveMetadataLoaderSync.js","webpack:///../../../extensions/default/src/DicomWebDataSource/wado/retrieveMetadataLoaderAsync.js","webpack:///../../../extensions/default/src/DicomWebDataSource/wado/retrieveMetadata.js","webpack:///../../../extensions/default/src/DicomWebDataSource/utils/retrieveMetadataFiltered.js","webpack:///../../../extensions/default/src/DicomWebDataSource/retrieveStudyMetadata.js","webpack:///../../../extensions/default/src/DicomWebDataSource/utils/findIndexOfString.ts","webpack:///../../../extensions/default/src/DicomWebDataSource/utils/fixMultipart.ts","webpack:///../../../extensions/default/src/DicomWebDataSource/utils/StaticWadoClient.ts","webpack:///../../../extensions/default/src/utils/getDirectURL.js","webpack:///../../../extensions/default/src/DicomWebDataSource/utils/fixBulkDataURI.ts","webpack:///../../../extensions/default/src/DicomWebDataSource/index.js","webpack:///../../../extensions/default/src/DicomWebDataSource/dcm4cheeReject.js","webpack:///../../../extensions/default/src/DicomJSONDataSource/index.js","webpack:///../../../extensions/default/src/DicomLocalDataSource/index.js","webpack:///../../../extensions/default/src/DicomWebProxyDataSource/index.js","webpack:///../../../extensions/default/src/MergeDataSource/index.ts","webpack:///../../../extensions/default/src/getDataSourcesModule.js","webpack:///../../../extensions/default/src/Toolbar/Toolbar.tsx","webpack:///../../../extensions/default/src/ViewerLayout/ViewerHeader.tsx","webpack:///../../../extensions/default/src/Components/SidePanelWithServices.tsx","webpack:///../../../extensions/default/src/ViewerLayout/index.tsx","webpack:///../../../extensions/default/src/Panels/PanelStudyBrowser.tsx","webpack:///../../../extensions/default/src/Panels/getImageSrcFromImageId.js","webpack:///../../../extensions/default/src/Panels/getStudiesForPatientByMRN.js","webpack:///../../../extensions/default/src/Panels/requestDisplaySetCreationForStudy.js","webpack:///../../../extensions/default/src/Panels/WrappedPanelStudyBrowser.tsx","webpack:///../../../extensions/default/src/Panels/createReportDialogPrompt.tsx","webpack:///../../../extensions/default/src/Actions/createReportAsync.tsx","webpack:///../../../extensions/default/src/utils/getNextSRSeriesNumber.js","webpack:///../../../extensions/default/src/utils/findSRWithSameSeriesDescription.ts","webpack:///../../../extensions/default/src/Panels/PanelMeasurementTable.tsx","webpack:///../../../extensions/default/src/Panels/Edition3DUtils/extractCellGroupsFromPolydata.js","webpack:///../../../extensions/default/src/Panels/Edition3DUtils/quadricDecimation.js","webpack:///../../../extensions/default/src/Panels/Edition3DUtils/ImageMarchingCubes.js","webpack:///../../../extensions/default/src/Panels/Edition3DPanel.tsx","webpack:///../../../extensions/default/src/Panels/PanoramicUtils/dcmbufferToPng.js","webpack:///../../../extensions/default/src/Panels/PanoramicUtils/computeDentalCurveUtils.js","webpack:///../../../extensions/default/src/Panels/PanoramicGenerationPanel.tsx","webpack:///../../../extensions/default/src/Panels/PanoramicUtils/computePanoramicUtils.js","webpack:///../../../extensions/default/src/getPanelModule.tsx","webpack:///../../../extensions/default/src/id.js","webpack:///../../../extensions/default/src/utils/validations/areAllImagePositionsEqual.ts","webpack:///../../../extensions/default/src/utils/calculateScanAxisNormal.ts","webpack:///../../../extensions/default/src/utils/validations/checkSingleFrames.ts","webpack:///../../../extensions/default/src/utils/validations/areAllImageDimensionsEqual.ts","webpack:///../../../extensions/default/src/utils/validations/areAllImageComponentsEqual.ts","webpack:///../../../extensions/default/src/utils/validations/areAllImageOrientationsEqual.ts","webpack:///../../../extensions/default/src/utils/validations/areAllImageSpacingEqual.ts","webpack:///../../../extensions/default/src/getDisplaySetMessages.ts","webpack:///../../../extensions/default/src/utils/validations/checkMultiframe.ts","webpack:///../../../extensions/default/src/getDisplaySetsFromUnsupportedSeries.js","webpack:///../../../extensions/default/src/SOPClassHandlers/chartSOPClassHandler.ts","webpack:///../../../extensions/default/src/getSopClassHandlerModule.js","webpack:///../../../extensions/default/src/Toolbar/ToolbarDivider.tsx","webpack:///../../../extensions/default/src/Toolbar/ToolbarLayoutSelector.tsx","webpack:///../../../extensions/default/src/Toolbar/ToolbarSplitButtonWithServices.tsx","webpack:///../../../extensions/default/src/Toolbar/ToolbarButtonGroupWithServices.tsx","webpack:///../../../extensions/default/src/Components/ProgressDropdownWithService/ProgressDropdownWithService.tsx","webpack:///../../../extensions/default/src/CustomizableContextMenu/ContextMenuItemsBuilder.ts","webpack:///../../../extensions/default/src/CustomizableContextMenu/ContextMenuController.tsx","webpack:///../../../extensions/default/src/CustomizableContextMenu/defaultContextMenu.ts","webpack:///../../../extensions/default/src/DicomTagBrowser/DicomTagTable.tsx","webpack:///../../../extensions/default/src/DicomTagBrowser/DicomTagBrowser.tsx","webpack:///../../../extensions/default/src/utils/reuseCachedLayouts.ts","webpack:///../../../extensions/default/src/findViewportsByPosition.ts","webpack:///../../../extensions/default/src/commandsModule.ts","webpack:///../../../extensions/default/src/hpMNGrid.ts","webpack:///../../../extensions/default/src/hpCompare.ts","webpack:///../../../extensions/default/src/getHangingProtocolModule.js","webpack:///../../../extensions/default/src/Panels/DataSourceSelector.tsx","webpack:///../../../extensions/default/src/Components/ItemListComponent.tsx","webpack:///../../../extensions/default/src/Components/DataSourceConfigurationModalComponent.tsx","webpack:///../../../extensions/default/src/Components/DataSourceConfigurationComponent.tsx","webpack:///../../../extensions/default/src/DataSourceConfigurationAPI/GoogleCloudDataSourceConfigurationAPI.ts","webpack:///../../../extensions/default/src/Components/LineChartViewport/LineChartViewport.tsx","webpack:///../../../extensions/default/src/getPTImageIdInstanceMetadata.ts","webpack:///../../../extensions/tmtv/src/utils/colormaps/index.js","webpack:///../../../extensions/default/src/init.ts","webpack:///../../../extensions/default/src/index.ts","webpack:///../../../extensions/default/src/getViewportModule.tsx","webpack:///../../../extensions/default/src/getLayoutTemplateModule.js","webpack:///../../../extensions/default/src/getToolbarModule.tsx","webpack:///../../../extensions/default/src/getCustomizationModule.tsx"],"sourcesContent":["/**\n * QIDO - Query based on ID for DICOM Objects\n * search for studies, series and instances by patient ID, and receive their\n * unique identifiers for further usage.\n *\n * Quick: https://www.dicomstandard.org/dicomweb/query-qido-rs/\n * Standard: http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.6\n *\n * Routes:\n * ==========\n * /studies?\n * /studies/{studyInstanceUid}/series?\n * /studies/{studyInstanceUid}/series/{seriesInstanceUid}/instances?\n *\n * Query Parameters:\n * ================\n * | KEY              | VALUE              |\n * |------------------|--------------------|\n * | {attributeId}    | {value}            |\n * | includeField     | {attribute} or all |\n * | fuzzymatching    | true OR false      |\n * | limit            | {number}           |\n * | offset           | {number}           |\n */\nimport { DICOMWeb, utils } from '@ohif/core';\nimport { sortStudySeries } from '@ohif/core/src/utils/sortStudy';\n\nconst { getString, getName, getModalities } = DICOMWeb;\n\n/**\n * Parses resulting data from a QIDO call into a set of Study MetaData\n *\n * @param {Array} qidoStudies - An array of study objects. Each object contains a keys for DICOM tags.\n * @param {object} qidoStudies[0].qidoStudy - An object where each key is the DICOM Tag group+element\n * @param {object} qidoStudies[0].qidoStudy[dicomTag] - Optional object that represents DICOM Tag\n * @param {string} qidoStudies[0].qidoStudy[dicomTag].vr - Value Representation\n * @param {string[]} qidoStudies[0].qidoStudy[dicomTag].Value - Optional string array representation of the DICOM Tag's value\n * @returns {Array} An array of Study MetaData objects\n */\nfunction processResults(qidoStudies) {\n  if (!qidoStudies || !qidoStudies.length) {\n    return [];\n  }\n\n  const studies = [];\n\n  qidoStudies.forEach(qidoStudy =>\n    studies.push({\n      studyInstanceUid: getString(qidoStudy['0020000D']),\n      date: getString(qidoStudy['00080020']), // YYYYMMDD\n      time: getString(qidoStudy['00080030']), // HHmmss.SSS (24-hour, minutes, seconds, fractional seconds)\n      accession: getString(qidoStudy['00080050']) || '', // short string, probably a number?\n      mrn: getString(qidoStudy['00100020']) || '', // medicalRecordNumber\n      patientName: utils.formatPN(getName(qidoStudy['00100010'])) || '',\n      instances: Number(getString(qidoStudy['00201208'])) || 0, // number\n      description: getString(qidoStudy['00081030']) || '',\n      modalities: getString(getModalities(qidoStudy['00080060'], qidoStudy['00080061'])) || '',\n    })\n  );\n\n  return studies;\n}\n\n/**\n * Parses resulting data from a QIDO call into a set of Study MetaData\n *\n * @param {Array} qidoSeries - An array of study objects. Each object contains a keys for DICOM tags.\n * @param {object} qidoSeries[0].qidoSeries - An object where each key is the DICOM Tag group+element\n * @param {object} qidoSeries[0].qidoSeries[dicomTag] - Optional object that represents DICOM Tag\n * @param {string} qidoSeries[0].qidoSeries[dicomTag].vr - Value Representation\n * @param {string[]} qidoSeries[0].qidoSeries[dicomTag].Value - Optional string array representation of the DICOM Tag's value\n * @returns {Array} An array of Study MetaData objects\n */\nexport function processSeriesResults(qidoSeries) {\n  const series = [];\n\n  if (qidoSeries && qidoSeries.length) {\n    qidoSeries.forEach(qidoSeries =>\n      series.push({\n        studyInstanceUid: getString(qidoSeries['0020000D']),\n        seriesInstanceUid: getString(qidoSeries['0020000E']),\n        modality: getString(qidoSeries['00080060']),\n        seriesNumber: getString(qidoSeries['00200011']),\n        seriesDate: utils.formatDate(getString(qidoSeries['00080021'])),\n        numSeriesInstances: Number(getString(qidoSeries['00201209'])),\n        description: getString(qidoSeries['0008103E']),\n      })\n    );\n  }\n\n  sortStudySeries(series);\n\n  return series;\n}\n\n/**\n *\n * @param {object} dicomWebClient - Client similar to what's provided by `dicomweb-client` library\n * @param {function} dicomWebClient.searchForStudies -\n * @param {string} [studyInstanceUid]\n * @param {string} [seriesInstanceUid]\n * @param {string} [queryParamaters]\n * @returns {Promise<results>} - Promise that resolves results\n */\nasync function search(dicomWebClient, studyInstanceUid, seriesInstanceUid, queryParameters) {\n  let searchResult = await dicomWebClient.searchForStudies({\n    studyInstanceUid: undefined,\n    queryParams: queryParameters,\n  });\n\n  return searchResult;\n}\n\n/**\n *\n * @param {string} studyInstanceUID - ID of study to return a list of series for\n * @returns {Promise} - Resolves SeriesMetadata[] in study\n */\nexport function seriesInStudy(dicomWebClient, studyInstanceUID) {\n  // Series Description\n  // Already included?\n  const commaSeparatedFields = ['0008103E', '00080021'].join(',');\n  const queryParams = {\n    includefield: commaSeparatedFields,\n  };\n\n  return dicomWebClient.searchForSeries({ studyInstanceUID, queryParams });\n}\n\nexport default function searchStudies(server, filter) {\n  const queryParams = getQIDOQueryParams(filter, server.qidoSupportsIncludeField);\n  const options = {\n    queryParams,\n  };\n\n  return dicomWeb.searchForStudies(options).then(resultDataToStudies);\n}\n\n/**\n * Produces a QIDO URL given server details and a set of specified search filter\n * items\n *\n * @param filter\n * @param serverSupportsQIDOIncludeField\n * @returns {string} The URL with encoded filter query data\n */\nfunction mapParams(params, options = {}) {\n  if (!params) {\n    return;\n  }\n  const commaSeparatedFields = [\n    '00081030', // Study Description\n    '00080060', // Modality\n    // Add more fields here if you want them in the result\n  ].join(',');\n\n  const { supportsWildcard } = options;\n  const withWildcard = value => {\n    return supportsWildcard && value ? `*${value}*` : value;\n  };\n\n  const parameters = {\n    // Named\n    PatientName: withWildcard(params.patientName),\n    //PatientID: withWildcard(params.patientId),\n    '00100020': withWildcard(params.patientId), // Temporarily to make the tests pass with dicomweb-server.. Apparently it's broken?\n    AccessionNumber: withWildcard(params.accessionNumber),\n    StudyDescription: withWildcard(params.studyDescription),\n    ModalitiesInStudy: params.modalitiesInStudy,\n    // Other\n    limit: params.limit || 101,\n    offset: params.offset || 0,\n    fuzzymatching: options.supportsFuzzyMatching === true,\n    includefield: commaSeparatedFields, // serverSupportsQIDOIncludeField ? commaSeparatedFields : 'all',\n  };\n\n  // build the StudyDate range parameter\n  if (params.startDate && params.endDate) {\n    parameters.StudyDate = `${params.startDate}-${params.endDate}`;\n  } else if (params.startDate) {\n    const today = new Date();\n    const DD = String(today.getDate()).padStart(2, '0');\n    const MM = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    const YYYY = today.getFullYear();\n    const todayStr = `${YYYY}${MM}${DD}`;\n\n    parameters.StudyDate = `${params.startDate}-${todayStr}`;\n  } else if (params.endDate) {\n    const oldDateStr = `19700102`;\n\n    parameters.StudyDate = `${oldDateStr}-${params.endDate}`;\n  }\n\n  // Build the StudyInstanceUID parameter\n  if (params.studyInstanceUid) {\n    let studyUids = params.studyInstanceUid;\n    studyUids = Array.isArray(studyUids) ? studyUids.join() : studyUids;\n    studyUids = studyUids.replace(/[^0-9.]+/g, '\\\\');\n    parameters.StudyInstanceUID = studyUids;\n  }\n\n  // Clean query params of undefined values.\n  const final = {};\n  Object.keys(parameters).forEach(key => {\n    if (parameters[key] !== undefined && parameters[key] !== '') {\n      final[key] = parameters[key];\n    }\n  });\n\n  return final;\n}\n\nexport { mapParams, search, processResults };\n","import getWADORSImageId from './getWADORSImageId';\n\nfunction buildInstanceWadoUrl(config, instance) {\n  const { StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID } = instance;\n  const params = [];\n\n  params.push('requestType=WADO');\n  params.push(`studyUID=${StudyInstanceUID}`);\n  params.push(`seriesUID=${SeriesInstanceUID}`);\n  params.push(`objectUID=${SOPInstanceUID}`);\n  params.push('contentType=application/dicom');\n  params.push('transferSyntax=*');\n\n  const paramString = params.join('&');\n\n  return `${config.wadoUriRoot}?${paramString}`;\n}\n\n/**\n * Obtain an imageId for Cornerstone from an image instance\n *\n * @param instance\n * @param frame\n * @param thumbnail\n * @returns {string} The imageId to be used by Cornerstone\n */\nexport default function getImageId({ instance, frame, config, thumbnail = false }) {\n  if (!instance) {\n    return;\n  }\n\n  if (instance.url) {\n    return instance.url;\n  }\n\n  const renderingAttr = thumbnail ? 'thumbnailRendering' : 'imageRendering';\n\n  if (!config[renderingAttr] || config[renderingAttr] === 'wadouri') {\n    const wadouri = buildInstanceWadoUrl(config, instance);\n\n    let imageId = 'dicomweb:' + wadouri;\n    if (frame !== undefined) {\n      imageId += '&frame=' + frame;\n    }\n\n    return imageId;\n  } else {\n    return getWADORSImageId(instance, config, frame); // WADO-RS Retrieve Frame\n  }\n}\n","function buildInstanceWadoRsUri(instance, config) {\n  const { StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID } = instance;\n  return `${config.wadoRoot}/studies/${StudyInstanceUID}/series/${SeriesInstanceUID}/instances/${SOPInstanceUID}`;\n}\n\nfunction buildInstanceFrameWadoRsUri(instance, config, frame) {\n  const baseWadoRsUri = buildInstanceWadoRsUri(instance, config);\n\n  frame = frame || 1;\n\n  return `${baseWadoRsUri}/frames/${frame}`;\n}\n\n// function getWADORSImageUrl(instance, frame) {\n//   const wadorsuri = buildInstanceFrameWadoRsUri(instance, config, frame);\n\n//   if (!wadorsuri) {\n//     return;\n//   }\n\n//   // Use null to obtain an imageId which represents the instance\n//   if (frame === null) {\n//     wadorsuri = wadorsuri.replace(/frames\\/(\\d+)/, '');\n//   } else {\n//     // We need to sum 1 because WADO-RS frame number is 1-based\n//     frame = frame ? parseInt(frame) + 1 : 1;\n\n//     // Replaces /frame/1 by /frame/{frame}\n//     wadorsuri = wadorsuri.replace(/frames\\/(\\d+)/, `frames/${frame}`);\n//   }\n\n//   return wadorsuri;\n// }\n\n/**\n * Obtain an imageId for Cornerstone based on the WADO-RS scheme\n *\n * @param {object} instanceMetada metadata object (InstanceMetadata)\n * @param {(string\\|number)} [frame] the frame number\n * @returns {string} The imageId to be used by Cornerstone\n */\nexport default function getWADORSImageId(instance, config, frame) {\n  //const uri = getWADORSImageUrl(instance, frame);\n  const uri = buildInstanceFrameWadoRsUri(instance, config, frame);\n\n  if (!uri) {\n    return;\n  }\n\n  return `wadors:${uri}`;\n}\n","/**\n * Class to define inheritance of load retrieve strategy.\n * The process can be async load (lazy) or sync load\n *\n * There are methods that must be implemented at consumer level\n * To retrieve study call execLoad\n */\nexport default class RetrieveMetadataLoader {\n  /**\n   * @constructor\n   * @param {Object} client The dicomweb-client.\n   * @param {Array} studyInstanceUID Study instance ui to be retrieved\n   * @param {Object} [filters] - Object containing filters to be applied on retrieve metadata process\n   * @param {string} [filters.seriesInstanceUID] - series instance uid to filter results against\n   * @param {Object} [sortCriteria] - Custom sort criteria used for series\n   * @param {Function} [sortFunction] - Custom sort function for series\n   */\n  constructor(\n    client,\n    studyInstanceUID,\n    filters = {},\n    sortCriteria = undefined,\n    sortFunction = undefined\n  ) {\n    this.client = client;\n    this.studyInstanceUID = studyInstanceUID;\n    this.filters = filters;\n    this.sortCriteria = sortCriteria;\n    this.sortFunction = sortFunction;\n  }\n\n  async execLoad() {\n    const preLoadData = await this.preLoad();\n    const loadData = await this.load(preLoadData);\n    const postLoadData = await this.posLoad(loadData);\n    return postLoadData;\n  }\n\n  /**\n   * It iterates over given loaders running each one. Loaders parameters must be bind when getting it.\n   * @param {Array} loaders - array of loader to retrieve data.\n   */\n  async runLoaders(loaders) {\n    let result;\n    for (const loader of loaders) {\n      result = await loader();\n      if (result && result.length) {\n        break; // closes iterator in case data is retrieved successfully\n      }\n    }\n\n    if (loaders.next().done && !result) {\n      throw new Error('RetrieveMetadataLoader failed');\n    }\n\n    return result;\n  }\n\n  // Methods to be overwrite\n  async configLoad() {}\n  async preLoad() {}\n  async load(preLoadData) {}\n  async posLoad(loadData) {}\n}\n","// import { api } from 'dicomweb-client';\n// import DICOMWeb from '../../../DICOMWeb/';\nimport { createStudyFromSOPInstanceList } from './studyInstanceHelpers';\nimport RetrieveMetadataLoader from './retrieveMetadataLoader';\n\n/**\n * Class for sync load of study metadata.\n * It inherits from RetrieveMetadataLoader\n *\n * A list of loaders (getLoaders) can be created so, it will be applied a fallback load strategy.\n * I.e Retrieve metadata using all loaders possibilities.\n */\nexport default class RetrieveMetadataLoaderSync extends RetrieveMetadataLoader {\n  getOptions() {\n    const { studyInstanceUID, filters } = this;\n\n    const options = {\n      studyInstanceUID,\n    };\n\n    const { seriesInstanceUID } = filters;\n    if (seriesInstanceUID) {\n      options['seriesInstanceUID'] = seriesInstanceUID;\n    }\n\n    return options;\n  }\n\n  /**\n   * @returns {Array} Array of loaders. To be consumed as queue\n   */\n  *getLoaders() {\n    const loaders = [];\n    const { studyInstanceUID, filters: { seriesInstanceUID } = {}, client } = this;\n\n    if (seriesInstanceUID) {\n      loaders.push(\n        client.retrieveSeriesMetadata.bind(client, {\n          studyInstanceUID,\n          seriesInstanceUID,\n        })\n      );\n    }\n\n    loaders.push(client.retrieveStudyMetadata.bind(client, { studyInstanceUID }));\n\n    yield* loaders;\n  }\n\n  async load(preLoadData) {\n    const loaders = this.getLoaders();\n    const result = this.runLoaders(loaders);\n    return result;\n  }\n\n  async posLoad(loadData) {\n    return loadData;\n  }\n}\n","import dcmjs from 'dcmjs';\nimport { sortStudySeries } from '@ohif/core/src/utils/sortStudy';\nimport RetrieveMetadataLoader from './retrieveMetadataLoader';\n\n// Series Date, Series Time, Series Description and Series Number to be included\n// in the series metadata query result\nconst includeField = ['00080021', '00080031', '0008103E', '00200011'].join(',');\n\nexport class DeferredPromise {\n  metadata = undefined;\n  processFunction = undefined;\n  internalPromise = undefined;\n  thenFunction = undefined;\n  rejectFunction = undefined;\n\n  setMetadata(metadata) {\n    this.metadata = metadata;\n  }\n  setProcessFunction(func) {\n    this.processFunction = func;\n  }\n  getPromise() {\n    return this.start();\n  }\n  start() {\n    if (this.internalPromise) {\n      return this.internalPromise;\n    }\n    this.internalPromise = this.processFunction();\n    // in case then and reject functions called before start\n    if (this.thenFunction) {\n      this.then(this.thenFunction);\n      this.thenFunction = undefined;\n    }\n    if (this.rejectFunction) {\n      this.reject(this.rejectFunction);\n      this.rejectFunction = undefined;\n    }\n    return this.internalPromise;\n  }\n  then(func) {\n    if (this.internalPromise) {\n      return this.internalPromise.then(func);\n    } else {\n      this.thenFunction = func;\n    }\n  }\n  reject(func) {\n    if (this.internalPromise) {\n      return this.internalPromise.reject(func);\n    } else {\n      this.rejectFunction = func;\n    }\n  }\n}\n/**\n * Creates an immutable series loader object which loads each series sequentially using the iterator interface.\n *\n * @param {DICOMWebClient} dicomWebClient The DICOMWebClient instance to be used for series load\n * @param {string} studyInstanceUID The Study Instance UID from which series will be loaded\n * @param {Array} seriesInstanceUIDList A list of Series Instance UIDs\n *\n * @returns {Object} Returns an object which supports loading of instances from each of given Series Instance UID\n */\nfunction makeSeriesAsyncLoader(client, studyInstanceUID, seriesInstanceUIDList) {\n  return Object.freeze({\n    hasNext() {\n      return seriesInstanceUIDList.length > 0;\n    },\n    next() {\n      const { seriesInstanceUID, metadata } = seriesInstanceUIDList.shift();\n      const promise = new DeferredPromise();\n      promise.setMetadata(metadata);\n      promise.setProcessFunction(() => {\n        return client.retrieveSeriesMetadata({\n          studyInstanceUID,\n          seriesInstanceUID,\n        });\n      });\n      return promise;\n    },\n  });\n}\n\n/**\n * Class for async load of study metadata.\n * It inherits from RetrieveMetadataLoader\n *\n * It loads the one series and then append to seriesLoader the others to be consumed/loaded\n */\nexport default class RetrieveMetadataLoaderAsync extends RetrieveMetadataLoader {\n  /**\n   * @returns {Array} Array of preLoaders. To be consumed as queue\n   */\n  *getPreLoaders() {\n    const preLoaders = [];\n    const { studyInstanceUID, filters: { seriesInstanceUID } = {}, client } = this;\n\n    // asking to include Series Date, Series Time, Series Description\n    // and Series Number in the series metadata returned to better sort series\n    // in preLoad function\n    let options = {\n      studyInstanceUID,\n      queryParams: {\n        includefield: includeField,\n      },\n    };\n\n    if (seriesInstanceUID) {\n      options.queryParams.SeriesInstanceUID = seriesInstanceUID;\n      preLoaders.push(client.searchForSeries.bind(client, options));\n    }\n    // Fallback preloader\n    preLoaders.push(client.searchForSeries.bind(client, options));\n\n    yield* preLoaders;\n  }\n\n  async preLoad() {\n    const preLoaders = this.getPreLoaders();\n    const result = await this.runLoaders(preLoaders);\n    const sortCriteria = this.sortCriteria;\n    const sortFunction = this.sortFunction;\n\n    const { naturalizeDataset } = dcmjs.data.DicomMetaDictionary;\n    const naturalized = result.map(naturalizeDataset);\n\n    return sortStudySeries(naturalized, sortCriteria, sortFunction);\n  }\n\n  async load(preLoadData) {\n    const { client, studyInstanceUID } = this;\n\n    const seriesInstanceUIDs = preLoadData.map(seriesMetadata => {\n      return { seriesInstanceUID: seriesMetadata.SeriesInstanceUID, metadata: seriesMetadata };\n    });\n\n    const seriesAsyncLoader = makeSeriesAsyncLoader(client, studyInstanceUID, seriesInstanceUIDs);\n\n    const promises = [];\n\n    while (seriesAsyncLoader.hasNext()) {\n      const promise = seriesAsyncLoader.next();\n      promises.push(promise);\n    }\n\n    return {\n      preLoadData,\n      promises,\n    };\n  }\n\n  async posLoad({ preLoadData, promises }) {\n    return {\n      preLoadData,\n      promises,\n    };\n  }\n}\n","import RetrieveMetadataLoaderSync from './retrieveMetadataLoaderSync';\nimport RetrieveMetadataLoaderAsync from './retrieveMetadataLoaderAsync';\n\n/**\n * Retrieve Study metadata from a DICOM server. If the server is configured to use lazy load, only the first series\n * will be loaded and the property \"studyLoader\" will be set to let consumer load remaining series as needed.\n *\n * @param {*} dicomWebClient The DICOMWebClient instance to be used for series load\n * @param {*} StudyInstanceUID The UID of the Study to be retrieved\n * @param {*} enableStudyLazyLoad Whether the study metadata should be loaded asynchronously\n * @param {object} filters Object containing filters to be applied on retrieve metadata process\n * @param {string} [filters.seriesInstanceUID] Series instance uid to filter results against\n * @param {array} [filters.SeriesInstanceUIDs] Series instance uids to filter results against\n * @param {function} [sortCriteria] Sort criteria function\n * @param {function} [sortFunction] Sort function\n *\n * @returns {Promise} A promises that resolves the study descriptor object\n */\nasync function RetrieveMetadata(\n  dicomWebClient,\n  StudyInstanceUID,\n  enableStudyLazyLoad,\n  filters = {},\n  sortCriteria,\n  sortFunction\n) {\n  const RetrieveMetadataLoader =\n    enableStudyLazyLoad !== false ? RetrieveMetadataLoaderAsync : RetrieveMetadataLoaderSync;\n\n  const retrieveMetadataLoader = new RetrieveMetadataLoader(\n    dicomWebClient,\n    StudyInstanceUID,\n    filters,\n    sortCriteria,\n    sortFunction\n  );\n  const data = await retrieveMetadataLoader.execLoad();\n\n  return data;\n}\n\nexport default RetrieveMetadata;\n","import RetrieveMetadata from '../wado/retrieveMetadata';\n\n/**\n * Retrieve metadata filtered.\n *\n * @param {*} dicomWebClient The DICOMWebClient instance to be used for series load\n * @param {*} StudyInstanceUID The UID of the Study to be retrieved\n * @param {*} enableStudyLazyLoad Whether the study metadata should be loaded asynchronously\n * @param {object} filters Object containing filters to be applied on retrieve metadata process\n * @param {string} [filters.seriesInstanceUID] Series instance uid to filter results against\n * @param {array} [filters.SeriesInstanceUIDs] Series instance uids to filter results against\n * @param {function} [sortCriteria] Sort criteria function\n * @param {function} [sortFunction] Sort function\n *\n * @returns\n */\nfunction retrieveMetadataFiltered(\n  dicomWebClient,\n  StudyInstanceUID,\n  enableStudyLazyLoad,\n  filters,\n  sortCriteria,\n  sortFunction\n) {\n  const { SeriesInstanceUIDs } = filters;\n\n  return new Promise((resolve, reject) => {\n    const promises = SeriesInstanceUIDs.map(uid => {\n      const seriesSpecificFilters = Object.assign({}, filters, {\n        seriesInstanceUID: uid,\n      });\n\n      return RetrieveMetadata(\n        dicomWebClient,\n        StudyInstanceUID,\n        enableStudyLazyLoad,\n        seriesSpecificFilters,\n        sortCriteria,\n        sortFunction\n      );\n    });\n\n    Promise.all(promises).then(results => {\n      const aggregatedResult = { preLoadData: [], promises: [] };\n\n      results.forEach(({ preLoadData, promises }) => {\n        aggregatedResult.preLoadData = aggregatedResult.preLoadData.concat(preLoadData);\n        aggregatedResult.promises = aggregatedResult.promises.concat(promises);\n      });\n\n      resolve(aggregatedResult);\n    }, reject);\n  });\n}\n\nexport default retrieveMetadataFiltered;\n","import retrieveMetadataFiltered from './utils/retrieveMetadataFiltered.js';\nimport RetrieveMetadata from './wado/retrieveMetadata.js';\n\nconst moduleName = 'RetrieveStudyMetadata';\n// Cache for promises. Prevents unnecessary subsequent calls to the server\nconst StudyMetaDataPromises = new Map();\n\n/**\n * Retrieves study metadata.\n *\n * @param {Object} dicomWebClient The DICOMWebClient instance to be used for series load\n * @param {string} StudyInstanceUID The UID of the Study to be retrieved\n * @param {boolean} enableStudyLazyLoad Whether the study metadata should be loaded asynchronously.\n * @param {Object} [filters] Object containing filters to be applied on retrieve metadata process\n * @param {string} [filters.seriesInstanceUID] Series instance uid to filter results against\n * @param {array} [filters.SeriesInstanceUIDs] Series instance uids to filter results against\n * @param {function} [sortCriteria] Sort criteria function\n * @param {function} [sortFunction] Sort function\n *\n * @returns {Promise} that will be resolved with the metadata or rejected with the error\n */\nexport function retrieveStudyMetadata(\n  dicomWebClient,\n  StudyInstanceUID,\n  enableStudyLazyLoad,\n  filters,\n  sortCriteria,\n  sortFunction,\n  dicomWebConfig = {}\n) {\n  // @TODO: Whenever a study metadata request has failed, its related promise will be rejected once and for all\n  // and further requests for that metadata will always fail. On failure, we probably need to remove the\n  // corresponding promise from the \"StudyMetaDataPromises\" map...\n\n  if (!dicomWebClient) {\n    throw new Error(`${moduleName}: Required 'dicomWebClient' parameter not provided.`);\n  }\n  if (!StudyInstanceUID) {\n    throw new Error(`${moduleName}: Required 'StudyInstanceUID' parameter not provided.`);\n  }\n\n  const promiseId = `${dicomWebConfig.name}:${StudyInstanceUID}`;\n\n  // Already waiting on result? Return cached promise\n  if (StudyMetaDataPromises.has(promiseId)) {\n    return StudyMetaDataPromises.get(promiseId);\n  }\n\n  let promise;\n\n  if (filters && filters.SeriesInstanceUIDs) {\n    promise = retrieveMetadataFiltered(\n      dicomWebClient,\n      StudyInstanceUID,\n      enableStudyLazyLoad,\n      filters,\n      sortCriteria,\n      sortFunction\n    );\n  } else {\n    // Create a promise to handle the data retrieval\n    promise = new Promise((resolve, reject) => {\n      RetrieveMetadata(\n        dicomWebClient,\n        StudyInstanceUID,\n        enableStudyLazyLoad,\n        filters,\n        sortCriteria,\n        sortFunction\n      ).then(function (data) {\n        resolve(data);\n      }, reject);\n    });\n  }\n\n  // Store the promise in cache\n  StudyMetaDataPromises.set(promiseId, promise);\n\n  return promise;\n}\n\n/**\n * Delete the cached study metadata retrieval promise to ensure that the browser will\n * re-retrieve the study metadata when it is next requested.\n *\n * @param {String} StudyInstanceUID The UID of the Study to be removed from cache\n */\nexport function deleteStudyMetadataPromise(StudyInstanceUID) {\n  if (StudyMetaDataPromises.has(StudyInstanceUID)) {\n    StudyMetaDataPromises.delete(StudyInstanceUID);\n  }\n}\n","function checkToken(token, data, dataOffset): boolean {\n  if (dataOffset + token.length > data.length) {\n    return false;\n  }\n\n  let endIndex = dataOffset;\n\n  for (let i = 0; i < token.length; i++) {\n    if (token[i] !== data[endIndex++]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction stringToUint8Array(str: string): Uint8Array {\n  const uint = new Uint8Array(str.length);\n\n  for (let i = 0, j = str.length; i < j; i++) {\n    uint[i] = str.charCodeAt(i);\n  }\n\n  return uint;\n}\n\nfunction findIndexOfString(\n  data: Uint8Array,\n  str: string,\n  offset?: number\n): number {\n  offset = offset || 0;\n\n  const token = stringToUint8Array(str);\n\n  for (let i = offset; i < data.length; i++) {\n    if (token[0] === data[i]) {\n      // console.log('match @', i);\n      if (checkToken(token, data, i)) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\nexport default findIndexOfString;\n","import findIndexOfString from './findIndexOfString';\n\n/**\n * Fix multipart data coming back from the retrieve bulkdata request, but\n * incorrectly tagged as application/octet-stream.  Some servers don't handle\n * the response type correctly, and this method is relatively robust about\n * detecting multipart data correctly.  It will only extract one value.\n */\nexport default function fixMultipart(arrayData) {\n  const data = new Uint8Array(arrayData[0]);\n  // Don't know the exact minimum length, but it is at least 25 to encode multipart\n  if (data.length < 25) {\n    return arrayData;\n  }\n  const dashIndex = findIndexOfString(data, '--');\n  if (dashIndex > 6) {\n    return arrayData;\n  }\n  const tokenIndex = findIndexOfString(data, '\\r\\n\\r\\n', dashIndex);\n  if (tokenIndex > 512) {\n    // Allow for 512 characters in the header - there is no apriori limit, but\n    // this seems ok for now as we only expect it to have content type in it.\n    return arrayData;\n  }\n  const header = uint8ArrayToString(data, 0, tokenIndex);\n  // Now find the boundary  marker\n  const responseHeaders = header.split('\\r\\n');\n  const boundary = findBoundary(responseHeaders);\n\n  if (!boundary) {\n    return arrayData;\n  }\n  // Start of actual data is 4 characters after the token\n  const offset = tokenIndex + 4;\n\n  const endIndex = findIndexOfString(data, boundary, offset);\n  if (endIndex === -1) {\n    return arrayData;\n  }\n\n  return [data.slice(offset, endIndex - 2).buffer];\n}\n\nexport function findBoundary(header: string[]): string {\n  for (let i = 0; i < header.length; i++) {\n    if (header[i].substr(0, 2) === '--') {\n      return header[i];\n    }\n  }\n}\n\nexport function findContentType(header: string[]): string {\n  for (let i = 0; i < header.length; i++) {\n    if (header[i].substr(0, 13) === 'Content-Type:') {\n      return header[i].substr(13).trim();\n    }\n  }\n}\n\nexport function uint8ArrayToString(data, offset, length) {\n  offset = offset || 0;\n  length = length || data.length - offset;\n  let str = '';\n\n  for (let i = offset; i < offset + length; i++) {\n    str += String.fromCharCode(data[i]);\n  }\n\n  return str;\n}\n","import { api } from 'dicomweb-client';\nimport fixMultipart from './fixMultipart';\n\nconst { DICOMwebClient } = api;\n\nconst anyDicomwebClient = DICOMwebClient as any;\n\n// Ugly over-ride, but the internals aren't otherwise accessible.\nif (!anyDicomwebClient._orig_buildMultipartAcceptHeaderFieldValue) {\n  anyDicomwebClient._orig_buildMultipartAcceptHeaderFieldValue =\n    anyDicomwebClient._buildMultipartAcceptHeaderFieldValue;\n  anyDicomwebClient._buildMultipartAcceptHeaderFieldValue = function (mediaTypes, acceptableTypes) {\n    if (mediaTypes.length === 1 && mediaTypes[0].mediaType.endsWith('/*')) {\n      return '*/*';\n    } else {\n      return anyDicomwebClient._orig_buildMultipartAcceptHeaderFieldValue(\n        mediaTypes,\n        acceptableTypes\n      );\n    }\n  };\n}\n\n/**\n * An implementation of the static wado client, that fetches data from\n * a static response rather than actually doing real queries.  This allows\n * fast encoding of test data, but because it is static, anything actually\n * performing searches doesn't work.  This version fixes the query issue\n * by manually implementing a query option.\n */\n\nexport default class StaticWadoClient extends api.DICOMwebClient {\n  static studyFilterKeys = {\n    studyinstanceuid: '0020000D',\n    patientname: '00100010',\n    '00100020': 'mrn',\n    studydescription: '00081030',\n    studydate: '00080020',\n    modalitiesinstudy: '00080061',\n    accessionnumber: '00080050',\n  };\n\n  static seriesFilterKeys = {\n    seriesinstanceuid: '0020000E',\n    seriesnumber: '00200011',\n    modality: '00080060',\n  };\n\n  protected config;\n  protected staticWado;\n\n  constructor(config) {\n    super(config);\n    this.staticWado = config.staticWado;\n    this.config = config;\n  }\n\n  /**\n   * Handle improperly specified multipart/related return type.\n   * Note if the response is SUPPOSED to be multipart encoded already, then this\n   * will double-decode it.\n   *\n   * @param options\n   * @returns De-multiparted response data.\n   *\n   */\n  public retrieveBulkData(options): Promise<any[]> {\n    const shouldFixMultipart = this.config.fixBulkdataMultipart !== false;\n    const useOptions = {\n      ...options,\n    };\n    if (this.staticWado) {\n      useOptions.mediaTypes = [{ mediaType: 'application/*' }];\n    }\n    return super\n      .retrieveBulkData(useOptions)\n      .then(result => (shouldFixMultipart ? fixMultipart(result) : result));\n  }\n\n  /**\n   * Retrieves instance frames using the image/* media type when configured\n   * to do so (static wado back end).\n   */\n  public retrieveInstanceFrames(options) {\n    if (this.staticWado) {\n      return super.retrieveInstanceFrames({\n        ...options,\n        mediaTypes: [{ mediaType: 'image/*' }],\n      });\n    } else {\n      return super.retrieveInstanceFrames(options);\n    }\n  }\n\n  /**\n   * Replace the search for studies remote query with a local version which\n   * retrieves a complete query list and then sub-selects from it locally.\n   * @param {*} options\n   * @returns\n   */\n  async searchForStudies(options) {\n    if (!this.staticWado) {\n      return super.searchForStudies(options);\n    }\n\n    const searchResult = await super.searchForStudies(options);\n    const { queryParams } = options;\n\n    if (!queryParams) {\n      return searchResult;\n    }\n\n    const lowerParams = this.toLowerParams(queryParams);\n    const filtered = searchResult.filter(study => {\n      for (const key of Object.keys(StaticWadoClient.studyFilterKeys)) {\n        if (!this.filterItem(key, lowerParams, study, StaticWadoClient.studyFilterKeys)) {\n          return false;\n        }\n      }\n      return true;\n    });\n    return filtered;\n  }\n\n  async searchForSeries(options) {\n    if (!this.staticWado) {\n      return super.searchForSeries(options);\n    }\n\n    const searchResult = await super.searchForSeries(options);\n    const { queryParams } = options;\n    if (!queryParams) {\n      return searchResult;\n    }\n    const lowerParams = this.toLowerParams(queryParams);\n\n    const filtered = searchResult.filter(series => {\n      for (const key of Object.keys(StaticWadoClient.seriesFilterKeys)) {\n        if (!this.filterItem(key, lowerParams, series, StaticWadoClient.seriesFilterKeys)) {\n          return false;\n        }\n      }\n      return true;\n    });\n\n    return filtered;\n  }\n\n  /**\n   * Compares values, matching any instance of desired to any instance of\n   * actual by recursively go through the paired set of values.  That is,\n   * this is O(m*n) where m is how many items in desired and n is the length of actual\n   * Then, at the individual item node, compares the Alphabetic name if present,\n   * and does a sub-string matching on string values, and otherwise does an\n   * exact match comparison.\n   *\n   * @param {*} desired\n   * @param {*} actual\n   * @returns true if the values match\n   */\n  compareValues(desired, actual) {\n    if (Array.isArray(desired)) {\n      return desired.find(item => this.compareValues(item, actual));\n    }\n    if (Array.isArray(actual)) {\n      return actual.find(actualItem => this.compareValues(desired, actualItem));\n    }\n    if (actual?.Alphabetic) {\n      actual = actual.Alphabetic;\n    }\n    if (typeof actual == 'string') {\n      if (actual.length === 0) {\n        return true;\n      }\n      if (desired.length === 0 || desired === '*') {\n        return true;\n      }\n      if (desired[0] === '*' && desired[desired.length - 1] === '*') {\n        // console.log(`Comparing ${actual} to ${desired.substring(1, desired.length - 1)}`)\n        return actual.indexOf(desired.substring(1, desired.length - 1)) != -1;\n      } else if (desired[desired.length - 1] === '*') {\n        return actual.indexOf(desired.substring(0, desired.length - 1)) != -1;\n      } else if (desired[0] === '*') {\n        return actual.indexOf(desired.substring(1)) === actual.length - desired.length + 1;\n      }\n    }\n    return desired === actual;\n  }\n\n  /** Compares a pair of dates to see if the value is within the range */\n  compareDateRange(range, value) {\n    if (!value) {\n      return true;\n    }\n    const dash = range.indexOf('-');\n    if (dash === -1) {\n      return this.compareValues(range, value);\n    }\n    const start = range.substring(0, dash);\n    const end = range.substring(dash + 1);\n    return (!start || value >= start) && (!end || value <= end);\n  }\n\n  /**\n   * Filters the return list by the query parameters.\n   *\n   * @param anyCaseKey - a possible search key\n   * @param queryParams -\n   * @param {*} study\n   * @param {*} sourceFilterMap\n   * @returns\n   */\n  filterItem(key: string, queryParams, study, sourceFilterMap) {\n    const altKey = sourceFilterMap[key] || key;\n    if (!queryParams) {\n      return true;\n    }\n    const testValue = queryParams[key] || queryParams[altKey];\n    if (!testValue) {\n      return true;\n    }\n    const valueElem = study[key] || study[altKey];\n    if (!valueElem) {\n      return false;\n    }\n    if (valueElem.vr === 'DA' && valueElem.Value?.[0]) {\n      return this.compareDateRange(testValue, valueElem.Value[0]);\n    }\n    const value = valueElem.Value;\n    return this.compareValues(testValue, value);\n  }\n\n  /** Converts the query parameters to lower case query parameters */\n  toLowerParams(queryParams: Record<string, unknown>): Record<string, unknown> {\n    const lowerParams = {};\n    Object.entries(queryParams).forEach(([key, value]) => {\n      lowerParams[key.toLowerCase()] = value;\n    });\n    return lowerParams;\n  }\n}\n","import { utils } from '@ohif/core';\n\n/**\n * Generates a URL that can be used for direct retrieve of the bulkdata\n *\n * @param {object} params\n * @param {string} params.tag is the tag name of the URL to retrieve\n * @param {string} params.defaultPath path for the pixel data url\n * @param {object} params.instance is the instance object that the tag is in\n * @param {string} params.defaultType is the mime type of the response\n * @param {string} params.singlepart is the type of the part to retrieve\n * @param {string} params.fetchPart unknown?\n * @param {string} params.url unknown?\n * @returns an absolute URL to the resource, if the absolute URL can be retrieved as singlepart,\n *    or is already retrieved, or a promise to a URL for such use if a BulkDataURI\n */\nconst getDirectURL = (config, params) => {\n  const { wadoRoot, singlepart } = config;\n  const {\n    instance,\n    tag = 'PixelData',\n    defaultPath = '/pixeldata',\n    defaultType = 'video/mp4',\n    singlepart: fetchPart = 'video',\n    url = null,\n  } = params;\n  if (url) {\n    return url;\n  }\n\n  const value = instance[tag];\n  if (!value) {\n    return undefined;\n  }\n\n  if (value.DirectRetrieveURL) {\n    return value.DirectRetrieveURL;\n  }\n  if (value.InlineBinary) {\n    const blob = utils.b64toBlob(value.InlineBinary, defaultType);\n    value.DirectRetrieveURL = URL.createObjectURL(blob);\n    return value.DirectRetrieveURL;\n  }\n  if (!singlepart || (singlepart !== true && singlepart.indexOf(fetchPart) === -1)) {\n    if (value.retrieveBulkData) {\n      // Try the specified retrieve type.\n      const options = {\n        mediaType: defaultType,\n      };\n      return value.retrieveBulkData(options).then(arr => {\n        value.DirectRetrieveURL = URL.createObjectURL(new Blob([arr], { type: defaultType }));\n        return value.DirectRetrieveURL;\n      });\n    }\n    console.warn('Unable to retrieve', tag, 'from', instance);\n    return undefined;\n  }\n\n  const { StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID } = instance;\n  const BulkDataURI =\n    (value && value.BulkDataURI) ||\n    `series/${SeriesInstanceUID}/instances/${SOPInstanceUID}${defaultPath}`;\n  const hasQuery = BulkDataURI.indexOf('?') !== -1;\n  const hasAccept = BulkDataURI.indexOf('accept=') !== -1;\n  const acceptUri =\n    BulkDataURI + (hasAccept ? '' : (hasQuery ? '&' : '?') + `accept=${defaultType}`);\n\n  if (tag === 'PixelData' || tag === 'EncapsulatedDocument') {\n    return `${wadoRoot}/studies/${StudyInstanceUID}/series/${SeriesInstanceUID}/instances/${SOPInstanceUID}/rendered`;\n  }\n\n  // The DICOMweb standard states that the default is multipart related, and then\n  // separately states that the accept parameter is the URL parameter equivalent of the accept header.\n  return acceptUri;\n};\n\nexport default getDirectURL;\n","/**\n * Modifies a bulkDataURI to ensure it is absolute based on the DICOMWeb configuration and\n * instance data. The modification is in-place.\n *\n * If the bulkDataURI is relative to the series or study (according to the DICOM standard),\n * it is made absolute by prepending the relevant paths.\n *\n * In scenarios where the bulkDataURI is a server-relative path (starting with '/'), the function\n * handles two cases:\n *\n * 1. If the wado root is absolute (starts with 'http'), it prepends the wado root to the bulkDataURI.\n * 2. If the wado root is relative, no changes are needed as the bulkDataURI is already correctly relative to the server root.\n *\n * @param value - The object containing BulkDataURI to be fixed.\n * @param instance - The object (DICOM instance data) containing StudyInstanceUID and SeriesInstanceUID.\n * @param dicomWebConfig - The DICOMWeb configuration object, containing wadoRoot and potentially bulkDataURI.relativeResolution.\n * @returns The function modifies `value` in-place, it does not return a value.\n */\nfunction fixBulkDataURI(value, instance, dicomWebConfig) {\n  // in case of the relative path, make it absolute. The current DICOM standard says\n  // the bulkdataURI is relative to the series. However, there are situations where\n  // it can be relative to the study too\n  if (!value.BulkDataURI.startsWith('http') && !value.BulkDataURI.startsWith('/')) {\n    if (dicomWebConfig.bulkDataURI?.relativeResolution === 'studies') {\n      value.BulkDataURI = `${dicomWebConfig.wadoRoot}/studies/${instance.StudyInstanceUID}/${value.BulkDataURI}`;\n    } else if (\n      dicomWebConfig.bulkDataURI?.relativeResolution === 'series' ||\n      !dicomWebConfig.bulkDataURI?.relativeResolution\n    ) {\n      value.BulkDataURI = `${dicomWebConfig.wadoRoot}/studies/${instance.StudyInstanceUID}/series/${instance.SeriesInstanceUID}/${value.BulkDataURI}`;\n    }\n\n    return;\n  }\n\n  // in case it is relative path but starts at the server (e.g., /bulk/1e, note the missing http\n  // in the beginning and the first character is /) There are two scenarios, whether the wado root\n  // is absolute or relative. In case of absolute, we need to prepend the wado root to the bulkdata\n  // uri (e.g., bulkData: /bulk/1e, wado root: http://myserver.com/dicomweb, output: http://myserver.com/bulk/1e)\n  // and in case of relative wado root, we need to prepend the bulkdata uri to the wado root (e.g,. bulkData: /bulk/1e\n  // wado root: /dicomweb, output: /bulk/1e)\n  if (value.BulkDataURI[0] === '/') {\n    if (dicomWebConfig.wadoRoot.startsWith('http')) {\n      // Absolute wado root\n      const url = new URL(dicomWebConfig.wadoRoot);\n      value.BulkDataURI = `${url.origin}${value.BulkDataURI}`;\n    } else {\n      // Relative wado root, we don't need to do anything, bulkdata uri is already correct\n    }\n  }\n}\n\nexport { fixBulkDataURI };\n","import { api } from 'dicomweb-client';\nimport { DicomMetadataStore, IWebApiDataSource, utils, errorHandler, classes } from '@ohif/core';\n\nimport {\n  mapParams,\n  search as qidoSearch,\n  seriesInStudy,\n  processResults,\n  processSeriesResults,\n} from './qido.js';\nimport dcm4cheeReject from './dcm4cheeReject';\n\nimport getImageId from './utils/getImageId';\nimport dcmjs from 'dcmjs';\nimport { retrieveStudyMetadata, deleteStudyMetadataPromise } from './retrieveStudyMetadata.js';\nimport StaticWadoClient from './utils/StaticWadoClient';\nimport getDirectURL from '../utils/getDirectURL';\nimport { fixBulkDataURI } from './utils/fixBulkDataURI';\n\nconst { DicomMetaDictionary, DicomDict } = dcmjs.data;\n\nconst { naturalizeDataset, denaturalizeDataset } = DicomMetaDictionary;\n\nconst ImplementationClassUID = '2.25.270695996825855179949881587723571202391.2.0.0';\nconst ImplementationVersionName = 'OHIF-VIEWER-2.0.0';\nconst EXPLICIT_VR_LITTLE_ENDIAN = '1.2.840.10008.1.2.1';\n\nconst metadataProvider = classes.MetadataProvider;\n\n/**\n * Creates a DICOM Web API based on the provided configuration.\n *\n * @param {object} dicomWebConfig - Configuration for the DICOM Web API\n * @param {string} dicomWebConfig.name - Data source name\n * @param {string} dicomWebConfig.wadoUriRoot - Legacy? (potentially unused/replaced)\n * @param {string} dicomWebConfig.qidoRoot - Base URL to use for QIDO requests\n * @param {string} dicomWebConfig.wadoRoot - Base URL to use for WADO requests\n * @param {string} dicomWebConfig.wadoUri - Base URL to use for WADO URI requests\n * @param {boolean} dicomWebConfig.qidoSupportsIncludeField - Whether QIDO supports the \"Include\" option to request additional fields in response\n * @param {string} dicomWebConfig.imageRendering - wadors | ? (unsure of where/how this is used)\n * @param {string} dicomWebConfig.thumbnailRendering - wadors | ? (unsure of where/how this is used)\n * @param {boolean} dicomWebConfig.supportsReject - Whether the server supports reject calls (i.e. DCM4CHEE)\n * @param {boolean} dicomWebConfig.lazyLoadStudy - \"enableStudyLazyLoad\"; Request series meta async instead of blocking\n * @param {string|boolean} dicomWebConfig.singlepart - indicates if the retrieves can fetch singlepart. Options are bulkdata, video, image, or boolean true\n * @param {string} dicomWebConfig.requestTransferSyntaxUID - Transfer syntax to request from the server\n * @param {object} dicomWebConfig.acceptHeader - Accept header to use for requests\n * @param {boolean} dicomWebConfig.omitQuotationForMultipartRequest - Whether to omit quotation marks for multipart requests\n * @param {boolean} dicomWebConfig.supportsFuzzyMatching - Whether the server supports fuzzy matching\n * @param {boolean} dicomWebConfig.supportsWildcard - Whether the server supports wildcard matching\n * @param {boolean} dicomWebConfig.supportsNativeDICOMModel - Whether the server supports the native DICOM model\n * @param {boolean} dicomWebConfig.enableStudyLazyLoad - Whether to enable study lazy loading\n * @param {boolean} dicomWebConfig.enableRequestTag - Whether to enable request tag\n * @param {boolean} dicomWebConfig.enableStudyLazyLoad - Whether to enable study lazy loading\n * @param {boolean} dicomWebConfig.bulkDataURI - Whether to enable bulkDataURI\n * @param {function} dicomWebConfig.onConfiguration - Function that is called after the configuration is initialized\n * @param {boolean} dicomWebConfig.staticWado - Whether to use the static WADO client\n * @param {object} userAuthenticationService - User authentication service\n * @param {object} userAuthenticationService.getAuthorizationHeader - Function that returns the authorization header\n * @returns {object} - DICOM Web API object\n */\nfunction createDicomWebApi(dicomWebConfig, servicesManager) {\n  const { userAuthenticationService, customizationService } = servicesManager.services;\n  let dicomWebConfigCopy,\n    qidoConfig,\n    wadoConfig,\n    qidoDicomWebClient,\n    wadoDicomWebClient,\n    getAuthrorizationHeader,\n    generateWadoHeader;\n\n  const implementation = {\n    initialize: ({ params, query }) => {\n      if (dicomWebConfig.onConfiguration && typeof dicomWebConfig.onConfiguration === 'function') {\n        dicomWebConfig = dicomWebConfig.onConfiguration(dicomWebConfig, {\n          params,\n          query,\n        });\n      }\n\n      dicomWebConfigCopy = JSON.parse(JSON.stringify(dicomWebConfig));\n\n      getAuthrorizationHeader = () => {\n        const xhrRequestHeaders = {};\n        const authHeaders = userAuthenticationService.getAuthorizationHeader();\n        if (authHeaders && authHeaders.Authorization) {\n          xhrRequestHeaders.Authorization = authHeaders.Authorization;\n        }\n        return xhrRequestHeaders;\n      };\n\n      generateWadoHeader = () => {\n        let authorizationHeader = getAuthrorizationHeader();\n        //Generate accept header depending on config params\n        let formattedAcceptHeader = utils.generateAcceptHeader(\n          dicomWebConfig.acceptHeader,\n          dicomWebConfig.requestTransferSyntaxUID,\n          dicomWebConfig.omitQuotationForMultipartRequest\n        );\n\n        return {\n          ...authorizationHeader,\n          Accept: formattedAcceptHeader,\n        };\n      };\n\n      qidoConfig = {\n        url: dicomWebConfig.qidoRoot,\n        staticWado: dicomWebConfig.staticWado,\n        singlepart: dicomWebConfig.singlepart,\n        headers: userAuthenticationService.getAuthorizationHeader(),\n        errorInterceptor: errorHandler.getHTTPErrorHandler(),\n      };\n\n      wadoConfig = {\n        url: dicomWebConfig.wadoRoot,\n        staticWado: dicomWebConfig.staticWado,\n        singlepart: dicomWebConfig.singlepart,\n        headers: userAuthenticationService.getAuthorizationHeader(),\n        errorInterceptor: errorHandler.getHTTPErrorHandler(),\n      };\n\n      // TODO -> Two clients sucks, but its better than 1000.\n      // TODO -> We'll need to merge auth later.\n      qidoDicomWebClient = dicomWebConfig.staticWado\n        ? new StaticWadoClient(qidoConfig)\n        : new api.DICOMwebClient(qidoConfig);\n\n      wadoDicomWebClient = dicomWebConfig.staticWado\n        ? new StaticWadoClient(wadoConfig)\n        : new api.DICOMwebClient(wadoConfig);\n    },\n    query: {\n      studies: {\n        mapParams: mapParams.bind(),\n        search: async function (origParams) {\n          qidoDicomWebClient.headers = getAuthrorizationHeader();\n          const { studyInstanceUid, seriesInstanceUid, ...mappedParams } =\n            mapParams(origParams, {\n              supportsFuzzyMatching: dicomWebConfig.supportsFuzzyMatching,\n              supportsWildcard: dicomWebConfig.supportsWildcard,\n            }) || {};\n\n          const results = await qidoSearch(qidoDicomWebClient, undefined, undefined, mappedParams);\n\n          return processResults(results);\n        },\n        processResults: processResults.bind(),\n      },\n      series: {\n        // mapParams: mapParams.bind(),\n        search: async function (studyInstanceUid) {\n          qidoDicomWebClient.headers = getAuthrorizationHeader();\n          const results = await seriesInStudy(qidoDicomWebClient, studyInstanceUid);\n\n          return processSeriesResults(results);\n        },\n        // processResults: processResults.bind(),\n      },\n      instances: {\n        search: (studyInstanceUid, queryParameters) => {\n          qidoDicomWebClient.headers = getAuthrorizationHeader();\n          return qidoSearch.call(\n            undefined,\n            qidoDicomWebClient,\n            studyInstanceUid,\n            null,\n            queryParameters\n          );\n        },\n      },\n    },\n    retrieve: {\n      /**\n       * Generates a URL that can be used for direct retrieve of the bulkdata\n       *\n       * @param {object} params\n       * @param {string} params.tag is the tag name of the URL to retrieve\n       * @param {object} params.instance is the instance object that the tag is in\n       * @param {string} params.defaultType is the mime type of the response\n       * @param {string} params.singlepart is the type of the part to retrieve\n       * @returns an absolute URL to the resource, if the absolute URL can be retrieved as singlepart,\n       *    or is already retrieved, or a promise to a URL for such use if a BulkDataURI\n       */\n      directURL: params => {\n        return getDirectURL(\n          {\n            wadoRoot: dicomWebConfig.wadoRoot,\n            singlepart: dicomWebConfig.singlepart,\n          },\n          params\n        );\n      },\n      bulkDataURI: async ({ StudyInstanceUID, BulkDataURI }) => {\n        qidoDicomWebClient.headers = getAuthrorizationHeader();\n        const options = {\n          multipart: false,\n          BulkDataURI,\n          StudyInstanceUID,\n        };\n        return qidoDicomWebClient.retrieveBulkData(options).then(val => {\n          const ret = (val && val[0]) || undefined;\n          return ret;\n        });\n      },\n      series: {\n        metadata: async ({\n          StudyInstanceUID,\n          filters,\n          sortCriteria,\n          sortFunction,\n          madeInClient = false,\n          returnPromises = false,\n        } = {}) => {\n          if (!StudyInstanceUID) {\n            throw new Error('Unable to query for SeriesMetadata without StudyInstanceUID');\n          }\n\n          if (dicomWebConfig.enableStudyLazyLoad) {\n            return implementation._retrieveSeriesMetadataAsync(\n              StudyInstanceUID,\n              filters,\n              sortCriteria,\n              sortFunction,\n              madeInClient,\n              returnPromises\n            );\n          }\n\n          return implementation._retrieveSeriesMetadataSync(\n            StudyInstanceUID,\n            filters,\n            sortCriteria,\n            sortFunction,\n            madeInClient\n          );\n        },\n      },\n    },\n\n    store: {\n      dicom: async (dataset, request, dicomDict) => {\n        wadoDicomWebClient.headers = getAuthrorizationHeader();\n        if (dataset instanceof ArrayBuffer) {\n          const options = {\n            datasets: [dataset],\n            request,\n          };\n          await wadoDicomWebClient.storeInstances(options);\n        } else {\n          let effectiveDicomDict = dicomDict;\n\n          if (!dicomDict) {\n            const meta = {\n              FileMetaInformationVersion: dataset._meta?.FileMetaInformationVersion?.Value,\n              MediaStorageSOPClassUID: dataset.SOPClassUID,\n              MediaStorageSOPInstanceUID: dataset.SOPInstanceUID,\n              TransferSyntaxUID: EXPLICIT_VR_LITTLE_ENDIAN,\n              ImplementationClassUID,\n              ImplementationVersionName,\n            };\n\n            const denaturalized = denaturalizeDataset(meta);\n            const defaultDicomDict = new DicomDict(denaturalized);\n            defaultDicomDict.dict = denaturalizeDataset(dataset);\n\n            effectiveDicomDict = defaultDicomDict;\n          }\n\n          const part10Buffer = effectiveDicomDict.write();\n\n          const options = {\n            datasets: [part10Buffer],\n            request,\n          };\n\n          await wadoDicomWebClient.storeInstances(options);\n        }\n      },\n    },\n\n    _retrieveSeriesMetadataSync: async (\n      StudyInstanceUID,\n      filters,\n      sortCriteria,\n      sortFunction,\n      madeInClient\n    ) => {\n      const enableStudyLazyLoad = false;\n      wadoDicomWebClient.headers = generateWadoHeader();\n      // data is all SOPInstanceUIDs\n      const data = await retrieveStudyMetadata(\n        wadoDicomWebClient,\n        StudyInstanceUID,\n        enableStudyLazyLoad,\n        filters,\n        sortCriteria,\n        sortFunction,\n        dicomWebConfig\n      );\n\n      // first naturalize the data\n      const naturalizedInstancesMetadata = data.map(naturalizeDataset);\n\n      const seriesSummaryMetadata = {};\n      const instancesPerSeries = {};\n\n      naturalizedInstancesMetadata.forEach(instance => {\n        if (!seriesSummaryMetadata[instance.SeriesInstanceUID]) {\n          seriesSummaryMetadata[instance.SeriesInstanceUID] = {\n            StudyInstanceUID: instance.StudyInstanceUID,\n            StudyDescription: instance.StudyDescription,\n            SeriesInstanceUID: instance.SeriesInstanceUID,\n            SeriesDescription: instance.SeriesDescription,\n            SeriesNumber: instance.SeriesNumber,\n            SeriesTime: instance.SeriesTime,\n            SOPClassUID: instance.SOPClassUID,\n            ProtocolName: instance.ProtocolName,\n            Modality: instance.Modality,\n          };\n        }\n\n        if (!instancesPerSeries[instance.SeriesInstanceUID]) {\n          instancesPerSeries[instance.SeriesInstanceUID] = [];\n        }\n\n        const imageId = implementation.getImageIdsForInstance({\n          instance,\n        });\n\n        instance.imageId = imageId;\n        instance.wadoRoot = dicomWebConfig.wadoRoot;\n        instance.wadoUri = dicomWebConfig.wadoUri;\n\n        metadataProvider.addImageIdToUIDs(imageId, {\n          StudyInstanceUID,\n          SeriesInstanceUID: instance.SeriesInstanceUID,\n          SOPInstanceUID: instance.SOPInstanceUID,\n        });\n\n        instancesPerSeries[instance.SeriesInstanceUID].push(instance);\n      });\n\n      // grab all the series metadata\n      const seriesMetadata = Object.values(seriesSummaryMetadata);\n      DicomMetadataStore.addSeriesMetadata(seriesMetadata, madeInClient);\n\n      Object.keys(instancesPerSeries).forEach(seriesInstanceUID =>\n        DicomMetadataStore.addInstances(instancesPerSeries[seriesInstanceUID], madeInClient)\n      );\n\n      return seriesSummaryMetadata;\n    },\n\n    _retrieveSeriesMetadataAsync: async (\n      StudyInstanceUID,\n      filters,\n      sortCriteria,\n      sortFunction,\n      madeInClient = false,\n      returnPromises = false\n    ) => {\n      const enableStudyLazyLoad = true;\n      wadoDicomWebClient.headers = generateWadoHeader();\n      // Get Series\n      const { preLoadData: seriesSummaryMetadata, promises: seriesPromises } =\n        await retrieveStudyMetadata(\n          wadoDicomWebClient,\n          StudyInstanceUID,\n          enableStudyLazyLoad,\n          filters,\n          sortCriteria,\n          sortFunction,\n          dicomWebConfig\n        );\n\n      /**\n       * naturalizes the dataset, and adds a retrieve bulkdata method\n       * to any values containing BulkDataURI.\n       * @param {*} instance\n       * @returns naturalized dataset, with retrieveBulkData methods\n       */\n      const addRetrieveBulkData = instance => {\n        const naturalized = naturalizeDataset(instance);\n\n        // if we know the server doesn't use bulkDataURI, then don't\n        if (!dicomWebConfig.bulkDataURI?.enabled) {\n          return naturalized;\n        }\n\n        Object.keys(naturalized).forEach(key => {\n          const value = naturalized[key];\n\n          // The value.Value will be set with the bulkdata read value\n          // in which case it isn't necessary to re-read this.\n          if (value && value.BulkDataURI && !value.Value) {\n            // Provide a method to fetch bulkdata\n            value.retrieveBulkData = (options = {}) => {\n              // handle the scenarios where bulkDataURI is relative path\n              fixBulkDataURI(value, naturalized, dicomWebConfig);\n\n              const { mediaType } = options;\n              const useOptions = {\n                // The bulkdata fetches work with either multipart or\n                // singlepart, so set multipart to false to let the server\n                // decide which type to respond with.\n                multipart: false,\n                BulkDataURI: value.BulkDataURI,\n                // The study instance UID is required if the bulkdata uri\n                // is relative - that isn't disallowed by DICOMweb, but\n                // isn't well specified in the standard, but is needed in\n                // any implementation that stores static copies of the metadata\n                StudyInstanceUID: naturalized.StudyInstanceUID,\n                mediaTypes: mediaType\n                  ? [{ mediaType }, { mediaType: 'application/octet-stream' }]\n                  : undefined,\n                ...options,\n              };\n              // Todo: this needs to be from wado dicom web client\n              return qidoDicomWebClient.retrieveBulkData(useOptions).then(val => {\n                // There are DICOM PDF cases where the first ArrayBuffer in the array is\n                // the bulk data and DICOM video cases where the second ArrayBuffer is\n                // the bulk data. Here we play it safe and do a find.\n                const ret =\n                  (val instanceof Array && val.find(arrayBuffer => arrayBuffer?.byteLength)) ||\n                  undefined;\n                value.Value = ret;\n                return ret;\n              });\n            };\n          }\n        });\n        return naturalized;\n      };\n\n      // Async load series, store as retrieved\n      function storeInstances(instances) {\n        const naturalizedInstances = instances.map(addRetrieveBulkData);\n\n        // Adding instanceMetadata to OHIF MetadataProvider\n        naturalizedInstances.forEach(instance => {\n          instance.wadoRoot = dicomWebConfig.wadoRoot;\n          instance.wadoUri = dicomWebConfig.wadoUri;\n\n          const imageId = implementation.getImageIdsForInstance({\n            instance,\n          });\n\n          // Adding imageId to each instance\n          // Todo: This is not the best way I can think of to let external\n          // metadata handlers know about the imageId that is stored in the store\n          instance.imageId = imageId;\n\n          // Adding UIDs to metadataProvider\n          // Note: storing imageURI in metadataProvider since stack viewports\n          // will use the same imageURI\n          metadataProvider.addImageIdToUIDs(imageId, {\n            StudyInstanceUID,\n            SeriesInstanceUID: instance.SeriesInstanceUID,\n            SOPInstanceUID: instance.SOPInstanceUID,\n          });\n        });\n\n        DicomMetadataStore.addInstances(naturalizedInstances, madeInClient);\n      }\n\n      function setSuccessFlag() {\n        const study = DicomMetadataStore.getStudy(StudyInstanceUID);\n        if (!study) {\n          return;\n        }\n        study.isLoaded = true;\n      }\n\n      // Google Cloud Healthcare doesn't return StudyInstanceUID, so we need to add\n      // it manually here\n      seriesSummaryMetadata.forEach(aSeries => {\n        aSeries.StudyInstanceUID = StudyInstanceUID;\n      });\n\n      DicomMetadataStore.addSeriesMetadata(seriesSummaryMetadata, madeInClient);\n\n      const seriesDeliveredPromises = seriesPromises.map(promise => {\n        if (!returnPromises) {\n          promise?.start();\n        }\n        return promise.then(instances => {\n          storeInstances(instances);\n        });\n      });\n\n      if (returnPromises) {\n        Promise.all(seriesDeliveredPromises).then(() => setSuccessFlag());\n        return seriesPromises;\n      } else {\n        await Promise.all(seriesDeliveredPromises);\n        setSuccessFlag();\n      }\n\n      return seriesSummaryMetadata;\n    },\n    deleteStudyMetadataPromise,\n    getImageIdsForDisplaySet(displaySet) {\n      const images = displaySet.images;\n      const imageIds = [];\n\n      if (!images) {\n        return imageIds;\n      }\n\n      displaySet.images.forEach(instance => {\n        const NumberOfFrames = instance.NumberOfFrames;\n\n        if (NumberOfFrames > 1) {\n          for (let frame = 1; frame <= NumberOfFrames; frame++) {\n            const imageId = this.getImageIdsForInstance({\n              instance,\n              frame,\n            });\n            imageIds.push(imageId);\n          }\n        } else {\n          const imageId = this.getImageIdsForInstance({ instance });\n          imageIds.push(imageId);\n        }\n      });\n\n      return imageIds;\n    },\n    getImageIdsForInstance({ instance, frame = undefined }) {\n      const imageIds = getImageId({\n        instance,\n        frame,\n        config: dicomWebConfig,\n      });\n      return imageIds;\n    },\n    getConfig() {\n      return dicomWebConfigCopy;\n    },\n    getStudyInstanceUIDs({ params, query }) {\n      const { StudyInstanceUIDs: paramsStudyInstanceUIDs } = params;\n      const queryStudyInstanceUIDs = utils.splitComma(query.getAll('StudyInstanceUIDs'));\n\n      const StudyInstanceUIDs =\n        (queryStudyInstanceUIDs.length && queryStudyInstanceUIDs) || paramsStudyInstanceUIDs;\n      const StudyInstanceUIDsAsArray =\n        StudyInstanceUIDs && Array.isArray(StudyInstanceUIDs)\n          ? StudyInstanceUIDs\n          : [StudyInstanceUIDs];\n\n      return StudyInstanceUIDsAsArray;\n    },\n  };\n\n  if (dicomWebConfig.supportsReject) {\n    implementation.reject = dcm4cheeReject(dicomWebConfig.wadoRoot);\n  }\n\n  return IWebApiDataSource.create(implementation);\n}\n\nexport { createDicomWebApi };\n","export default function (wadoRoot) {\n  return {\n    series: (StudyInstanceUID, SeriesInstanceUID) => {\n      return new Promise((resolve, reject) => {\n        // Reject because of Quality. (Seems the most sensible out of the options)\n        const CodeValueAndCodeSchemeDesignator = `113001%5EDCM`;\n\n        const url = `${wadoRoot}/studies/${StudyInstanceUID}/series/${SeriesInstanceUID}/reject/${CodeValueAndCodeSchemeDesignator}`;\n\n        const xhr = new XMLHttpRequest();\n        xhr.open('POST', url, true);\n\n        //Send the proper header information along with the request\n        // TODO -> Auth when we re-add authorization.\n\n        console.log(xhr);\n\n        xhr.onreadystatechange = function () {\n          //Call a function when the state changes.\n          if (xhr.readyState == 4) {\n            switch (xhr.status) {\n              case 204:\n                resolve(xhr.responseText);\n\n                break;\n              case 404:\n                reject('Your dataSource does not support reject functionality');\n            }\n          }\n        };\n        xhr.send();\n      });\n    },\n  };\n}\n","import { DicomMetadataStore, IWebApiDataSource } from '@ohif/core';\nimport OHIF from '@ohif/core';\n\nimport getImageId from '../DicomWebDataSource/utils/getImageId';\nimport getDirectURL from '../utils/getDirectURL';\n\nconst metadataProvider = OHIF.classes.MetadataProvider;\n\nconst mappings = {\n  studyInstanceUid: 'StudyInstanceUID',\n  patientId: 'PatientID',\n};\n\nlet _store = {\n  urls: [],\n  studyInstanceUIDMap: new Map(), // map of urls to array of study instance UIDs\n  // {\n  //   url: url1\n  //   studies: [Study1, Study2], // if multiple studies\n  // }\n  // {\n  //   url: url2\n  //   studies: [Study1],\n  // }\n  // }\n};\n\nfunction wrapSequences(obj) {\n  return Object.keys(obj).reduce(\n    (acc, key) => {\n      if (typeof obj[key] === 'object' && obj[key] !== null) {\n        // Recursively wrap sequences for nested objects\n        acc[key] = wrapSequences(obj[key]);\n      } else {\n        acc[key] = obj[key];\n      }\n      if (key.endsWith('Sequence')) {\n        acc[key] = OHIF.utils.addAccessors(acc[key]);\n      }\n      return acc;\n    },\n    Array.isArray(obj) ? [] : {}\n  );\n}\nconst getMetaDataByURL = url => {\n  return _store.urls.find(metaData => metaData.url === url);\n};\n\nconst findStudies = (key, value) => {\n  let studies = [];\n  _store.urls.map(metaData => {\n    metaData.studies.map(aStudy => {\n      if (aStudy[key] === value) {\n        studies.push(aStudy);\n      }\n    });\n  });\n  return studies;\n};\n\nfunction createDicomJSONApi(dicomJsonConfig) {\n  const { wadoRoot } = dicomJsonConfig;\n\n  const implementation = {\n    initialize: async ({ query, url }) => {\n      if (!url) {\n        url = query.get('url');\n      }\n      let metaData = getMetaDataByURL(url);\n\n      // if we have already cached the data from this specific url\n      // We are only handling one StudyInstanceUID to run; however,\n      // all studies for patientID will be put in the correct tab\n      if (metaData) {\n        return metaData.studies.map(aStudy => {\n          return aStudy.StudyInstanceUID;\n        });\n      }\n\n      const response = await fetch(url);\n      const data = await response.json();\n\n      let StudyInstanceUID;\n      let SeriesInstanceUID;\n      data.studies.forEach(study => {\n        StudyInstanceUID = study.StudyInstanceUID;\n\n        study.series.forEach(series => {\n          SeriesInstanceUID = series.SeriesInstanceUID;\n\n          series.instances.forEach(instance => {\n            const { url: imageId, metadata: naturalizedDicom } = instance;\n\n            // Add imageId specific mapping to this data as the URL isn't necessarliy WADO-URI.\n            metadataProvider.addImageIdToUIDs(imageId, {\n              StudyInstanceUID,\n              SeriesInstanceUID,\n              SOPInstanceUID: naturalizedDicom.SOPInstanceUID,\n            });\n          });\n        });\n      });\n\n      _store.urls.push({\n        url,\n        studies: [...data.studies],\n      });\n      _store.studyInstanceUIDMap.set(\n        url,\n        data.studies.map(study => study.StudyInstanceUID)\n      );\n    },\n    query: {\n      studies: {\n        mapParams: () => {},\n        search: async param => {\n          const [key, value] = Object.entries(param)[0];\n          const mappedParam = mappings[key];\n\n          // todo: should fetch from dicomMetadataStore\n          const studies = findStudies(mappedParam, value);\n\n          return studies.map(aStudy => {\n            return {\n              accession: aStudy.AccessionNumber,\n              date: aStudy.StudyDate,\n              description: aStudy.StudyDescription,\n              instances: aStudy.NumInstances,\n              modalities: aStudy.Modalities,\n              mrn: aStudy.PatientID,\n              patientName: aStudy.PatientName,\n              studyInstanceUid: aStudy.StudyInstanceUID,\n              NumInstances: aStudy.NumInstances,\n              time: aStudy.StudyTime,\n            };\n          });\n        },\n        processResults: () => {\n          console.warn(' DICOMJson QUERY processResults not implemented');\n        },\n      },\n      series: {\n        // mapParams: mapParams.bind(),\n        search: () => {\n          console.warn(' DICOMJson QUERY SERIES SEARCH not implemented');\n        },\n      },\n      instances: {\n        search: () => {\n          console.warn(' DICOMJson QUERY instances SEARCH not implemented');\n        },\n      },\n    },\n    retrieve: {\n      /**\n       * Generates a URL that can be used for direct retrieve of the bulkdata\n       *\n       * @param {object} params\n       * @param {string} params.tag is the tag name of the URL to retrieve\n       * @param {string} params.defaultPath path for the pixel data url\n       * @param {object} params.instance is the instance object that the tag is in\n       * @param {string} params.defaultType is the mime type of the response\n       * @param {string} params.singlepart is the type of the part to retrieve\n       * @param {string} params.fetchPart unknown?\n       * @returns an absolute URL to the resource, if the absolute URL can be retrieved as singlepart,\n       *    or is already retrieved, or a promise to a URL for such use if a BulkDataURI\n       */\n      directURL: params => {\n        return getDirectURL(dicomJsonConfig, params);\n      },\n      series: {\n        metadata: async ({ StudyInstanceUID, madeInClient = false, customSort } = {}) => {\n          if (!StudyInstanceUID) {\n            throw new Error('Unable to query for SeriesMetadata without StudyInstanceUID');\n          }\n\n          const study = findStudies('StudyInstanceUID', StudyInstanceUID)[0];\n          let series;\n\n          if (customSort) {\n            series = customSort(study.series);\n          } else {\n            series = study.series;\n          }\n\n          const seriesSummaryMetadata = series.map(series => {\n            const seriesSummary = {\n              StudyInstanceUID: study.StudyInstanceUID,\n              ...series,\n            };\n            delete seriesSummary.instances;\n            return seriesSummary;\n          });\n\n          // Async load series, store as retrieved\n          function storeInstances(naturalizedInstances) {\n            DicomMetadataStore.addInstances(naturalizedInstances, madeInClient);\n          }\n\n          DicomMetadataStore.addSeriesMetadata(seriesSummaryMetadata, madeInClient);\n\n          function setSuccessFlag() {\n            const study = DicomMetadataStore.getStudy(StudyInstanceUID, madeInClient);\n            study.isLoaded = true;\n          }\n\n          const numberOfSeries = series.length;\n          series.forEach((series, index) => {\n            const instances = series.instances.map(instance => {\n              // for instance.metadata if the key ends with sequence then\n              // we need to add a proxy to the first item in the sequence\n              // so that we can access the value of the sequence\n              // by using sequenceName.value\n              const modifiedMetadata = wrapSequences(instance.metadata);\n\n              const obj = {\n                ...modifiedMetadata,\n                url: instance.url,\n                imageId: instance.url,\n                ...series,\n                ...study,\n              };\n              delete obj.instances;\n              delete obj.series;\n              return obj;\n            });\n            storeInstances(instances);\n            if (index === numberOfSeries - 1) {\n              setSuccessFlag();\n            }\n          });\n        },\n      },\n    },\n    store: {\n      dicom: () => {\n        console.warn(' DICOMJson store dicom not implemented');\n      },\n    },\n    getImageIdsForDisplaySet(displaySet) {\n      const images = displaySet.images;\n      const imageIds = [];\n\n      if (!images) {\n        return imageIds;\n      }\n\n      displaySet.images.forEach(instance => {\n        const NumberOfFrames = instance.NumberOfFrames;\n\n        if (NumberOfFrames > 1) {\n          for (let i = 0; i < NumberOfFrames; i++) {\n            const imageId = getImageId({\n              instance,\n              frame: i,\n              config: dicomJsonConfig,\n            });\n            imageIds.push(imageId);\n          }\n        } else {\n          const imageId = getImageId({ instance, config: dicomJsonConfig });\n          imageIds.push(imageId);\n        }\n      });\n\n      return imageIds;\n    },\n    getImageIdsForInstance({ instance, frame }) {\n      const imageIds = getImageId({ instance, frame });\n      return imageIds;\n    },\n    getStudyInstanceUIDs: ({ params, query }) => {\n      const url = query.get('url');\n      return _store.studyInstanceUIDMap.get(url);\n    },\n  };\n  return IWebApiDataSource.create(implementation);\n}\n\nexport { createDicomJSONApi };\n","import { DicomMetadataStore, IWebApiDataSource, utils } from '@ohif/core';\nimport OHIF from '@ohif/core';\nimport dcmjs from 'dcmjs';\n\nconst metadataProvider = OHIF.classes.MetadataProvider;\nconst { EVENTS } = DicomMetadataStore;\n\nconst END_MODALITIES = {\n  SR: true,\n  SEG: true,\n  DOC: true,\n};\n\nconst compareValue = (v1, v2, def = 0) => {\n  if (v1 === v2) {\n    return def;\n  }\n  if (v1 < v2) {\n    return -1;\n  }\n  return 1;\n};\n\n// Sorting SR modalities to be at the end of series list\nconst customSort = (seriesA, seriesB) => {\n  const instanceA = seriesA.instances[0];\n  const instanceB = seriesB.instances[0];\n  const modalityA = instanceA.Modality;\n  const modalityB = instanceB.Modality;\n\n  const isEndA = END_MODALITIES[modalityA];\n  const isEndB = END_MODALITIES[modalityB];\n\n  if (isEndA && isEndB) {\n    // Compare by series date\n    return compareValue(instanceA.SeriesNumber, instanceB.SeriesNumber);\n  }\n  if (!isEndA && !isEndB) {\n    return compareValue(instanceB.SeriesNumber, instanceA.SeriesNumber);\n  }\n  return isEndA ? -1 : 1;\n};\n\nfunction createDicomLocalApi(dicomLocalConfig) {\n  const { name } = dicomLocalConfig;\n\n  const implementation = {\n    initialize: ({ params, query }) => {},\n    query: {\n      studies: {\n        mapParams: () => {},\n        search: params => {\n          const studyUIDs = DicomMetadataStore.getStudyInstanceUIDs();\n\n          return studyUIDs.map(StudyInstanceUID => {\n            let numInstances = 0;\n            const modalities = new Set();\n\n            // Calculating the number of instances in the study and modalities\n            // present in the study\n            const study = DicomMetadataStore.getStudy(StudyInstanceUID);\n            study.series.forEach(aSeries => {\n              numInstances += aSeries.instances.length;\n              modalities.add(aSeries.instances[0].Modality);\n            });\n\n            // first instance in the first series\n            const firstInstance = study?.series[0]?.instances[0];\n\n            if (firstInstance) {\n              return {\n                accession: firstInstance.AccessionNumber,\n                date: firstInstance.StudyDate,\n                description: firstInstance.StudyDescription,\n                mrn: firstInstance.PatientID,\n                patientName: utils.formatPN(firstInstance.PatientName),\n                studyInstanceUid: firstInstance.StudyInstanceUID,\n                time: firstInstance.StudyTime,\n                //\n                instances: numInstances,\n                modalities: Array.from(modalities).join('/'),\n                NumInstances: numInstances,\n              };\n            }\n          });\n        },\n        processResults: () => {\n          console.warn(' DICOMLocal QUERY processResults not implemented');\n        },\n      },\n      series: {\n        search: studyInstanceUID => {\n          const study = DicomMetadataStore.getStudy(studyInstanceUID);\n          return study.series.map(aSeries => {\n            const firstInstance = aSeries?.instances[0];\n            return {\n              studyInstanceUid: studyInstanceUID,\n              seriesInstanceUid: firstInstance.SeriesInstanceUID,\n              modality: firstInstance.Modality,\n              seriesNumber: firstInstance.SeriesNumber,\n              seriesDate: firstInstance.SeriesDate,\n              numSeriesInstances: aSeries.instances.length,\n              description: firstInstance.SeriesDescription,\n            };\n          });\n        },\n      },\n      instances: {\n        search: () => {\n          console.warn(' DICOMLocal QUERY instances SEARCH not implemented');\n        },\n      },\n    },\n    retrieve: {\n      directURL: params => {\n        const { instance, tag, defaultType } = params;\n\n        const value = instance[tag];\n        if (value instanceof Array && value[0] instanceof ArrayBuffer) {\n          return URL.createObjectURL(\n            new Blob([value[0]], {\n              type: defaultType,\n            })\n          );\n        }\n      },\n      series: {\n        metadata: async ({ StudyInstanceUID, madeInClient = false } = {}) => {\n          if (!StudyInstanceUID) {\n            throw new Error('Unable to query for SeriesMetadata without StudyInstanceUID');\n          }\n\n          // Instances metadata already added via local upload\n          const study = DicomMetadataStore.getStudy(StudyInstanceUID, madeInClient);\n\n          // Series metadata already added via local upload\n          DicomMetadataStore._broadcastEvent(EVENTS.SERIES_ADDED, {\n            StudyInstanceUID,\n            madeInClient,\n          });\n\n          study.series.forEach(aSeries => {\n            const { SeriesInstanceUID } = aSeries;\n\n            const isMultiframe = aSeries.instances[0].NumberOfFrames > 1;\n\n            aSeries.instances.forEach((instance, index) => {\n              const {\n                url: imageId,\n                StudyInstanceUID,\n                SeriesInstanceUID,\n                SOPInstanceUID,\n              } = instance;\n\n              instance.imageId = imageId;\n\n              // Add imageId specific mapping to this data as the URL isn't necessarily WADO-URI.\n              metadataProvider.addImageIdToUIDs(imageId, {\n                StudyInstanceUID,\n                SeriesInstanceUID,\n                SOPInstanceUID,\n                frameIndex: isMultiframe ? index : 1,\n              });\n            });\n\n            DicomMetadataStore._broadcastEvent(EVENTS.INSTANCES_ADDED, {\n              StudyInstanceUID,\n              SeriesInstanceUID,\n              madeInClient,\n            });\n          });\n        },\n      },\n    },\n    store: {\n      dicom: naturalizedReport => {\n        const reportBlob = dcmjs.data.datasetToBlob(naturalizedReport);\n\n        //Create a URL for the binary.\n        var objectUrl = URL.createObjectURL(reportBlob);\n        window.location.assign(objectUrl);\n      },\n    },\n    getImageIdsForDisplaySet(displaySet) {\n      const images = displaySet.images;\n      const imageIds = [];\n\n      if (!images) {\n        return imageIds;\n      }\n\n      displaySet.images.forEach(instance => {\n        const NumberOfFrames = instance.NumberOfFrames;\n        if (NumberOfFrames > 1) {\n          // in multiframe we start at frame 1\n          for (let i = 1; i <= NumberOfFrames; i++) {\n            const imageId = this.getImageIdsForInstance({\n              instance,\n              frame: i,\n            });\n            imageIds.push(imageId);\n          }\n        } else {\n          const imageId = this.getImageIdsForInstance({ instance });\n          imageIds.push(imageId);\n        }\n      });\n\n      return imageIds;\n    },\n    getImageIdsForInstance({ instance, frame }) {\n      const { StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID } = instance;\n      const storedInstance = DicomMetadataStore.getInstance(\n        StudyInstanceUID,\n        SeriesInstanceUID,\n        SOPInstanceUID\n      );\n\n      let imageId = storedInstance.url;\n\n      if (frame !== undefined) {\n        imageId += `&frame=${frame}`;\n      }\n\n      return imageId;\n    },\n    deleteStudyMetadataPromise() {\n      console.log('deleteStudyMetadataPromise not implemented');\n    },\n    getStudyInstanceUIDs: ({ params, query }) => {\n      const { StudyInstanceUIDs: paramsStudyInstanceUIDs } = params;\n      const queryStudyInstanceUIDs = query.getAll('StudyInstanceUIDs');\n\n      const StudyInstanceUIDs = queryStudyInstanceUIDs || paramsStudyInstanceUIDs;\n      const StudyInstanceUIDsAsArray =\n        StudyInstanceUIDs && Array.isArray(StudyInstanceUIDs)\n          ? StudyInstanceUIDs\n          : [StudyInstanceUIDs];\n\n      // Put SRs at the end of series list to make sure images are loaded first\n      let isStudyInCache = false;\n      StudyInstanceUIDsAsArray.forEach(StudyInstanceUID => {\n        const study = DicomMetadataStore.getStudy(StudyInstanceUID);\n        if (study) {\n          study.series = study.series.sort(customSort);\n          isStudyInCache = true;\n        }\n      });\n\n      return isStudyInCache ? StudyInstanceUIDsAsArray : [];\n    },\n  };\n  return IWebApiDataSource.create(implementation);\n}\n\nexport { createDicomLocalApi };\n","import { IWebApiDataSource } from '@ohif/core';\nimport { createDicomWebApi } from '../DicomWebDataSource/index';\n\n/**\n * This datasource is initialized with a url that returns a JSON object with a\n * dicomWeb datasource configuration array present in a \"servers\" object.\n *\n * Only the first array item is parsed, if there are multiple items in the\n * dicomWeb configuration array\n *\n */\nfunction createDicomWebProxyApi(dicomWebProxyConfig, servicesManager) {\n  const { name } = dicomWebProxyConfig;\n  let dicomWebDelegate = undefined;\n\n  const implementation = {\n    initialize: async ({ params, query }) => {\n      const url = query.get('url');\n\n      if (!url) {\n        throw new Error(`No url for '${name}'`);\n      } else {\n        const response = await fetch(url);\n        let data = await response.json();\n        if (!data.servers?.dicomWeb?.[0]) {\n          throw new Error('Invalid configuration returned by url');\n        }\n\n        dicomWebDelegate = createDicomWebApi(\n          data.servers.dicomWeb[0].configuration,\n          servicesManager\n        );\n        dicomWebDelegate.initialize({ params, query });\n      }\n    },\n    query: {\n      studies: {\n        search: params => dicomWebDelegate.query.studies.search(params),\n      },\n      series: {\n        search: (...args) => dicomWebDelegate.query.series.search(...args),\n      },\n      instances: {\n        search: (studyInstanceUid, queryParameters) =>\n          dicomWebDelegate.query.instances.search(studyInstanceUid, queryParameters),\n      },\n    },\n    retrieve: {\n      directURL: (...args) => dicomWebDelegate.retrieve.directURL(...args),\n      series: {\n        metadata: async (...args) => dicomWebDelegate.retrieve.series.metadata(...args),\n      },\n    },\n    store: {\n      dicom: (...args) => dicomWebDelegate.store(...args),\n    },\n    deleteStudyMetadataPromise: (...args) => dicomWebDelegate.deleteStudyMetadataPromise(...args),\n    getImageIdsForDisplaySet: (...args) => dicomWebDelegate.getImageIdsForDisplaySet(...args),\n    getImageIdsForInstance: (...args) => dicomWebDelegate.getImageIdsForInstance(...args),\n    getStudyInstanceUIDs({ params, query }) {\n      let studyInstanceUIDs = [];\n\n      // there seem to be a couple of variations of the case for this parameter\n      const queryStudyInstanceUIDs =\n        query.get('studyInstanceUIDs') || query.get('studyInstanceUids');\n      if (!queryStudyInstanceUIDs) {\n        throw new Error(`No studyInstanceUids in request for '${name}'`);\n      }\n      studyInstanceUIDs = queryStudyInstanceUIDs.split(';');\n      return studyInstanceUIDs;\n    },\n  };\n  return IWebApiDataSource.create(implementation);\n}\n\nexport { createDicomWebProxyApi };\n","import { DicomMetadataStore, IWebApiDataSource } from '@ohif/core';\nimport { get, uniqBy } from 'lodash';\nimport {\n  MergeConfig,\n  CallForAllDataSourcesAsyncOptions,\n  CallForAllDataSourcesOptions,\n  CallForDefaultDataSourceOptions,\n  CallByRetrieveAETitleOptions,\n  MergeMap,\n} from './types';\n\nexport const mergeMap: MergeMap = {\n  'query.studies.search': {\n    mergeKey: 'studyInstanceUid',\n    tagFunc: x => x,\n  },\n  'query.series.search': {\n    mergeKey: 'seriesInstanceUid',\n    tagFunc: (series, sourceName) => {\n      series.forEach(series => {\n        series.RetrieveAETitle = sourceName;\n        DicomMetadataStore.updateSeriesMetadata(series);\n      });\n      return series;\n    },\n  },\n};\n\n/**\n * Calls all data sources asynchronously and merges the results.\n * @param {CallForAllDataSourcesAsyncOptions} options - The options for calling all data sources.\n * @param {string} options.path - The path to the function to be called on each data source.\n * @param {unknown[]} options.args - The arguments to be passed to the function.\n * @param {ExtensionManager} options.extensionManager - The extension manager.\n * @param {string[]} options.dataSourceNames - The names of the data sources to be called.\n * @param {string} options.defaultDataSourceName - The name of the default data source.\n * @returns {Promise<unknown[]>} - A promise that resolves to the merged data from all data sources.\n */\nexport const callForAllDataSourcesAsync = async ({\n  mergeMap,\n  path,\n  args,\n  extensionManager,\n  dataSourceNames,\n  defaultDataSourceName,\n}: CallForAllDataSourcesAsyncOptions) => {\n  const { mergeKey, tagFunc } = mergeMap[path] || { tagFunc: x => x };\n\n  /** Sort by default data source */\n  const defs = Object.values(extensionManager.dataSourceDefs);\n  const defaultDataSourceDef = defs.find(def => def.sourceName === defaultDataSourceName);\n  const dataSourceDefs = defs.filter(def => def.sourceName !== defaultDataSourceName);\n  if (defaultDataSourceDef) {\n    dataSourceDefs.unshift(defaultDataSourceDef);\n  }\n\n  const promises = [];\n  const sourceNames = [];\n\n  for (const dataSourceDef of dataSourceDefs) {\n    const { configuration, sourceName } = dataSourceDef;\n    if (!!configuration && dataSourceNames.includes(sourceName)) {\n      const [dataSource] = extensionManager.getDataSources(sourceName);\n      const func = get(dataSource, path);\n      const promise = func.apply(dataSource, args);\n      promises.push(promise);\n      sourceNames.push(sourceName);\n    }\n  }\n\n  const data = await Promise.allSettled(promises);\n  const mergedData = data.map((data, i) => tagFunc(data.value, sourceNames[i]));\n\n  let results = [];\n  if (mergeKey) {\n    results = uniqBy(mergedData.flat(), obj => get(obj, mergeKey));\n  } else {\n    results = mergedData.flat();\n  }\n\n  return results;\n};\n\n/**\n * Calls all data sources that match the provided names and merges their data.\n * @param options - The options for calling all data sources.\n * @param options.path - The path to the function to be called on each data source.\n * @param options.args - The arguments to be passed to the function.\n * @param options.extensionManager - The extension manager instance.\n * @param options.dataSourceNames - The names of the data sources to be called.\n * @param options.defaultDataSourceName - The name of the default data source.\n * @returns The merged data from all the matching data sources.\n */\nexport const callForAllDataSources = ({\n  path,\n  args,\n  extensionManager,\n  dataSourceNames,\n  defaultDataSourceName,\n}: CallForAllDataSourcesOptions) => {\n  /** Sort by default data source */\n  const defs = Object.values(extensionManager.dataSourceDefs);\n  const defaultDataSourceDef = defs.find(def => def.sourceName === defaultDataSourceName);\n  const dataSourceDefs = defs.filter(def => def.sourceName !== defaultDataSourceName);\n  if (defaultDataSourceDef) {\n    dataSourceDefs.unshift(defaultDataSourceDef);\n  }\n\n  const mergedData = [];\n  for (const dataSourceDef of dataSourceDefs) {\n    const { configuration, sourceName } = dataSourceDef;\n    if (!!configuration && dataSourceNames.includes(sourceName)) {\n      const [dataSource] = extensionManager.getDataSources(sourceName);\n      const func = get(dataSource, path);\n      const data = func.apply(dataSource, args);\n      mergedData.push(data);\n    }\n  }\n\n  return mergedData.flat();\n};\n\n/**\n * Calls the default data source function specified by the given path with the provided arguments.\n * @param {CallForDefaultDataSourceOptions} options - The options for calling the default data source.\n * @param {string} options.path - The path to the function within the default data source.\n * @param {unknown[]} options.args - The arguments to pass to the function.\n * @param {string} options.defaultDataSourceName - The name of the default data source.\n * @param {ExtensionManager} options.extensionManager - The extension manager instance.\n * @returns {unknown} - The result of calling the default data source function.\n */\nexport const callForDefaultDataSource = ({\n  path,\n  args,\n  defaultDataSourceName,\n  extensionManager,\n}: CallForDefaultDataSourceOptions) => {\n  const [dataSource] = extensionManager.getDataSources(defaultDataSourceName);\n  const func = get(dataSource, path);\n  return func.apply(dataSource, args);\n};\n\n/**\n * Calls the data source specified by the RetrieveAETitle of the given display set.\n * @typedef {Object} CallByRetrieveAETitleOptions\n * @property {string} path - The path of the method to call on the data source.\n * @property {any[]} args - The arguments to pass to the method.\n * @property {string} defaultDataSourceName - The name of the default data source.\n * @property {ExtensionManager} extensionManager - The extension manager.\n */\nexport const callByRetrieveAETitle = ({\n  path,\n  args,\n  defaultDataSourceName,\n  extensionManager,\n}: CallByRetrieveAETitleOptions) => {\n  const [displaySet] = args;\n  const seriesMetadata = DicomMetadataStore.getSeries(\n    displaySet.StudyInstanceUID,\n    displaySet.SeriesInstanceUID\n  );\n  const [dataSource] = extensionManager.getDataSources(\n    seriesMetadata.RetrieveAETitle || defaultDataSourceName\n  );\n  return dataSource[path](...args);\n};\n\nfunction createMergeDataSourceApi(\n  mergeConfig: MergeConfig,\n  servicesManager: unknown,\n  extensionManager\n) {\n  const { seriesMerge } = mergeConfig;\n  const { dataSourceNames, defaultDataSourceName } = seriesMerge;\n\n  const implementation = {\n    initialize: (...args: unknown[]) =>\n      callForAllDataSources({\n        path: 'initialize',\n        args,\n        extensionManager,\n        dataSourceNames,\n        defaultDataSourceName,\n      }),\n    query: {\n      studies: {\n        search: (...args: unknown[]) =>\n          callForAllDataSourcesAsync({\n            mergeMap,\n            path: 'query.studies.search',\n            args,\n            extensionManager,\n            dataSourceNames,\n            defaultDataSourceName,\n          }),\n      },\n      series: {\n        search: (...args: unknown[]) =>\n          callForAllDataSourcesAsync({\n            mergeMap,\n            path: 'query.series.search',\n            args,\n            extensionManager,\n            dataSourceNames,\n            defaultDataSourceName,\n          }),\n      },\n      instances: {\n        search: (...args: unknown[]) =>\n          callForAllDataSourcesAsync({\n            mergeMap,\n            path: 'query.instances.search',\n            args,\n            extensionManager,\n            dataSourceNames,\n            defaultDataSourceName,\n          }),\n      },\n    },\n    retrieve: {\n      bulkDataURI: (...args: unknown[]) =>\n        callForAllDataSourcesAsync({\n          mergeMap,\n          path: 'retrieve.bulkDataURI',\n          args,\n          extensionManager,\n          dataSourceNames,\n          defaultDataSourceName,\n        }),\n      directURL: (...args: unknown[]) =>\n        callForDefaultDataSource({\n          path: 'retrieve.directURL',\n          args,\n          defaultDataSourceName,\n          extensionManager,\n        }),\n      series: {\n        metadata: (...args: unknown[]) =>\n          callForAllDataSourcesAsync({\n            mergeMap,\n            path: 'retrieve.series.metadata',\n            args,\n            extensionManager,\n            dataSourceNames,\n            defaultDataSourceName,\n          }),\n      },\n    },\n    store: {\n      dicom: (...args: unknown[]) =>\n        callForDefaultDataSource({\n          path: 'store.dicom',\n          args,\n          defaultDataSourceName,\n          extensionManager,\n        }),\n    },\n    deleteStudyMetadataPromise: (...args: unknown[]) =>\n      callForAllDataSources({\n        path: 'deleteStudyMetadataPromise',\n        args,\n        extensionManager,\n        dataSourceNames,\n        defaultDataSourceName,\n      }),\n    getImageIdsForDisplaySet: (...args: unknown[]) =>\n      callByRetrieveAETitle({\n        path: 'getImageIdsForDisplaySet',\n        args,\n        defaultDataSourceName,\n        extensionManager,\n      }),\n    getImageIdsForInstance: (...args: unknown[]) =>\n      callByRetrieveAETitle({\n        path: 'getImageIdsForDisplaySet',\n        args,\n        defaultDataSourceName,\n        extensionManager,\n      }),\n    getStudyInstanceUIDs: (...args: unknown[]) =>\n      callForAllDataSources({\n        path: 'getStudyInstanceUIDs',\n        args,\n        extensionManager,\n        dataSourceNames,\n        defaultDataSourceName,\n      }),\n  };\n\n  return IWebApiDataSource.create(implementation);\n}\n\nexport { createMergeDataSourceApi };\n","// TODO: Pull in IWebClientApi from @ohif/core\n// TODO: Use constructor to create an instance of IWebClientApi\n// TODO: Use existing DICOMWeb configuration (previously, appConfig, to configure instance)\n\nimport { createDicomWebApi } from './DicomWebDataSource/index.js';\nimport { createDicomJSONApi } from './DicomJSONDataSource/index.js';\nimport { createDicomLocalApi } from './DicomLocalDataSource/index.js';\nimport { createDicomWebProxyApi } from './DicomWebProxyDataSource/index.js';\nimport { createMergeDataSourceApi } from './MergeDataSource/index';\n\n/**\n *\n */\nfunction getDataSourcesModule() {\n  return [\n    {\n      name: 'dicomweb',\n      type: 'webApi',\n      createDataSource: createDicomWebApi,\n    },\n    {\n      name: 'dicomwebproxy',\n      type: 'webApi',\n      createDataSource: createDicomWebProxyApi,\n    },\n    {\n      name: 'dicomjson',\n      type: 'jsonApi',\n      createDataSource: createDicomJSONApi,\n    },\n    {\n      name: 'dicomlocal',\n      type: 'localApi',\n      createDataSource: createDicomLocalApi,\n    },\n    {\n      name: 'merge',\n      type: 'mergeApi',\n      createDataSource: createMergeDataSourceApi,\n    },\n  ];\n}\n\nexport default getDataSourcesModule;\n","import React from 'react';\nimport { Tooltip } from '@ohif/ui';\nimport classnames from 'classnames';\nimport { useToolbar } from '@ohif/core';\n\nexport function Toolbar({ servicesManager, buttonSection = 'primary' }) {\n  const { toolbarButtons, onInteraction } = useToolbar({\n    servicesManager,\n    buttonSection,\n  });\n\n  if (!toolbarButtons.length) {\n    return null;\n  }\n\n  return (\n    <>\n      {toolbarButtons.map(toolDef => {\n        if (!toolDef) {\n          return null;\n        }\n\n        const { id, Component, componentProps } = toolDef;\n        const tool = (\n          <Component\n            key={id}\n            id={id}\n            onInteraction={onInteraction}\n            servicesManager={servicesManager}\n            {...componentProps}\n          />\n        );\n\n        return <div key={id}>{tool}</div>;\n      })}\n    </>\n  );\n}\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation } from 'react-router';\n\nimport { ErrorBoundary, UserPreferences, AboutModal, Header, useModal } from '@ohif/ui';\nimport i18n from '@ohif/i18n';\nimport { hotkeys } from '@ohif/core';\nimport { Toolbar } from '../Toolbar/Toolbar';\n\nconst { availableLanguages, defaultLanguage, currentLanguage } = i18n;\n\nfunction ViewerHeader({ hotkeysManager, extensionManager, servicesManager, appConfig }) {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const onClickReturnButton = () => {\n    const { pathname } = location;\n    const dataSourceIdx = pathname.indexOf('/', 1);\n    const query = new URLSearchParams(window.location.search);\n    const configUrl = query.get('configUrl');\n\n    const dataSourceName = pathname.substring(dataSourceIdx + 1);\n    const existingDataSource = extensionManager.getDataSources(dataSourceName);\n\n    const searchQuery = new URLSearchParams();\n    if (dataSourceIdx !== -1 && existingDataSource) {\n      searchQuery.append('datasources', pathname.substring(dataSourceIdx + 1));\n    }\n\n    if (configUrl) {\n      searchQuery.append('configUrl', configUrl);\n    }\n\n    navigate({\n      pathname: '/',\n      search: decodeURIComponent(searchQuery.toString()),\n    });\n  };\n\n  const { t } = useTranslation();\n  const { show, hide } = useModal();\n  const { hotkeyDefinitions, hotkeyDefaults } = hotkeysManager;\n  const versionNumber = process.env.VERSION_NUMBER;\n  const commitHash = process.env.COMMIT_HASH;\n\n  const menuOptions = [\n    {\n      title: t('Header:About'),\n      icon: 'info',\n      onClick: () =>\n        show({\n          content: AboutModal,\n          title: t('AboutModal:About OHIF Viewer'),\n          contentProps: { versionNumber, commitHash },\n          containerDimensions: 'max-w-4xl max-h-4xl',\n        }),\n    },\n    {\n      title: t('Header:Preferences'),\n      icon: 'settings',\n      onClick: () =>\n        show({\n          title: t('UserPreferencesModal:User preferences'),\n          content: UserPreferences,\n          containerDimensions: 'w-[70%] max-w-[900px]',\n          contentProps: {\n            hotkeyDefaults: hotkeysManager.getValidHotkeyDefinitions(hotkeyDefaults),\n            hotkeyDefinitions,\n            currentLanguage: currentLanguage(),\n            availableLanguages,\n            defaultLanguage,\n            onCancel: () => {\n              hotkeys.stopRecord();\n              hotkeys.unpause();\n              hide();\n            },\n            onSubmit: ({ hotkeyDefinitions, language }) => {\n              if (language.value !== currentLanguage().value) {\n                i18n.changeLanguage(language.value);\n              }\n              hotkeysManager.setHotkeys(hotkeyDefinitions);\n              hide();\n            },\n            onReset: () => hotkeysManager.restoreDefaultBindings(),\n            hotkeysModule: hotkeys,\n          },\n        }),\n    },\n  ];\n\n  if (appConfig.oidc) {\n    menuOptions.push({\n      title: t('Header:Logout'),\n      icon: 'power-off',\n      onClick: async () => {\n        navigate(`/logout?redirect_uri=${encodeURIComponent(window.location.href)}`);\n      },\n    });\n  }\n\n  return (\n    <Header\n      menuOptions={menuOptions}\n      isReturnEnabled={!!appConfig.showStudyList}\n      onClickReturnButton={onClickReturnButton}\n      WhiteLabeling={appConfig.whiteLabeling}\n      showPatientInfo={appConfig.showPatientInfo}\n      servicesManager={servicesManager}\n      Secondary={\n        <Toolbar\n          servicesManager={servicesManager}\n          buttonSection=\"secondary\"\n        />\n      }\n      appConfig={appConfig}\n    >\n      <ErrorBoundary context=\"Primary Toolbar\">\n        <div className=\"relative flex justify-center gap-[4px]\">\n          <Toolbar servicesManager={servicesManager} />\n        </div>\n      </ErrorBoundary>\n    </Header>\n  );\n}\n\nexport default ViewerHeader;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { SidePanel } from '@ohif/ui';\nimport { PanelService, ServicesManager, Types } from '@ohif/core';\n\nexport type SidePanelWithServicesProps = {\n  servicesManager: ServicesManager;\n  side: 'left' | 'right';\n  className: string;\n  activeTabIndex: number;\n  tabs: any;\n  expandedWidth?: number;\n};\n\nconst SidePanelWithServices = ({\n  servicesManager,\n  side,\n  activeTabIndex: activeTabIndexProp,\n  tabs: tabsProp,\n  expandedWidth,\n  ...props\n}: SidePanelWithServicesProps) => {\n  const panelService: PanelService = servicesManager?.services?.panelService;\n\n  // Tracks whether this SidePanel has been opened at least once since this SidePanel was inserted into the DOM.\n  // Thus going to the Study List page and back to the viewer resets this flag for a SidePanel.\n  const [hasBeenOpened, setHasBeenOpened] = useState(false);\n  const [activeTabIndex, setActiveTabIndex] = useState(activeTabIndexProp);\n  const [tabs, setTabs] = useState(tabsProp ?? panelService.getPanels(side));\n\n  const handleSidePanelOpen = useCallback(() => {\n    setHasBeenOpened(true);\n  }, []);\n\n  const handleActiveTabIndexChange = useCallback(({ activeTabIndex }) => {\n    setActiveTabIndex(activeTabIndex);\n  }, []);\n\n  /** update the active tab index from outside */\n  useEffect(() => {\n    setActiveTabIndex(activeTabIndexProp);\n  }, [activeTabIndexProp]);\n\n  useEffect(() => {\n    const { unsubscribe } = panelService.subscribe(\n      panelService.EVENTS.PANELS_CHANGED,\n      panelChangedEvent => {\n        if (panelChangedEvent.position !== side) {\n          return;\n        }\n\n        setTabs(panelService.getPanels(side));\n      }\n    );\n\n    return () => {\n      unsubscribe();\n    };\n  }, [panelService, side]);\n\n  useEffect(() => {\n    const activatePanelSubscription = panelService.subscribe(\n      panelService.EVENTS.ACTIVATE_PANEL,\n      (activatePanelEvent: Types.ActivatePanelEvent) => {\n        if (!hasBeenOpened || activatePanelEvent.forceActive) {\n          const tabIndex = tabs.findIndex(tab => tab.id === activatePanelEvent.panelId);\n          if (tabIndex !== -1) {\n            setActiveTabIndex(tabIndex);\n          }\n        }\n      }\n    );\n\n    return () => {\n      activatePanelSubscription.unsubscribe();\n    };\n  }, [tabs, hasBeenOpened, panelService]);\n\n  return (\n    <SidePanel\n      {...props}\n      side={side}\n      tabs={tabs}\n      activeTabIndex={activeTabIndex}\n      onOpen={handleSidePanelOpen}\n      onActiveTabIndexChange={handleActiveTabIndexChange}\n      expandedWidth={expandedWidth}\n    ></SidePanel>\n  );\n};\n\nexport default SidePanelWithServices;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ErrorBoundary, LoadingIndicatorProgress, InvestigationalUseDialog } from '@ohif/ui';\nimport { ServicesManager, HangingProtocolService, CommandsManager } from '@ohif/core';\nimport { useAppConfig } from '@state';\nimport ViewerHeader from './ViewerHeader';\nimport SidePanelWithServices from '../Components/SidePanelWithServices';\n\nfunction ViewerLayout({\n  // From Extension Module Params\n  extensionManager,\n  servicesManager,\n  hotkeysManager,\n  commandsManager,\n  // From Modes\n  viewports,\n  ViewportGridComp,\n  leftPanelClosed = false,\n  rightPanelClosed = false,\n}): React.FunctionComponent {\n  const [appConfig] = useAppConfig();\n\n  const { panelService, hangingProtocolService } = servicesManager.services;\n  const [showLoadingIndicator, setShowLoadingIndicator] = useState(appConfig.showLoadingIndicator);\n\n  const hasPanels = useCallback(\n    (side): boolean => !!panelService.getPanels(side).length,\n    [panelService]\n  );\n\n  const [hasRightPanels, setHasRightPanels] = useState(hasPanels('right'));\n  const [hasLeftPanels, setHasLeftPanels] = useState(hasPanels('left'));\n  const [leftPanelClosedState, setLeftPanelClosed] = useState(leftPanelClosed);\n  const [rightPanelClosedState, setRightPanelClosed] = useState(rightPanelClosed);\n\n  /**\n   * Set body classes (tailwindcss) that don't allow vertical\n   * or horizontal overflow (no scrolling). Also guarantee window\n   * is sized to our viewport.\n   */\n  useEffect(() => {\n    document.body.classList.add('bg-black');\n    document.body.classList.add('overflow-hidden');\n    return () => {\n      document.body.classList.remove('bg-black');\n      document.body.classList.remove('overflow-hidden');\n    };\n  }, []);\n\n  const getComponent = id => {\n    const entry = extensionManager.getModuleEntry(id);\n\n    if (!entry || !entry.component) {\n      throw new Error(\n        `${id} is not valid for an extension module or no component found from extension ${id}. Please verify your configuration or ensure that the extension is properly registered. It's also possible that your mode is utilizing a module from an extension that hasn't been included in its dependencies (add the extension to the \"extensionDependencies\" array in your mode's index.js file). Check the reference string to the extension in your Mode configuration`\n      );\n    }\n\n    return { entry, content: entry.component };\n  };\n\n  useEffect(() => {\n    const { unsubscribe } = hangingProtocolService.subscribe(\n      HangingProtocolService.EVENTS.PROTOCOL_CHANGED,\n\n      // Todo: right now to set the loading indicator to false, we need to wait for the\n      // hangingProtocolService to finish applying the viewport matching to each viewport,\n      // however, this might not be the only approach to set the loading indicator to false. we need to explore this further.\n      () => {\n        setShowLoadingIndicator(false);\n      }\n    );\n\n    return () => {\n      unsubscribe();\n    };\n  }, [hangingProtocolService]);\n\n  const getViewportComponentData = viewportComponent => {\n    const { entry } = getComponent(viewportComponent.namespace);\n\n    return {\n      component: entry.component,\n      displaySetsToDisplay: viewportComponent.displaySetsToDisplay,\n    };\n  };\n\n  useEffect(() => {\n    const { unsubscribe } = panelService.subscribe(\n      panelService.EVENTS.PANELS_CHANGED,\n      ({ options }) => {\n        setHasLeftPanels(hasPanels('left'));\n        setHasRightPanels(hasPanels('right'));\n        if (options?.leftPanelClosed !== undefined) {\n          setLeftPanelClosed(options.leftPanelClosed);\n        }\n        if (options?.rightPanelClosed !== undefined) {\n          setRightPanelClosed(options.rightPanelClosed);\n        }\n      }\n    );\n\n    return () => {\n      unsubscribe();\n    };\n  }, [panelService, hasPanels]);\n\n  const viewportComponents = viewports.map(getViewportComponentData);\n\n  // @ts-ignore\n  return (\n    <div>\n      <ViewerHeader\n        hotkeysManager={hotkeysManager}\n        extensionManager={extensionManager}\n        servicesManager={servicesManager}\n        appConfig={appConfig}\n      />\n      <div\n        className=\"relative flex w-full flex-row flex-nowrap items-stretch overflow-hidden bg-black\"\n        style={{ height: 'calc(100vh - 52px' }}\n      >\n        <React.Fragment>\n          {showLoadingIndicator && <LoadingIndicatorProgress className=\"h-full w-full bg-black\" />}\n          {/* LEFT SIDEPANELS */}\n          {hasLeftPanels ? (\n            <ErrorBoundary context=\"Left Panel\">\n              <SidePanelWithServices\n                side=\"left\"\n                activeTabIndex={leftPanelClosedState ? null : 0}\n                servicesManager={servicesManager}\n              />\n            </ErrorBoundary>\n          ) : null}\n          {/* TOOLBAR + GRID */}\n          <div className=\"flex h-full flex-1 flex-col\">\n            <div className=\"relative flex h-full flex-1 items-center justify-center overflow-hidden bg-black\">\n              <ErrorBoundary context=\"Grid\">\n                <ViewportGridComp\n                  servicesManager={servicesManager}\n                  viewportComponents={viewportComponents}\n                  commandsManager={commandsManager}\n                />\n              </ErrorBoundary>\n            </div>\n          </div>\n          {hasRightPanels ? (\n            <ErrorBoundary context=\"Right Panel\">\n              <SidePanelWithServices\n                side=\"right\"\n                activeTabIndex={rightPanelClosedState ? null : 0}\n                servicesManager={servicesManager}\n              />\n            </ErrorBoundary>\n          ) : null}\n        </React.Fragment>\n      </div>\n\n      <InvestigationalUseDialog dialogConfiguration={appConfig?.investigationalUseDialog} />\n    </div>\n  );\n}\n\nViewerLayout.propTypes = {\n  // From extension module params\n  extensionManager: PropTypes.shape({\n    getModuleEntry: PropTypes.func.isRequired,\n  }).isRequired,\n  commandsManager: PropTypes.instanceOf(CommandsManager),\n  servicesManager: PropTypes.instanceOf(ServicesManager),\n  // From modes\n  leftPanels: PropTypes.array,\n  rightPanels: PropTypes.array,\n  leftPanelClosed: PropTypes.bool.isRequired,\n  rightPanelClosed: PropTypes.bool.isRequired,\n  /** Responsible for rendering our grid of viewports; provided by consuming application */\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n  viewports: PropTypes.array,\n};\n\nexport default ViewerLayout;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { StudyBrowser, useImageViewer, useViewportGrid } from '@ohif/ui';\nimport { utils } from '@ohif/core';\nimport { useNavigate } from 'react-router-dom';\n\nconst { sortStudyInstances, formatDate } = utils;\n\n/**\n *\n * @param {*} param0\n */\nfunction PanelStudyBrowser({\n  servicesManager,\n  getImageSrc,\n  getStudiesForPatientByMRN,\n  requestDisplaySetCreationForStudy,\n  dataSource,\n}) {\n  const { hangingProtocolService, displaySetService, uiNotificationService } =\n    servicesManager.services;\n  const navigate = useNavigate();\n\n  // Normally you nest the components so the tree isn't so deep, and the data\n  // doesn't have to have such an intense shape. This works well enough for now.\n  // Tabs --> Studies --> DisplaySets --> Thumbnails\n  const { StudyInstanceUIDs } = useImageViewer();\n  const [{ activeViewportId, viewports, isHangingProtocolLayout }, viewportGridService] =\n    useViewportGrid();\n  const [activeTabName, setActiveTabName] = useState('primary');\n  const [expandedStudyInstanceUIDs, setExpandedStudyInstanceUIDs] = useState([\n    ...StudyInstanceUIDs,\n  ]);\n  const [studyDisplayList, setStudyDisplayList] = useState([]);\n  const [displaySets, setDisplaySets] = useState([]);\n  const [thumbnailImageSrcMap, setThumbnailImageSrcMap] = useState({});\n\n  const onDoubleClickThumbnailHandler = displaySetInstanceUID => {\n    let updatedViewports = [];\n    const viewportId = activeViewportId;\n    try {\n      updatedViewports = hangingProtocolService.getViewportsRequireUpdate(\n        viewportId,\n        displaySetInstanceUID,\n        isHangingProtocolLayout\n      );\n    } catch (error) {\n      console.warn(error);\n      uiNotificationService.show({\n        title: 'Thumbnail Double Click',\n        message: 'The selected display sets could not be added to the viewport.',\n        type: 'info',\n        duration: 3000,\n      });\n    }\n\n    viewportGridService.setDisplaySetsForViewports(updatedViewports);\n  };\n\n  // ~~ studyDisplayList\n  useEffect(() => {\n    // Fetch all studies for the patient in each primary study\n    async function fetchStudiesForPatient(StudyInstanceUID) {\n      // current study qido\n      const qidoForStudyUID = await dataSource.query.studies.search({\n        studyInstanceUid: StudyInstanceUID,\n      });\n\n      if (!qidoForStudyUID?.length) {\n        navigate('/notfoundstudy', '_self');\n        throw new Error('Invalid study URL');\n      }\n\n      let qidoStudiesForPatient = qidoForStudyUID;\n\n      // try to fetch the prior studies based on the patientID if the\n      // server can respond.\n      try {\n        qidoStudiesForPatient = await getStudiesForPatientByMRN(qidoForStudyUID);\n      } catch (error) {\n        console.warn(error);\n      }\n\n      const mappedStudies = _mapDataSourceStudies(qidoStudiesForPatient);\n      const actuallyMappedStudies = mappedStudies.map(qidoStudy => {\n        return {\n          studyInstanceUid: qidoStudy.StudyInstanceUID,\n          date: formatDate(qidoStudy.StudyDate),\n          description: qidoStudy.StudyDescription,\n          modalities: qidoStudy.ModalitiesInStudy,\n          numInstances: qidoStudy.NumInstances,\n        };\n      });\n\n      setStudyDisplayList(prevArray => {\n        const ret = [...prevArray];\n        for (const study of actuallyMappedStudies) {\n          if (!prevArray.find(it => it.studyInstanceUid === study.studyInstanceUid)) {\n            ret.push(study);\n          }\n        }\n        return ret;\n      });\n    }\n\n    StudyInstanceUIDs.forEach(sid => fetchStudiesForPatient(sid));\n  }, [StudyInstanceUIDs, dataSource, getStudiesForPatientByMRN, navigate]);\n\n  // // ~~ Initial Thumbnails\n  useEffect(() => {\n    const currentDisplaySets = displaySetService.activeDisplaySets;\n    currentDisplaySets.forEach(async dSet => {\n      const newImageSrcEntry = {};\n      const displaySet = displaySetService.getDisplaySetByUID(dSet.displaySetInstanceUID);\n      const imageIds = dataSource.getImageIdsForDisplaySet(displaySet);\n      const imageId = imageIds[Math.floor(imageIds.length / 2)];\n\n      // TODO: Is it okay that imageIds are not returned here for SR displaySets?\n      if (!imageId || displaySet?.unsupported) {\n        return;\n      }\n      // When the image arrives, render it and store the result in the thumbnailImgSrcMap\n      newImageSrcEntry[dSet.displaySetInstanceUID] = await getImageSrc(imageId);\n\n      setThumbnailImageSrcMap(prevState => {\n        return { ...prevState, ...newImageSrcEntry };\n      });\n    });\n  }, [StudyInstanceUIDs, dataSource, displaySetService, getImageSrc]);\n\n  // ~~ displaySets\n  useEffect(() => {\n    // TODO: Are we sure `activeDisplaySets` will always be accurate?\n    const currentDisplaySets = displaySetService.activeDisplaySets;\n    const mappedDisplaySets = _mapDisplaySets(currentDisplaySets, thumbnailImageSrcMap);\n    sortStudyInstances(mappedDisplaySets);\n\n    setDisplaySets(mappedDisplaySets);\n  }, [StudyInstanceUIDs, thumbnailImageSrcMap, displaySetService]);\n\n  // ~~ subscriptions --> displaySets\n  useEffect(() => {\n    // DISPLAY_SETS_ADDED returns an array of DisplaySets that were added\n    const SubscriptionDisplaySetsAdded = displaySetService.subscribe(\n      displaySetService.EVENTS.DISPLAY_SETS_ADDED,\n      data => {\n        const { displaySetsAdded, options } = data;\n        displaySetsAdded.forEach(async dSet => {\n          const newImageSrcEntry = {};\n          const displaySet = displaySetService.getDisplaySetByUID(dSet.displaySetInstanceUID);\n          if (displaySet?.unsupported) {\n            return;\n          }\n\n          const imageIds = dataSource.getImageIdsForDisplaySet(displaySet);\n          const imageId = imageIds[Math.floor(imageIds.length / 2)];\n\n          // TODO: Is it okay that imageIds are not returned here for SR displaysets?\n          if (!imageId) {\n            return;\n          }\n          // When the image arrives, render it and store the result in the thumbnailImgSrcMap\n          newImageSrcEntry[dSet.displaySetInstanceUID] = await getImageSrc(\n            imageId,\n            dSet.initialViewport\n          );\n\n          setThumbnailImageSrcMap(prevState => {\n            return { ...prevState, ...newImageSrcEntry };\n          });\n        });\n      }\n    );\n\n    return () => {\n      SubscriptionDisplaySetsAdded.unsubscribe();\n    };\n  }, [getImageSrc, dataSource, displaySetService]);\n\n  useEffect(() => {\n    // TODO: Will this always hold _all_ the displaySets we care about?\n    // DISPLAY_SETS_CHANGED returns `DisplaySerService.activeDisplaySets`\n    const SubscriptionDisplaySetsChanged = displaySetService.subscribe(\n      displaySetService.EVENTS.DISPLAY_SETS_CHANGED,\n      changedDisplaySets => {\n        const mappedDisplaySets = _mapDisplaySets(changedDisplaySets, thumbnailImageSrcMap);\n        setDisplaySets(mappedDisplaySets);\n      }\n    );\n\n    const SubscriptionDisplaySetMetaDataInvalidated = displaySetService.subscribe(\n      displaySetService.EVENTS.DISPLAY_SET_SERIES_METADATA_INVALIDATED,\n      () => {\n        const mappedDisplaySets = _mapDisplaySets(\n          displaySetService.getActiveDisplaySets(),\n          thumbnailImageSrcMap\n        );\n\n        setDisplaySets(mappedDisplaySets);\n      }\n    );\n\n    return () => {\n      SubscriptionDisplaySetsChanged.unsubscribe();\n      SubscriptionDisplaySetMetaDataInvalidated.unsubscribe();\n    };\n  }, [StudyInstanceUIDs, thumbnailImageSrcMap, displaySetService]);\n\n  const tabs = _createStudyBrowserTabs(StudyInstanceUIDs, studyDisplayList, displaySets);\n\n  // TODO: Should not fire this on \"close\"\n  function _handleStudyClick(StudyInstanceUID) {\n    const shouldCollapseStudy = expandedStudyInstanceUIDs.includes(StudyInstanceUID);\n    const updatedExpandedStudyInstanceUIDs = shouldCollapseStudy\n      ? // eslint-disable-next-line prettier/prettier\n        [...expandedStudyInstanceUIDs.filter(stdyUid => stdyUid !== StudyInstanceUID)]\n      : [...expandedStudyInstanceUIDs, StudyInstanceUID];\n\n    setExpandedStudyInstanceUIDs(updatedExpandedStudyInstanceUIDs);\n\n    if (!shouldCollapseStudy) {\n      const madeInClient = true;\n      requestDisplaySetCreationForStudy(displaySetService, StudyInstanceUID, madeInClient);\n    }\n  }\n\n  const activeDisplaySetInstanceUIDs = viewports.get(activeViewportId)?.displaySetInstanceUIDs;\n\n  return (\n    <StudyBrowser\n      tabs={tabs}\n      servicesManager={servicesManager}\n      activeTabName={activeTabName}\n      onDoubleClickThumbnail={onDoubleClickThumbnailHandler}\n      activeDisplaySetInstanceUIDs={activeDisplaySetInstanceUIDs}\n      expandedStudyInstanceUIDs={expandedStudyInstanceUIDs}\n      onClickStudy={_handleStudyClick}\n      onClickTab={clickedTabName => {\n        setActiveTabName(clickedTabName);\n      }}\n    />\n  );\n}\n\nPanelStudyBrowser.propTypes = {\n  servicesManager: PropTypes.object.isRequired,\n  dataSource: PropTypes.shape({\n    getImageIdsForDisplaySet: PropTypes.func.isRequired,\n  }).isRequired,\n  getImageSrc: PropTypes.func.isRequired,\n  getStudiesForPatientByMRN: PropTypes.func.isRequired,\n  requestDisplaySetCreationForStudy: PropTypes.func.isRequired,\n};\n\nexport default PanelStudyBrowser;\n\n/**\n * Maps from the DataSource's format to a naturalized object\n *\n * @param {*} studies\n */\nfunction _mapDataSourceStudies(studies) {\n  return studies.map(study => {\n    // TODO: Why does the data source return in this format?\n    return {\n      AccessionNumber: study.accession,\n      StudyDate: study.date,\n      StudyDescription: study.description,\n      NumInstances: study.instances,\n      ModalitiesInStudy: study.modalities,\n      PatientID: study.mrn,\n      PatientName: study.patientName,\n      StudyInstanceUID: study.studyInstanceUid,\n      StudyTime: study.time,\n    };\n  });\n}\n\nfunction _mapDisplaySets(displaySets, thumbnailImageSrcMap) {\n  const thumbnailDisplaySets = [];\n  const thumbnailNoImageDisplaySets = [];\n\n  displaySets\n    .filter(ds => !ds.excludeFromThumbnailBrowser)\n    .forEach(ds => {\n      const imageSrc = thumbnailImageSrcMap[ds.displaySetInstanceUID];\n      const componentType = _getComponentType(ds);\n\n      const array =\n        componentType === 'thumbnail' ? thumbnailDisplaySets : thumbnailNoImageDisplaySets;\n\n      array.push({\n        displaySetInstanceUID: ds.displaySetInstanceUID,\n        description: ds.SeriesDescription || '',\n        seriesNumber: ds.SeriesNumber,\n        modality: ds.Modality,\n        seriesDate: ds.SeriesDate,\n        seriesTime: ds.SeriesTime,\n        numInstances: ds.numImageFrames,\n        countIcon: ds.countIcon,\n        StudyInstanceUID: ds.StudyInstanceUID,\n        messages: ds.messages,\n        componentType,\n        imageSrc,\n        dragData: {\n          type: 'displayset',\n          displaySetInstanceUID: ds.displaySetInstanceUID,\n          // .. Any other data to pass\n        },\n        isHydratedForDerivedDisplaySet: ds.isHydrated,\n      });\n    });\n\n  return [...thumbnailDisplaySets, ...thumbnailNoImageDisplaySets];\n}\n\nconst thumbnailNoImageModalities = ['SR', 'SEG', 'SM', 'RTSTRUCT', 'RTPLAN', 'RTDOSE'];\n\nfunction _getComponentType(ds) {\n  if (thumbnailNoImageModalities.includes(ds.Modality) || ds?.unsupported) {\n    // TODO probably others.\n    return 'thumbnailNoImage';\n  }\n\n  return 'thumbnail';\n}\n\n/**\n *\n * @param {string[]} primaryStudyInstanceUIDs\n * @param {object[]} studyDisplayList\n * @param {string} studyDisplayList.studyInstanceUid\n * @param {string} studyDisplayList.date\n * @param {string} studyDisplayList.description\n * @param {string} studyDisplayList.modalities\n * @param {number} studyDisplayList.numInstances\n * @param {object[]} displaySets\n * @returns tabs - The prop object expected by the StudyBrowser component\n */\nfunction _createStudyBrowserTabs(primaryStudyInstanceUIDs, studyDisplayList, displaySets) {\n  const primaryStudies = [];\n  const recentStudies = [];\n  const allStudies = [];\n\n  studyDisplayList.forEach(study => {\n    const displaySetsForStudy = displaySets.filter(\n      ds => ds.StudyInstanceUID === study.studyInstanceUid\n    );\n    const tabStudy = Object.assign({}, study, {\n      displaySets: displaySetsForStudy,\n    });\n\n    if (primaryStudyInstanceUIDs.includes(study.studyInstanceUid)) {\n      primaryStudies.push(tabStudy);\n    } else {\n      // TODO: Filter allStudies to dates within one year of current date\n      recentStudies.push(tabStudy);\n      allStudies.push(tabStudy);\n    }\n  });\n\n  const tabs = [\n    {\n      name: 'primary',\n      label: 'Primary',\n      studies: primaryStudies,\n    },\n    {\n      name: 'recent',\n      label: 'Recent',\n      studies: recentStudies,\n    },\n    {\n      name: 'all',\n      label: 'All',\n      studies: allStudies,\n    },\n  ];\n\n  return tabs;\n}\n","/**\n * @param {*} cornerstone\n * @param {*} imageId\n */\nfunction getImageSrcFromImageId(cornerstone, imageId) {\n  return new Promise((resolve, reject) => {\n    const canvas = document.createElement('canvas');\n    cornerstone.utilities\n      .loadImageToCanvas({ canvas, imageId, thumbnail: true })\n      .then(imageId => {\n        resolve(canvas.toDataURL());\n      })\n      .catch(reject);\n  });\n}\nexport default getImageSrcFromImageId;\n","async function getStudiesForPatientByMRN(dataSource, qidoForStudyUID) {\n  if (qidoForStudyUID && qidoForStudyUID.length && qidoForStudyUID[0].mrn) {\n    return dataSource.query.studies.search({\n      patientId: qidoForStudyUID[0].mrn,\n    });\n  }\n  console.log('No mrn found for', qidoForStudyUID);\n  return qidoForStudyUID;\n}\n\nexport default getStudiesForPatientByMRN;\n","function requestDisplaySetCreationForStudy(\n  dataSource,\n  displaySetService,\n  StudyInstanceUID,\n  madeInClient\n) {\n  // TODO: is this already short-circuited by the map of Retrieve promises?\n  if (\n    displaySetService.activeDisplaySets.some(\n      displaySet => displaySet.StudyInstanceUID === StudyInstanceUID\n    )\n  ) {\n    return;\n  }\n\n  dataSource.retrieve.series.metadata({ StudyInstanceUID, madeInClient });\n}\n\nexport default requestDisplaySetCreationForStudy;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\n//\nimport PanelStudyBrowser from './PanelStudyBrowser';\nimport getImageSrcFromImageId from './getImageSrcFromImageId';\nimport getStudiesForPatientByMRN from './getStudiesForPatientByMRN';\nimport requestDisplaySetCreationForStudy from './requestDisplaySetCreationForStudy';\n\n/**\n * Wraps the PanelStudyBrowser and provides features afforded by managers/services\n *\n * @param {object} params\n * @param {object} commandsManager\n * @param {object} extensionManager\n */\nfunction WrappedPanelStudyBrowser({ commandsManager, extensionManager, servicesManager }) {\n  // TODO: This should be made available a different way; route should have\n  // already determined our datasource\n  const dataSource = extensionManager.getDataSources()[0];\n  const _getStudiesForPatientByMRN = getStudiesForPatientByMRN.bind(null, dataSource);\n  const _getImageSrcFromImageId = useCallback(\n    _createGetImageSrcFromImageIdFn(extensionManager),\n    []\n  );\n  const _requestDisplaySetCreationForStudy = requestDisplaySetCreationForStudy.bind(\n    null,\n    dataSource\n  );\n\n  return (\n    <PanelStudyBrowser\n      servicesManager={servicesManager}\n      dataSource={dataSource}\n      getImageSrc={_getImageSrcFromImageId}\n      getStudiesForPatientByMRN={_getStudiesForPatientByMRN}\n      requestDisplaySetCreationForStudy={_requestDisplaySetCreationForStudy}\n    />\n  );\n}\n\n/**\n * Grabs cornerstone library reference using a dependent command from\n * the @ohif/extension-cornerstone extension. Then creates a helper function\n * that can take an imageId and return an image src.\n *\n * @param {func} getCommand - CommandManager's getCommand method\n * @returns {func} getImageSrcFromImageId - A utility function powered by\n * cornerstone\n */\nfunction _createGetImageSrcFromImageIdFn(extensionManager) {\n  const utilities = extensionManager.getModuleEntry(\n    '@ohif/extension-cornerstone.utilityModule.common'\n  );\n\n  try {\n    const { cornerstone } = utilities.exports.getCornerstoneLibraries();\n    return getImageSrcFromImageId.bind(null, cornerstone);\n  } catch (ex) {\n    throw new Error('Required command not found');\n  }\n}\n\nWrappedPanelStudyBrowser.propTypes = {\n  commandsManager: PropTypes.object.isRequired,\n  extensionManager: PropTypes.object.isRequired,\n  servicesManager: PropTypes.object.isRequired,\n};\n\nexport default WrappedPanelStudyBrowser;\n","import React from 'react';\n\nimport { ButtonEnums, Dialog, Input, Select } from '@ohif/ui';\n\nexport const CREATE_REPORT_DIALOG_RESPONSE = {\n  CANCEL: 0,\n  CREATE_REPORT: 1,\n};\n\nexport default function CreateReportDialogPrompt(uiDialogService, { extensionManager }) {\n  return new Promise(function (resolve, reject) {\n    let dialogId = undefined;\n\n    const _handleClose = () => {\n      // Dismiss dialog\n      uiDialogService.dismiss({ id: dialogId });\n      // Notify of cancel action\n      resolve({\n        action: CREATE_REPORT_DIALOG_RESPONSE.CANCEL,\n        value: undefined,\n        dataSourceName: undefined,\n      });\n    };\n\n    /**\n     *\n     * @param {string} param0.action - value of action performed\n     * @param {string} param0.value - value from input field\n     */\n    const _handleFormSubmit = ({ action, value }) => {\n      uiDialogService.dismiss({ id: dialogId });\n      switch (action.id) {\n        case 'save':\n          resolve({\n            action: CREATE_REPORT_DIALOG_RESPONSE.CREATE_REPORT,\n            value: value.label,\n            dataSourceName: value.dataSourceName,\n          });\n          break;\n        case 'cancel':\n          resolve({\n            action: CREATE_REPORT_DIALOG_RESPONSE.CANCEL,\n            value: undefined,\n            dataSourceName: undefined,\n          });\n          break;\n      }\n    };\n\n    const dataSourcesOpts = Object.keys(extensionManager.dataSourceMap)\n      .filter(ds => {\n        const configuration = extensionManager.dataSourceDefs[ds]?.configuration;\n        const supportsStow = configuration?.supportsStow ?? configuration?.wadoRoot;\n        return supportsStow;\n      })\n      .map(ds => {\n        return {\n          value: ds,\n          label: ds,\n          placeHolder: ds,\n        };\n      });\n\n    dialogId = uiDialogService.create({\n      centralize: true,\n      isDraggable: false,\n      content: Dialog,\n      useLastPosition: false,\n      showOverlay: true,\n      contentProps: {\n        title: 'Create Report',\n        value: {\n          label: '',\n          dataSourceName: extensionManager.activeDataSource,\n        },\n        noCloseButton: true,\n        onClose: _handleClose,\n        actions: [\n          { id: 'cancel', text: 'Cancel', type: ButtonEnums.type.secondary },\n          { id: 'save', text: 'Save', type: ButtonEnums.type.primary },\n        ],\n        // TODO: Should be on button press...\n        onSubmit: _handleFormSubmit,\n        body: ({ value, setValue }) => {\n          const onChangeHandler = event => {\n            event.persist();\n            setValue(value => ({ ...value, label: event.target.value }));\n          };\n          const onKeyPressHandler = event => {\n            if (event.key === 'Enter') {\n              uiDialogService.dismiss({ id: dialogId });\n              resolve({\n                action: CREATE_REPORT_DIALOG_RESPONSE.CREATE_REPORT,\n                value: value.label,\n              });\n            }\n          };\n          return (\n            <>\n              {dataSourcesOpts.length > 1 && window.config?.allowMultiSelectExport && (\n                <div>\n                  <label className=\"text-[14px] leading-[1.2] text-white\">Data Source</label>\n                  <Select\n                    closeMenuOnSelect={true}\n                    className=\"border-primary-main  mt-2 bg-black\"\n                    options={dataSourcesOpts}\n                    placeholder={\n                      dataSourcesOpts.find(option => option.value === value.dataSourceName)\n                        .placeHolder\n                    }\n                    value={value.dataSourceName}\n                    onChange={evt => {\n                      setValue(v => ({ ...v, dataSourceName: evt.value }));\n                    }}\n                    isClearable={false}\n                  />\n                </div>\n              )}\n              <div className=\"mt-3\">\n                <Input\n                  autoFocus\n                  label=\"Enter the report name\"\n                  labelClassName=\"text-white text-[14px] leading-[1.2]\"\n                  className=\"border-primary-main bg-black\"\n                  type=\"text\"\n                  value={value.label}\n                  onChange={onChangeHandler}\n                  onKeyPress={onKeyPressHandler}\n                  required\n                />\n              </div>\n            </>\n          );\n        },\n      },\n    });\n  });\n}\n","import React from 'react';\nimport { DicomMetadataStore } from '@ohif/core';\n\n/**\n *\n * @param {*} servicesManager\n */\nasync function createReportAsync({ servicesManager, getReport, reportType = 'measurement' }) {\n  const { displaySetService, uiNotificationService, uiDialogService } = servicesManager.services;\n  const loadingDialogId = uiDialogService.create({\n    showOverlay: true,\n    isDraggable: false,\n    centralize: true,\n    content: Loading,\n  });\n\n  try {\n    const naturalizedReport = await getReport();\n\n    // The \"Mode\" route listens for DicomMetadataStore changes\n    // When a new instance is added, it listens and\n    // automatically calls makeDisplaySets\n    DicomMetadataStore.addInstances([naturalizedReport], true);\n\n    const displaySet = displaySetService.getMostRecentDisplaySet();\n\n    const displaySetInstanceUID = displaySet.displaySetInstanceUID;\n\n    uiNotificationService.show({\n      title: 'Create Report',\n      message: `${reportType} saved successfully`,\n      type: 'success',\n    });\n\n    return [displaySetInstanceUID];\n  } catch (error) {\n    uiNotificationService.show({\n      title: 'Create Report',\n      message: error.message || `Failed to store ${reportType}`,\n      type: 'error',\n    });\n  } finally {\n    uiDialogService.dismiss({ id: loadingDialogId });\n  }\n}\n\nfunction Loading() {\n  return <div className=\"text-primary-active\">Loading...</div>;\n}\n\nexport default createReportAsync;\n","const MIN_SR_SERIES_NUMBER = 4700;\n\nexport default function getNextSRSeriesNumber(displaySetService) {\n  const activeDisplaySets = displaySetService.getActiveDisplaySets();\n  const srDisplaySets = activeDisplaySets.filter(ds => ds.Modality === 'SR');\n  const srSeriesNumbers = srDisplaySets.map(ds => ds.SeriesNumber);\n  const maxSeriesNumber = Math.max(...srSeriesNumbers, MIN_SR_SERIES_NUMBER);\n\n  return maxSeriesNumber + 1;\n}\n","import { DisplaySetService, Types } from '@ohif/core';\n\nimport getNextSRSeriesNumber from './getNextSRSeriesNumber';\n\n/**\n * Find an SR having the same series description.\n * This is used by the store service in order to store DICOM SR's having the\n * same Series Description into a single series under consecutive instance numbers\n * That way, they are all organized as a set and could have tools to view\n * \"prior\" SR instances.\n *\n * @param SeriesDescription - is the description to look for\n * @param displaySetService - the display sets to search for DICOM SR in\n * @returns SeriesMetadata from a DICOM SR having the same series description\n */\nexport default function findSRWithSameSeriesDescription(\n  SeriesDescription: string,\n  displaySetService: DisplaySetService\n): Types.SeriesMetadata {\n  const activeDisplaySets = displaySetService.getActiveDisplaySets();\n  const srDisplaySets = activeDisplaySets.filter(ds => ds.Modality === 'SR');\n  const sameSeries = srDisplaySets.find(ds => ds.SeriesDescription === SeriesDescription);\n  if (sameSeries) {\n    console.log('Storing to same series', sameSeries);\n    const { instance } = sameSeries;\n    const { SeriesInstanceUID, SeriesDescription, SeriesDate, SeriesTime, SeriesNumber, Modality } =\n      instance;\n    return {\n      SeriesInstanceUID,\n      SeriesDescription,\n      SeriesDate,\n      SeriesTime,\n      SeriesNumber,\n      Modality,\n      InstanceNumber: sameSeries.instances.length + 1,\n    };\n  }\n\n  const SeriesNumber = getNextSRSeriesNumber(displaySetService);\n  return { SeriesDescription, SeriesNumber };\n}\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { utils, ServicesManager } from '@ohif/core';\nimport {\n  MeasurementTable,\n  Dialog,\n  Input,\n  useViewportGrid,\n  ButtonEnums,\n  ActionButtons,\n} from '@ohif/ui';\nimport debounce from 'lodash.debounce';\n\nimport createReportDialogPrompt, {\n  CREATE_REPORT_DIALOG_RESPONSE,\n} from './createReportDialogPrompt';\nimport createReportAsync from '../Actions/createReportAsync';\nimport findSRWithSameSeriesDescription from '../utils/findSRWithSameSeriesDescription';\n\nconst { downloadCSVReport } = utils;\n\nexport default function PanelMeasurementTable({\n  servicesManager,\n  commandsManager,\n  extensionManager,\n}): React.FunctionComponent {\n  const { t } = useTranslation('MeasurementTable');\n\n  const [viewportGrid, viewportGridService] = useViewportGrid();\n  const { activeViewportId, viewports } = viewportGrid;\n  const { measurementService, uiDialogService, uiNotificationService, displaySetService } = (\n    servicesManager as ServicesManager\n  ).services;\n  const [displayMeasurements, setDisplayMeasurements] = useState([]);\n\n  useEffect(() => {\n    const debouncedSetDisplayMeasurements = debounce(setDisplayMeasurements, 100);\n    // ~~ Initial\n    setDisplayMeasurements(_getMappedMeasurements(measurementService));\n\n    // ~~ Subscription\n    const added = measurementService.EVENTS.MEASUREMENT_ADDED;\n    const addedRaw = measurementService.EVENTS.RAW_MEASUREMENT_ADDED;\n    const updated = measurementService.EVENTS.MEASUREMENT_UPDATED;\n    const removed = measurementService.EVENTS.MEASUREMENT_REMOVED;\n    const cleared = measurementService.EVENTS.MEASUREMENTS_CLEARED;\n    const subscriptions = [];\n\n    [added, addedRaw, updated, removed, cleared].forEach(evt => {\n      subscriptions.push(\n        measurementService.subscribe(evt, () => {\n          debouncedSetDisplayMeasurements(_getMappedMeasurements(measurementService));\n        }).unsubscribe\n      );\n    });\n\n    return () => {\n      subscriptions.forEach(unsub => {\n        unsub();\n      });\n      debouncedSetDisplayMeasurements.cancel();\n    };\n  }, []);\n\n  async function exportReport() {\n    const measurements = measurementService.getMeasurements();\n\n    downloadCSVReport(measurements, measurementService);\n  }\n\n  async function clearMeasurements() {\n    measurementService.clearMeasurements();\n  }\n\n  async function createReport(): Promise<any> {\n    // filter measurements that are added to the active study\n    const activeViewport = viewports.get(activeViewportId);\n    const measurements = measurementService.getMeasurements();\n    const displaySet = displaySetService.getDisplaySetByUID(\n      activeViewport.displaySetInstanceUIDs[0]\n    );\n    const trackedMeasurements = measurements.filter(\n      m => displaySet.StudyInstanceUID === m.referenceStudyUID\n    );\n\n    if (trackedMeasurements.length <= 0) {\n      uiNotificationService.show({\n        title: 'No Measurements',\n        message: 'No Measurements are added to the current Study.',\n        type: 'info',\n        duration: 3000,\n      });\n      return;\n    }\n\n    const promptResult = await createReportDialogPrompt(uiDialogService, {\n      extensionManager,\n    });\n\n    if (promptResult.action === CREATE_REPORT_DIALOG_RESPONSE.CREATE_REPORT) {\n      const dataSources = extensionManager.getDataSources(promptResult.dataSourceName);\n      const dataSource = dataSources[0];\n\n      const SeriesDescription =\n        // isUndefinedOrEmpty\n        promptResult.value === undefined || promptResult.value === ''\n          ? 'Research Derived Series' // default\n          : promptResult.value; // provided value\n\n      // Reuse an existing series having the same series description to avoid\n      // creating too many series instances.\n      const options = findSRWithSameSeriesDescription(SeriesDescription, displaySetService);\n\n      const getReport = async () => {\n        return commandsManager.runCommand(\n          'storeMeasurements',\n          {\n            measurementData: trackedMeasurements,\n            dataSource,\n            additionalFindingTypes: ['ArrowAnnotate'],\n            options,\n          },\n          'CORNERSTONE_STRUCTURED_REPORT'\n        );\n      };\n\n      return createReportAsync({ servicesManager, getReport });\n    }\n  }\n\n  const jumpToImage = ({ uid, isActive }) => {\n    measurementService.jumpToMeasurement(viewportGrid.activeViewportId, uid);\n\n    onMeasurementItemClickHandler({ uid, isActive });\n  };\n\n  const onMeasurementItemEditHandler = ({ uid, isActive }) => {\n    const measurement = measurementService.getMeasurement(uid);\n    //Todo: why we are jumping to image?\n    // jumpToImage({ id, isActive });\n\n    const onSubmitHandler = ({ action, value }) => {\n      switch (action.id) {\n        case 'save': {\n          measurementService.update(\n            uid,\n            {\n              ...measurement,\n              ...value,\n            },\n            true\n          );\n        }\n      }\n      uiDialogService.dismiss({ id: 'enter-annotation' });\n    };\n\n    uiDialogService.create({\n      id: 'enter-annotation',\n      centralize: true,\n      isDraggable: false,\n      showOverlay: true,\n      content: Dialog,\n      contentProps: {\n        title: 'Annotation',\n        noCloseButton: true,\n        value: { label: measurement.label || '' },\n        body: ({ value, setValue }) => {\n          const onChangeHandler = event => {\n            event.persist();\n            setValue(value => ({ ...value, label: event.target.value }));\n          };\n\n          const onKeyPressHandler = event => {\n            if (event.key === 'Enter') {\n              onSubmitHandler({ value, action: { id: 'save' } });\n            }\n          };\n          return (\n            <Input\n              label=\"Enter your annotation\"\n              labelClassName=\"text-white text-[14px] leading-[1.2]\"\n              autoFocus\n              id=\"annotation\"\n              className=\"border-primary-main bg-black\"\n              type=\"text\"\n              value={value.label}\n              onChange={onChangeHandler}\n              onKeyPress={onKeyPressHandler}\n            />\n          );\n        },\n        actions: [\n          { id: 'cancel', text: 'Cancel', type: ButtonEnums.type.secondary },\n          { id: 'save', text: 'Save', type: ButtonEnums.type.primary },\n        ],\n        onSubmit: onSubmitHandler,\n      },\n    });\n  };\n\n  const onMeasurementItemClickHandler = ({ uid, isActive }) => {\n    if (!isActive) {\n      const measurements = [...displayMeasurements];\n      const measurement = measurements.find(m => m.uid === uid);\n\n      measurements.forEach(m => (m.isActive = m.uid !== uid ? false : true));\n      measurement.isActive = true;\n      setDisplayMeasurements(measurements);\n    }\n  };\n\n  return (\n    <>\n      <div\n        className=\"ohif-scrollbar overflow-y-auto overflow-x-hidden\"\n        data-cy={'measurements-panel'}\n      >\n        <MeasurementTable\n          title={t('Measurements')}\n          servicesManager={servicesManager}\n          data={displayMeasurements}\n          onClick={jumpToImage}\n          onEdit={onMeasurementItemEditHandler}\n        />\n      </div>\n      <div className=\"flex justify-center p-4\">\n        <ActionButtons\n          t={t}\n          actions={[\n            {\n              label: 'Export',\n              onClick: exportReport,\n            },\n            {\n              label: 'Create Report',\n              onClick: createReport,\n            },\n          ]}\n        />\n      </div>\n    </>\n  );\n}\n\nPanelMeasurementTable.propTypes = {\n  servicesManager: PropTypes.instanceOf(ServicesManager).isRequired,\n};\n\nfunction _getMappedMeasurements(measurementService) {\n  const measurements = measurementService.getMeasurements();\n\n  const mappedMeasurements = measurements.map((m, index) =>\n    _mapMeasurementToDisplay(m, index, measurementService.VALUE_TYPES)\n  );\n\n  return mappedMeasurements;\n}\n\n/**\n * Map the measurements to the display text.\n * Adds finding and site information to the displayText and/or label,\n * and provides as 'displayText' and 'label', while providing the original\n * values as baseDisplayText and baseLabel\n */\nfunction _mapMeasurementToDisplay(measurement, index, types) {\n  const {\n    displayText: baseDisplayText,\n    uid,\n    label: baseLabel,\n    type,\n    selected,\n    findingSites,\n    finding,\n  } = measurement;\n\n  const firstSite = findingSites?.[0];\n  const label = baseLabel || finding?.text || firstSite?.text || '(empty)';\n  let displayText = baseDisplayText || [];\n  if (findingSites) {\n    const siteText = [];\n    findingSites.forEach(site => {\n      if (site?.text !== label) {\n        siteText.push(site.text);\n      }\n    });\n    displayText = [...siteText, ...displayText];\n  }\n  if (finding && finding?.text !== label) {\n    displayText = [finding.text, ...displayText];\n  }\n\n  return {\n    uid,\n    label,\n    baseLabel,\n    measurementType: type,\n    displayText,\n    baseDisplayText,\n    isActive: selected,\n    finding,\n    findingSites,\n  };\n}\n","import vtkPolyData from \"@kitware/vtk.js/Common/DataModel/PolyData\";\n\nclass PolyDataExtractor {\n    constructor(polyData) {\n        console.assert(polyData.getLinks(), 'PolyDataExtractor: No links built for polydata');\n        this.polyData = polyData;\n        this.visitedCells = new Array(polyData.getNumberOfCells()).fill(false);\n        this.visitedPoints = new Array(polyData.getNumberOfPoints()).fill(false);\n    }\n\n    _extractGroup = (neighborIds) => {\n        const cellGroup = [];\n        const pointGroup = [];\n        this.visitedCells[neighborIds[0]] = true;\n\n        // Iterate over cells (breadth-first search)\n        while (neighborIds.length > 0) {\n            const currentCellId = neighborIds.shift();\n            cellGroup.push(currentCellId);\n\n            // Iterate over cell points\n            const pointIds = this.polyData.getCellPoints(currentCellId).cellPointIds;\n            for (const pointId of pointIds) {\n                if (!this.visitedPoints[pointId]) {\n                    this.visitedPoints[pointId] = true;\n                    pointGroup.push(pointId);\n\n                    // Add unvisited cells to the queue\n                    for (const neighborCellId of this.polyData.getPointCells(pointId)) {\n                        if (!this.visitedCells[neighborCellId]) {\n                            this.visitedCells[neighborCellId] = true;\n                            neighborIds.push(neighborCellId);\n                        }\n                    }\n                }\n            }\n        }\n\n        return [cellGroup, pointGroup]\n    }\n\n    _buildExtractedPolyData = (cellGroup, pointGroup) => {\n        const pBuffer = []; // Points\n        const tBuffer = []; // Cells\n        const pointIdMap = {};\n        // Map former point IDs to new point IDs\n        pointGroup.forEach((pointId, idx) => {\n            pointIdMap[pointId] = idx;\n            const points = this.polyData.getPoints().getPoint(pointId);\n            pBuffer.push(...points);\n        });\n        for (const cellId of cellGroup) {\n            const pointIds = this.polyData.getCellPoints(cellId).cellPointIds;\n            const newPointIds = pointIds.map(pointId => pointIdMap[pointId]);\n            tBuffer.push(3);\n            tBuffer.push(...newPointIds);\n        }\n\n        const extractedPolyData = vtkPolyData.newInstance();\n        extractedPolyData.getPoints().setData(new Float32Array(pBuffer), 3);\n        extractedPolyData.getPolys().setData(new Uint32Array(tBuffer));\n        extractedPolyData.getPolys().setNumberOfComponents(4);\n\n        return extractedPolyData;\n    }\n\n    extractGroups = () => {\n        const cellGroups = [];\n        const pointGroups = [];\n        const extractedPolyDatas = [];\n        for (let cellId = 0; cellId < this.polyData.getNumberOfCells(); cellId++) {\n            if (!this.visitedCells[cellId]) {\n                const [cellGroup, pointGroup] = this._extractGroup([cellId]);\n                const extractedPolyData = this._buildExtractedPolyData(cellGroup, pointGroup);\n                extractedPolyDatas.push(extractedPolyData);\n            }\n        }\n\n        return extractedPolyDatas;\n    }\n\n}\n\nexport default PolyDataExtractor;\n","import vtkPolyData from \"@kitware/vtk.js/Common/DataModel/PolyData\";\nimport vtkMath from \"@kitware/vtk.js/Common/Core/Math\";\nconst math = require('mathjs');\n\nclass Quadric {\n    constructor(points) {\n        // Quadric matrix in format (A, b, c). A is a 3x3 matrix, b is a Vector3 and c a constant\n        // This represents the 10 coefficients of a 4x4 quadric matrix that can be computed using\n        // the cartesian coefficients of a plane or with its normal vector and its centroid\n        const n = this.getNormal(points);\n        const p = this.getCentroid(points);\n\n        // Coefficients of symmetric 3x3 matrix: a11, a12, a13, a22, a23, a33\n        this.Axx = n[0] * n[0];\n        this.Axy = n[0] * n[1];\n        this.Axz = n[0] * n[2];\n        this.Ayy = n[1] * n[1];\n        this.Ayz = n[1] * n[2];\n        this.Azz = n[2] * n[2];\n\n        const vx = this.Axx * p[0] + this.Axy * p[1] + this.Axz * p[2];\n        const vy = this.Axy * p[0] + this.Ayy * p[1] + this.Ayz * p[2];\n        const vz = this.Axz * p[0] + this.Ayz * p[1] + this.Azz * p[2];\n        this.bx = -vx;\n        this.by = -vy;\n        this.bz = -vz;\n\n        this.c = math.dot(p, [vx, vy, vz]);\n    }\n\n    add = (quadric) => {\n        this.Axx += quadric.Axx;\n        this.Axy += quadric.Axy;\n        this.Axz += quadric.Axz;\n        this.Ayy += quadric.Ayy;\n        this.Ayz += quadric.Ayz;\n        this.Azz += quadric.Azz;\n        this.bx += quadric.bx;\n        this.by += quadric.by;\n        this.bz += quadric.bz;\n        this.c += quadric.c;\n\n        return this;\n    }\n\n    getCentroid = (points) => {\n        // Get the center point of a triangle\n        const [p0, p1, p2] = points;\n        return [\n            (p0[0] + p1[0] + p2[0]) / 3,\n            (p0[1] + p1[1] + p2[1]) / 3,\n            (p0[2] + p1[2] + p2[2]) / 3\n        ];\n    }\n\n    getNormal = (points) => {\n        // Get the normal vector of a triangle\n        // This is obtained by normalizing the cross-product of vectors p1-p0 and p2-p0\n        const [p0, p1, p2] = points;\n        let p10 = new Array(3);\n        let p20 = new Array(3);\n        let n = new Array(3);\n\n        vtkMath.subtract(p1, p0, p10);\n        vtkMath.subtract(p2, p0, p20);\n        vtkMath.cross(p10, p20, n);\n        vtkMath.normalize(n);\n\n        return n;\n    }\n\n    // Computes the error cost over a point p\n    // Return p.T@A@p + 2*p.T@b + c\n    evaluate = (point) => {\n        const x = this.Axx * point[0] + this.Axy * point[1] + this.Axz * point[2];\n        const y = this.Axy * point[0] + this.Ayy * point[1] + this.Ayz * point[2];\n        const z = this.Axz * point[0] + this.Ayz * point[1] + this.Azz * point[2];\n        const error = (point[0] * x + point[1] * y + point[2] * z)\n            + 2 * (point[0] * this.bx + point[1] * this.by + point[2] * this.bz) + this.c;\n\n        return error;\n    }\n\n    optimalPoint = (v_) => {\n        // The computation of optimal point for quadric Q_ corresponds to doing -A.inv()@b\n        let a11 = this.Azz * this.Ayy - this.Ayz * this.Ayz;\n        let a12 = this.Axz * this.Ayz - this.Azz * this.Axy;\n        let a13 = this.Axy * this.Ayz - this.Axz * this.Ayy;\n        let a22 = this.Azz * this.Axx - this.Axz * this.Axz;\n        let a23 = this.Axy * this.Axz - this.Axx * this.Ayz;\n        let a33 = this.Axx * this.Ayy - this.Axy * this.Axy;\n        let det = (this.Axx * a11) + (this.Axy * a12) + (this.Axz * a13);\n\n        // Check if the matrix is not singular (non invertible) or almost not singular (< epsilon)\n        if (math.abs(det) > 0.000000001) {\n            det = 1.0 / det;\n            a11 *= det;\n            a12 *= det;\n            a13 *= det;\n            a22 *= det;\n            a23 *= det;\n            a33 *= det;\n            // Return value is parameter v_\n            v_[0] = -(a11 * this.bx + a12 * this.by + a13 * this.bz);\n            v_[1] = -(a12 * this.bx + a22 * this.by + a23 * this.bz);\n            v_[2] = -(a13 * this.bx + a23 * this.by + a33 * this.bz);\n            return true;\n        } else {\n            // Cannot compute optimal point\n            // Needs to take the best point between the middle point and the ends\n            return false;\n        }\n    }\n}\n\nfunction VertexPairCost(v1Id, v2Id, cost, v_) {\n    this.v1Id = v1Id;\n    this.v2Id = v2Id;\n    this.cost = cost;\n    this.v_ = v_;\n}\n\nclass QuadricDecimator {\n    constructor(polyData, targetReduction = 0.5) {\n        console.log('QuadricDecimation: Init QuadricDecimator');\n        this.polyData = this.copy(polyData);\n        this.targetReduction = targetReduction;\n\n        this.points = this.polyData.getPoints();\n        if (!this.polyData.getLinks()) {\n            console.log('QuadricDecimation: Build Links');\n            this.polyData.buildLinks();\n        }\n        console.log('QuadricDecimation: Init Lines');\n        // Store lines in a different structure prevent function overload\n        this.lines = this.initLines();\n        //this.neighbors = this.initNeighbors();\n\n        console.log('QuadricDecimation: Init QMatrices');\n        this.qMatrices = this.initQuadricMatrices();\n        console.log('QuadricDecimation: Init PairCosts');\n        this.pairCosts = this.initPairCosts();\n        this.currentNumberOfCells = this.polyData.getNumberOfCells();\n        this.currentNumberOfPoints = this.polyData.getNumberOfPoints();\n    }\n\n    copy = (polyData) => {\n        const copy = vtkPolyData.newInstance();\n        copy.getPoints().setData(polyData.getPoints().getTuples(), 3);\n        copy.getPolys().setData(polyData.getPolys().getTuples());\n        copy.getPolys().setNumberOfComponents(4);\n\n        return copy;\n    }\n\n    setTargetReduction = (target_reduction) => {\n        this.target_reduction = target_reduction;\n    }\n\n    initLines = () => {\n        const lineSet = new Set();\n        for (let cellId = 0; cellId < this.polyData.getNumberOfCells(); cellId++) {\n            const pointIds = this.polyData.getCellPoints(cellId).cellPointIds;\n            const [pointId1, pointId2, pointId3] = pointIds.sort((a, b) => a - b);\n            lineSet.add(`${pointId1}-${pointId2}`);\n            lineSet.add(`${pointId1}-${pointId3}`);\n            lineSet.add(`${pointId2}-${pointId3}`);\n        }\n\n        const lines = Array.from(lineSet).sort((a, b) => {\n            const [id1A, id2A] = a.split('-').map(Number);\n            const [id1B, id2B] = b.split('-').map(Number);\n            return (id1A - id1B) || (id2A - id2B);\n        });\n\n        return lines;\n    }\n\n    initNeighbors = () => {\n        let neighbors = Array.from( { length: this.polyData.getNumberOfPoints() }, () => new Set());\n        for (const line of this.lines) {\n            const [pointId1, pointId2] = line.split('-').map(Number);\n            neighbors[pointId1].add(pointId2);\n            neighbors[pointId2].add(pointId1);\n        }\n\n        return neighbors;\n    }\n\n    initQuadricMatrices = () => {\n        // QuadricMatrices contains a 4-4 matrix of coefficients at each point\n        let quadricMatrices = Array.from({ length: this.polyData.getNumberOfPoints() });\n\n        // Loop over all cells to fill the Q matrices for all initial vertices\n        for (let cellId = 0; cellId < this.polyData.getNumberOfCells(); cellId++) {\n            const pointIds = Array.from(this.polyData.getCellPoints(cellId).cellPointIds);\n            const points = pointIds.map(pointId => this.points.getPoint(pointId));\n\n            // Old method storing values in a 16 components\n            // p = [a b c d] represents the plane defined by the equation ax + by + cz + d = 0\n            // Kp = p@p^t = [[a²,ab,ac,ad],[ab,b²,bc,bd],[ac,bc,c²,cd],[ad,bd,cd,d²]]\n            /*const k = math.multiply(math.transpose([p]), [p]);\n            for (const pointId of pointIds) {\n                quadricMatrices[pointId] = math.add(quadricMatrices[pointId], k);\n            }*/\n\n            // New method storing same values in 10 components\n            const q = new Quadric(points);\n            for (const pointId of pointIds) {\n                if (!quadricMatrices[pointId]) {\n                    quadricMatrices[pointId] = q;\n                } else {\n                    quadricMatrices[pointId].add(q);\n                }\n            }\n        }\n\n        return quadricMatrices;\n    }\n\n    _computeQ_V_Cost = (pointId1, pointId2) => {\n        // Compute Q_\n        const q1 = this.qMatrices[pointId1];\n        const q2 = this.qMatrices[pointId2];\n        const q_ = q1.add(q2);\n\n\n        // Compute V_\n        let v_ = Array.from( {length: 3} );\n        let cost;\n        // Compute optimal point from Quadric Q_\n        if (q_.optimalPoint(v_)) {\n            cost = q_.evaluate(v_);\n        } else {\n            // Need to compare middle point with ends\n            const p1 = this.points.getPoint(pointId1);\n            const p2 = this.points.getPoint(pointId2);\n            const middlePoint = [(p1[0] + p2[0]) / 2, (p1[1] + p2[1]) / 2, (p1[2] + p2[2]) / 2];\n            const errorP1 = q_.evaluate(p1);\n            const errorP2 = q_.evaluate(p2);\n            const errorMp = q_.evaluate(middlePoint);\n            if (errorP1 < errorP2 && errorP1 < errorMp) {\n                v_ = p1;\n                cost = errorP1;\n            } else if (errorP2 < errorMp) {\n                v_ = p2;\n                cost = errorP2;\n            } else {\n                v_ = middlePoint;\n                cost = errorMp;\n            }\n        }\n\n        return [q_, v_, cost];\n    }\n\n    initPairCosts = () => {\n        let pairCosts = Array.from({ length: this.lines.length }).fill(false);;\n        const nbPairs = this.lines.length;\n        console.log(`QuadricDecimation - vertex pairs: ${nbPairs}`);\n        this.lines.forEach((line, lineId) => {\n            const [pointId1, pointId2] = line.split('-').map(Number);\n            const [q_, v_, cost] = this._computeQ_V_Cost(pointId1, pointId2);\n            const pairCost = new VertexPairCost(Number(pointId1), Number(pointId2), cost, v_);\n            pairCosts[lineId] = pairCost;\n        });\n\n        return pairCosts;\n    }\n\n    buildMinHeap = () => {\n        const heapSize = this.pairCosts.length;\n\n        // Start from the last non-leaf node and heapify each node\n        for (let i = ~~(heapSize / 2) - 1; i >= 0; i--) {\n          this.heapify(i, heapSize);\n        }\n    }\n\n    heapify = (index, heapSize) => {\n        const costs = this.pairCosts;\n        const leftChildIndex = 2 * index + 1;\n        const rightChildIndex = 2 * index + 2;\n        let smallestIndex = index;\n\n        // Compare with left child\n        if (leftChildIndex < heapSize && costs[leftChildIndex].cost < costs[smallestIndex].cost) {\n          smallestIndex = leftChildIndex;\n        }\n\n        // Compare with right child\n        if (rightChildIndex < heapSize && costs[rightChildIndex].cost < costs[smallestIndex].cost) {\n          smallestIndex = rightChildIndex;\n        }\n\n        // If the smallest element is not the current root, or if it has the same cost,\n        // v1Id, and v2Id, swap them and recursively heapify\n        if (smallestIndex !== index) {\n            [costs[index], costs[smallestIndex]] = [costs[smallestIndex], costs[index]];\n            this.heapify(smallestIndex, heapSize);\n        }\n    }\n\n    extractMin = () => {\n        if (this.pairCosts.length === 0) {\n          return null; // Heap is empty\n        }\n\n        const minElement = this.pairCosts[0];\n\n        // Replace the root with the last element\n        this.pairCosts[0] = this.pairCosts.pop();\n\n        // Restore the heap property starting from the root\n        this.heapify(0, this.pairCosts.length);\n\n        return minElement;\n    }\n\n    _updateCells = (minPairCost) => {\n        const minV1Id = minPairCost.v1Id;\n        const minV2Id = minPairCost.v2Id;\n\n        // Remove cells with edge minV1-minV2\n        const neighborCells = this.polyData.getCellEdgeNeighbors(-1, minV1Id, minV2Id);\n        for (const cellId of neighborCells) {\n            // Remove reference from points to cell\n            const pointIds = this.polyData.getCellPoints(cellId).cellPointIds;\n            for (const pointId of pointIds) {\n                this.polyData.getLinks().removeCellReference(cellId, pointId);\n            }\n            this.polyData.getCells().deleteCell(cellId);\n            this.currentNumberOfCells--;\n            // Store IDs of deleted cells for reallocation\n            this.deletedCells[cellId] = true;\n        }\n\n        // Replace occurrences of minV2 with minV1\n        for (const cellId of this.polyData.getPointCells(minV2Id)) {\n            if (!this.deletedCells[cellId]) {\n                let pointIds = this.polyData.getCellPoints(cellId).cellPointIds;\n                pointIds = pointIds.map((pointId) => (pointId === minV2Id) ? minV1Id : pointId);\n                this.polyData.getPolys().setTuple(cellId, [3, ...pointIds]);\n\n                // Add reference to cell for minV1\n                if (!neighborCells.includes(cellId)) {\n                    this.polyData.getLinks().insertNextCellReference(minV1Id, cellId);\n                }\n            }\n        }\n    }\n\n    _updatePoints = (minPairCost) => {\n        const minV1Id = minPairCost.v1Id;\n        const minV2Id = minPairCost.v2Id;\n        const minV_ = minPairCost.v_;\n\n        // Update coordinates of v1 with v_, delete v2\n        this.points.setPoint(minV1Id, minV_[0], minV_[1], minV_[2]);\n\n        this.deletedPoints[minV2Id] = true;\n        this.polyData.getLinks().deletePoint(minV2Id);\n        --this.currentNumberOfPoints;\n    }\n\n    _updatePairCosts = (minPairCost) => {\n        const minV1Id = minPairCost.v1Id;\n        const minV2Id = minPairCost.v2Id;\n\n        // Update edges optimal contraction and cost\n        for (let pairId = 0; pairId < this.pairCosts.length; pairId++) {\n            const curV1Id = this.pairCosts[pairId].v1Id;\n            const curV2Id = this.pairCosts[pairId].v2Id;\n            // Update v_ and cost as minV1 got updated\n            if (curV1Id === minV1Id || curV2Id === minV1Id) {\n                const [newQ_, newV_, newCost] = this._computeQ_V_Cost(curV1Id, curV2Id);\n                this.pairCosts[pairId] = new VertexPairCost(curV1Id, curV2Id, newCost, newV_);\n            }\n            // Replace minV2 with minV1 as minV2 got removed, then update v_ and cost\n            else if (curV1Id === minV2Id || curV2Id === minV2Id) {\n                const otherVId = (curV1Id !== minV2Id)? curV1Id : curV2Id;\n                const [newV1Id, newV2Id] = [minV1Id, otherVId].sort((a, b) => a - b);\n                const [newQ_, newV_, newCost] = this._computeQ_V_Cost(newV1Id, newV2Id);\n                if (this.pairCosts.some(pairCost => pairCost.v1Id === newV1Id && pairCost.v2Id === newV2Id)) {\n                    // Remove element\n                    const lastIndex = this.pairCosts.length - 1;\n                    [this.pairCosts[pairId], this.pairCosts[lastIndex]] = [this.pairCosts[lastIndex], this.pairCosts[pairId]];\n                    this.pairCosts.pop();\n                    pairId--;\n                } else {\n                    this.pairCosts[pairId] = new VertexPairCost(newV1Id, newV2Id, newCost, newV_);\n                }\n            }\n        }\n    }\n\n    _removeDegenerate = (pointId) => {\n        // Remove degenerate cells\n        // TODO Some code duplicate\n        if (this.deletedPoints[pointId]) {\n            return;\n        }\n\n        for (const cellId of this.polyData.getPointCells(pointId)) {\n            const degenerateCellPointIds = this.polyData.getCellPoints(cellId).cellPointIds;\n            for (const degenerateCellPointId of degenerateCellPointIds) {\n                this.polyData.getLinks().removeCellReference(cellId, degenerateCellPointId);\n            }\n            this.polyData.getCells().deleteCell(cellId);\n            this.currentNumberOfCells--;\n            this.deletedCells[cellId] = true;\n        }\n\n        // Delete degenerate point\n        this.deletedPoints[pointId] = true;\n        this.polyData.getLinks().deletePoint(pointId);\n        --this.currentNumberOfPoints;\n\n        // Delete degenerate pairs\n        for (let pairId = 0; pairId < this.pairCosts.length; pairId++) {\n            let pairCost = this.pairCosts[pairId];\n            if (pairCost.v1Id === pointId || pairCost.v2Id === pointId) {\n                const lastIndex = this.pairCosts.length - 1;\n                [this.pairCosts[pairId], this.pairCosts[lastIndex]] = [this.pairCosts[lastIndex], this.pairCosts[pairId]];\n                this.pairCosts.pop();\n                pairId--;\n            }\n        }\n\n        // Remove neighbors\n        const pointNeighbors = Array.from(this.neighbors[pointId]);\n        for (const neighborPointId of pointNeighbors) {\n            this.neighbors[neighborPointId].delete(pointId);\n        }\n        this.neighbors[pointId].clear();\n        /*for (const neighborPointId of pointNeighbors) {\n            if (this.neighbors[neighborPointId].size < 3 || this.polyData.getPointCells(neighborPointId).length < 3) {\n                this._removeDegenerate(neighborPointId);\n            }\n        }*/\n    }\n\n    _updateNeighbors = (minPairCost) => {\n        const minV1Id = minPairCost.v1Id;\n        const minV2Id = minPairCost.v2Id;\n\n        const minV2Neighbors = Array.from(this.neighbors[minV2Id]);\n        // Remove references from points to minV2\n        for (const pointId of minV2Neighbors) {\n            this.neighbors[pointId].delete(minV2Id);\n            if (pointId !== minV1Id) {\n                this.neighbors[pointId].add(minV1Id);\n                this.neighbors[minV1Id].add(pointId);\n            }\n        }\n        this.neighbors[minV2Id].clear();\n        /*for (const pointId of minV2Neighbors) {\n            if (this.neighbors[pointId].size < 3 || this.polyData.getPointCells(pointId).length < 3) { // Degenerate Point\n                this._removeDegenerate(pointId);\n            }\n        }*/\n    }\n\n    decimate = () => {\n        if (this.targetReduction <= 0. || this.targetReduction >= 1.) {\n            return this.polyData;\n        }\n\n        const originalNumberOfCells = this.polyData.getNumberOfCells();\n        const originalNumberOfPoints = this.polyData.getNumberOfPoints();\n        const targetNumberOfCells = ~~(this.targetReduction * originalNumberOfCells);\n        this.deletedCells = Array.from({ length: originalNumberOfCells }).fill(false);\n        this.deletedPoints = Array.from({ length: originalNumberOfPoints }).fill(false);\n\n        this.buildMinHeap();\n        while (this.currentNumberOfCells > targetNumberOfCells) {\n            if ((originalNumberOfCells - this.currentNumberOfCells) % 100 === 0) {\n                console.log(`QuadricDecimation - cells destroyed: ${originalNumberOfCells - this.currentNumberOfCells}`\n                            + ` / ${originalNumberOfCells - targetNumberOfCells}`);\n            }\n            const minPairCost = this.extractMin();\n            this._updateCells(minPairCost);\n            this._updatePoints(minPairCost);\n            this._updatePairCosts(minPairCost);\n            //this._updateNeighbors(minPairCost);\n            this.buildMinHeap();\n        }\n\n        /*for (let pointId = 0; pointId < originalNumberOfPoints; pointId++) {\n            if (!this.deletedPoints[pointId] && this.polyData.getLinks().getLink(0).ncells < 3) {\n                this._removeDegenerate(pointId);\n            }\n        }*/\n\n        // TODO Reallocate points and polys\n        let pBuffer = [];\n        let tBuffer = [];\n        let pointMap = Array.from({ length: originalNumberOfPoints }).fill(-1);\n        /*let b = false;\n        while (!b) {\n            b = true;\n            for (let pointId = 0; pointId < originalNumberOfPoints; pointId++) {\n                if (!this.deletedPoints[pointId] && (this.neighbors[pointId].size < 3 || this.polyData.getPointCells(pointId).length < 3)) { // Degenerate Point\n                    b = false;\n                    console.log(originalNumberOfPoints)\n                    this._removeDegenerate(pointId);\n                }\n            }\n        }*/\n\n        let i = 0;\n        for (let pointId = 0; pointId < originalNumberOfPoints; pointId++) {\n            if (!this.deletedPoints[pointId]) {\n                pBuffer.push(...this.points.getPoint(pointId));\n                pointMap[pointId] = i;\n                i++;\n            }\n        }\n        for (let cellId = 0; cellId < originalNumberOfCells; cellId++) {\n            if (!this.deletedCells[cellId]) {\n                tBuffer.push(3);\n                let pointIds = this.polyData.getCellPoints(cellId).cellPointIds;\n                pointIds = pointIds.map(pointId => pointMap[pointId]);\n                tBuffer.push(...Array.from(pointIds));\n            }\n        }\n\n        const newPolyData = vtkPolyData.newInstance();\n        newPolyData.getPoints().setData(new Float32Array(pBuffer), 3)\n        newPolyData.getPolys().setData(new Uint32Array(tBuffer));\n        newPolyData.getPolys().setNumberOfComponents(4);\n\n        return newPolyData;\n    }\n}\n\nexport default QuadricDecimator;\n","// THIS FILE IS A MODIFIED COPY OF @kitware/vtk.js\nimport { m as macro } from '@kitware/vtk.js/macros2.js';\nimport vtkDataArray from '@kitware/vtk.js//Common/Core/DataArray.js';\nimport vtkEdgeLocator from '@kitware/vtk.js//Common/DataModel/EdgeLocator.js';\nimport vtkPolyData from '@kitware/vtk.js//Common/DataModel/PolyData.js';\nimport { l as normalize } from '@kitware/vtk.js/Common/Core/Math/index.js';\nimport vtkCaseTable from '@kitware/vtk.js/Filters/General/ImageMarchingCubes/caseTable.js';\n\nconst {\n  vtkErrorMacro,\n  vtkDebugMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// imageMarchingCubes methods\n// ----------------------------------------------------------------------------\n\nfunction imageMarchingCubes(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('imageMarchingCubes');\n  const ids = [];\n  const voxelScalars = [];\n  const voxelGradients = [];\n  const voxelPts = [];\n  const edgeLocator = vtkEdgeLocator.newInstance();\n\n  // Retrieve scalars and voxel coordinates. i-j-k is origin of voxel.\n  publicAPI.getVoxelScalars = (i, j, k, slice, dims, origin, spacing, s) => {\n    // First get the indices for the voxel\n    ids[0] = k * slice + j * dims[0] + i; // i, j, k\n    ids[1] = ids[0] + 1; // i+1, j, k\n    ids[2] = ids[0] + dims[0]; // i, j+1, k\n    ids[3] = ids[2] + 1; // i+1, j+1, k\n    ids[4] = ids[0] + slice; // i, j, k+1\n    ids[5] = ids[4] + 1; // i+1, j, k+1\n    ids[6] = ids[4] + dims[0]; // i, j+1, k+1\n    ids[7] = ids[6] + 1; // i+1, j+1, k+1\n\n    // Now retrieve the scalars\n    for (let ii = 0; ii < 8; ++ii) {\n      voxelScalars[ii] = s[ids[ii]];\n    }\n  };\n\n  // Retrieve voxel coordinates. i-j-k is origin of voxel.\n  publicAPI.getVoxelPoints = (i, j, k, origin, spacing) => {\n    const x = origin[0] + i * spacing[0];\n    const y = origin[1] + j * spacing[1];\n    const z = origin[2] + k * spacing[2];\n\n    voxelPts[0] = [x, y, z];\n    voxelPts[1] = [x + spacing[0], y, z];\n    voxelPts[2] = [x, y + spacing[1], z];\n    voxelPts[3] = [x + spacing[0], y + spacing[1], z];\n    voxelPts[4] = [x, y, z + spacing[2]];\n    voxelPts[5] = [x + spacing[0], y, z + spacing[2]];\n    voxelPts[6] = [x, y + spacing[1], z + spacing[2]];\n    voxelPts[7] = [x + spacing[0], y + spacing[1], z + spacing[2]];\n  };\n\n  // Compute point gradient at i-j-k location\n  publicAPI.getPointGradient = (i, j, k, dims, slice, spacing, s, g) => {\n    let sp;\n    let sm;\n\n    // x-direction\n    if (i === 0) {\n      sp = s[i + 1 + j * dims[0] + k * slice];\n      sm = s[i + j * dims[0] + k * slice];\n      g[0] = (sm - sp) / spacing[0];\n    } else if (i === dims[0] - 1) {\n      sp = s[i + j * dims[0] + k * slice];\n      sm = s[i - 1 + j * dims[0] + k * slice];\n      g[0] = (sm - sp) / spacing[0];\n    } else {\n      sp = s[i + 1 + j * dims[0] + k * slice];\n      sm = s[i - 1 + j * dims[0] + k * slice];\n      g[0] = 0.5 * (sm - sp) / spacing[0];\n    }\n\n    // y-direction\n    if (j === 0) {\n      sp = s[i + (j + 1) * dims[0] + k * slice];\n      sm = s[i + j * dims[0] + k * slice];\n      g[1] = (sm - sp) / spacing[1];\n    } else if (j === dims[1] - 1) {\n      sp = s[i + j * dims[0] + k * slice];\n      sm = s[i + (j - 1) * dims[0] + k * slice];\n      g[1] = (sm - sp) / spacing[1];\n    } else {\n      sp = s[i + (j + 1) * dims[0] + k * slice];\n      sm = s[i + (j - 1) * dims[0] + k * slice];\n      g[1] = 0.5 * (sm - sp) / spacing[1];\n    }\n\n    // z-direction\n    if (k === 0) {\n      sp = s[i + j * dims[0] + (k + 1) * slice];\n      sm = s[i + j * dims[0] + k * slice];\n      g[2] = (sm - sp) / spacing[2];\n    } else if (k === dims[2] - 1) {\n      sp = s[i + j * dims[0] + k * slice];\n      sm = s[i + j * dims[0] + (k - 1) * slice];\n      g[2] = (sm - sp) / spacing[2];\n    } else {\n      sp = s[i + j * dims[0] + (k + 1) * slice];\n      sm = s[i + j * dims[0] + (k - 1) * slice];\n      g[2] = 0.5 * (sm - sp) / spacing[2];\n    }\n  };\n\n  // Compute voxel gradient values. I-j-k is origin point of voxel.\n  publicAPI.getVoxelGradients = (i, j, k, dims, slice, spacing, scalars) => {\n    const g = [];\n    publicAPI.getPointGradient(i, j, k, dims, slice, spacing, scalars, g);\n    voxelGradients[0] = g\n    publicAPI.getPointGradient(i + 1, j, k, dims, slice, spacing, scalars, g);\n    voxelGradients[1] = g\n    publicAPI.getPointGradient(i, j + 1, k, dims, slice, spacing, scalars, g);\n    voxelGradients[2] = g\n    publicAPI.getPointGradient(i + 1, j + 1, k, dims, slice, spacing, scalars, g);\n    voxelGradients[3] = g\n    publicAPI.getPointGradient(i, j, k + 1, dims, slice, spacing, scalars, g);\n    voxelGradients[4] = g\n    publicAPI.getPointGradient(i + 1, j, k + 1, dims, slice, spacing, scalars, g);\n    voxelGradients[5] = g\n    publicAPI.getPointGradient(i, j + 1, k + 1, dims, slice, spacing, scalars, g);\n    voxelGradients[6] = g\n    publicAPI.getPointGradient(i + 1, j + 1, k + 1, dims, slice, spacing, scalars, g);\n    voxelGradients[7] = g\n\n  };\n\n  publicAPI.produceTriangles = (cValMin, cValMax, i, j, k, extent, slice, dims, origin, spacing, scalars, points, tris, normals) => {\n    const CASE_MASK = [1, 2, 4, 8, 16, 32, 64, 128];\n    const VERT_MAP = [0, 1, 3, 2, 4, 5, 7, 6];\n    const xyz = new Float32Array(3);\n    const n = new Float32Array(3);\n    let pId;\n    publicAPI.getVoxelScalars(i, j, k, slice, dims, origin, spacing, scalars);\n\n    let index = 0;\n    for (let idx = 0; idx < 8; idx++) {\n      const scalar = voxelScalars[VERT_MAP[idx]];\n      if (scalar > cValMin && scalar < cValMax) {\n        index |= CASE_MASK[idx]; // eslint-disable-line no-bitwise\n      }\n    }\n\n    const voxelTris = vtkCaseTable.getCase(index);\n\n    if (voxelTris[0] < 0) {\n      return; // No voxel coordinates to process\n    }\n\n    publicAPI.getVoxelPoints(i + extent[0], j + extent[2], k + extent[4], origin, spacing);\n\n    if (model.computeNormals) {\n      publicAPI.getVoxelGradients(i, j, k, dims, slice, spacing, scalars);\n    }\n\n    for (let idx = 0; voxelTris[idx] >= 0; idx += 3) {\n      tris.push(3);\n      for (let eid = 0; eid < 3; eid++) {\n        const edgeVerts = vtkCaseTable.getEdge(voxelTris[idx + eid]);\n        pId = undefined;\n\n        if (model.mergePoints) {\n          pId = edgeLocator.isInsertedEdge(ids[edgeVerts[0]], ids[edgeVerts[1]])?.value;\n        }\n\n        if (pId === undefined) {\n          const cVal = (voxelScalars[edgeVerts[0]] <= cValMin || voxelScalars[edgeVerts[1]] <= cValMin) ? cValMin : cValMax;\n          const t = (cVal - voxelScalars[edgeVerts[0]]) / (voxelScalars[edgeVerts[1]] - voxelScalars[edgeVerts[0]]);\n          const x0 = voxelPts[edgeVerts[0]];\n          const x1 = voxelPts[edgeVerts[1]];\n\n          xyz[0] = x0[0] + t * (x1[0] - x0[0]);\n          xyz[1] = x0[1] + t * (x1[1] - x0[1]);\n          xyz[2] = x0[2] + t * (x1[2] - x0[2]);\n\n          pId = points.length / 3;\n          points.push(xyz[0], xyz[1], xyz[2]);\n\n          if (model.computeNormals) {\n            const n0 = voxelGradients[edgeVerts[0]];\n            const n1 = voxelGradients[edgeVerts[1]];\n\n            n[0] = n0[0] + t * (n1[0] - n0[0]);\n            n[1] = n0[1] + t * (n1[1] - n0[1]);\n            n[2] = n0[2] + t * (n1[2] - n0[2]);\n            normalize(n);\n            normals.push(n[0], n[1], n[2]);\n          }\n\n          if (model.mergePoints) {\n            edgeLocator.insertEdge(ids[edgeVerts[0]], ids[edgeVerts[1]], pId);\n          }\n        }\n        tris.push(pId);\n      }\n    }\n  };\n\n  publicAPI.requestData = (inData, outData) => {\n    const input = inData[0];\n    if (!input) {\n      vtkErrorMacro('Invalid or missing input');\n      return;\n    }\n    console.time('mcubes');\n\n    // Retrieve output and volume data\n    const origin = input.getOrigin();\n    const spacing = input.getSpacing();\n    const dims = input.getDimensions();\n    const s = input.getPointData().getScalars().getData();\n\n    // Points - dynamic array\n    const pBuffer = [];\n\n    // Cells - dynamic array\n    const tBuffer = [];\n\n    // Normals\n    const nBuffer = [];\n\n    // Loop over all voxels, determine case and process\n    const extent = input.getExtent();\n    const slice = dims[0] * dims[1];\n    for (let k = 0; k < dims[2] - 1; ++k) {\n      for (let j = 0; j < dims[1] - 1; ++j) {\n        for (let i = 0; i < dims[0] - 1; ++i) {\n          publicAPI.produceTriangles(model.contourValue, model.contourValueMax, i, j, k, extent, slice, dims, origin, spacing, s, pBuffer, tBuffer, nBuffer);\n        }\n      }\n    }\n    edgeLocator.initialize();\n\n    // Update output\n    const polydata = vtkPolyData.newInstance();\n    polydata.getPoints().setData(new Float32Array(pBuffer), 3);\n    polydata.getPolys().setData(new Uint32Array(tBuffer));\n    polydata.getPolys().setNumberOfComponents(4);\n    if (model.computeNormals) {\n      const nData = new Float32Array(nBuffer);\n      const normals = vtkDataArray.newInstance({\n        numberOfComponents: 3,\n        values: nData,\n        name: 'Normals'\n      });\n      polydata.getPointData().setNormals(normals);\n    }\n    outData[0] = polydata;\n    vtkDebugMacro('Produced output');\n    console.timeEnd('mcubes');\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  contourValue: 0,\n  contourValueMax: 4096,\n  computeNormals: false,\n  mergePoints: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Make this a VTK object\n  macro.obj(publicAPI, model);\n\n  // Also make it an algorithm with one input and one output\n  macro.algo(publicAPI, model, 1, 1);\n  macro.setGet(publicAPI, model, ['contourValue', 'contourValueMax', 'computeNormals', 'mergePoints']);\n\n  // Object specific methods\n  macro.algo(publicAPI, model, 1, 1);\n  imageMarchingCubes(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'imageMarchingCubes');\n\n// ----------------------------------------------------------------------------\n\nvar imageMarchingCubes$1 = {\n  newInstance,\n  extend\n};\n\nexport { imageMarchingCubes$1 as default, extend, newInstance };\n","import React, { useMemo, useEffect, useRef, useState, useCallback } from 'react';\nimport { Button, Icon, useViewportGrid, useImageViewer } from '@ohif/ui';\nimport { CheckBox } from '@ohif/ui';\nimport vtkMapper from '@kitware/vtk.js/Rendering/Core/Mapper';\nimport vtkActor from '@kitware/vtk.js/Rendering/Core/Actor';\nimport vtkImageMarchingCubes from '@kitware/vtk.js/Filters/General/ImageMarchingCubes.js';\nimport { getEnabledElement, utilities as csUtils } from '@cornerstonejs/core';\nimport vtkOutlineFilter from '@kitware/vtk.js/Filters/General/OutlineFilter';\nimport vtkImageData from '@kitware/vtk.js/Common/DataModel/ImageData';\nimport vtkImageCropFilter from '@kitware/vtk.js/Filters/General/ImageCropFilter';\nimport vtkImageReslice from '@kitware/vtk.js/Imaging/Core/ImageReslice';\nimport vtkDataArray from '@kitware/vtk.js/Common/Core/DataArray';\nimport PolyDataExtractor from './Edition3DUtils/extractCellGroupsFromPolydata.js';\nimport QuadricDecimator from './Edition3DUtils/quadricDecimation.js';\nimport vtkSTLWriter from '@kitware/vtk.js/IO/Geometry/STLWriter';\nimport { FormatTypes } from '@kitware/vtk.js/IO/Geometry/STLWriter/Constants.js';\nimport vtkColorTransferFunction from '@kitware/vtk.js/Rendering/Core/ColorTransferFunction.js';\nimport vtkPiecewiseFunction from '@kitware/vtk.js/Common/DataModel/PiecewiseFunction.js';\n// TODO Optimized code for marchingCubes\nimport imageMarchingCubes from './Edition3DUtils/ImageMarchingCubes.js';\nimport vtkPolyData from '@kitware/vtk.js/Common/DataModel/PolyData.js';\nconst _ = require('lodash');\n\nexport default function Edition3DPanel({\n    commandsManager,\n    extensionManager,\n    servicesManager,\n}): React.FunctionComponent {\n    const [percentileValues, setPercentileValues] = useState(new Array(100).fill(0));\n    const [cTPercentile, setCTPercentile] = useState('50');\n    const [ctValue, setCtValue] = useState('0');\n    const [reductionPercentile, setReductionPercentile] = useState('50');\n    const [skinThreshold, setSkinThreshold] = useState('20');\n    const [boneThreshold, setBoneThreshold] = useState('450');\n    const [toothThreshold, setToothThreshold] = useState('1200');\n    const isFirstRender = useRef(true);\n\n    // @ts-ignore\n    const { StudyInstanceUIDs } = useImageViewer();\n    // @ts-ignore\n    const [{ activeViewportId, viewports }, viewportGridService] = useViewportGrid();\n    const {\n        cornerstoneViewportService,\n        hangingProtocolService,\n        uiNotificationService,\n    } = servicesManager.services;\n\n    const seededRandom = (seed: number) => {\n        let value = seed % 2147483647;\n        return () => {\n            value = (value * 16807) % 2147483647;\n            return value / 2147483647;\n        };\n    }\n    const myRandom = seededRandom(42);\n\n    /*const computeHistogram = () => {\n        const firstVp = cornerstoneViewportService.getCornerstoneViewport(\"default\");\n        const imageData = firstVp.getImageData().imageData;\n        const scalars = imageData.getPointData().getScalars().getData()\n\n        const histogram = new Array(3596).fill(0);\n        for (const value of scalars) {\n            if (value >= -500) {\n                histogram[value - 500] += 1;\n            }\n        }\n        const nbValues = histogram.reduce((a, b) => a + b)\n        const percentStep = nbValues / 100\n\n        let curPercentile = 1;\n        let cumulatedSum = 0;\n        histogram.forEach((value, index) => {\n            cumulatedSum += value;\n            while (cumulatedSum > percentStep * curPercentile) {\n                percentileValues[curPercentile] = index - 500;\n                curPercentile += 1;\n            }\n        });\n    }*/\n\n    useEffect(() => {\n        // Change view to default\n        const state = viewportGridService.getState();\n        console.log('STATE', state);\n        console.log('HP', hangingProtocolService.getActiveProtocol());\n        if (hangingProtocolService.getActiveProtocol().protocol.id !== 'mprAnd3DVolumeViewport') {\n            commandsManager.runCommand('toggleHangingProtocol', {\n                protocolId: 'mprAnd3DVolumeViewport',\n                stageIndex: 0,\n            });\n        }\n    }, []);\n\n    useEffect(() => {\n        // TODO display when switching between Panoramic and 3D Edition\n        if (isFirstRender.current) {\n            isFirstRender.current = false;\n            return;\n        }\n\n        const vp = Array.from(viewports.values()).find(vp => vp.viewportOptions.viewportType === 'volume3d');\n        console.assert(vp, 'UseEffect Threshold: Could not find \"volume3d\" viewport');\n        viewportGridService.setActiveViewportIndex(vp.viewportId);\n\n        const cornerstoneVP = cornerstoneViewportService.getCornerstoneViewport(vp.viewportId);\n        const actorEntries = cornerstoneVP.getActors();\n        if (!actorEntries || !actorEntries.length) {\n            uiNotificationService.show({\n                title: `Edition 3D export`,\n                message: `No actor on 3d viewport`,\n                type: 'error',\n                duration: 3000,\n              });\n            return;\n        }\n        const ctfun = vtkColorTransferFunction.newInstance();\n        ctfun.addRGBPoint(-1000, 0, 0, 0);\n        ctfun.addRGBPoint(+skinThreshold, 1, 0, 0.031);\n        ctfun.addRGBPoint(+boneThreshold, 1, 0.458, 0.105);\n        ctfun.addRGBPoint(+toothThreshold, 1, 0.882, 0.207);\n        ctfun.addRGBPoint(3095, 1, 1, 1);\n\n        const ofun = vtkPiecewiseFunction.newInstance();\n        ofun.addPoint(-1000, 0);\n        ofun.addPoint(+skinThreshold, 0.05);\n        ofun.addPoint(+boneThreshold, 0.3);\n        ofun.addPoint(+toothThreshold, 1);\n        ofun.addPoint(3095, 1)\n\n        actorEntries.forEach(obj => {\n            const actor = obj.actor;\n            actor.getProperty().setRGBTransferFunction(0, ctfun);\n            actor.getProperty().setScalarOpacity(0, ofun);\n        });\n        getEnabledElement(cornerstoneVP.element).viewport.render();\n    }, [skinThreshold, boneThreshold, toothThreshold]);\n\n    const focusOn = async() => {\n        // Focus on viewport index 1, which is volume3D (if layout 2x2)\n        // If length <= 1, means that focus is on and need to de-focus\n        const vp = Array.from(viewports.values()).find(vp => vp.viewportOptions.viewportType === 'volume3d');\n        console.assert(vp, 'FocusOn: Could not find \"volume3d\" viewport');\n        const activeViewportId = (viewports.size > 1) ? Array.from(viewports.keys())[1] : \"default\";\n        await viewportGridService.setActiveViewportId(activeViewportId);\n\n        //Call to layout 1x1 on volume3d viewport\n        commandsManager.runCommand('toggleOneUpCustom', {});\n    };\n\n    const exportSTL = () => {\n        // TODO Cache currently not filled\n        // Get STL from actor in volume3d viewport\n        const vp = viewports.find(vp => vp.viewportOptions.viewportType === 'volume3d');\n        console.assert(vp, 'Export STL: Could not find \"volume3d\" viewport');\n        const cornerstoneVP = cornerstoneViewportService.getCornerstoneViewport(vp.viewportId);\n        const actorEntries = cornerstoneVP.getActors();\n        if (!actorEntries || !actorEntries.length) {\n            uiNotificationService.show({\n                title: `Edition 3D export`,\n                message: `STL needs to be generated`,\n                type: 'info',\n                duration: 3000,\n              });\n            return;\n        }\n        for (const actorEntry of actorEntries) {\n            const { uid: actorUID, actor } = actorEntry;\n            if (actorUID === 'outline') {\n                continue;\n            }\n\n            const polyData = actor.getMapper().getInputData();\n            const fileContents = vtkSTLWriter.writeSTL(polyData, FormatTypes.BINARY);\n            const blob = new Blob([fileContents], { type: 'text/plain;charset=utf-8' });\n            const a = window.document.createElement('a');\n            a.href = window.URL.createObjectURL(blob);\n            a.download = `${actorUID}STL.stl`;\n            a.text = `Download ${actorUID} STL`;\n            document.body.appendChild(a);\n            a.click();\n            console.log(`${actorUID} polygons successfully exported`);\n        };\n    };\n\n    const _dropPoints = (imageData, keepRatio = 0.5) => {\n        const originalData = imageData.getPointData().getScalars();\n\n        const mask = new Float32Array(originalData.getNumberOfTuples());\n        for (let i = 0; i < mask.length; i++) {\n            mask[i] = myRandom() < keepRatio ? 1 : 0;\n        }\n        const maskedData = originalData.getData().map((value, index) => value * mask[index]);\n        const maskedDataArray = vtkDataArray.newInstance({\n            numberOfComponents: originalData.getNumberOfComponents(),\n            values: maskedData,\n            name: originalData.getName(),\n        });\n        const maskedImageData = vtkImageData.newInstance();\n        maskedImageData.setDimensions(imageData.getDimensions());\n        maskedImageData.getPointData().setScalars(maskedDataArray);\n\n        return maskedImageData;\n    };\n\n    const _interpolatePoints = (imageData, resizeScale = 0.5) => {\n        const inputReslice = vtkImageReslice.newInstance();\n        inputReslice.setInputData(imageData);\n        const inputDimensions = imageData.getDimensions();\n        const outputDimensions = [\n            inputDimensions[0] * resizeScale,\n            inputDimensions[1] * resizeScale,\n            inputDimensions[2] * resizeScale,\n        ];\n        const outputSpacing = [\n            imageData.getSpacing()[0] * (inputDimensions[0] / outputDimensions[0]),\n            imageData.getSpacing()[1] * (inputDimensions[1] / outputDimensions[1]),\n            imageData.getSpacing()[2] * (inputDimensions[2] / outputDimensions[2]),\n        ];\n        inputReslice.setOutputSpacing(outputSpacing);\n        inputReslice.setOutputExtent([\n            0, outputDimensions[0] - 1,\n            0, outputDimensions[1] - 1,\n            0, outputDimensions[2] - 1,\n        ]);\n\n        return inputReslice.getOutputData();\n    };\n\n    const _displayMarchingCubes = (actorEntries) => {\n        const vp = Array.from(viewports.values()).find(vp => vp.viewportOptions.viewportType === 'volume3d');\n        console.assert(vp, 'DisplayMarchingCubes: Could not find \"volume3d\" viewport');\n\n        viewportGridService.setActiveViewportId(vp.viewportId);\n        const cornerstoneVP = cornerstoneViewportService.getCornerstoneViewport(vp.viewportId);\n\n        cornerstoneVP.setActors(actorEntries);\n\n        const cornestoneRenderer = cornerstoneVP.getRenderer();\n        cornestoneRenderer.getRenderWindow().setNumberOfLayers(2);\n        cornestoneRenderer.setUseDepthPeeling(true);\n        cornestoneRenderer.setOcclusionRatio(0.1);\n        cornestoneRenderer.setMaximumNumberOfPeels(100);\n        cornestoneRenderer.getActiveCamera().setParallelProjection(true);\n        cornestoneRenderer.resetCamera();\n\n        getEnabledElement(cornerstoneVP.element).viewport.render();\n    };\n\n    const marchingCubes = () => {\n        // TODO handle early click\n        const firstVp = cornerstoneViewportService.getCornerstoneViewport(\"default\");\n        let imageData = firstVp.getImageData().imageData;\n\n        // Create a mask to randomly select points\n        const vp = Array.from(viewports.values()).find(vp => vp.viewportOptions.viewportType === 'volume3d');\n        console.assert(vp, 'MarchingCubes: Could not find \"volume3d\" viewport');\n\n        viewportGridService.setActiveViewportId(vp.viewportId);\n\n        // -------------------- PREPROCESSING --------------------\n        console.log('Marching cubes - Preprocessing');\n\n        // Reduce number of points, method 1\n        // imageData = dropPoints(imageData, 0.15)\n\n        // Reduce number of points, method 2\n        // imageData = interpolatePoints(imageData, 0.15)\n\n        let actorEntries = [];\n\n        const contourValue = ctValue;\n        const contourType = (contourValue < skinThreshold) ? 'airways' :\n                            (contourValue < boneThreshold) ? 'skin' :\n                            (contourValue < toothThreshold) ? 'bones' :\n                            'teeth';\n\n        if (contourType == 'airways') {\n            // By cropping, we ensure the polygon mesh is done on the inner airways and not on the ambient air\n            const imageDataCopy = vtkImageData.newInstance();\n            imageDataCopy.shallowCopy(imageData);\n\n            const cropFilter = vtkImageCropFilter.newInstance();\n            cropFilter.setCroppingPlanes([0, 400, 50, 400, 75, 280]);\n            cropFilter.setInputData(imageDataCopy);\n            imageData = cropFilter.getOutputData()\n        }\n\n        // -------------------- MESHING --------------------\n        console.log(`Marching cubes - Processing ${contourType}`);\n\n        const polyExtractor = imageMarchingCubes.newInstance({\n            contourValue: contourValue,\n            //contourValueMax: 1200,\n            computeNormals: false,\n            mergePoints: true,\n        });\n        polyExtractor.setInputData(imageData);\n        const polySTL = polyExtractor.getOutputData();\n        polySTL.buildLinks();\n\n        const polyMapper = vtkMapper.newInstance();\n        polyMapper.setInputData(polySTL);\n        const polys = vtkActor.newInstance();\n        polys.setMapper(polyMapper);\n\n        if (contourType == 'airways') {\n        polys.getProperty().setDiffuseColor(myRandom(), myRandom(), myRandom());\n        } else if (contourType == 'skin') {\n            polys.getProperty().setDiffuseColor(0.88, 0.55, 0.55);\n        } else if (contourType == 'bones') {\n            polys.getProperty().setDiffuseColor(0.9, 0.85, 0.77);\n        } else if (contourType == 'teeth') {\n            polys.getProperty().setDiffuseColor(1, 1, 1);\n        }\n        polys.getProperty().setOpacity(1);\n        polys.getProperty().setBackfaceCulling(true);\n        // actorEntries.push({ uid: contourType, actor: polys });\n\n        // -------------------- AIRWAYS SEPARATION --------------------\n        console.log('Marching cubes - Separating airways');\n\n        // Divide skin in separated polys according to linking\n        const allPolys = new PolyDataExtractor(polySTL).extractGroups();\n\n        // Sort polys according to their size\n        const polysSize = allPolys.map((p, i) => ({ index: i, size: p.getNumberOfCells() }));\n        polysSize.sort((p1, p2) => p2.size - p1.size);\n\n        //Select the N biggest polys EXCEPT the first one (skin surface) TODO\n        const N = 10; // TODO\n        const idxs = Array.from({ length: N }, (value, index) => index);\n        const polysMaxSizeIndexes = idxs.map(i => polysSize[i]);\n\n        const selectedPolys = polysMaxSizeIndexes.map(obj => allPolys[obj.index]);\n\n        const targetReduction = Number(reductionPercentile) / 100;\n        //Create actors from selected polys\n        selectedPolys.map((p, i) => {\n            let qPolys = p;\n            if (targetReduction > 0. && targetReduction < 1.) {\n                const quadricDecimator = new QuadricDecimator(p, targetReduction);\n                qPolys = quadricDecimator.decimate();\n            }\n\n            const mapper = vtkMapper.newInstance();\n            mapper.setInputData(qPolys);\n            const actor = vtkActor.newInstance();\n            actor.setMapper(mapper);\n\n            actor.getProperty().setColor(myRandom(), myRandom(), myRandom());\n            actor.getProperty().setOpacity(1);\n            actor.getProperty().setBackfaceCulling(false);\n            // actor.getProperty().setAmbient(1)\n\n            actorEntries.push({ uid: `airway_${i}`, actor: actor });\n        });\n\n        // -------------------- OUTLINE --------------------\n        const outlineData = vtkOutlineFilter.newInstance();\n        outlineData.setInputData(polys);\n        const mapOutline = vtkMapper.newInstance();\n        mapOutline.setInputConnection(outlineData.getOutputPort());\n        const outline = vtkActor.newInstance();\n        outline.setMapper(mapOutline);\n        outline.getProperty().setColor(1, 1, 0);\n        outline.getProperty().setOpacity(1);\n        actorEntries.push({ uid: 'outline', actor: outline });\n\n        // Display\n        console.log('Marching cubes - Display');\n        _displayMarchingCubes(actorEntries);\n    };\n    // @ts-ignore\n    return (\n        <div style={{ width: '100%', display: 'flex', flexDirection: 'column', justifyContent: 'space-evenly', height: '50%' }}>\n            <Button onClick={focusOn}>{\"Volume Zoom In / Out\"}</Button>\n            <p style={{ color: 'white', fontSize: 'larger' }}>{'Volume rendering'}</p>\n            <div style={{ display: 'inline-flex', width: '100%', justifyContent: 'flex-start' }}>\n                <p style={{ color: 'white' }}>{`Airway -> Skin threshold: ${skinThreshold}`}</p>\n            </div>\n            <input type=\"range\" min=\"-1000\" max={boneThreshold} value={skinThreshold} className=\"slider\" id=\"myRange\" step={\"1\"}\n                onChange={(e) => setSkinThreshold(e.target.value)}\n            />\n            <div style={{ display: 'inline-flex', width: '100%', justifyContent: 'flex-start' }}>\n                <p style={{ color: 'white' }}>{`Skin -> Bone threshold: ${boneThreshold}`}</p>\n            </div>\n            <input type=\"range\" min={skinThreshold} max={toothThreshold} value={boneThreshold} className=\"slider\" id=\"myRange\" step={\"1\"}\n                onChange={(e) => setBoneThreshold(e.target.value)}\n            />\n            <div style={{ display: 'inline-flex', width: '100%', justifyContent: 'flex-start' }}>\n                <p style={{ color: 'white' }}>{`Bone -> Tooth threshold: ${toothThreshold}`}</p>\n            </div>\n            <input type=\"range\" min={boneThreshold} max=\"3095\" value={toothThreshold} className=\"slider\" id=\"myRange\" step={\"1\"}\n                onChange={(e) => setToothThreshold(e.target.value)}\n            />\n            <p style={{ color: 'white', fontSize: 'larger' }}>{'Mesh rendering'}</p>\n            <div style={{ display: 'inline-flex', width: '100%', justifyContent: 'flex-start' }}>\n                <p style={{ color: 'white' }}>{`CT value for mesh: ${ctValue}`}</p>\n            </div>\n            <input type=\"range\" min=\"-1000\" max=\"3095\" value={ctValue} className=\"slider\" id=\"myRange\" step={\"1\"}\n                onChange={(e) => setCtValue(e.target.value)}\n            />\n            <div style={{ display: 'inline-flex', width: '100%', justifyContent: 'flex-start' }}>\n                <p style={{ color: 'white' }}>{`Target Reduction: ${reductionPercentile}%`}</p>\n            </div>\n            <input type=\"range\" min=\"0\" max=\"100\" value={reductionPercentile} className=\"slider\" id=\"myRange\" step={\"1\"}\n                onChange={(e) => setReductionPercentile(e.target.value)}\n            />\n            <Button onClick={marchingCubes}>{\"Marching cubes\"}</Button>\n            <Button onClick={exportSTL}>{\"Export STL\"}</Button>\n\n        </div>\n    );\n}\n","import {awrap} from \"@babel/runtime/helpers/regeneratorRuntime\";\n\nconst zeros = require('zeros')\n// const sharp = require('sharp')\n\nexport const dcmbufferToPng = async (metadata, invertRows = false) => {\n    let j;\n    let i;\n    var BitsAllocated = metadata.BitsAllocated\n    var BitsStored = metadata.BitsStored\n    var rows = metadata.Rows\n    var columns = metadata.Columns\n    var windowCenter = metadata.WindowCenter\n    var windowWidth = metadata.WindowWidth\n\n\n    let pixelArray;\n    let pixelData = metadata.PixelData;\n    if (BitsAllocated === 16)\n        pixelArray = new Int16Array(pixelData);//new Uint16Array(dataSet.byteArray.buffer, pixelDataElement.dataOffset, pixelDataElement.length / 2);\n    else\n        pixelArray = new Int8Array(pixelData);//new Uint8Array(dataSet.byteArray.buffer, pixelDataElement.dataOffset, pixelDataElement.length);\n    var res = zeros([rows, columns])\n    if(invertRows) {\n        for (i = 1; i <= rows; i++) {\n            for (j = 0; j < columns; j++) {\n                const valBef = pixelArray[i * columns + j];\n                let val = valBef\n                if (windowCenter && windowWidth) {\n                    if (val <= (windowCenter - 0.5 - (windowWidth - 1) / 2))\n                        val = 0\n                    else if (val > (windowCenter - 0.5 + (windowWidth - 1) / 2))\n                        val = 255\n                    else\n                        val = ~~(((val - (windowCenter - 0.5)) / (windowWidth - 1) + 0.5) * 255)\n                } else if (BitsAllocated === 16)\n                    val = ((val * 2 ** 8) / 2 ** BitsStored);\n                // console.log(`I : ${i} J : ${j} Pixel : ${valBef} Value : ${val}`)\n                res.set(rows - i, j, val)\n            }\n        }\n    }\n    else{\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < columns; j++) {\n                const valBef = pixelArray[i * columns + j];\n                let val = valBef\n                if (windowCenter && windowWidth) {\n                    if (val <= (windowCenter - 0.5 - (windowWidth - 1) / 2))\n                        val = 0\n                    else if (val > (windowCenter - 0.5 + (windowWidth - 1) / 2))\n                        val = 255\n                    else\n                        val = ~~(((val - (windowCenter - 0.5)) / (windowWidth - 1) + 0.5) * 255)\n                } else if (BitsAllocated === 16)\n                    val = ((val * 2 ** 8) / 2 ** BitsStored);\n                // console.log(`I : ${i} J : ${j} Pixel : ${valBef} Value : ${val}`)\n                res.set(i, j, val)\n            }\n        }\n    }\n\n    return {\n        buffer: res,\n        height: rows,\n        width: columns,\n        ext: 'png',\n    }\n}","const DEFAULT_OPTIONS = { order: 2, period: null };\n\n/**\n * Determine the coefficient of determination (r^2) of a fit from the observations\n * and predictions.\n *\n * @param {Array<Array<number>>} data - Pairs of observed x-y values\n * @param {Array<Array<number>>} results - Pairs of observed predicted x-y values\n *\n * @return {number} - The r^2 value, or NaN if one cannot be calculated.\n */\nfunction determinationCoefficient(data, results) {\n    const predictions = [];\n    const observations = [];\n\n    data.forEach((d, i) => {\n        if (d[1] !== null) {\n            observations.push(d);\n            predictions.push(results[i]);\n        }\n    });\n\n    const sum = observations.reduce((a, observation) => a + observation[1], 0);\n    const mean = sum / observations.length;\n\n    const ssyy = observations.reduce((a, observation) => {\n        const difference = observation[1] - mean;\n        return a + (difference * difference);\n    }, 0);\n\n    const sse = observations.reduce((accum, observation, index) => {\n        const prediction = predictions[index];\n        const residual = observation[1] - prediction[1];\n        return accum + (residual * residual);\n    }, 0);\n\n    return 1 - (sse / ssyy);\n}\n\n/**\n * Determine the solution of a system of linear equations A * x = b using\n * Gaussian elimination.\n *\n * @param {Array<Array<number>>} input - A 2-d matrix of data in row-major form [ A | b ]\n * @param {number} order - How many degrees to solve for\n *\n * @return {Array<number>} - Vector of normalized solution coefficients matrix (x)\n */\nfunction gaussianElimination(input, order) {\n    const matrix = input;\n    const n = input.length - 1;\n    const coefficients = [order];\n\n    for (let i = 0; i < n; i++) {\n        let maxrow = i;\n        for (let j = i + 1; j < n; j++) {\n            if (Math.abs(matrix[i][j]) > Math.abs(matrix[i][maxrow])) {\n                maxrow = j;\n            }\n        }\n\n        for (let k = i; k < n + 1; k++) {\n            const tmp = matrix[k][i];\n            matrix[k][i] = matrix[k][maxrow];\n            matrix[k][maxrow] = tmp;\n        }\n\n        for (let j = i + 1; j < n; j++) {\n            for (let k = n; k >= i; k--) {\n                // TODO divide by zero\n                matrix[k][j] -= (matrix[k][i] * matrix[i][j]) / matrix[i][i];\n            }\n        }\n    }\n\n    for (let j = n - 1; j >= 0; j--) {\n        let total = 0;\n        for (let k = j + 1; k < n; k++) {\n            total += matrix[k][j] * coefficients[k];\n        }\n\n        coefficients[j] = (matrix[n][j] - total) / matrix[j][j];\n    }\n\n    return coefficients;\n}\n\n/**\n * Round a number to a precision, specificed in number of decimal places\n *\n * @param {number} number - The number to round\n * @param {number} precision - The number of decimal places to round to:\n *                             > 0 means decimals, < 0 means powers of 10\n *\n *\n * @return {number} - The number, rounded\n */\nfunction round(number, precision) {\n    const factor = 10 ** precision;\n    return Math.round(number * factor) / factor;\n}\n\n/**\n * The set of all fitting methods\n *\n * @namespace\n */\nexport const LSFMethods = {\n    polynomial(data, options) {\n        const lhs = [];\n        const rhs = [];\n        let a = 0;\n        let b = 0;\n        const len = data.length;\n        const k = options.order + 1;\n\n        for (let i = 0; i < k; i++) {\n            for (let l = 0; l < len; l++) {\n                if (data[l].y !== null) {\n                    a += (data[l].x ** i) * data[l].y;\n                }\n            }\n\n            lhs.push(a);\n            a = 0;\n\n            const c = [];\n            for (let j = 0; j < k; j++) {\n                for (let l = 0; l < len; l++) {\n                    if (data[l].y !== null) {\n                        b += data[l].x ** (i + j);\n                    }\n                }\n                c.push(b);\n                b = 0;\n            }\n            rhs.push(c);\n        }\n        rhs.push(lhs);\n\n        const coefficients = gaussianElimination(rhs, k).map(v => v);\n\n        const predict = x => coefficients.reduce((sum, coeff, power) => sum + (coeff * (x ** power)), 0);\n\n        const points = data.map(point => [point.x, predict(point.x)]);\n\n        let string = 'y = ';\n        for (let i = coefficients.length - 1; i >= 0; i--) {\n            if (i > 1) {\n                string += `${coefficients[i]}x^${i} + `;\n            } else if (i === 1) {\n                string += `${coefficients[i]}x + `;\n            } else {\n                string += coefficients[i];\n            }\n        }\n\n        return {\n            string,\n            points,\n            predict,\n            equation: [...coefficients].reverse(),\n            r2: determinationCoefficient(data, points),\n        };\n    },\n};\n","import React, {useEffect, useState} from 'react';\nimport {DicomMetadataStore} from '@ohif/core';\nimport {Button, useImageViewer, useViewportGrid} from '@ohif/ui'\nimport {applySmoothing, blurPanoramic, calculateNormalCurve, cubicSplineInterpolation, sharpen} from './PanoramicUtils/computePanoramicUtils.js'\nimport {ToolGroupManager, utilities as csToolsUtils} from '@cornerstonejs/tools';\nimport FileLoaderService from '../../../../platform/app/src/routes/Local/fileLoaderService.js'\nimport {dcmbufferToPng} from './PanoramicUtils/dcmbufferToPng.js'\nimport {LSFMethods} from './PanoramicUtils/computeDentalCurveUtils.js'\nimport {Enums, metaData, cache} from '@cornerstonejs/core';\nimport ProgressBar from \"@ramonak/react-progress-bar\";\n\nconst skmeans = require('skmeans')\n\ninterface BASE_POINT {\n    pointA: number[];\n    pointB: number[];\n    vectorDirector: number[];\n    computeDentalCurve: boolean;\n}\n\n//TODO: These should be a function parameter\n\nconst DENTASCAN_THICKNESS = 70;\nconst DENTAL_CURVE_THICKNESS = 40;\nconst DENTASCAN_THRESHOLD_VALUE = 1100\nconst AIP_THRESHOLD_VALUE = 70;\nconst TOLERANCE = 0.01;\nconst DENTAL_CURVES_STEP = 1;\nconst AXIAL_CURVES_STEP = 1;\nconst DENTAL_CURVE_AIP_STEP = 2;\nconst DENTAL_CURVE_AIP_THICKNESS = 40;\n\nfunction delay(time) {\n    return new Promise(resolve => setTimeout(resolve, time));\n}\n\nexport default function PanoramicGenerationPanel({\n                                           commandsManager,\n                                           extensionManager,\n                                           servicesManager\n                                       }): React.FunctionComponent {\n    // @ts-ignore\n    const { StudyInstanceUIDs } = useImageViewer();\n    // @ts-ignore\n    const [{ activeViewportId, viewports }, viewportGridService] = useViewportGrid();\n    const {\n        displaySetService,\n        cornerstoneViewportService,\n        hangingProtocolService,\n        toolGroupService,\n        measurementService,\n        uiNotificationService,\n        cornerstoneCacheService,\n        customizationService\n    } = servicesManager.services;\n\n    const {\n        displaySetInstanceUIDs,\n        displaySetOptions,\n        viewportOptions,\n    } = viewports.get(activeViewportId);\n\n    const [panelMetadata, setPanelMetadata] = useState({\n        update: false,\n        dentascanViewportData: undefined,\n        panoramicViewportData: undefined,\n        panoramic: {\n            width: 0,\n            height: 0,\n        }\n    });\n\n    //Progress bar for panoramic computation\n    const [isProcessingPanoramic, setIsProcessingPanoramic] = useState(false);\n    const [processingPourcent, setProcessingPourcent] = useState(0);\n\n    //Panoramic computation settings\n    const [numberBasePoints, setNumberBasePoints] = useState(11);\n    const [dicomDimensions, setDicomDimensions] = useState([400, 400, 400]);\n    const [panoramicDimensions, setPanoramicDimensions] = useState([400, 400]);\n\n    useEffect(() => {\n        /*const viewport = cornerstoneViewportService.getCornerstoneViewport(\"default\");\n        const generalSeriesModule = metaData.get('generalSeriesModule', viewport.getCurrentImageId());\n        const displaySetCache = displaySetService.getDisplaySetCache();\n        const generalSeriesInstanceUID = generalSeriesModule.seriesInstanceUID;\n\n        const filterMap = (map, predicate) => {\n            const fmap = new Map()\n            map.forEach((value, key) => {\n                if (predicate(value, key)) fmap.set(key, value)\n            })\n            return fmap\n        }\n\n        //Check if panoramic has already been created and matches to the series uid. If so, set hanging protocol index to 1\n        let stageIndex = 0;\n        if (displaySetCache.find(value => value.seriesInstanceUID === generalSeriesInstanceUID + '.panoramic')) {\n            stageIndex = 2;\n            const previousPanoramicMetadata = cornerstoneCacheService.getPanoramicStateCache(generalSeriesModule.seriesInstanceUID);\n            setPanelMetadata({...previousPanoramicMetadata, update: !previousPanoramicMetadata.update});\n        } else if (displaySetCache.find(value => value.seriesInstanceUID === generalSeriesInstanceUID + '.contrasted')) {\n            stageIndex = 1;\n        }\n        commandsManager.runCommand('toggleHangingProtocol', { protocolId: 'panoramicViewport', stageIndex: stageIndex });*/\n\n        const viewport = cornerstoneViewportService.getCornerstoneViewport(\"default\");\n        const generalSeriesModule = metaData.get('generalSeriesModule', viewport.getCurrentImageId());\n        const displaySetCache = displaySetService.getDisplaySetCache();\n        const generalSeriesInstanceUID = generalSeriesModule.seriesInstanceUID;\n\n        const filterMap = (map, predicate) => {\n            const fmap = new Map()\n            map.forEach((value, key) => {\n                if (predicate(value, key)) fmap.set(key, value)\n            })\n            return fmap\n        }\n\n        //Check if panoramic has already been created and matches to the series uid. If so, set hanging protocol index to 1\n        const filteredDSPanoramic = filterMap(displaySetCache, value => value.SeriesInstanceUID === generalSeriesInstanceUID + '.panoramic');\n        const filteredDSContrasted = filterMap(displaySetCache, value => value.SeriesInstanceUID === generalSeriesInstanceUID + '.contrasted');\n        // console.log('FDS', filteredDSPanoramic, displaySetService.getDisplaySetCache())\n        if (filteredDSPanoramic.size >= 1) {\n            commandsManager.runCommand('toggleHangingProtocol', {\n                protocolId: 'panoramicViewport',\n                stageIndex: 2\n            })\n            const previousPanoramicMetadata = cornerstoneCacheService.getPanoramicStateCache(generalSeriesModule.seriesInstanceUID)\n            setPanelMetadata({...previousPanoramicMetadata, update: !previousPanoramicMetadata.update})\n        } else if (filteredDSContrasted.size >= 1) {\n            commandsManager.runCommand('toggleHangingProtocol', {\n                protocolId: 'panoramicViewport',\n                stageIndex: 1\n            })\n        } else {\n            commandsManager.runCommand('toggleHangingProtocol', {\n                protocolId: 'panoramicViewport',\n                stageIndex: 0\n            })\n        }\n    }, [])\n\n    useEffect(() => {\n        //If panoramic is updating, processing is logically done, so we can turn off progress bar\n        setIsProcessingPanoramic(false)\n\n        //============================= DELETE ALL PREVIOUS DENTASCAN ANNOTATIONS =================//\n        const dentascanMeasurements = measurementService.getMeasurements()\n            .filter(m => {return m.toolName === \"ArrowAnnotate\"})\n\n        // Delete measurements that are not handmade (thus the interpolated line)\n        for (const pm of dentascanMeasurements) {\n            if (pm.metadata.dentascan) {\n                commandsManager.runCommand('deleteMeasurement', {\n                    uid: pm.uid\n                })\n            }\n        }\n\n        //================== DISPLAY DENTASCAN SECTION IN PANORAMIC AS ANNOTATION ===========================//\n        if (!panelMetadata.dentascanViewportData) return;\n\n        const viewportIds = cornerstoneViewportService.getViewportIds()\n\n        const viewport = cornerstoneViewportService.getCornerstoneViewport(viewportIds[1]);\n        if (!viewport) {\n            return\n        }\n\n        const imageData = viewport.getImageData();\n        if (!imageData) {\n            return;\n        }\n\n        const pointUp = imageData.imageData.indexToWorld([panelMetadata.dentascanViewportData?.data.initialImageIndex, 0, 0])\n        const pointDown = imageData.imageData.indexToWorld([panelMetadata.dentascanViewportData?.data.initialImageIndex, panelMetadata.panoramic.height, 0])\n\n        //Get ArrowAnnotate instance in order to create new annotation indicating dentascan section on panoramic\n        const toolGroup = ToolGroupManager.getToolGroupForViewport(\n            viewport.id,\n            viewport.renderingEngineId\n        );\n        const arrowAnnotateInstance = toolGroup.getToolInstance(\"ArrowAnnotate\")\n        arrowAnnotateInstance.addNewDentascanAnnotation(viewport.element, [pointUp, pointDown], 'rgb(255, 255, 255)')\n\n\n        //================== DISPLAY WANTED DENTASCANS IN BOTTOM VIEWPORT ===========================//\n\n        csToolsUtils.jumpToSlice(cornerstoneViewportService.getCornerstoneViewport(viewportIds[2]).element, {\n            imageIndex: panelMetadata.dentascanViewportData.data.initialImageIndex - 4,\n            debounceLoading: true,\n        });\n        csToolsUtils.jumpToSlice(cornerstoneViewportService.getCornerstoneViewport(viewportIds[3]).element, {\n            imageIndex: panelMetadata.dentascanViewportData.data.initialImageIndex - 2,\n            debounceLoading: true,\n        });\n        csToolsUtils.jumpToSlice(cornerstoneViewportService.getCornerstoneViewport(viewportIds[4]).element, {\n            imageIndex: panelMetadata.dentascanViewportData.data.initialImageIndex,\n            debounceLoading: true,\n        });\n        csToolsUtils.jumpToSlice(cornerstoneViewportService.getCornerstoneViewport(viewportIds[5]).element, {\n            imageIndex: panelMetadata.dentascanViewportData.data.initialImageIndex + 2,\n            debounceLoading: true,\n        });\n        csToolsUtils.jumpToSlice(cornerstoneViewportService.getCornerstoneViewport(viewportIds[6]).element, {\n            imageIndex: panelMetadata.dentascanViewportData.data.initialImageIndex + 4,\n            debounceLoading: true,\n        });\n\n        //Save state in cache to be retrieved if we reopen panoramic panel\n        const generalSeriesModule = metaData.get('generalSeriesModule', viewport.getCurrentImageId())\n        if (panelMetadata.panoramic.width !== 0) cornerstoneCacheService.setPanoramicStateCache(panelMetadata, generalSeriesModule.seriesInstanceUID)\n\n    }, [panelMetadata.update])\n\n    const loadMultipleBlobsInViewport = (metadata) => {\n        const options = {\n            prefilledValues:{\n                SeriesInstanceUID: metadata.SeriesInstanceUID,\n                SOPInstanceUID: Math.random()\n                    .toString(36)\n                    .substring(2, 10),\n                StudyInstanceUID: metadata.StudyInstanceUID,\n                FrameOfReferenceUID: Math.random()\n                    .toString(36)\n                    .substring(2, 10)\n            }\n        }\n        const pixelData = metadata.PixelData\n\n        return new Promise(async(resolve, reject) => {\n            const createDatasetPromise = new Promise((resolve, reject) => {\n                let datasetsStack = new Array(pixelData.length).fill(null);\n                pixelData.forEach(async(layerData, layerI) => {\n                    metadata.PixelData = layerData;\n                    // Height is always the same, but width can change\n                    if (metadata.Columns !== (layerData.length / metadata.Rows)) {\n                        metadata.Columns = layerData.length / metadata.Rows\n                    }\n                    const pngBuf = await dcmbufferToPng(metadata, true)\n\n                    const coloredBuffer = new Uint8ClampedArray(pngBuf.width * pngBuf.height * 4)\n                    const buffer = pngBuf.buffer.data\n                    let i = 0\n                    for (const p of buffer) {\n                        coloredBuffer[i] = p\n                        coloredBuffer[i + 1] = p\n                        coloredBuffer[i + 2] = p\n                        coloredBuffer[i + 3] = 255\n                        i += 4\n                    }\n\n                    // console.log('OBJ', pngBuf, coloredBuffer, coloredBuffer.length)\n                    const canvas = document.createElement('canvas');\n                    canvas.width = pngBuf.width;\n                    canvas.height = pngBuf.height;\n                    const imgData = new ImageData(new Uint8ClampedArray(coloredBuffer), pngBuf.width, pngBuf.height);\n                    canvas.getContext('2d').putImageData(imgData, 0, 0);\n                    canvas.toBlob(async(blob) => {\n                        const fileLoaderService = new FileLoaderService(blob)\n                        const imageId = fileLoaderService.addFile(blob)\n                        const img = await fileLoaderService.loadFile(blob, imageId)\n\n                        const layerSopInstanceUID = `${options.prefilledValues.SOPInstanceUID}.${layerI + 1}`\n                        const dataset = await fileLoaderService.getDataset(img, imageId, {\n                            prefilledValues: {\n                                ...options.prefilledValues,\n                                SOPInstanceUID: layerSopInstanceUID,\n                                FrameNumber: layerI\n                            }\n                        })\n\n                        DicomMetadataStore.addInstance(dataset)\n                        datasetsStack[layerI] = dataset\n\n                        if (datasetsStack.length === pixelData.length &&\n                            !datasetsStack.includes(null))\n                            resolve(datasetsStack)\n                    })\n                })\n            })\n\n            const dsStack: any = await createDatasetPromise\n\n            const displaySetAdded = displaySetService.makeDisplaySets(dsStack)\n            const dataSource = extensionManager.getDataSources()[0]\n\n            const viewportData = await cornerstoneCacheService.createViewportData(\n                displaySetAdded,\n                {\n                    toolGroupId: 'mpr',\n                    viewportType: 'stack',\n                    initialImageOptions: {\n                        preset: 'middle',\n                    },\n                },\n                dataSource,\n                Math.floor(dsStack.length / 2)\n            )\n            resolve(viewportData)\n        })\n    }\n\n    const loadBlobInViewport = (metadata) => {\n        return new Promise(async(resolve, reject) => {\n            const pngBuf = await dcmbufferToPng(metadata);\n\n            const coloredBuffer = new Uint8ClampedArray(pngBuf.width * pngBuf.height * 4)\n            const buffer = pngBuf.buffer.data\n            let i = 0\n            for (const p of buffer) {\n                coloredBuffer[i] = p\n                coloredBuffer[i + 1] = p\n                coloredBuffer[i + 2] = p\n                coloredBuffer[i + 3] = 255\n                i += 4\n            }\n\n            // console.log('OBJ', pngBuf, coloredBuffer, coloredBuffer.length)\n            const canvas = document.createElement('canvas');\n            canvas.width = pngBuf.width;\n            canvas.height = pngBuf.height;\n            const imgData = new ImageData(new Uint8ClampedArray(coloredBuffer), pngBuf.width, pngBuf.height);\n            canvas.getContext('2d').putImageData(imgData, 0, 0);\n\n            canvas.toBlob(async (blob) => {\n                const fileLoaderService = new FileLoaderService(blob)\n                const imageId = fileLoaderService.addFile(blob)\n                const img = await fileLoaderService.loadFile(blob, imageId);\n\n                const dataset = await fileLoaderService.getDataset(img, imageId, {\n                    prefilledValues: {\n                        SeriesInstanceUID: metadata.SeriesInstanceUID,\n                        StudyInstanceUID: metadata.StudyInstanceUID\n                    }\n                });\n\n                console.log('DATASET', dataset)\n                DicomMetadataStore.addInstance(dataset)\n                const displaySetAdded = displaySetService.makeDisplaySets([dataset])\n                console.log('DSADDED', displaySetAdded)\n                const dataSource = extensionManager.getDataSources()[0]\n\n                const viewportData = await cornerstoneCacheService.createViewportData(\n                    displaySetAdded,\n                    {\n                        toolGroupId: 'mpr',\n                        viewportType: 'stack',\n                        initialImageOptions: {\n                            preset: 'middle',\n                        },\n                    },\n                    dataSource,\n                    undefined\n                );\n\n                console.log('VIEWPORT STACK DATA', viewportData)\n                hangingProtocolService.refreshStudyList()\n                resolve(viewportData)\n            })\n        })\n    }\n\n    const drawPanoramicLine = () => {\n        commandsManager.runCommand('setToolActive', {\n            toolName: 'ArrowAnnotate'\n        })\n    }\n\n    //Debug function to display image in canvas below application main canvas (cancel override-hidden-y)\n    const debugShowImage = (pixelArray, rows, columns) => {\n        return new Promise<HTMLCanvasElement>(async(resolve, reject) => {\n            //Get volume imageId\n            const indexZeroDisplaySet = displaySetService.getDisplaySetByUID(\n                cornerstoneViewportService.getViewportInfo(\"default\").viewportData.data.displaySetInstanceUID\n            )\n            let imageId;\n            //If image is contrasted\n            if (indexZeroDisplaySet?.SeriesInstanceUID.includes('contrasted')) {\n                const baseVolumeSeriesUID = indexZeroDisplaySet.SeriesInstanceUID.replace('.contrasted', '')\n                const baseVolumeSeries = DicomMetadataStore.getSeries(indexZeroDisplaySet.StudyInstanceUID, baseVolumeSeriesUID)\n                imageId = baseVolumeSeries.instances[0].imageId\n            } else { //Else image at index 0 is image we want to get infos from\n                imageId = cornerstoneViewportService.getCornerstoneViewport(\"default\").getCurrentImageId()\n            }\n\n            const voiLutModule = metaData.get('voiLutModule', imageId)\n            const imagePixelModule = metaData.get('imagePixelModule', imageId)\n            const metadata = {\n                BitsAllocated: imagePixelModule.bitsAllocated,\n                BitsStored: imagePixelModule.bitsStored,\n                Rows: rows,\n                Columns: columns,\n                WindowCenter: voiLutModule.windowCenter[0],\n                WindowWidth: voiLutModule.windowWidth[0],\n                PixelData: pixelArray\n            }\n            const pngBuf = await dcmbufferToPng(metadata);\n\n            const coloredBuffer = new Uint8ClampedArray(pngBuf.width * pngBuf.height * 4)\n            const buffer = pngBuf.buffer.data\n            let i = 0;\n            for (const p of buffer) {\n                coloredBuffer[i] = p\n                coloredBuffer[i + 1] = p\n                coloredBuffer[i + 2] = p\n                coloredBuffer[i + 3] = 255\n                i += 4\n            }\n            const canvas = document.createElement('canvas')\n            canvas.width = pngBuf.width\n            canvas.height = pngBuf.height\n            const imgData = new ImageData(new Uint8ClampedArray(coloredBuffer), pngBuf.width, pngBuf.height)\n            canvas.getContext('2d').putImageData(imgData, 0, 0)\n            document.body.appendChild(canvas)\n\n            console.info('[DEBUG] - Provided array displayed in document below main canvas !')\n            resolve(canvas)\n        })\n    }\n\n    //Debug function to display random selected points in bone cluster\n    const drawPoint = (context, x, y, label, color, size) => {\n        if (color == null) {\n            color = '#000';\n        }\n        if (size == null) {\n            size = 5;\n        }\n        var radius = 0.5 * size;\n        // to increase smoothing for numbers with decimal part\n        var pointX = Math.round(x - radius);\n        var pointY = Math.round(y - radius);\n        context.beginPath();\n        context.fillStyle = color;\n        context.fillRect(pointX, pointY, size, size);\n        context.fill();\n        if (label) {\n            var textX = Math.round(x);\n            var textY = Math.round(pointY - 5);\n            context.font = 'Italic 14px Arial';\n            context.fillStyle = color;\n            context.textAlign = 'center';\n            context.fillText(label, textX, textY);\n        }\n    }\n\n    //____________________________ FOR PANORAMIC COMPUTATION _________________________//\n\n    const getMax = (arr) => {\n        let len = arr.length;\n        let max = -Infinity;\n\n        while (len--) {\n            max = arr[len] > max ? arr[len] : max;\n        }\n        return max;\n    }\n\n    const derivative = (f, x, dx = 1e-5) => {\n        return (f(x + dx) - f(x)) / dx;\n    }\n\n    const getSlopeVector = (slope) => {\n        const [vx, vy] = [1, slope];\n        const vLength = Math.sqrt(1 + slope * slope);\n        return [vx / vLength, vy / vLength];\n    }\n\n    const getTangentVector = (f, x) => {\n        const tangentSlope = derivative(f, x);\n        return getSlopeVector(tangentSlope);\n    }\n\n    const getNormalVector = (f, x) => {\n        const tangentSlope = derivative(f, x);\n        const normalSlope = -1 / tangentSlope;\n        return getSlopeVector(normalSlope);\n    }\n\n    //Width becomes height, and height becomes width\n    const transposeImage = (arr, width, height) => {\n        const transposedArr = [];\n        for (let i = 0; i < width; i++) {\n            for (let j = 0; j < height; j++) {\n                transposedArr.push(arr[j * width + i]);\n            }\n        }\n        return transposedArr;\n    }\n\n    // Returns the scalar data projected on the sagital axis, using the max of values along X axis\n    const getSagitalDataMax = (scalarData, p) => {\n        const sagitalData = new Float32Array(p.layerHeight * p.nbLayers);\n        // Iterate over Y and Z axes\n        for (let k = 0; k < p.nbLayers; k++) {\n            for (let j = 0; j < p.layerHeight; j++) {\n                const voxelsYZ = new Float32Array(p.layerWidth);\n                for (let i = 0; i < p.layerWidth; i++) {\n                    // Fill an array through X axis to compute its max\n                    voxelsYZ[i] = scalarData[k * p.layerSize + j * p.layerWidth + i];\n                }\n                const voxelYZ = getMax(voxelsYZ);\n                sagitalData[k * p.layerHeight + j] = voxelYZ;\n            }\n        }\n\n        return sagitalData;\n    }\n\n    // Returns the scalar data projected on the coronal axis, using the max of values along X axis\n    const getCoronalDataMax = (scalarData, p) => {\n        const coronalData = new Float32Array(p.layerWidth * p.nbLayers);\n        // Iterate over Y and Z axes\n        for (let k = 0; k < p.nbLayers; k++) {\n            for (let j = 0; j < p.layerWidth; j++) {\n                const voxelsXZ = new Float32Array(p.layerHeight);\n                for (let i = 0; i < p.layerHeight; i++) {\n                    // Fill an array through X axis to compute its max\n                    voxelsXZ[i] = scalarData[k * p.layerSize + j * p.layerHeight + i];\n                }\n                const voxelXZ = getMax(voxelsXZ);\n                coronalData[k * p.layerHeight + j] = voxelXZ;\n            }\n        }\n\n        return coronalData;\n    }\n\n    // Returns the scalar data projected on the axial axis,\n    // using the mean values along Z axis between minLayer and maxLayer\n    const getAxialDataMean = (scalarData, minLayer, maxLayer, p) => {\n        const nbToothLayers = maxLayer - minLayer;\n\n        const axialData = new Float32Array(p.layerWidth * p.layerHeight);\n        // Iterate over X and Y axes\n        for (let i = 0; i < p.layerWidth; i++) {\n            for (let j = 0; j < p.layerHeight; j++) {\n                const voxelsXY = new Float32Array(nbToothLayers);\n                for (let k = 0; k < nbToothLayers; k++) {\n                    // Fill an array through Z axis to compute its mean\n                    voxelsXY[k] = scalarData[(minLayer + k) * p.layerSize + j * p.layerWidth + i];\n                }\n                const voxelXY = voxelsXY.reduce((a, b) => a + b, 0) / voxelsXY.length;\n                axialData[j * p.layerWidth + i] = voxelXY;\n            }\n        }\n\n        return axialData;\n    }\n\n    //Get dentascan section at abscissa i for a degree 2 polynomial fitting curve lsf.\n    //Length of normal is dentascanThickness\n    //Dicom of the dentascan desired is defined by its dicomDimensions and its scalarData\n    const getDentascanSection = (x, f, dicomData, p) => {\n        // Get normalized vector of normal at x\n        let [vxNormal, vyNormal] = getNormalVector(f, x);\n\n        // In order to prevent having a flipped normal vector,\n        // we need to determine if minPoint lies inside or outside the lsf curve\n        // We want minPoint to be the outer point and maxPoint to be the inner point\n        const y = f(x);\n        let minPoint = [x - DENTASCAN_THICKNESS / 2 * vxNormal,\n                        y - DENTASCAN_THICKNESS / 2 * vyNormal];\n        let maxPoint = [x + DENTASCAN_THICKNESS / 2 * vxNormal,\n                        y + DENTASCAN_THICKNESS / 2 * vyNormal];\n        // Swap minPoint and maxPoint and invert normal vectors if minPoint is inner\n        if (minPoint[1] >= f(minPoint[0])) {\n            [minPoint, maxPoint] = [maxPoint, minPoint];\n            [vxNormal, vyNormal] = [-vxNormal, -vyNormal];\n        }\n\n        //Get values of point along normal between min and max\n        const dentascanWidth = DENTASCAN_THICKNESS + 1\n        const dentascan = new Float32Array(dentascanWidth * p.nbLayers).fill(-1000);\n        for (let layer = 0; layer < p.nbLayers; layer++) {\n            for (let i = 0; i < dentascanWidth; i++) {\n                const xi = Math.round(minPoint[0] + i * vxNormal);\n                const yi = Math.round(minPoint[1] + i * vyNormal);\n                if (xi >= 0 && yi >= 0 && xi < p.layerWidth && yi < p.layerHeight) {\n                    const dicomIdx = layer * p.layerSize + yi * p.layerWidth + xi;\n                    dentascan[layer * dentascanWidth + i] = dicomData[dicomIdx];\n                }\n            }\n        }\n\n        return {\n            dentascan: dentascan,\n            width: dentascanWidth,\n            interval: [minPoint, maxPoint],\n            director: [vxNormal, vyNormal],\n            middlePoint: [x, y]\n        }\n    }\n\n    // I want to ensure that the polynomial does not diverge beyond the teeth zone.<\n    // The goal is to smooth out and converge the polynomial on the center outside the given interval while\n    // preserving its original behavior within the interval [minX, maxX].\n    // To achieve this, I use a modified function incorporating two sigmoid functions.>\n    const getDentalLiss = (f, minX, maxX) => {\n        const dentascanWidth = DENTASCAN_THICKNESS + 1;\n        //a1 and a2 are smoothing parameters.\n        const a1 = 0.1\n        const a2 = 0.1\n        //c0 is the convergeance on -inf, and c1 and +inf\n        const c0 = dentascanWidth / 2\n        const c1 = dentascanWidth / 2\n\n        return (layer) => {\n            const sigmoidLeft = 1 / (1 + Math.exp(-a1 * (layer - minX)));\n            const sigmoidRight = 1 / (1 + Math.exp(a2 * (layer - maxX)));\n            const originalDentalValue = f(layer);\n\n            return originalDentalValue * sigmoidLeft * sigmoidRight\n                + c0 * (1 - sigmoidLeft) + c1 * (1 - sigmoidRight);\n        }\n    }\n\n    const getDentalCurve = (dentascan, p) => {\n        const dentascanWidth = DENTASCAN_THICKNESS + 1\n\n        //Compute dental curve\n        //Dentascan is thresholded to get only bone area\n        const binarizedDentascan = dentascan.map(value => value > DENTASCAN_THRESHOLD_VALUE ? value : -1000)\n        //Transposed so that w => h and h => w. This allows us to LSF with a curve represented by an order 3 equation\n        const transposedBin = transposeImage(binarizedDentascan, dentascanWidth, p.nbLayers)\n        // Get the indexes of teeth zone and keep only indexes that are teeth (!= -1000)\n        let transposedOnlyTeethIndex = Array.from(transposedBin).map((value, idx) => value === -1000 ? null\n            : ({ x: idx % p.nbLayers, y: Math.floor(idx / p.nbLayers) })).filter(value => value);\n\n        // Add points along the center of the dentascan to reduce the deformation of the curve\n        for (let l = 0; l < p.nbLayers; l += 10) {\n            transposedOnlyTeethIndex.push({x: l, y: DENTASCAN_THICKNESS / 2});\n        }\n\n        //Curve fitting on a degree 3 polynomial\n        let lsfDentalCurve = LSFMethods.polynomial(transposedOnlyTeethIndex, {order: 3});\n        // TODO order should depend on error for the curve fitting\n\n        let lsfDentalLiss = (x) => DENTASCAN_THICKNESS / 2;\n        if (getMax(transposedBin) > -1000 && !lsfDentalCurve.equation.some((value) => isNaN(value))) {\n            // minX and maxX where value is not -1000\n            const minX = transposedBin.reduce((min, val, idx) =>\n                ((idx % p.nbLayers < min && val != -1000) ? idx % p.nbLayers : min), Infinity);\n            const maxX = transposedBin.reduce((max, val, idx) =>\n                ((idx % p.nbLayers > max && val != -1000) ? idx % p.nbLayers : max), -Infinity);\n            lsfDentalLiss = getDentalLiss(lsfDentalCurve.predict, minX, maxX);\n        }\n\n        return lsfDentalLiss;\n    }\n\n    const getDentalCurvesPointsXY = (dentascans, mode, p) => {\n        const nbDentalCurves = Math.floor(p.panoramicWidth / DENTAL_CURVES_STEP);\n        const nbAxialCurves = Math.floor(p.nbLayers / AXIAL_CURVES_STEP);\n\n        let dentalCurvesPoints;\n        if (mode === 'curveAIP') {\n            // Precompute the values\n            dentalCurvesPoints = new Float32Array(p.panoramicWidth * p.nbLayers);\n            dentascans.forEach((dentascan, idx) => {\n                const dentascanCurve = getDentalCurve(dentascan.dentascan, p);\n                for (let layer = 0; layer < p.nbLayers; layer++) {\n                    dentalCurvesPoints[idx * p.nbLayers + layer] = dentascanCurve(layer);\n                }\n            });\n        }\n\n        const dentalCurvesPointsXY = new Array(nbDentalCurves * nbAxialCurves).fill(null);\n        for (let i = 0; i < nbDentalCurves; i++) {\n            const idx = DENTAL_CURVES_STEP * i;\n            const dentascan = dentascans[idx];\n            const [dentascanMinPoint, dentascanMaxPoint] = dentascan.interval;\n            const [dentascanVxNormal, dentascanVyNormal] = dentascan.director;\n            const idxInf = Math.max(idx - DENTAL_CURVE_AIP_THICKNESS / 2, 0);\n            const idxSup = Math.min(idx + DENTAL_CURVE_AIP_THICKNESS / 2, p.panoramicWidth - 1);\n\n            let dentalCurve;\n            if (mode === 'default') {\n                dentalCurve = getDentalCurve(dentascan.dentascan, p);\n\n            } else if (mode === 'valueMIP') {\n                let dentascansForMIP = [];\n                for (let j = idxInf; j <= idxSup; j += DENTAL_CURVE_AIP_STEP) {\n                    dentascansForMIP.push(dentascans[i].dentascan);\n                }\n                const dentascanMIP = new Float32Array(dentascan.length);\n                for (let j = 0; j < dentascan.length; j++) {\n                    dentascanMIP[j] = getMax(dentascansForMIP.map(dentascanScalar => dentascanScalar[j]));\n                }\n                dentalCurve = getDentalCurve(dentascanMIP, p);\n            }\n\n            for (let l = 0; l < nbAxialCurves; l++) {\n                const layer = AXIAL_CURVES_STEP * l;\n\n                let xPosInDentascan;\n                if (mode === 'curveAIP') {\n                    let xPosInDentascans = [];\n                    for (let j = idxInf; j <= idxSup; j += DENTAL_CURVE_AIP_STEP) {\n                        xPosInDentascans.push(dentalCurvesPoints[j * p.nbLayers + layer]);\n                    }\n                    xPosInDentascan = xPosInDentascans.reduce((a, b) => a + b, 0) / xPosInDentascans.length;\n                } else { // default or valueMIP\n                    xPosInDentascan = dentalCurve(layer);\n                }\n                if (xPosInDentascan < 0) {\n                    xPosInDentascan = 0;\n                } else if (xPosInDentascan > DENTASCAN_THICKNESS) {\n                    xPosInDentascan = DENTASCAN_THICKNESS;\n                }\n                const x = Math.round(dentascanMinPoint[0] + xPosInDentascan * dentascanVxNormal);\n                const y = Math.round(dentascanMinPoint[1] + xPosInDentascan * dentascanVyNormal);\n\n                dentalCurvesPointsXY[l * nbDentalCurves + i] = {x: x, y: y};\n            }\n        }\n\n        return dentalCurvesPointsXY;\n    }\n\n    //Dilate bone zone to eventually fill disconnections in dental zone\n    const dilate = (image, width, height, iterations) => {\n        const result = new Array(width * height).fill(-1000);\n\n        const getPixel = (x, y) => image[y * width + x] || 0;\n\n        for (let iteration = 0; iteration < iterations; iteration++) {\n            for (let y = 1; y < height - 1; y++) {\n                for (let x = 1; x < width - 1; x++) {\n                    const neighbors = [\n                        getPixel(x - 1, y - 1), getPixel(x, y - 1), getPixel(x + 1, y - 1),\n                        getPixel(x - 1, y), getPixel(x, y), getPixel(x + 1, y),\n                        getPixel(x - 1, y + 1), getPixel(x, y + 1), getPixel(x + 1, y + 1)\n                    ];\n\n                    result[y * width + x] = Math.max(...neighbors);\n                }\n            }\n\n            // Mettre à jour l'image pour la prochaine itération\n            for (let i = 0; i < width * height; i++) {\n                image[i] = result[i];\n            }\n        }\n\n        return result;\n    }\n\n    // TODO O(2n) algorithm\n    //Get spatial clusters in binarized image (groups of pixels connected between them)\n    const spatialClustering = (image, width, height) => {\n        const clusters = [];\n        const visited = new Array(width * height).fill(false);\n\n        const getNeighbors = (index) => {\n            const neighbors = [];\n            const x = index % width;\n            const y = Math.floor(index / width);\n\n            for (let i = Math.max(0, x - 1); i <= Math.min(width - 1, x + 1); i++) {\n                for (let j = Math.max(0, y - 1); j <= Math.min(height - 1, y + 1); j++) {\n                    const neighborIndex = j * width + i;\n                    neighbors.push(neighborIndex);\n                }\n            }\n\n            return neighbors;\n        };\n\n        const exploreCluster = (startIndex, cluster) => {\n            const queue = [startIndex];\n\n            while (queue.length > 0) {\n                const currentIndex = queue.shift();\n\n                if (!visited[currentIndex] && image[currentIndex] !== -1000) {\n                    visited[currentIndex] = true;\n                    cluster.push(currentIndex);\n\n                    const neighbors = getNeighbors(currentIndex);\n\n                    for (const neighborIndex of neighbors) {\n                        if (!visited[neighborIndex] && image[neighborIndex] !== -1000) {\n                            queue.push(neighborIndex);\n                        }\n                    }\n                }\n            }\n        };\n\n        for (let i = 0; i < width * height; i++) {\n            if (!visited[i] && image[i] !== -1000) {\n                const newCluster = [];\n                exploreCluster(i, newCluster);\n                clusters.push(newCluster);\n            }\n        }\n\n        return clusters;\n    }\n\n    //Computation of panoramic control points, which are points in the dental curve\n    //from where panoramic will be computed\n    const generatePanoramicControlPoints = async(debug=false) => {\n        // Delete measurements that are handmade (thus control points)\n        // (Handmade is true because of an old implem where control points were handmade, now they are not\n        // but it's a way to identify them)\n        const measurements = measurementService.getMeasurements()\n            .filter(m => {return m.toolName === \"ArrowAnnotate\"})\n\n        console.log('MEASUREMENTS', measurements)\n\n        const info = cornerstoneViewportService.getViewportInfo(\"default\")\n        let displaySetInstanceUID = cornerstoneViewportService.getViewportInfo(\"default\").viewportData.data[0].displaySetInstanceUID;\n        for (const pm of measurements) {\n            if (pm.metadata.handmade && pm.displaySetInstanceUID === displaySetInstanceUID) {\n                commandsManager.runCommand('deleteMeasurement', {\n                    uid: pm.uid\n                })\n            }\n        }\n\n        //Get volume from where we want to compute control points from\n        const indexZeroDisplaySet = displaySetService.getDisplaySetByUID(\n            cornerstoneViewportService.getViewportInfo(\"default\").viewportData.data[0].displaySetInstanceUID\n        )\n        let baseId;\n        let dicomDimensions;\n        let scalarData;\n        let isContrastAlreadyGenerated;\n        //If image is contrasted, volume we want to get infos from is not in viewport. We need to get infos from another way\n        if (indexZeroDisplaySet?.SeriesInstanceUID.includes('contrasted')) {\n            isContrastAlreadyGenerated = true\n            const baseVolumeSeriesUID = indexZeroDisplaySet.SeriesInstanceUID.replace('.contrasted', '')\n            const baseVolumeSeries = DicomMetadataStore.getSeries(indexZeroDisplaySet.StudyInstanceUID, baseVolumeSeriesUID)\n            baseId = baseVolumeSeries.instances[0].imageId\n            const baseVolume = cache.getVolumeContainingImageId(baseId)\n            scalarData = baseVolume.volume.scalarData\n            dicomDimensions = baseVolume.volume.dimensions\n        } else { //Else image at index 0 is image we want to get infos from\n            isContrastAlreadyGenerated = false\n            const imageData = cornerstoneViewportService.getCornerstoneViewport(\"default\").getImageData()\n            baseId = cornerstoneViewportService.getCornerstoneViewport(\"default\").getCurrentImageId()\n            scalarData = imageData.scalarData\n            dicomDimensions = imageData.dimensions\n        }\n        const [layerWidth, layerHeight, nbLayers] = dicomDimensions;\n        const parameters = {layerWidth: layerWidth, layerHeight: layerHeight, nbLayers: nbLayers, layerSize: layerWidth * layerHeight};\n\n        const coronalData = getCoronalDataMax(scalarData, parameters);\n\n        // We select the highest value cluster on coronal view with a K-means++\n        const skMeansCoronal = skmeans(coronalData, 6);\n        const {centroids:centroidsCoronal, idxs:idxsCoronal} = skMeansCoronal\n        const idxsMaxCoronal = centroidsCoronal.indexOf(Math.max(...centroidsCoronal))\n        //Find minimal and maximal layer where one pixel is not -1000\n        const firstIndex = idxsCoronal.findIndex((value) => value === idxsMaxCoronal);\n        const lastIndex = idxsCoronal.findLastIndex((value) => value === idxsMaxCoronal);\n        const [minLayer, maxLayer] = [Math.floor(firstIndex / layerHeight), Math.floor(lastIndex / layerHeight) + 1];\n        console.log('MINLAYER, MAXLAYER', minLayer, maxLayer);\n        console.log('CENTROIDS', centroidsCoronal);\n        // TODO assert minLayer !== maxLayer\n\n        const axialData = getAxialDataMean(scalarData, minLayer, maxLayer, parameters);\n\n        // Contrast is increased for the display\n        const minValue = axialData.reduce((minValue, val) => (val < minValue ? val : minValue), axialData[0]);\n        const maxValue = axialData.reduce((maxValue, val) => (val > maxValue ? val : maxValue), axialData[0]);\n        // TODO minValue !== maxValue\n        // Adjust contrast of image to enlight zone where control points should be placed\n        const axialDataContrasted = axialData.map(pixel => {\n            const normalizedPixel = (pixel - minValue) / (maxValue - minValue);\n            const contrastedPixel = Math.pow(normalizedPixel, 2);\n            return Math.round(contrastedPixel * (maxValue - minValue) + minValue);\n        });\n\n        //Load and display contrastedMean in Ohif since it's the image from where we can / will correct control points\n        const voiLutModule = metaData.get('voiLutModule', baseId)\n        const imagePixelModule = metaData.get('imagePixelModule', baseId)\n        const generalSeriesModule = metaData.get('generalSeriesModule', baseId)\n        const contrastedMetadata = {\n            SeriesInstanceUID: generalSeriesModule.seriesInstanceUID + '.contrasted',\n            StudyInstanceUID: generalSeriesModule.studyInstanceUID,\n            BitsAllocated: imagePixelModule.bitsAllocated,\n            BitsStored: imagePixelModule.bitsStored,\n            Rows: layerWidth,\n            Columns: layerHeight,\n            WindowCenter: voiLutModule.windowCenter[0],\n            WindowWidth: voiLutModule.windowWidth[0],\n            PixelData: axialDataContrasted\n        }\n\n        // If contrasted image is already generated (if we want to override already existing control points for example),\n        // we don't need to load contrasted image in cache and in viewport\n        if (!isContrastAlreadyGenerated) {\n            await loadBlobInViewport(contrastedMetadata);\n        }\n\n        // Refresh study list in hanging protocol module\n        hangingProtocolService.refreshStudyList()\n        const hpInfo = hangingProtocolService.getState();\n        if (hpInfo.stageIndex < 1) {\n            commandsManager.runCommand('toggleHangingProtocol', {\n                protocolId: 'panoramicViewport',\n                stageIndex: 1\n            })\n        }\n        // TODO delay choice\n        await delay(500);\n\n        //Update viewport since it has changed (from axial view to contrasted img)\n        const contrastedViewport = cornerstoneViewportService.getCornerstoneViewport(\"default\")\n        const contrastedImageData = contrastedViewport.getImageData()\n\n        //K-means++ in contrasted image to isolate bone / jaw zone\n        const skMeansResult = skmeans(axialData, 5);\n        const {centroids, idxs} = skMeansResult\n        const maxClusterIdx = centroids.indexOf(getMax(centroids))\n\n        //Binarize array between max cluster (highest values meaning bone pixels) and other\n        const binarizedArray = axialData.map((value, idx) => idxs[idx] === maxClusterIdx ? value : -1000)\n\n        // const binarizedArrayDilated = dilate(binarizedArray, layerWidth, layerHeight, 5)\n        const binarizedArrayDilated = binarizedArray;\n\n        //Find equation of polynomial going through dental zone with the use of the biggest spatial cluster\n        //corresponding to our dental zone\n        const binarizedIdx = binarizedArray.map((value, idx) => value != -1000? idx: -1000);\n        const filteredIdx = binarizedIdx.filter((value) => value != -1000);\n        const binarizedXy = Array.from(filteredIdx).map(i => ({ x: i % layerWidth, y: Math.floor(i / layerWidth) }));\n\n        const lsf = LSFMethods.polynomial(binarizedXy, {order: 6});\n        const f = lsf.predict;\n\n        /*const spatialClusters = spatialClustering(binarizedArrayDilated, layerWidth, layerHeight);\n        spatialClusters.sort((sc1, sc2) => sc2.length - sc1.length);\n        //Indexes of biggest spatial cluster as X and Y values\n        const biggestSpatialClusterXy = spatialClusters[0].map(v => getCoordinatesFromIndex(v, layerWidth, layerHeight))\n        //LSF method to get best fitting parabola along pixels in square\n        const lsf = LSFMethods.polynomial(biggestSpatialClusterXy, {order: 6})\n        const f = lsf.predict;*/\n\n        //Find minimum and maximum of our binarized to determine where panoramic should start and where should end\n        //We want control points to start at right and left jaw, so we don't use biggestCluster in this case\n        //since it corresponds to the dental zone, not jaws\n        let minX = binarizedArrayDilated.reduce((min, val, idx) =>\n            (idx % layerWidth < min && val != -1000? idx % layerWidth : min), Infinity);\n        let maxX = binarizedArrayDilated.reduce((max, val, idx) =>\n            (idx % layerWidth > max && val != -1000? idx % layerWidth : max), -Infinity);\n\n        //Compute control points : points that determine piecewise linear curve function through f\n        //They also be the points drawn in Viewport so that user can modify if the curve is not correct\n        const controlPoints = []\n        const step = (maxX - minX) / (numberBasePoints - 1);\n        for (let x = minX; x < maxX + TOLERANCE; x += step) {\n            controlPoints.push([x, f(x)])\n        }\n\n        //Draw these control points in front on Viewport so that user can move them\n        //Transpose control points from volume basis to viewport canvas basis\n        const controlPointsInWorld = controlPoints.map(cp => contrastedImageData.imageData.indexToWorld([cp[0], cp[1], 0]))\n        //Get ArrowAnnotate instance in order to create new interpolated annotation\n        const toolGroup = ToolGroupManager.getToolGroupForViewport(\n            contrastedViewport.id,\n            contrastedViewport.renderingEngineId\n        );\n        const arrowAnnotateInstance = toolGroup.getToolInstance(\"ArrowAnnotate\")\n        console.log('Tool Group', toolGroup, arrowAnnotateInstance)\n        displaySetInstanceUID = cornerstoneViewportService.getViewportInfo(\"default\").viewportData.data.displaySetInstanceUID;\n        for (const pm of measurements) {\n            if (pm.metadata.handmade && pm.displaySetInstanceUID === displaySetInstanceUID) {\n                arrowAnnotateInstance.removeArrowAnnotation(pm.uid);\n            }\n        }\n        arrowAnnotateInstance.addNewAnnotationWithMovablePoints(contrastedViewport.element, controlPointsInWorld, 'rgb(0, 255, 0)')\n\n        if (debug) {\n            let canvas = await debugShowImage(binarizedArray, layerWidth, layerHeight);\n            let ctx = canvas.getContext('2d')\n            for (let x = 0; x < nbLayers; x++) {\n                drawPoint(ctx, x, f(x), '', 'blue', 2);\n            }\n        }\n    }\n\n    // Control points that can be changed in front will be re-used to compute\n    // A new dental curve thus a new panoramic\n    const generatePanoramicFromControlPoints = async(debug=false) => {\n        //Get control points\n        const displaySetInstanceUID = cornerstoneViewportService.getViewportInfo(\"default\").viewportData.data.displaySetInstanceUID\n        const controlPointsinViewport = measurementService.getMeasurements()\n            .filter(m => m.toolName === \"ArrowAnnotate\" && m.metadata.handmade && m.displaySetInstanceUID === displaySetInstanceUID)\n\n        if (controlPointsinViewport.length === 0) {\n            uiNotificationService.show({\n                title: `Panoramic Generation Error`,\n                message: `Generate control points first before initiating the computation of the panoramic.`,\n                type: 'error',\n                duration: 3000,\n            });\n            return\n        }\n\n        //If user is asking to regenerate panoramic and there already is one for this serie, delete the previous one\n        // Refresh study list in hanging protocol module\n        hangingProtocolService.refreshStudyList()\n        let hpInfo = hangingProtocolService.getState();\n        //If stage is 2, we already have a panoramic\n        if (hpInfo.stageIndex === 2) {\n            const viewportIds = cornerstoneViewportService.getViewportIds();\n            const panoramicViewportInfo = cornerstoneViewportService.getViewportInfo(viewportIds[1])\n            const dentascanViewportInfo = cornerstoneViewportService.getViewportInfo(viewportIds[2])\n            console.info('Deleting old panoramic display set...', panoramicViewportInfo.viewportData.data.displaySetInstanceUID)\n            console.info('Deleting old dentascan display set...', dentascanViewportInfo.viewportData.data.displaySetInstanceUID)\n            displaySetService.deleteDisplaySet(panoramicViewportInfo.viewportData.data.displaySetInstanceUID)\n            displaySetService.deleteDisplaySet(dentascanViewportInfo.viewportData.data.displaySetInstanceUID)\n            commandsManager.runCommand('toggleHangingProtocol', {\n                protocolId: 'panoramicViewport',\n                stageIndex: 1\n            })\n        }\n\n        //Display progress bar in front-end\n        setIsProcessingPanoramic(true)\n\n        //Get volume from where we want to compute panoramic on\n        const contrastedDisplaySet = displaySetService.getDisplaySetByUID(\n            cornerstoneViewportService.getViewportInfo(\"default\").viewportData.data.displaySetInstanceUID\n        )\n        const baseVolumeSeriesUID = contrastedDisplaySet.SeriesInstanceUID.replace('.contrasted', '')\n        const baseVolumeSeries = DicomMetadataStore.getSeries(contrastedDisplaySet.StudyInstanceUID, baseVolumeSeriesUID)\n        const baseId = baseVolumeSeries.instances[0].imageId\n        const baseVolume = cache.getVolumeContainingImageId(baseId)\n        const scalarData = baseVolume.volume.scalarData\n        const dicomDimensions = baseVolume.volume.dimensions\n        const [layerWidth, layerHeight, nbLayers] = dicomDimensions\n        const layerSize = layerWidth * layerHeight\n        let parameters = {layerWidth: layerWidth, layerHeight: layerHeight, nbLayers: nbLayers, layerSize: layerSize};\n\n        //Get data from contrasted image\n        const contrastedViewport = cornerstoneViewportService.getCornerstoneViewport(\"default\")\n        const contrastedData = contrastedViewport.getImageData()\n\n        //Regenerate points from annoted points in viewport\n        let controlPointsInVolume = controlPointsinViewport[0].points.map(point => {\n            const pointIndex = contrastedData.imageData.worldToIndex(point);\n            return { x: pointIndex[0], y: pointIndex[1] }\n        });\n        controlPointsInVolume.sort((p1, p2) => p1.x - p2.x)\n\n        //LSF method to get best fitting parabola along basePoints\n        const lsfDentalCurve = LSFMethods.polynomial(controlPointsInVolume, {order: 6});\n        const f = lsfDentalCurve.predict;\n\n        // For now we just have control points\n        // We need to regenerate base points, which are equitably distributed points between mix and max control points\n        const minX = controlPointsInVolume[0].x;\n        const maxX = controlPointsInVolume[numberBasePoints - 1].x;\n\n        // Iteration on normals to determine width of panoramic and array of offsets\n        // On each index representing a basePoints, the value represents the width value on the panoramic\n        // from where the corresponding basePoint begins.\n        // TODO\n\n        // Precompute nb steps\n        let dentascans = [getDentascanSection(minX, f, scalarData, parameters)];\n\n        // Compute panoramicWidth and build dentascans\n        let x = minX;\n        while (x < maxX) {\n            x += getTangentVector(f, x)[0];\n\n            const dentascan = getDentascanSection(x, f, scalarData, parameters);\n            dentascans.push(dentascan);\n        }\n        const panoramicWidth = dentascans.length;\n        console.log('PANORAMIC WIDTH', panoramicWidth)\n        parameters['panoramicWidth'] = panoramicWidth;\n\n\n        /*const [a, b, c] = lsfDentalCurve.equation;\n        const dfdx = a * x + b;\n        const fl = Math.sqrt(1 + dfdx * dfdx);\n        const flPrim = (x) => 1/(2*a)*(fl*dfdx + Math.log(fl+dfdx));\n        const panoramicWidth = flPrim(maxX) - flPrim(minX);*/ // TODO\n\n\n        // This promise take a base point and an offset\n        // It computes the dentascan corresponding to the offset and finishes\n        // This needs to be separated from buildPanoramicPromise as we will do a transformation on\n        // the dentascan curves consisting in recalculating the curves.\n        // TODO\n\n        // Compute the value of each dentascan at each layer in order to compute axial curves of each layer\n        const dentalCurvesPointsXY = getDentalCurvesPointsXY(dentascans, 'curveAIP', parameters);\n        const nbDentalCurves = Math.floor(panoramicWidth / DENTAL_CURVES_STEP);\n        const nbAxialCurves = Math.floor(nbLayers / AXIAL_CURVES_STEP);\n\n        //let axialCurvesPoints = new Array(nbAxialCurves * panoramicWidth).fill(null);\n        // Convert an array of long curves points to an array of axial curves points.\n        // The value inside newScalarData contains the x coordinate of the curve\n        for (let l = 0; l < nbAxialCurves; l++) {\n            break;\n            const layer = 1 * l;\n            const [inf, sup] = [Math.max(0, l), l + 1];\n            const coordinatesSlice = dentascanCurvesPoints.slice(inf * nbDentalCurves, sup * nbDentalCurves).filter(value => value);\n            const axialCurve = LSFMethods.polynomial(coordinatesSlice, {order: 6});\n            // TODO\n            for (let i = 0; i < panoramicWidth; i++) {\n                const dentascan = dentascans[i];\n                const middlePoint = dentascan.middlePoint;\n                // We want to find the point where an axial curve crosses a dental segment\n                // Having ax²+bx+c the curve of the axial curve and dx + e the curve of the segment,\n                // This is solved by solving the equation ax² + (b-d)x + (c-e) = 0\n                // Which admits two roots: -(b-d)-sqrt(delta)/2a and -(b-d)+sqrt(delta)/2a where delta is (b-d)²-4a(c-e)\n                /*let [a_, b_, c_] = axialCurve.equation; // TODO\n                const [d_, e_] = dentascan.equation;\n                let xyAxial = null;\n                if (a_ != 0) {\n                    const [a, b, c] = [a_, b_ - d_, c_ - e_];\n                    const delta = b*b - 4*a*c;\n                    if (delta > 0) {\n                        // Two roots\n                        const root1 = (-b - Math.sqrt(delta)) / (2*a);\n                        const root2 = (-b + Math.sqrt(delta)) / (2*a);\n                        if (Math.abs(root1 - middlePoint[0]) < Math.abs(root2 - middlePoint[0])) {\n                            xyAxial = [root1, axialCurve.predict(root1)];\n                        } else {\n                            xyAxial = [root2, axialCurve.predict(root2)];\n                        }\n                    } else if (delta === 0) {\n                        const root = -b / (2*a)\n                        xyAxial = [root, axialCurve.predict(root)];\n                    }\n\n                }*//* else {\n                    const root = (e_ - c_) - (b_ - d_);\n                    xyAxial = [root, axialCurve.predict(root)];\n                }*/ // TODO\n                const [minX, minY] = dentascan.interval[0];\n                let xyAxial = null;\n                let costAxial = layerHeight; // Big value;\n                for (let i = 0; i < dentascan.width; i++) {\n                    const x = minX + i * dentascan.director[0];\n                    const yAxial = axialCurve.predict(x);\n                    const yDental = minY + i * dentascan.director[1];\n\n                    const cost = Math.abs(yAxial - yDental);\n                    if (cost < costAxial) {\n                        costAxial = cost;\n                        xyAxial = [x, yAxial];\n                    }\n                }\n                if (xyAxial) {\n                    let xPosInDentascan = Math.round(DENTASCAN_THICKNESS / 2 + (xyAxial[0] - middlePoint[0]) / dentascan.director[0]);\n                    const yPosInDentascan = layer;\n\n                    if (xPosInDentascan < 0) {\n                        xPosInDentascan = 0;\n                    }\n                    if (xPosInDentascan > DENTASCAN_THICKNESS) {\n                        xPosInDentascan = DENTASCAN_THICKNESS;\n                    }\n                    // Image is transposed\n                    // TODO : handle sigmoid curve on new dental curve\n                    axialCurvesPoints[i * nbAxialCurves + l] = {x: yPosInDentascan, y: xPosInDentascan};\n                }\n            }\n        } //TODO\n\n        //This promise take a base point and an offset\n        //It fills panoramicArray from basePoint to next basePoint\n        //Offset as explained earlier is the starting width of the base point\n        // TODO\n\n        //Init panoramic array\n        let panoramicNormalsIterative = new Float32Array(panoramicWidth * nbLayers).fill(-1000)\n\n        const panoramicDepth = DENTAL_CURVE_THICKNESS + 1;\n        // From start of base point to start of other base point, incremented by vector director between those two points\n        for (let i = 0; i < panoramicWidth; i++) {\n            let dentascan = dentascans[i];\n            const [dentascanMinPoint, dentascanMaxPoint] = dentascan.interval;\n            const [dentascanVxNormal, dentascanVyNormal] = dentascan.director;\n\n            //const coordinatesSlice = axialCurvesPoints.slice(i * nbAxialCurves, (i + 1) * nbAxialCurves).filter(value => value);\n            //const dentalCurve = LSFMethods.polynomial(coordinatesSlice, {order: 3});\n            for (let layer = 0; layer < nbLayers; layer++) {\n                // TODO\n                const pointXY = dentalCurvesPointsXY[Math.floor(layer / AXIAL_CURVES_STEP) * nbDentalCurves + Math.floor(i / DENTAL_CURVES_STEP)];\n                const [x, y] = [pointXY.x, pointXY.y];\n\n                //Get min and max point along normal of dentalCurve which length between the two is DENTAL_CURVE_THICKNESS\n                let minPoint = [x - DENTAL_CURVE_THICKNESS / 2 * dentascanVxNormal,\n                                y - DENTAL_CURVE_THICKNESS / 2 * dentascanVyNormal];\n                let maxPoint = [x + DENTAL_CURVE_THICKNESS / 2 * dentascanVxNormal,\n                                y + DENTAL_CURVE_THICKNESS / 2 * dentascanVyNormal];\n\n                const valuesAlongNormal = [];\n\n                //Get values of point along normal between min and max\n                for (let k = 0; k < panoramicDepth; k++) {\n                    const xk = Math.round(minPoint[0] + k * dentascanVxNormal);\n                    const yk = Math.round(minPoint[1] + k * dentascanVyNormal);\n                    // TODO\n                    let scalarValue = Math.floor((scalarData[layer * layerSize + yk * layerWidth + xk] + 1000) / 16) / 255;\n                    //let scalarValue = (scalarData[layer * layerSize + yk * layerWidth + xk] + 1000) / 16;\n                    //if (scalarValue >= 50) {\n                        //valuesAlongNormal.push(Math.exp(scalarValue / S));\n\n                    // Take data along normal vector where x and y are valid coordinates\n                    if (!isNaN(scalarValue)) {\n                        valuesAlongNormal.push(1 - 0.15 * (scalarValue * scalarValue * scalarValue));\n                    }\n                }\n\n                // Add mean of all values as value in panoramic result\n                // TODO\n                let absorption = valuesAlongNormal.reduce((a, b) => a * b, 1);\n                //let mean = valuesAlongNormal.reduce((a, b) => a + b, 0) / valuesAlongNormal.length;\n                //const max = getMax(valuesAlongNormal);\n                //panoramicNormalsIterative[panoramicWidth * (nbLayers - layer - 1) + i] = S * Math.log(mean) * 16 - 1000;\n                panoramicNormalsIterative[panoramicWidth * (nbLayers - layer - 1) + i] = (1 - absorption) * 255 * 16 - 1000;\n            }\n        }\n        // Post processing\n        let panoramicProcessed = new Array(panoramicWidth * nbLayers).fill(-1000);\n        const gImage = blurPanoramic(panoramicNormalsIterative, panoramicWidth, nbLayers);\n\n        for (let i = 0; i < panoramicWidth * nbLayers; i++) {\n            const image0 = panoramicNormalsIterative[i];\n            const gImage0 = gImage[i];\n            const alpha = 0.9;\n            panoramicProcessed[i] = alpha * image0 + (1 - alpha) * (image0 - gImage0);\n        }\n        /*const oldMin = Math.min(...panoramicNormalsIterative);\n        const oldMax = Math.max(...panoramicNormalsIterative);\n        const newMin = Math.min(...panoramicProcessed);\n        const newMax = Math.max(...panoramicProcessed);\n        const scalingFactor = (oldMax - oldMin) / (newMax - newMin);\n\n\n        // Rescale values\n        for (let i = 0; i < panoramicWidth * nbLayers; i++) {\n            panoramicProcessed[i] = Math.round((panoramicProcessed[i] - newMin) * scalingFactor + oldMin);\n        }*/\n\n\n        if (debug) {\n            for (let l = 0; l < nbLayers; l++) {\n                const scalarSlice = scalarData.slice(l * layerSize, (l + 1) * layerSize);\n                let canvas = await debugShowImage(scalarSlice, layerWidth, layerHeight)\n                let ctx = canvas.getContext('2d');\n                for (let i = 0; i < panoramicWidth; i++) {\n                    const dentascan = dentascans[i];\n                    const mp = dentascan.middlePoint;\n                    const [imin, imax] = dentascan.interval;\n                    drawPoint(ctx, mp[0], mp[1], '', 'purple', 2);\n                    drawPoint(ctx, imin[0], imin[1], '', 'purple', 2);\n                    drawPoint(ctx, imax[0], imax[1], '', 'purple', 2);\n\n                    let xPosInDentascan = dentalCurvesPointsXY[i * nbLayers + l];\n                    if (xPosInDentascan < 0) {\n                        xPosInDentascan = 0;\n                    }\n                    if (xPosInDentascan > DENTASCAN_THICKNESS) {\n                        xPosInDentascan = DENTASCAN_THICKNESS;\n                    }\n                    const [dentascanMinPoint, dentascanMaxPoint] = dentascan.interval;\n                    const [dentascanVxNormal, dentascanVyNormal] = dentascan.director;\n                    const xPt = Math.round(dentascanMinPoint[0] + xPosInDentascan * dentascanVxNormal);\n                    const yPt = Math.round(dentascanMinPoint[1] + xPosInDentascan * dentascanVyNormal);\n                    drawPoint(ctx, xPt, yPt, '', 'green', 2);\n\n                    /*const coordinatesSlice = axialCurvesPoints.slice(i * nbAxialCurves, (i + 1) * nbAxialCurves).filter(value => value);\n                    const xDental = Math.round(dentascanMinPoint[0] + coordinatesSlice[l].y * dentascanVxNormal);\n                    const yDental = Math.round(dentascanMinPoint[1] + coordinatesSlice[l].y * dentascanVyNormal);\n                    drawPoint(ctx, xDental, yDental, '', 'blue', 2);*/\n                }\n            }\n\n            // Debug step 2\n            /*for (let i = 0; i < nbDentalCurves; i++) {\n                const dentascan = dentascans[i];\n                const dentalLiss = getDentalCurve([dentascan]);\n\n                const dentascanData = transposeImage(dentascan.dentascan, dentascan.width, nbLayers);\n                let canvas = await debugShowImage(dentascanData, dentascan.width, nbLayers);\n                let ctx = canvas.getContext('2d');\n                for (let layer = 0; layer < nbLayers; layer+=20) {\n                    const y = dentalLiss.predict(layer);\n                    const minY = Math.round(y - DENTASCAN_THICKNESS / 2);\n                    const maxY = Math.round(y + DENTASCAN_THICKNESS / 2);\n                    for (let j = minY; j < maxY; j += 2) {\n                        drawPoint(ctx, layer, j, '', 'purple', 2);\n                    }\n                }\n                for (let layer = 0; layer < nbLayers; layer++) {\n                    drawPoint(ctx, layer, dentalLiss.predict(layer), '', 'purple', 2);\n                }\n            }*/\n\n            // Debug step 3\n            /*for (let l = 0; l < nbAxialCurves; l++) {\n                const layer = l * 1;\n                const scalarSlice = scalarData.slice(layer * layerSize, (layer + 1) * layerSize);\n                const [inf, sup] = [Math.max(0, l), l + 1];\n\n                let canvas = await debugShowImage(scalarSlice, layerWidth, layerHeight);\n                let ctx = canvas.getContext('2d');\n                for (let i = 0; i < panoramicWidth; i++) {\n                    const dentascan = dentascans[i];\n                    const [dentascanMinPoint, dentascanMaxPoint] = dentascan.interval;\n                    const [dentascanVxNormal, dentascanVyNormal] = dentascan.director;\n                    const point = axialCurvesPoints[i * nbAxialCurves + l];\n                    if (point) {\n                        const xPosInDentascan = point.y;\n                        const xDental = Math.round(dentascanMinPoint[0] + xPosInDentascan * dentascanVxNormal);\n                        const yDental = Math.round(dentascanMinPoint[1] + xPosInDentascan * dentascanVyNormal);\n                        drawPoint(ctx, xDental, yDental, '', 'purple', 3);\n                    }\n                }\n\n                let coordinatesSlice = dentascanCurvesPoints.slice(inf * nbDentalCurves, sup * nbDentalCurves).filter(value => value);\n                const axialCurve = LSFMethods.polynomial(coordinatesSlice, {order: 6});\n                for (let x = Math.min(...coordinatesSlice.map(p => p.x)); x <= Math.max(...coordinatesSlice.map(p => p.x)); x++) {\n                    const yTrue = lsfDentalCurve.predict(x);\n                    drawPoint(ctx, x, yTrue, '', 'green', 1);\n                    const yPred = axialCurve.predict(x);\n                    drawPoint(ctx, x, yPred, '', 'blue', 1);\n                }\n            }*/\n        }\n\n        //Array at start is filled with false\n        //When a promise at a specific basePoint is done, its index goes to true\n        //This array allows us to track state of the promises to display progress bar in front\n\n        //Recursive function to execute promises in array\n        //When promise at index x is done, update doneArray by putting true value and wait a bit\n        //to call recursively function of x + 1 index.\n\n        //Update progress value in front-end by getting each 250ms the number of true values in doneArray\n        //THIS WORKS ONLY WHEN PARENT FUNCTION IS CALLED WITH debug = false\n        /*const waitUntilArrayDone = (start) => {\n            return new Promise<void>((resolve, reject) => {\n                const waitForArray = (start) => {\n                    const completed = doneArray.filter(el => el).length\n                    const progress = (start + Math.round((completed * 100) / 2 / basePoints.length))\n                    setProcessingPourcent(progress)\n                    if (completed === basePoints.length) {\n                        return resolve();\n                    } else {\n                        setTimeout(() => waitForArray(start), 50)\n                    }\n                }\n                waitForArray(start)\n            })\n        }\n        //Wait until panoramic is completed\n        await waitUntilArrayDone(0)*/\n\n        console.log('DONE');\n        let sharpenedPanoramic = panoramicNormalsIterative;//sharpen(panoramicNormalsIterative, panoramicWidth, nbLayers)\n        //sharpenedPanoramic = applySmoothing(sharpenedPanoramic, panoramicWidth, nbLayers)\n\n        if (debug) {\n            debugShowImage(sharpenedPanoramic, nbLayers, panoramicWidth);\n        }\n\n        //Display panoramic in OHIF Viewport\n        const voiLutModule = metaData.get('voiLutModule', baseId);\n        const imagePixelModule = metaData.get('imagePixelModule', baseId);\n        const generalSeriesModule = metaData.get('generalSeriesModule', baseId);\n\n        if (!cornerstoneViewportService.getCornerstoneViewport(\"default\")) {\n            uiNotificationService.show({\n                title: `Panoramic Generation Error`,\n                message: `No viewport detected.`,\n                type: 'error',\n                duration: 3000,\n            });\n            return;\n        }\n        const panoramicMetadata = {\n            SeriesInstanceUID: generalSeriesModule.seriesInstanceUID + '.panoramic',\n            StudyInstanceUID: generalSeriesModule.studyInstanceUID,\n            BitsAllocated: imagePixelModule.bitsAllocated,\n            BitsStored: imagePixelModule.bitsStored,\n            Rows: nbLayers,\n            Columns: panoramicWidth,\n            WindowCenter: voiLutModule.windowCenter[0],\n            WindowWidth: voiLutModule.windowWidth[0],\n            PixelData: sharpenedPanoramic\n        };\n        const panoramicViewportData = await loadBlobInViewport(panoramicMetadata);\n\n        const dentascanObject = {\n            SeriesInstanceUID: generalSeriesModule.seriesInstanceUID + '.dentascan',\n            StudyInstanceUID: generalSeriesModule.studyInstanceUID,\n            BitsAllocated: imagePixelModule.bitsAllocated,\n            BitsStored: imagePixelModule.bitsStored,\n            Rows: nbLayers,\n            Columns: -1,\n            WindowCenter: voiLutModule.windowCenter[0],\n            WindowWidth: voiLutModule.windowWidth[0],\n            PixelData: dentascans.map(dentascan => dentascan.dentascan) // TODO\n        };\n\n        const dentascansViewportData = await loadMultipleBlobsInViewport(dentascanObject)\n\n        // Refresh study list in hanging protocol module\n        hangingProtocolService.refreshStudyList()\n        hpInfo = hangingProtocolService.getState();\n        commandsManager.runCommand('toggleHangingProtocol', {\n                protocolId: 'panoramicViewport',\n                stageIndex: 2\n        });\n        setPanelMetadata({\n            ...panelMetadata,\n            update: !panelMetadata.update,\n            dentascanViewportData: dentascansViewportData,\n            panoramicViewportData: panoramicViewportData,\n            panoramic: {\n                width: panoramicWidth,\n                height: nbLayers\n            }\n        });\n        //Save state in cache to be retrieved if we reopen panoramic panel\n        cornerstoneCacheService.setPanoramicStateCache({\n            ...panelMetadata,\n            update: !panelMetadata.update,\n            dentascanViewportData: dentascansViewportData,\n            panoramicViewportData: panoramicViewportData,\n            panoramic: {\n                width: panoramicWidth,\n                height: nbLayers\n            }\n        }, generalSeriesModule.seriesInstanceUID);\n\n        console.log('DISPLAY SETS', displaySetService.getDisplaySetCache());\n    }\n\n    // @ts-ignore\n    return (\n        <div style={{width:'100%', height:'100%'}}>\n            <div style={{width:'100%', display:'flex', flexDirection:'column', height:'100%'}}>\n                <p style={{color:'white', fontWeight:'bold', marginBottom:'20px'}}>{'Panoramic Generation'}</p>\n                <p style={{color:'white', fontSize:'small', marginBottom:'10px'}}>{'1 - Generate control points from where panoramic will be computed with'}</p>\n                <Button onClick={() => {generatePanoramicControlPoints(false)}} style={{marginBottom:'20px'}}>{\"Generate Control Points\"}</Button>\n                <p style={{color:'white', fontSize:'small', marginBottom:'20px'}}>{'2 - Adjust the points as needed so that the green line fits best around the white area of the image (along the dental   . The points do not need to be evenly distributed. You can change brightness and contrast of the image to enlighten the white line with the Window Level tool in toolbar.'}</p>\n                <div style={{width:'90%', display:'flex', flexDirection:'column', marginBottom:'20px'}}>\n                    <p style={{color:'white', fontSize:'small', marginBottom:'10px'}}>{'3 - Once the points are well adjusted, you can modify some parameters but be careful : the lower the parameters are set, the faster the execution, but the quality of the panoramic view may be compromised.'}</p>\n                    <p style={{color:'#5ACCE6', fontSize:'smaller', marginBottom:'5px'}}>{'Steps of computation :'}</p>\n                    <div style={{width:\"100%\", display:'flex'}}>\n                        <input\n                            type=\"range\"\n                            id=\"dSection\"\n                            name=\"dSection\"\n                            value={`${Math.floor(numberBasePoints)}`}\n                            min=\"5\" max={\"45\"}\n                            style={{width:'70%', marginRight:'5%'}}\n                            onChange={(e) => {setNumberBasePoints(parseInt(e.target.value))}}\n                        />\n                        <p style={{color:'#5ACCE6', fontSize:'small', width:'25%'}}>{`${numberBasePoints}`}</p>\n                    </div>\n                </div>\n                <p style={{color:'white', fontSize:'small', marginBottom:'10px'}}>{'4 - Once the chosen parameters are good, you can initiate the computation'}</p>\n                <Button onClick={() => {generatePanoramicFromControlPoints(false)}} style={{marginBottom:'10px'}}>{\"Compute Panoramic\"}</Button>\n                {\n                    isProcessingPanoramic &&\n                    <div className={'w-full mt-[10px] mb-[20px]'}>\n                        <p style={{color:'white', fontSize:'small'}}>{'Creating panoramic...'}</p>\n                        <ProgressBar\n                            className={'w-full mt-[3px]'}\n                            bgColor={processingPourcent < 100 ? '#5ACCE6' : '#50C878'}\n                            completed={processingPourcent}\n                            transitionDuration={\"0.05s\"}\n                            transitionTimingFunction={\"linear\"}\n                        />\n                    </div>\n                }\n                { panelMetadata.panoramic?.width &&\n                    <div style={{width:'100%', display:'flex', flexDirection:'column', justifyContent:'space-evenly', height:'18%'}}>\n                        <p style={{color:'white', fontWeight:'bold'}}>{'Dentascan Editing'}</p>\n                        <p style={{color:'white', fontSize:'small', marginBottom:'10px'}}>{'5 - Scroll through the dentascans using this slider. The central dentascan is represented by the white line on the panoramic view.'}</p>\n                        <div style={{width:'90%', display:'flex', height:'10%', flexDirection:'row', justifyContent:'space-between'}}>\n                            <p style={{color:'white', fontSize:'smaller'}}>{'Section :'}</p>\n                            <input\n                                type=\"range\"\n                                id=\"dSection\"\n                                name=\"dSection\"\n                                value={`${Math.floor(panelMetadata.dentascanViewportData.data.initialImageIndex)}`}\n                                min=\"0\" max={`${panelMetadata.panoramic.width - 1}`}\n                                style={{width:'70%'}}\n                                onChange={(e) => {setPanelMetadata({\n                                    ...panelMetadata,\n                                    update: !panelMetadata.update,\n                                    dentascanViewportData: {\n                                        ...panelMetadata.dentascanViewportData,\n                                        data: {\n                                            ...panelMetadata.dentascanViewportData.data,\n                                            initialImageIndex: Math.floor(Number(e.target.value))\n                                        }\n                                    }\n                                })}}\n                            />\n                        </div>\n                    </div>\n                }\n            </div>\n        </div>\n    );\n}\n","export function antiAlias(imageData, width, height, intensity) {\n    const resultImageData = imageData.slice();\n\n    for (let y = 1; y < height - 1; y++) {\n        for (let x = 1; x < width - 1; x++) {\n            const index = y * width + x;\n            const gray =\n                (imageData[(y - 1) * width + x - 1] * intensity +\n                    imageData[(y - 1) * width + x] * intensity +\n                    imageData[(y - 1) * width + x + 1] * intensity +\n                    imageData[y * width + x - 1] * intensity +\n                    imageData[y * width + x] +\n                    imageData[y * width + x + 1] * intensity +\n                    imageData[(y + 1) * width + x - 1] * intensity +\n                    imageData[(y + 1) * width + x] * intensity +\n                    imageData[(y + 1) * width + x + 1] * intensity) /\n                1 + intensity * 8;\n\n            // Mettre à jour la valeur de pixel dans l'image résultante\n            resultImageData[index] = gray;\n        }\n    }\n\n    return resultImageData;\n}\n\nexport function sharpen(imageData, width, height) {\n    // Créer une copie de l'image pour ne pas modifier l'original\n    const resultImageData = imageData.slice();\n\n    // Matrice de renforcement\n    const sharpenMatrix = [\n        [0, -1, 0],\n        [-1, 5, -1],\n        [0, -1, 0],\n    ];\n\n    const matrixSize = 3; // Taille de la matrice (3x3)\n\n    for (let y = 1; y < height - 1; y++) {\n        for (let x = 1; x < width - 1; x++) {\n            let sum = 0;\n\n            // Appliquer la matrice de renforcement aux pixels voisins\n            for (let i = 0; i < matrixSize; i++) {\n                for (let j = 0; j < matrixSize; j++) {\n                    const pixelX = x + j - 1;\n                    const pixelY = y + i - 1;\n                    const index = pixelY * width + pixelX;\n                    sum += imageData[index] * sharpenMatrix[i][j];\n                }\n            }\n\n            // S'assurer que la valeur est dans la plage [0, 255]\n            sum = Math.min(32767, Math.max(-32768, sum));\n\n            // Mettre à jour la valeur de pixel dans l'image résultante\n            const index = y * width + x;\n            resultImageData[index] = sum;\n        }\n    }\n\n    return resultImageData;\n}\n\nexport function blurPanoramic(imageData, width, height) {\n    const resultImageData = imageData.slice();\n\n    const sigma = 0.8;\n    const gaussianBlur = (dist) => Math.exp(-dist / (2 * sigma * sigma)) / (2 * Math.PI * sigma * sigma);\n    const [g0, g1, g2] = [gaussianBlur(0), gaussianBlur(1), gaussianBlur(2)];\n\n    const kernel = [\n        [g2, g1, g2],\n        [g1, g0, g1],\n        [g2, g1, g2],\n    ];\n    const normalizeCoef = 1 / (g0 + 4 * g1 + 4 * g2);\n\n    const kernelSize = kernel.length;\n    const halfKernelSize = Math.floor(kernelSize / 2);\n\n    for (let y = halfKernelSize; y < height - halfKernelSize; y++) {\n        for (let x = halfKernelSize; x < width - halfKernelSize; x++) {\n            let sum = 0;\n            for (let ky = 0; ky < kernelSize; ky++) {\n                for (let kx = 0; kx < kernelSize; kx++) {\n                    const pixelX = x + kx - halfKernelSize;\n                    const pixelY = y + ky - halfKernelSize;\n                    const index = pixelY * width + pixelX;\n\n                    // Appliquer le noyau de convolution au pixel.\n                    sum += imageData[index] * kernel[ky][kx];\n                }\n            }\n\n            // Normaliser la somme en fonction de l'intensité.\n            sum *= normalizeCoef;\n\n            // Mettre à jour la valeur du pixel dans l'image résultante.\n            resultImageData[y * width + x] = sum;\n        }\n    }\n\n    return resultImageData;\n}\n\nexport function applySmoothing(imageData, width, height) {\n    const resultImageData = imageData.slice();\n\n    const kernel = [\n        [0, 1, 0],\n        [0, 1, 0],\n        [0, 1, 0],\n    ]; // Noyau de convolution simple pour l'adoucissement.\n\n    const kernelSize = kernel.length;\n    const halfKernelSize = Math.floor(kernelSize / 2);\n\n    for (let y = halfKernelSize; y < height - halfKernelSize; y++) {\n        for (let x = halfKernelSize; x < width - halfKernelSize; x++) {\n            let sum = 0;\n\n            for (let ky = 0; ky < kernelSize; ky++) {\n                for (let kx = 0; kx < kernelSize; kx++) {\n                    const pixelX = x + kx - halfKernelSize;\n                    const pixelY = y + ky - halfKernelSize;\n                    const index = pixelY * width + pixelX;\n\n                    // Appliquer le noyau de convolution au pixel.\n                    sum += imageData[index] * kernel[ky][kx];\n                }\n            }\n\n            // Normaliser la somme en fonction de l'intensité.\n            sum /= 3;\n\n            // Mettre à jour la valeur du pixel dans l'image résultante.\n            resultImageData[y * width + x] = sum;\n        }\n    }\n\n    return resultImageData;\n}\n\nexport function calculateNormalCurve(curve, ind, nbNormals) {\n    const norm = [];\n\n    if (curve.length <= 1 || ind < 0 || ind >= curve.length) {\n        // Gestion des cas spéciaux où la normale ne peut pas être calculée\n        return norm;\n    }\n\n    // Coordonnées du point \"p\"\n    const [px, py] = curve[ind];\n\n    // Calcul des tangentes aux points voisins\n    let [tx, ty] = [0, 0]; // Tangente au point \"p\"\n\n    if (ind > 10) {\n        const [prevX, prevY] = curve[ind - 10];\n        tx += px - prevX;\n        ty += py - prevY;\n    }\n\n    if (ind < curve.length - 10) {\n        const [nextX, nextY] = curve[ind + 10];\n        tx += nextX - px;\n        ty += nextY - py;\n    }\n\n    // Calcul de la normale (perpendiculaire à la tangente)\n    const magnitude = Math.sqrt(tx * tx + ty * ty);\n    if (magnitude === 0) {\n        // Gestion du cas où la tangente est nulle (point isolé)\n        return norm;\n    }\n\n    const nx = -ty / magnitude; // Composante x de la normale\n    const ny = tx / magnitude; // Composante y de la normale\n\n    // Ajout du point \"p\" dans \"norm\"\n    norm.push([px, py]);\n\n    const stepSize = magnitude / (nbNormals / 2); // nbNormals points au total, y compris \"p\"\n    let currentX = px - nx * magnitude;\n    let currentY = py - ny * magnitude;\n\n    // Calcul des points équidistants sur la normale\n    for (let i = 0; i < nbNormals; i++) {\n        currentX += nx * stepSize;\n        currentY += ny * stepSize;\n        norm.push([currentX, currentY]);\n    }\n\n    return norm;\n}\n\nexport function cubicSplineInterpolation(arr, x) {\n    const n = arr.length;\n    let i = 0;\n\n    if (x >= arr[n - 1][0]) {\n        i = n - 2;\n    } else {\n        while (x > arr[i + 1][0]) {\n            i++;\n        }\n    }\n\n    const x1 = arr[i][0];\n    const x2 = arr[Math.min(i + 1, n - 1)][0];\n\n    const y0 = arr[Math.max(i - 1, 0)][1];\n    const y1 = arr[i][1];\n    const y2 = arr[Math.min(i + 1, n - 1)][1];\n    const y3 = arr[Math.min(i + 2, n - 1)][1];\n\n    const t = (x - x1) / (x2 - x1);\n    const t2 = t * t;\n    const t3 = t * t2;\n\n    const a = -0.5 * y0 + 1.5 * y1 - 1.5 * y2 + 0.5 * y3;\n    const b = y0 - 2.5 * y1 + 2 * y2 - 0.5 * y3;\n    const c = -0.5 * y0 + 0.5 * y2;\n    const d = y1;\n\n    const y = a * t3 + b * t2 + c * t + d;\n\n    return [x, y];\n}\n\nfunction linearInterpolationCoefficients(point1, point2) {\n    const [x1, y1] = point1;\n    const [x2, y2] = point2;\n\n    if (x1 === x2) {\n        throw new Error('Les deux points doivent avoir des coordonnées x différentes pour l\\'interpolation linéaire.');\n    }\n\n    const a = (y2 - y1) / (x2 - x1);\n    const b = y1 - a * x1;\n\n    return [Math.round(a), Math.round(b)];\n}\n\n//Complete cubic spline interpolation in order to have linear interpolation in the beginning and in the end of the curve\nfunction completeInterpolation(interpolatedPoints, xMax){\n    const [a0, b0] = linearInterpolationCoefficients(interpolatedPoints[0], interpolatedPoints[10])\n    const [a1, b1] = linearInterpolationCoefficients(interpolatedPoints[interpolatedPoints.length - 10], interpolatedPoints[interpolatedPoints.length - 1])\n    const stepBegin = interpolatedPoints[0][0] / (xMax / 3)\n    const stepEnd = (xMax - interpolatedPoints[interpolatedPoints.length - 1][0]) / (xMax / 3)\n    for(let x = 0; x < interpolatedPoints[0][0]; x += stepBegin){\n        interpolatedPoints.push([x, a0 * x + b0])\n    }\n    interpolatedPoints.sort((a, b) => a[0] - b[0]);\n\n    for(let x = interpolatedPoints[interpolatedPoints.length - 1][0] + stepEnd; x < xMax; x += stepEnd){\n        interpolatedPoints.push([x, a1 * x + b1])\n    }\n\n    return  interpolatedPoints.map(p => {\n        return [p[0], p[1], 0]\n    })\n}\n","import React from 'react';\nimport {\n  WrappedPanelStudyBrowser,\n  PanelMeasurementTable,\n  Edition3DPanel,\n  PanoramicGenerationPanel\n} from './Panels';\nimport ActionButtons from \"./Panels/ActionButtons\";\nimport i18n from 'i18next';\n\n// TODO:\n// - No loading UI exists yet\n// - cancel promises when component is destroyed\n// - show errors in UI for thumbnails if promise fails\n\nfunction getPanelModule({ commandsManager, extensionManager, servicesManager }) {\n  const wrappedMeasurementPanel = () => {\n    return (\n      <PanelMeasurementTable\n        commandsManager={commandsManager}\n        servicesManager={servicesManager}\n        extensionManager={extensionManager}\n      />\n    );\n  };\n\n  return [\n    {\n      name: 'seriesList',\n      iconName: 'tab-studies',\n      iconLabel: 'Studies',\n      label: i18n.t('SidePanel:Studies'),\n      component: WrappedPanelStudyBrowser.bind(null, {\n        commandsManager,\n        extensionManager,\n        servicesManager,\n      }),\n    },\n    {\n      name: 'measure',\n      iconName: 'tab-linear',\n      iconLabel: 'Measure',\n      label: i18n.t('SidePanel:Measurements'),\n      secondaryLabel: i18n.t('SidePanel:Measurements'),\n      component: wrappedMeasurementPanel,\n    },\n    {\n      name: 'volumeEditionPanel',\n      iconName: 'edition-3D',\n      iconLabel: '3D Edition',\n      label: '3D Edition',\n      component: Edition3DPanel.bind(null, {\n        commandsManager,\n        extensionManager,\n        servicesManager\n      }),\n    },\n    {\n      name: 'panoramicGenerationPanel',\n      iconName: 'panoramic',\n      iconLabel: 'Panoramic Generation',\n      label: 'Panoramic',\n      component: PanoramicGenerationPanel.bind(null, {\n        commandsManager,\n        extensionManager,\n        servicesManager\n      }),\n    },\n  ];\n}\n\nexport default getPanelModule;\n","import packageJson from '../package.json';\n\nconst id = packageJson.name;\n\nexport { id };\n","import { vec3 } from 'gl-matrix';\nimport toNumber from '@ohif/core/src/utils/toNumber';\nimport { _getPerpendicularDistance } from '@ohif/core/src/utils/isDisplaySetReconstructable';\nimport calculateScanAxisNormal from '../calculateScanAxisNormal';\n\n/**\n * Checks if there is a position shift between consecutive frames\n * @param {*} previousPosition\n * @param {*} actualPosition\n * @param {*} scanAxisNormal\n * @param {*} averageSpacingBetweenFrames\n * @returns\n */\nfunction _checkSeriesPositionShift(\n  previousPosition,\n  actualPosition,\n  scanAxisNormal,\n  averageSpacingBetweenFrames\n) {\n  // predicted position should be the previous position added by the multiplication\n  // of the scanAxisNormal and the average spacing between frames\n  const predictedPosition = vec3.scaleAndAdd(\n    vec3.create(),\n    previousPosition,\n    scanAxisNormal,\n    averageSpacingBetweenFrames\n  );\n  return vec3.distance(actualPosition, predictedPosition) > averageSpacingBetweenFrames;\n}\n\n/**\n * Checks if a series has position shifts between consecutive frames\n * @param {*} instances\n * @returns\n */\nexport default function areAllImagePositionsEqual(instances: Array<any>): boolean {\n  if (!instances?.length) {\n    return false;\n  }\n  const firstImageOrientationPatient = toNumber(instances[0].ImageOrientationPatient);\n  if (!firstImageOrientationPatient) {\n    return false;\n  }\n  const scanAxisNormal = calculateScanAxisNormal(firstImageOrientationPatient);\n  const firstImagePositionPatient = toNumber(instances[0].ImagePositionPatient);\n  const lastIpp = toNumber(instances[instances.length - 1].ImagePositionPatient);\n\n  const averageSpacingBetweenFrames =\n    _getPerpendicularDistance(firstImagePositionPatient, lastIpp) / (instances.length - 1);\n\n  let previousImagePositionPatient = firstImagePositionPatient;\n  for (let i = 1; i < instances.length; i++) {\n    const instance = instances[i];\n    const imagePositionPatient = toNumber(instance.ImagePositionPatient);\n\n    if (\n      _checkSeriesPositionShift(\n        previousImagePositionPatient,\n        imagePositionPatient,\n        scanAxisNormal,\n        averageSpacingBetweenFrames\n      )\n    ) {\n      return false;\n    }\n    previousImagePositionPatient = imagePositionPatient;\n  }\n  return true;\n}\n","import { vec3 } from 'gl-matrix';\n\n/**\n * Calculates the scanAxisNormal based on a image orientation vector extract from a frame\n * @param {*} imageOrientation\n * @returns\n */\nexport default function calculateScanAxisNormal(imageOrientation) {\n  const rowCosineVec = vec3.fromValues(\n    imageOrientation[0],\n    imageOrientation[1],\n    imageOrientation[2]\n  );\n  const colCosineVec = vec3.fromValues(\n    imageOrientation[3],\n    imageOrientation[4],\n    imageOrientation[5]\n  );\n  return vec3.cross(vec3.create(), rowCosineVec, colCosineVec);\n}\n","import areAllImageDimensionsEqual from './areAllImageDimensionsEqual';\nimport areAllImageComponentsEqual from './areAllImageComponentsEqual';\nimport areAllImageOrientationsEqual from './areAllImageOrientationsEqual';\nimport areAllImagePositionsEqual from './areAllImagePositionsEqual';\nimport areAllImageSpacingEqual from './areAllImageSpacingEqual';\nimport { DisplaySetMessage, DisplaySetMessageList } from '@ohif/core';\n\n/**\n * Runs various checks in a single frame series\n * @param {*} instances\n * @param {*} warnings\n */\nexport default function checkSingleFrames(\n  instances: Array<any>,\n  messages: DisplaySetMessageList\n): void {\n  if (instances.length > 2) {\n    if (!areAllImageDimensionsEqual(instances)) {\n      messages.addMessage(DisplaySetMessage.CODES.INCONSISTENT_DIMENSIONS);\n    }\n\n    if (!areAllImageComponentsEqual(instances)) {\n      messages.addMessage(DisplaySetMessage.CODES.INCONSISTENT_COMPONENTS);\n    }\n\n    if (!areAllImageOrientationsEqual(instances)) {\n      messages.addMessage(DisplaySetMessage.CODES.INCONSISTENT_ORIENTATIONS);\n    }\n\n    if (!areAllImagePositionsEqual(instances)) {\n      messages.addMessage(DisplaySetMessage.CODES.INCONSISTENT_POSITION_INFORMATION);\n    }\n    areAllImageSpacingEqual(instances, messages);\n  }\n}\n","import toNumber from '@ohif/core/src/utils/toNumber';\n\n/**\n * Check if the frames in a series has different dimensions\n * @param {*} instances\n * @returns\n */\nexport default function areAllImageDimensionsEqual(instances: Array<any>): boolean {\n  if (!instances?.length) {\n    return false;\n  }\n  const firstImage = instances[0];\n  const firstImageRows = toNumber(firstImage.Rows);\n  const firstImageColumns = toNumber(firstImage.Columns);\n\n  for (let i = 1; i < instances.length; i++) {\n    const instance = instances[i];\n    const { Rows, Columns } = instance;\n\n    if (Rows !== firstImageRows || Columns !== firstImageColumns) {\n      return false;\n    }\n  }\n  return true;\n}\n","import toNumber from '@ohif/core/src/utils/toNumber';\n\n/**\n * Check if all voxels in series images has same number of components (samplesPerPixel)\n * @param {*} instances\n * @returns\n */\nexport default function areAllImageComponentsEqual(instances: Array<any>): boolean {\n  if (!instances?.length) {\n    return false;\n  }\n  const firstImage = instances[0];\n  const firstImageSamplesPerPixel = toNumber(firstImage.SamplesPerPixel);\n\n  for (let i = 1; i < instances.length; i++) {\n    const instance = instances[i];\n    const { SamplesPerPixel } = instance;\n\n    if (SamplesPerPixel !== firstImageSamplesPerPixel) {\n      return false;\n    }\n  }\n  return true;\n}\n","import toNumber from '@ohif/core/src/utils/toNumber';\nimport { _isSameOrientation } from '@ohif/core/src/utils/isDisplaySetReconstructable';\n\n/**\n * Check is the series has frames with different orientations\n * @param {*} instances\n * @returns\n */\nexport default function areAllImageOrientationsEqual(instances: Array<any>): boolean {\n  if (!instances?.length) {\n    return false;\n  }\n  const firstImage = instances[0];\n  const firstImageOrientationPatient = toNumber(firstImage.ImageOrientationPatient);\n\n  for (let i = 1; i < instances.length; i++) {\n    const instance = instances[i];\n    const imageOrientationPatient = toNumber(instance.ImageOrientationPatient);\n\n    if (!_isSameOrientation(imageOrientationPatient, firstImageOrientationPatient)) {\n      return false;\n    }\n  }\n  return true;\n}\n","import {\n  _getPerpendicularDistance,\n  _getSpacingIssue,\n  reconstructionIssues,\n} from '@ohif/core/src/utils/isDisplaySetReconstructable';\nimport { DisplaySetMessage } from '@ohif/core';\nimport toNumber from '@ohif/core/src/utils/toNumber';\nimport { DisplaySetMessageList } from '@ohif/core';\n\n/**\n * Checks if series has spacing issues\n * @param {*} instances\n * @param {*} warnings\n */\nexport default function areAllImageSpacingEqual(\n  instances: Array<any>,\n  messages: DisplaySetMessageList\n): void {\n  if (!instances?.length) {\n    return;\n  }\n  const firstImagePositionPatient = toNumber(instances[0].ImagePositionPatient);\n  if (!firstImagePositionPatient) {\n    return;\n  }\n  const lastIpp = toNumber(instances[instances.length - 1].ImagePositionPatient);\n\n  const averageSpacingBetweenFrames =\n    _getPerpendicularDistance(firstImagePositionPatient, lastIpp) / (instances.length - 1);\n\n  let previousImagePositionPatient = firstImagePositionPatient;\n\n  const issuesFound = [];\n  for (let i = 1; i < instances.length; i++) {\n    const instance = instances[i];\n    const imagePositionPatient = toNumber(instance.ImagePositionPatient);\n\n    const spacingBetweenFrames = _getPerpendicularDistance(\n      imagePositionPatient,\n      previousImagePositionPatient\n    );\n\n    const spacingIssue = _getSpacingIssue(spacingBetweenFrames, averageSpacingBetweenFrames);\n\n    if (spacingIssue) {\n      const issue = spacingIssue.issue;\n\n      // avoid multiple warning of the same thing\n      if (!issuesFound.includes(issue)) {\n        issuesFound.push(issue);\n        if (issue === reconstructionIssues.MISSING_FRAMES) {\n          messages.addMessage(DisplaySetMessage.CODES.MISSING_FRAMES);\n        } else if (issue === reconstructionIssues.IRREGULAR_SPACING) {\n          messages.addMessage(DisplaySetMessage.CODES.IRREGULAR_SPACING);\n        }\n      }\n      // we just want to find issues not how many\n      if (issuesFound.length > 1) {\n        break;\n      }\n    }\n    previousImagePositionPatient = imagePositionPatient;\n  }\n}\n","import sortInstancesByPosition from '@ohif/core/src/utils/sortInstancesByPosition';\nimport { constructableModalities } from '@ohif/core/src/utils/isDisplaySetReconstructable';\nimport { DisplaySetMessage, DisplaySetMessageList } from '@ohif/core';\nimport checkMultiFrame from './utils/validations/checkMultiframe';\nimport checkSingleFrames from './utils/validations/checkSingleFrames';\n/**\n * Checks if a series is reconstructable to a 3D volume.\n *\n * @param {Object[]} instances An array of `OHIFInstanceMetadata` objects.\n */\nexport default function getDisplaySetMessages(\n  instances: Array<any>,\n  isReconstructable: boolean,\n  isDynamicVolume: boolean\n): DisplaySetMessageList {\n  const messages = new DisplaySetMessageList();\n\n  if (isDynamicVolume) {\n    return messages;\n  }\n\n  if (!instances.length) {\n    messages.addMessage(DisplaySetMessage.CODES.NO_VALID_INSTANCES);\n    return;\n  }\n\n  const firstInstance = instances[0];\n  const { Modality, ImageType, NumberOfFrames } = firstInstance;\n  // Due to current requirements, LOCALIZER series doesn't have any messages\n  if (ImageType?.includes('LOCALIZER')) {\n    return messages;\n  }\n\n  if (!constructableModalities.includes(Modality)) {\n    return messages;\n  }\n\n  const isMultiframe = NumberOfFrames > 1;\n  // Can't reconstruct if all instances don't have the ImagePositionPatient.\n  if (!isMultiframe && !instances.every(instance => instance.ImagePositionPatient)) {\n    messages.addMessage(DisplaySetMessage.CODES.NO_POSITION_INFORMATION);\n  }\n\n  const sortedInstances = sortInstancesByPosition(instances);\n\n  isMultiframe\n    ? checkMultiFrame(sortedInstances[0], messages)\n    : checkSingleFrames(sortedInstances, messages);\n\n  if (!isReconstructable) {\n    messages.addMessage(DisplaySetMessage.CODES.NOT_RECONSTRUCTABLE);\n  }\n  return messages;\n}\n","import {\n  hasPixelMeasurements,\n  hasOrientation,\n  hasPosition,\n} from '@ohif/core/src/utils/isDisplaySetReconstructable';\nimport { DisplaySetMessage, DisplaySetMessageList } from '@ohif/core';\n\n/**\n * Check various multi frame issues. It calls OHIF core functions\n * @param {*} multiFrameInstance\n * @param {*} warnings\n */\nexport default function checkMultiFrame(multiFrameInstance, messages: DisplaySetMessageList): void {\n  if (!hasPixelMeasurements(multiFrameInstance)) {\n    messages.addMessage(DisplaySetMessage.CODES.MULTIFRAME_NO_PIXEL_MEASUREMENTS);\n  }\n\n  if (!hasOrientation(multiFrameInstance)) {\n    messages.addMessage(DisplaySetMessage.CODES.MULTIFRAME_NO_ORIENTATION);\n  }\n\n  if (!hasPosition(multiFrameInstance)) {\n    messages.addMessage(DisplaySetMessage.CODES.MULTIFRAME_NO_POSITION_INFORMATION);\n  }\n}\n","import ImageSet from '@ohif/core/src/classes/ImageSet';\nimport { DisplaySetMessage, DisplaySetMessageList } from '@ohif/core';\n/**\n * Default handler for a instance list with an unsupported sopClassUID\n */\nexport default function getDisplaySetsFromUnsupportedSeries(instances) {\n  const imageSet = new ImageSet(instances);\n  const messages = new DisplaySetMessageList();\n  messages.addMessage(DisplaySetMessage.CODES.UNSUPPORTED_DISPLAYSET);\n  const instance = instances[0];\n\n  imageSet.setAttributes({\n    displaySetInstanceUID: imageSet.uid, // create a local alias for the imageSet UID\n    SeriesDate: instance.SeriesDate,\n    SeriesTime: instance.SeriesTime,\n    SeriesInstanceUID: instance.SeriesInstanceUID,\n    StudyInstanceUID: instance.StudyInstanceUID,\n    SeriesNumber: instance.SeriesNumber || 0,\n    FrameRate: instance.FrameTime,\n    SOPClassUID: instance.SOPClassUID,\n    SeriesDescription: instance.SeriesDescription || '',\n    Modality: instance.Modality,\n    numImageFrames: instances.length,\n    unsupported: true,\n    SOPClassHandlerId: 'unsupported',\n    isReconstructable: false,\n    messages,\n  });\n  return [imageSet];\n}\n","import { Types, DisplaySetService, utils } from '@ohif/core';\n\nimport { id } from '../id';\n\ntype InstanceMetadata = Types.InstanceMetadata;\n\nconst SOPClassHandlerName = 'chart';\n\nconst CHART_MODALITY = 'CHT';\n\n// Private SOPClassUid for chart data\nconst ChartDataSOPClassUid = '1.9.451.13215.7.3.2.7.6.1';\n\nconst sopClassUids = [ChartDataSOPClassUid];\n\nconst makeChartDataDisplaySet = (instance, sopClassUids) => {\n  const {\n    StudyInstanceUID,\n    SeriesInstanceUID,\n    SOPInstanceUID,\n    SeriesDescription,\n    SeriesNumber,\n    SeriesDate,\n    SOPClassUID,\n  } = instance;\n\n  return {\n    Modality: CHART_MODALITY,\n    loading: false,\n    isReconstructable: false,\n    displaySetInstanceUID: utils.guid(),\n    SeriesDescription,\n    SeriesNumber,\n    SeriesDate,\n    SOPInstanceUID,\n    SeriesInstanceUID,\n    StudyInstanceUID,\n    SOPClassHandlerId: `${id}.sopClassHandlerModule.${SOPClassHandlerName}`,\n    SOPClassUID,\n    isDerivedDisplaySet: true,\n    isLoaded: true,\n    sopClassUids,\n    instance,\n    instances: [instance],\n\n    /**\n     * Adds instances to the chart displaySet, rather than creating a new one\n     * when user moves to a different workflow step and gets back to a step that\n     * recreates the chart\n     */\n    addInstances: function (instances: InstanceMetadata[], _displaySetService: DisplaySetService) {\n      this.instances.push(...instances);\n      this.instance = this.instances[this.instances.length - 1];\n\n      return this;\n    },\n  };\n};\n\nfunction getSopClassUids(instances) {\n  const uniqueSopClassUidsInSeries = new Set();\n  instances.forEach(instance => {\n    uniqueSopClassUidsInSeries.add(instance.SOPClassUID);\n  });\n  const sopClassUids = Array.from(uniqueSopClassUidsInSeries);\n\n  return sopClassUids;\n}\n\nfunction _getDisplaySetsFromSeries(instances) {\n  // If the series has no instances, stop here\n  if (!instances || !instances.length) {\n    throw new Error('No instances were provided');\n  }\n\n  const sopClassUids = getSopClassUids(instances);\n  const displaySets = instances.map(instance => {\n    if (instance.Modality === CHART_MODALITY) {\n      return makeChartDataDisplaySet(instance, sopClassUids);\n    }\n\n    throw new Error('Unsupported modality');\n  });\n\n  return displaySets;\n}\n\nconst chartHandler = {\n  name: SOPClassHandlerName,\n  sopClassUids,\n  getDisplaySetsFromSeries: instances => {\n    return _getDisplaySetsFromSeries(instances);\n  },\n};\n\nexport { chartHandler };\n","import { isImage } from '@ohif/core/src/utils/isImage';\nimport sopClassDictionary from '@ohif/core/src/utils/sopClassDictionary';\nimport ImageSet from '@ohif/core/src/classes/ImageSet';\nimport isDisplaySetReconstructable from '@ohif/core/src/utils/isDisplaySetReconstructable';\nimport { id } from './id';\nimport getDisplaySetMessages from './getDisplaySetMessages';\nimport getDisplaySetsFromUnsupportedSeries from './getDisplaySetsFromUnsupportedSeries';\nimport { chartHandler } from './SOPClassHandlers/chartSOPClassHandler';\n\nconst DEFAULT_VOLUME_LOADER_SCHEME = 'cornerstoneStreamingImageVolume';\nconst DYNAMIC_VOLUME_LOADER_SCHEME = 'cornerstoneStreamingDynamicImageVolume';\nconst sopClassHandlerName = 'stack';\nlet appContext = {};\n\nconst getDynamicVolumeInfo = instances => {\n  const { extensionManager } = appContext;\n\n  if (!extensionManager) {\n    throw new Error('extensionManager is not available');\n  }\n\n  const imageIds = instances.map(({ imageId }) => imageId);\n  const volumeLoaderUtility = extensionManager.getModuleEntry(\n    '@ohif/extension-cornerstone.utilityModule.volumeLoader'\n  );\n  const { getDynamicVolumeInfo: csGetDynamicVolumeInfo } = volumeLoaderUtility.exports;\n\n  return csGetDynamicVolumeInfo(imageIds);\n};\n\nconst isMultiFrame = instance => {\n  return instance.NumberOfFrames > 1;\n};\n\nfunction getDisplaySetInfo(instances) {\n  const dynamicVolumeInfo = getDynamicVolumeInfo(instances);\n  const { isDynamicVolume, timePoints } = dynamicVolumeInfo;\n  let displaySetInfo;\n\n  const { appConfig } = appContext;\n\n  if (isDynamicVolume) {\n    const timePoint = timePoints[0];\n    const instancesMap = new Map();\n\n    // O(n) to convert it into a map and O(1) to find each instance\n    instances.forEach(instance => instancesMap.set(instance.imageId, instance));\n\n    const firstTimePointInstances = timePoint.map(imageId => instancesMap.get(imageId));\n\n    displaySetInfo = isDisplaySetReconstructable(firstTimePointInstances, appConfig);\n  } else {\n    displaySetInfo = isDisplaySetReconstructable(instances, appConfig);\n  }\n\n  return {\n    isDynamicVolume,\n    ...displaySetInfo,\n    dynamicVolumeInfo,\n  };\n}\n\nconst makeDisplaySet = instances => {\n  const instance = instances[0];\n  const imageSet = new ImageSet(instances);\n\n  const {\n    isDynamicVolume,\n    value: isReconstructable,\n    averageSpacingBetweenFrames,\n    dynamicVolumeInfo,\n  } = getDisplaySetInfo(instances);\n\n  const volumeLoaderSchema = isDynamicVolume\n    ? DYNAMIC_VOLUME_LOADER_SCHEME\n    : DEFAULT_VOLUME_LOADER_SCHEME;\n\n  // set appropriate attributes to image set...\n  const messages = getDisplaySetMessages(instances, isReconstructable, isDynamicVolume);\n\n  imageSet.setAttributes({\n    volumeLoaderSchema,\n    displaySetInstanceUID: imageSet.uid, // create a local alias for the imageSet UID\n    SeriesDate: instance.SeriesDate,\n    SeriesTime: instance.SeriesTime,\n    SeriesInstanceUID: instance.SeriesInstanceUID,\n    StudyInstanceUID: instance.StudyInstanceUID,\n    SeriesNumber: instance.SeriesNumber || 0,\n    FrameRate: instance.FrameTime,\n    SOPClassUID: instance.SOPClassUID,\n    SeriesDescription: instance.SeriesDescription || '',\n    Modality: instance.Modality,\n    isMultiFrame: isMultiFrame(instance),\n    countIcon: isReconstructable ? 'icon-mpr' : undefined,\n    numImageFrames: instances.length,\n    SOPClassHandlerId: `${id}.sopClassHandlerModule.${sopClassHandlerName}`,\n    isReconstructable,\n    messages,\n    averageSpacingBetweenFrames: averageSpacingBetweenFrames || null,\n    isDynamicVolume,\n    dynamicVolumeInfo,\n  });\n\n  // Sort the images in this series if needed\n  const shallSort = true; //!OHIF.utils.ObjectPath.get(Meteor, 'settings.public.ui.sortSeriesByIncomingOrder');\n  if (shallSort) {\n    imageSet.sortBy((a, b) => {\n      // Sort by InstanceNumber (0020,0013)\n      return (parseInt(a.InstanceNumber) || 0) - (parseInt(b.InstanceNumber) || 0);\n    });\n  }\n\n  // Include the first image instance number (after sorted)\n  /*imageSet.setAttribute(\n    'instanceNumber',\n    imageSet.getImage(0).InstanceNumber\n  );*/\n\n  /*const isReconstructable = isDisplaySetReconstructable(series, instances);\n\n  imageSet.isReconstructable = isReconstructable.value;\n\n  if (isReconstructable.missingFrames) {\n    // TODO -> This is currently unused, but may be used for reconstructing\n    // Volumes with gaps later on.\n    imageSet.missingFrames = isReconstructable.missingFrames;\n  }*/\n\n  return imageSet;\n};\n\nconst isSingleImageModality = modality => {\n  return modality === 'CR' || modality === 'MG' || modality === 'DX';\n};\n\nfunction getSopClassUids(instances) {\n  const uniqueSopClassUidsInSeries = new Set();\n  instances.forEach(instance => {\n    uniqueSopClassUidsInSeries.add(instance.SOPClassUID);\n  });\n  const sopClassUids = Array.from(uniqueSopClassUidsInSeries);\n\n  return sopClassUids;\n}\n\n/**\n * Basic SOPClassHandler:\n * - For all Image types that are stackable, create\n *   a displaySet with a stack of images\n *\n * @param {SeriesMetadata} series The series metadata object from which the display sets will be created\n * @returns {Array} The list of display sets created for the given series object\n */\nfunction getDisplaySetsFromSeries(instances) {\n  // If the series has no instances, stop here\n  if (!instances || !instances.length) {\n    throw new Error('No instances were provided');\n  }\n\n  const displaySets = [];\n  const sopClassUids = getSopClassUids(instances);\n\n  // Search through the instances (InstanceMetadata object) of this series\n  // Split Multi-frame instances and Single-image modalities\n  // into their own specific display sets. Place the rest of each\n  // series into another display set.\n  const stackableInstances = [];\n  instances.forEach(instance => {\n    // All imaging modalities must have a valid value for sopClassUid (x00080016) or rows (x00280010)\n    if (!isImage(instance.SOPClassUID) && !instance.Rows) {\n      return;\n    }\n\n    let displaySet;\n\n    if (isMultiFrame(instance)) {\n      displaySet = makeDisplaySet([instance]);\n\n      displaySet.setAttributes({\n        sopClassUids,\n        isClip: true,\n        numImageFrames: instance.NumberOfFrames,\n        instanceNumber: instance.InstanceNumber,\n        acquisitionDatetime: instance.AcquisitionDateTime,\n      });\n      displaySets.push(displaySet);\n    } else if (isSingleImageModality(instance.Modality)) {\n      displaySet = makeDisplaySet([instance]);\n      displaySet.setAttributes({\n        sopClassUids,\n        instanceNumber: instance.InstanceNumber,\n        acquisitionDatetime: instance.AcquisitionDateTime,\n      });\n      displaySets.push(displaySet);\n    } else {\n      stackableInstances.push(instance);\n    }\n  });\n\n  if (stackableInstances.length) {\n    const displaySet = makeDisplaySet(stackableInstances);\n    displaySet.setAttribute('studyInstanceUid', instances[0].StudyInstanceUID);\n    displaySet.setAttributes({\n      sopClassUids,\n    });\n    displaySets.push(displaySet);\n  }\n\n  return displaySets;\n}\n\nconst sopClassUids = [\n  sopClassDictionary.ComputedRadiographyImageStorage,\n  sopClassDictionary.DigitalXRayImageStorageForPresentation,\n  sopClassDictionary.DigitalXRayImageStorageForProcessing,\n  sopClassDictionary.DigitalMammographyXRayImageStorageForPresentation,\n  sopClassDictionary.DigitalMammographyXRayImageStorageForProcessing,\n  sopClassDictionary.DigitalIntraOralXRayImageStorageForPresentation,\n  sopClassDictionary.DigitalIntraOralXRayImageStorageForProcessing,\n  sopClassDictionary.CTImageStorage,\n  sopClassDictionary.EnhancedCTImageStorage,\n  sopClassDictionary.LegacyConvertedEnhancedCTImageStorage,\n  sopClassDictionary.UltrasoundMultiframeImageStorage,\n  sopClassDictionary.MRImageStorage,\n  sopClassDictionary.EnhancedMRImageStorage,\n  sopClassDictionary.EnhancedMRColorImageStorage,\n  sopClassDictionary.LegacyConvertedEnhancedMRImageStorage,\n  sopClassDictionary.UltrasoundImageStorage,\n  sopClassDictionary.UltrasoundImageStorageRET,\n  sopClassDictionary.SecondaryCaptureImageStorage,\n  sopClassDictionary.MultiframeSingleBitSecondaryCaptureImageStorage,\n  sopClassDictionary.MultiframeGrayscaleByteSecondaryCaptureImageStorage,\n  sopClassDictionary.MultiframeGrayscaleWordSecondaryCaptureImageStorage,\n  sopClassDictionary.MultiframeTrueColorSecondaryCaptureImageStorage,\n  sopClassDictionary.XRayAngiographicImageStorage,\n  sopClassDictionary.EnhancedXAImageStorage,\n  sopClassDictionary.XRayRadiofluoroscopicImageStorage,\n  sopClassDictionary.EnhancedXRFImageStorage,\n  sopClassDictionary.XRay3DAngiographicImageStorage,\n  sopClassDictionary.XRay3DCraniofacialImageStorage,\n  sopClassDictionary.BreastTomosynthesisImageStorage,\n  sopClassDictionary.BreastProjectionXRayImageStorageForPresentation,\n  sopClassDictionary.BreastProjectionXRayImageStorageForProcessing,\n  sopClassDictionary.IntravascularOpticalCoherenceTomographyImageStorageForPresentation,\n  sopClassDictionary.IntravascularOpticalCoherenceTomographyImageStorageForProcessing,\n  sopClassDictionary.NuclearMedicineImageStorage,\n  sopClassDictionary.VLEndoscopicImageStorage,\n  sopClassDictionary.VideoEndoscopicImageStorage,\n  sopClassDictionary.VLMicroscopicImageStorage,\n  sopClassDictionary.VideoMicroscopicImageStorage,\n  sopClassDictionary.VLSlideCoordinatesMicroscopicImageStorage,\n  sopClassDictionary.VLPhotographicImageStorage,\n  sopClassDictionary.VideoPhotographicImageStorage,\n  sopClassDictionary.OphthalmicPhotography8BitImageStorage,\n  sopClassDictionary.OphthalmicPhotography16BitImageStorage,\n  sopClassDictionary.OphthalmicTomographyImageStorage,\n  sopClassDictionary.VLWholeSlideMicroscopyImageStorage,\n  sopClassDictionary.PositronEmissionTomographyImageStorage,\n  sopClassDictionary.EnhancedPETImageStorage,\n  sopClassDictionary.LegacyConvertedEnhancedPETImageStorage,\n  sopClassDictionary.RTImageStorage,\n  sopClassDictionary.EnhancedUSVolumeStorage,\n];\n\nfunction getSopClassHandlerModule(appContextParam) {\n  appContext = appContextParam;\n\n  return [\n    {\n      name: sopClassHandlerName,\n      sopClassUids,\n      getDisplaySetsFromSeries,\n    },\n    {\n      name: 'not-supported-display-sets-handler',\n      sopClassUids: [],\n      getDisplaySetsFromSeries: getDisplaySetsFromUnsupportedSeries,\n    },\n    {\n      name: chartHandler.name,\n      sopClassUids: chartHandler.sopClassUids,\n      getDisplaySetsFromSeries: chartHandler.getDisplaySetsFromSeries,\n    },\n  ];\n}\n\nexport default getSopClassHandlerModule;\n","import React from 'react';\n\nexport default function ToolbarDivider() {\n  return <span className=\"border-common-dark mx-2 h-8 w-4 self-center border-l\" />;\n}\n","import React, { useEffect, useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { LayoutSelector as OHIFLayoutSelector, ToolbarButton, LayoutPreset } from '@ohif/ui';\nimport { ServicesManager } from '@ohif/core';\n\nconst defaultCommonPresets = [\n  {\n    icon: 'layout-common-1x1',\n    commandOptions: {\n      numRows: 1,\n      numCols: 1,\n    },\n  },\n  {\n    icon: 'layout-common-1x2',\n    commandOptions: {\n      numRows: 1,\n      numCols: 2,\n    },\n  },\n  {\n    icon: 'layout-common-2x2',\n    commandOptions: {\n      numRows: 2,\n      numCols: 2,\n    },\n  },\n  {\n    icon: 'layout-common-2x3',\n    commandOptions: {\n      numRows: 2,\n      numCols: 3,\n    },\n  },\n];\n\nconst _areSelectorsValid = (hp, displaySets, hangingProtocolService) => {\n  if (!hp.displaySetSelectors || Object.values(hp.displaySetSelectors).length === 0) {\n    return true;\n  }\n\n  return hangingProtocolService.areRequiredSelectorsValid(\n    Object.values(hp.displaySetSelectors),\n    displaySets[0]\n  );\n};\n\nconst generateAdvancedPresets = ({ servicesManager }) => {\n  const { hangingProtocolService, viewportGridService, displaySetService } =\n    servicesManager.services;\n\n  const hangingProtocols = Array.from(hangingProtocolService.protocols.values());\n\n  const viewportId = viewportGridService.getActiveViewportId();\n\n  if (!viewportId) {\n    return [];\n  }\n  const displaySetInsaneUIDs = viewportGridService.getDisplaySetsUIDsForViewport(viewportId);\n\n  if (!displaySetInsaneUIDs) {\n    return [];\n  }\n\n  const displaySets = displaySetInsaneUIDs.map(uid => displaySetService.getDisplaySetByUID(uid));\n\n  return hangingProtocols\n    .map(hp => {\n      if (!hp.isPreset) {\n        return null;\n      }\n\n      const areValid = _areSelectorsValid(hp, displaySets, hangingProtocolService);\n\n      return {\n        icon: hp.icon,\n        title: hp.name,\n        commandOptions: {\n          protocolId: hp.id,\n        },\n        disabled: !areValid,\n      };\n    })\n    .filter(preset => preset !== null);\n};\n\nfunction ToolbarLayoutSelectorWithServices({ commandsManager, servicesManager, ...props }) {\n  const [isDisabled, setIsDisabled] = useState(false);\n\n  const handleMouseEnter = () => {\n    setIsDisabled(false);\n  };\n\n  const onSelection = useCallback(props => {\n    commandsManager.run({\n      commandName: 'setViewportGridLayout',\n      commandOptions: { ...props },\n    });\n    setIsDisabled(true);\n  }, []);\n\n  const onSelectionPreset = useCallback(props => {\n    commandsManager.run({\n      commandName: 'setHangingProtocol',\n      commandOptions: { ...props },\n    });\n    setIsDisabled(true);\n  }, []);\n\n  return (\n    <div onMouseEnter={handleMouseEnter}>\n      <LayoutSelector\n        {...props}\n        onSelection={onSelection}\n        onSelectionPreset={onSelectionPreset}\n        servicesManager={servicesManager}\n        tooltipDisabled={isDisabled}\n      />\n    </div>\n  );\n}\n\nfunction LayoutSelector({\n  rows,\n  columns,\n  className,\n  onSelection,\n  onSelectionPreset,\n  servicesManager,\n  tooltipDisabled,\n  ...rest\n}) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const { customizationService } = servicesManager.services;\n  const commonPresets = customizationService.get('commonPresets') || defaultCommonPresets;\n  const advancedPresets =\n    customizationService.get('advancedPresets') || generateAdvancedPresets({ servicesManager });\n\n  const closeOnOutsideClick = () => {\n    if (isOpen) {\n      setIsOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('click', closeOnOutsideClick);\n    return () => {\n      window.removeEventListener('click', closeOnOutsideClick);\n    };\n  }, [isOpen]);\n\n  const onInteractionHandler = () => {\n    setIsOpen(!isOpen);\n  };\n  const DropdownContent = isOpen ? OHIFLayoutSelector : null;\n\n  return (\n    <ToolbarButton\n      id=\"Layout\"\n      label=\"Layout\"\n      icon=\"tool-layout\"\n      onInteraction={onInteractionHandler}\n      className={className}\n      rounded={rest.rounded}\n      disableToolTip={tooltipDisabled}\n      dropdownContent={\n        DropdownContent !== null && (\n          <div className=\"flex \">\n            <div className=\"bg-secondary-dark flex flex-col gap-2.5 p-2\">\n              <div className=\"text-aqua-pale text-xs\">Common</div>\n\n              <div className=\"flex gap-4\">\n                {commonPresets.map((preset, index) => (\n                  <LayoutPreset\n                    key={index}\n                    classNames=\"hover:bg-primary-dark group p-1 cursor-pointer\"\n                    icon={preset.icon}\n                    commandOptions={preset.commandOptions}\n                    onSelection={onSelection}\n                  />\n                ))}\n              </div>\n\n              <div className=\"h-[2px] bg-black\"></div>\n\n              <div className=\"text-aqua-pale text-xs\">Advanced</div>\n\n              <div className=\"flex flex-col gap-2.5\">\n                {advancedPresets.map((preset, index) => (\n                  <LayoutPreset\n                    key={index + commonPresets.length}\n                    classNames=\"hover:bg-primary-dark group flex gap-2 p-1 cursor-pointer\"\n                    icon={preset.icon}\n                    title={preset.title}\n                    disabled={preset.disabled}\n                    commandOptions={preset.commandOptions}\n                    onSelection={onSelectionPreset}\n                  />\n                ))}\n              </div>\n            </div>\n\n            <div className=\"bg-primary-dark flex flex-col gap-2.5 border-l-2 border-solid border-black  p-2\">\n              <div className=\"text-aqua-pale text-xs\">Custom</div>\n              <DropdownContent\n                rows={rows}\n                columns={columns}\n                onSelection={onSelection}\n              />\n              <p className=\"text-aqua-pale text-xs leading-tight\">\n                Hover to select <br></br>rows and columns <br></br> Click to apply\n              </p>\n            </div>\n          </div>\n        )\n      }\n      isActive={isOpen}\n      type=\"toggle\"\n    />\n  );\n}\n\nLayoutSelector.propTypes = {\n  rows: PropTypes.number,\n  columns: PropTypes.number,\n  onLayoutChange: PropTypes.func,\n  servicesManager: PropTypes.instanceOf(ServicesManager),\n};\n\nLayoutSelector.defaultProps = {\n  columns: 4,\n  rows: 3,\n  onLayoutChange: () => {},\n};\n\nexport default ToolbarLayoutSelectorWithServices;\n","import { SplitButton, ToolbarButton } from '@ohif/ui';\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ToolbarSplitButtonWithServices({\n  groupId,\n  primary,\n  secondary,\n  items,\n  renderer,\n  onInteraction,\n  servicesManager,\n}) {\n  const { toolbarService } = servicesManager?.services;\n\n  /* Bubbles up individual item clicks */\n  const getSplitButtonItems = useCallback(\n    items =>\n      items.map((item, index) => ({\n        ...item,\n        index,\n        onClick: () => {\n          onInteraction({\n            groupId,\n            itemId: item.id,\n            commands: item.commands,\n          });\n        },\n      })),\n    []\n  );\n\n  const PrimaryButtonComponent =\n    toolbarService?.getButtonComponentForUIType(primary.uiType) ?? ToolbarButton;\n\n  const listItemRenderer = renderer;\n\n  return (\n    <SplitButton\n      primary={primary}\n      secondary={secondary}\n      items={getSplitButtonItems(items)}\n      groupId={groupId}\n      renderer={listItemRenderer}\n      onInteraction={onInteraction}\n      Component={props => (\n        <PrimaryButtonComponent\n          {...props}\n          servicesManager={servicesManager}\n        />\n      )}\n    />\n  );\n}\n\nToolbarSplitButtonWithServices.propTypes = {\n  isRadio: PropTypes.bool,\n  groupId: PropTypes.string,\n  primary: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    uiType: PropTypes.string,\n  }),\n  secondary: PropTypes.shape({\n    id: PropTypes.string,\n    icon: PropTypes.string.isRequired,\n    label: PropTypes.string,\n    tooltip: PropTypes.string.isRequired,\n    disabled: PropTypes.bool,\n    className: PropTypes.string,\n  }),\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      icon: PropTypes.string,\n      label: PropTypes.string,\n      tooltip: PropTypes.string,\n      disabled: PropTypes.bool,\n      className: PropTypes.string,\n    })\n  ),\n  renderer: PropTypes.func,\n  onInteraction: PropTypes.func.isRequired,\n  servicesManager: PropTypes.shape({\n    services: PropTypes.shape({\n      toolbarService: PropTypes.object,\n    }),\n  }),\n};\n\nToolbarSplitButtonWithServices.defaultProps = {\n  isRadio: false,\n  isAction: false,\n};\n\nexport default ToolbarSplitButtonWithServices;\n","import { ToolbarButton, ButtonGroup } from '@ohif/ui';\nimport React, { useCallback } from 'react';\n\nfunction ToolbarButtonGroupWithServices({ groupId, items, onInteraction, size }) {\n  const getSplitButtonItems = useCallback(\n    items =>\n      items.map((item, index) => (\n        <ToolbarButton\n          key={item.id}\n          icon={item.icon}\n          label={item.label}\n          disabled={item.disabled}\n          className={item.className}\n          disabledText={item.disabledText}\n          id={item.id}\n          size={size}\n          onClick={() => {\n            onInteraction({\n              groupId,\n              itemId: item.id,\n              commands: item.commands,\n            });\n          }}\n          // Note: this is necessary since tooltip will add\n          // default styles to the tooltip container which\n          // we don't want for groups\n          toolTipClassName=\"\"\n        />\n      )),\n    [onInteraction, groupId]\n  );\n\n  return <ButtonGroup>{getSplitButtonItems(items)}</ButtonGroup>;\n}\n\nexport default ToolbarButtonGroupWithServices;\n","import React, { useEffect, useState, useCallback, ReactElement } from 'react';\nimport { ServicesManager } from '@ohif/core';\nimport { ProgressDropdown } from '@ohif/ui';\n\nconst workflowStepsToDropdownOptions = (steps = []) =>\n  steps.map(step => ({\n    label: step.name,\n    value: step.id,\n    info: step.info,\n    activated: false,\n    completed: false,\n  }));\n\nfunction ProgressDropdownWithService({\n  servicesManager,\n}: {\n  servicesManager: ServicesManager;\n}): ReactElement {\n  const { workflowStepsService } = servicesManager.services;\n  const [activeStepId, setActiveStepId] = useState(workflowStepsService.activeWorkflowStep?.id);\n\n  const [dropdownOptions, setDropdownOptions] = useState(\n    workflowStepsToDropdownOptions(workflowStepsService.workflowSteps)\n  );\n\n  const setCurrentAndPreviousOptionsAsCompleted = useCallback(currentOption => {\n    if (currentOption.completed) {\n      return;\n    }\n\n    setDropdownOptions(prevOptions => {\n      const newOptionsState = [...prevOptions];\n      const startIndex = newOptionsState.findIndex(option => option.value === currentOption.value);\n\n      for (let i = startIndex; i >= 0; i--) {\n        const option = newOptionsState[i];\n\n        if (option.completed) {\n          break;\n        }\n\n        newOptionsState[i] = {\n          ...option,\n          completed: true,\n        };\n      }\n\n      return newOptionsState;\n    });\n  }, []);\n\n  const handleDropdownChange = useCallback(\n    ({ selectedOption }) => {\n      if (!selectedOption) {\n        return;\n      }\n\n      // TODO: Steps should be marked as completed after user has\n      // completed some action when required (not implemented)\n      setCurrentAndPreviousOptionsAsCompleted(selectedOption);\n      setActiveStepId(selectedOption.value);\n    },\n    [setCurrentAndPreviousOptionsAsCompleted]\n  );\n\n  useEffect(() => {\n    let timeoutId;\n\n    if (activeStepId) {\n      // We've used setTimeout to give it more time to update the UI since\n      // create3DFilterableFromDataArray from Texture.js may take 600+ ms to run\n      // when there is a new series to load in the next step but that resulted\n      // in the followed React error when updating the content from left/right panels\n      // and all component states were being lost:\n      //   Error: Can't perform a React state update on an unmounted component\n      workflowStepsService.setActiveWorkflowStep(activeStepId);\n    }\n\n    return () => clearTimeout(timeoutId);\n  }, [activeStepId, workflowStepsService]);\n\n  useEffect(() => {\n    const { unsubscribe: unsubStepsChanged } = workflowStepsService.subscribe(\n      workflowStepsService.EVENTS.STEPS_CHANGED,\n      () => setDropdownOptions(workflowStepsToDropdownOptions(workflowStepsService.workflowSteps))\n    );\n\n    const { unsubscribe: unsubActiveStepChanged } = workflowStepsService.subscribe(\n      workflowStepsService.EVENTS.ACTIVE_STEP_CHANGED,\n\n      () => setActiveStepId(workflowStepsService.activeWorkflowStep.id)\n    );\n\n    return () => {\n      unsubStepsChanged();\n      unsubActiveStepChanged();\n    };\n  }, [servicesManager, workflowStepsService]);\n\n  return (\n    <ProgressDropdown\n      options={dropdownOptions}\n      value={activeStepId}\n      onChange={handleDropdownChange}\n    />\n  );\n}\n\nexport default ProgressDropdownWithService;\n","import { Types } from '@ohif/ui';\nimport { Menu, SelectorProps, MenuItem, ContextMenuProps } from './types';\n\ntype ContextMenuItem = Types.ContextMenuItem;\n\n/**\n * Finds menu by menu id\n *\n * @returns Menu having the menuId\n */\nexport function findMenuById(menus: Menu[], menuId?: string): Menu {\n  if (!menuId) {\n    return;\n  }\n\n  return menus.find(menu => menu.id === menuId);\n}\n\n/**\n * Default finding menu method.  This method will go through\n * the list of menus until it finds the first one which\n * has no selector, OR has the selector, when applied to the\n * check props, return true.\n * The selectorProps are a set of provided properties which can be\n * passed into the selector function to determine when to display a menu.\n * For example, a selector function of:\n * `({displayset}) => displaySet?.SeriesDescription?.indexOf?.('Left')!==-1\n * would match series descriptions containing 'Left'.\n *\n * @param {Object[]} menus List of menus\n * @param {*} subProps\n * @returns\n */\nexport function findMenuDefault(menus: Menu[], subProps: Record<string, unknown>): Menu {\n  if (!menus) {\n    return null;\n  }\n  return menus.find(menu => !menu.selector || menu.selector(subProps.selectorProps));\n}\n\n/**\n * Finds the menu to be used for different scenarios:\n * This will first look for a subMenu with the specified subMenuId\n * Next it will look for the first menu whose selector returns true.\n *\n * @param menus - List of menus\n * @param props - root props\n * @param menuIdFilter - menu id identifier (to be considered on selection)\n *      This is intended to support other types of filtering in the future.\n */\nexport function findMenu(menus: Menu[], props?: Types.IProps, menuIdFilter?: string) {\n  const { subMenu } = props;\n\n  function* findMenuIterator() {\n    yield findMenuById(menus, menuIdFilter || subMenu);\n    yield findMenuDefault(menus, props);\n  }\n\n  const findIt = findMenuIterator();\n\n  let current = findIt.next();\n  let menu = current.value;\n\n  while (!current.done) {\n    menu = current.value;\n\n    if (menu) {\n      findIt.return();\n    }\n    current = findIt.next();\n  }\n\n  return menu;\n}\n\n/**\n * Returns the menu from a list of possible menus, based on the actual state of component props and tool data nearby.\n * This uses the findMenu command above to first find the appropriate\n * menu, and then it chooses the actual contents of that menu.\n * A menu item can be optional by implementing the 'selector',\n * which will be called with the selectorProps, and if it does not return true,\n * then the item is excluded.\n *\n * Other menus can be delegated to by setting the delegating value to\n * a string id for another menu.  That menu's content will replace the\n * current menu item (only if the item would be included).\n *\n * This allows single id menus to be chosen by id, but have varying contents\n * based on the delegated menus.\n *\n * Finally, for each item, the adaptItem call is made.  This allows\n * items to modify themselves before being displayed, such as\n * incorporating additional information from translation sources.\n * See the `test-mode` examples for details.\n *\n * @param selectorProps\n * @param {*} event event that originates the context menu\n * @param {*} menus List of menus\n * @param {*} menuIdFilter\n * @returns\n */\nexport function getMenuItems(\n  selectorProps: SelectorProps,\n  event: Event,\n  menus: Menu[],\n  menuIdFilter?: string\n): MenuItem[] | void {\n  // Include both the check props and the ...check props as one is used\n  // by the child menu and the other used by the selector function\n  const subProps = { selectorProps, event };\n\n  const menu = findMenu(menus, subProps, menuIdFilter);\n\n  if (!menu) {\n    return undefined;\n  }\n\n  if (!menu.items) {\n    console.warn('Must define items in menu', menu);\n    return [];\n  }\n\n  let menuItems = [];\n  menu.items.forEach(item => {\n    const { delegating, selector, subMenu } = item;\n\n    if (!selector || selector(selectorProps)) {\n      if (delegating) {\n        menuItems = [...menuItems, ...getMenuItems(selectorProps, event, menus, subMenu)];\n      } else {\n        const toAdd = adaptItem(item, subProps);\n        menuItems.push(toAdd);\n      }\n    }\n  });\n\n  return menuItems;\n}\n\n/**\n * Returns item adapted to be consumed by ContextMenu component\n * and then goes through the item to add action behaviour for clicking the item,\n * making it compatible with the default ContextMenu display.\n *\n * @param {Object} item\n * @param {Object} subProps\n * @returns a MenuItem that is compatible with the base ContextMenu\n *    This requires having a label and set of actions to be called.\n */\nexport function adaptItem(item: MenuItem, subProps: ContextMenuProps): ContextMenuItem {\n  const newItem: ContextMenuItem = {\n    ...item,\n    value: subProps.selectorProps?.value,\n  };\n\n  if (item.actionType === 'ShowSubMenu' && !newItem.iconRight) {\n    newItem.iconRight = 'chevron-menu';\n  }\n  if (!item.action) {\n    newItem.action = (itemRef, componentProps) => {\n      const { event = {} } = componentProps;\n      const { detail = {} } = event;\n      newItem.element = detail.element;\n\n      componentProps.onClose();\n      const action = componentProps[`on${itemRef.actionType || 'Default'}`];\n      if (action) {\n        action.call(componentProps, newItem, itemRef, subProps);\n      } else {\n        console.warn('No action defined for', itemRef);\n      }\n    };\n  }\n\n  return newItem;\n}\n","import * as ContextMenuItemsBuilder from './ContextMenuItemsBuilder';\nimport ContextMenu from '../../../../platform/ui/src/components/ContextMenu/ContextMenu';\nimport { CommandsManager, ServicesManager, Types } from '@ohif/core';\nimport { annotation as CsAnnotation } from '@cornerstonejs/tools';\nimport { Menu, MenuItem, Point, ContextMenuProps } from './types';\n\n/**\n * The context menu controller is a helper class that knows how\n * to manage context menus based on the UI Customization Service.\n * There are a few parts to this:\n *    1. Basic controls to manage displaying and hiding context menus\n *    2. Menu selection services, which use the UI customization service\n *       to choose which menu to display\n *    3. Menu item adapter services to convert menu items into displayable and actionable items.\n *\n * The format for a menu is defined in the exported type MenuItem\n */\nexport default class ContextMenuController {\n  commandsManager: CommandsManager;\n  services: Types.Services;\n  menuItems: Menu[] | MenuItem[];\n\n  constructor(servicesManager: ServicesManager, commandsManager: CommandsManager) {\n    this.services = servicesManager.services as Obj;\n    this.commandsManager = commandsManager;\n  }\n\n  closeContextMenu() {\n    this.services.uiDialogService.dismiss({ id: 'context-menu' });\n  }\n\n  /**\n   * Figures out which context menu is appropriate to display and shows it.\n   *\n   * @param contextMenuProps - the context menu properties, see ./types.ts\n   * @param viewportElement - the DOM element this context menu is related to\n   * @param defaultPointsPosition - a default position to show the context menu\n   */\n  showContextMenu(\n    contextMenuProps: ContextMenuProps,\n    viewportElement,\n    defaultPointsPosition\n  ): void {\n    if (!this.services.uiDialogService) {\n      console.warn('Unable to show dialog; no UI Dialog Service available.');\n      return;\n    }\n\n    const { event, subMenu, menuId, menus, selectorProps } = contextMenuProps;\n\n    const annotationManager = CsAnnotation.state.getAnnotationManager();\n    const { locking } = CsAnnotation;\n    const targetAnnotationId = selectorProps?.nearbyToolData?.annotationUID as string;\n    const isLocked = locking.isAnnotationLocked(\n      annotationManager.getAnnotation(targetAnnotationId)\n    );\n\n    if (isLocked) {\n      console.warn('Annotation is locked.');\n      return;\n    }\n\n    const items = ContextMenuItemsBuilder.getMenuItems(\n      selectorProps || contextMenuProps,\n      event,\n      menus,\n      menuId\n    );\n\n    this.services.uiDialogService.dismiss({ id: 'context-menu' });\n    this.services.uiDialogService.create({\n      id: 'context-menu',\n      isDraggable: false,\n      preservePosition: false,\n      preventCutOf: true,\n      defaultPosition: ContextMenuController._getDefaultPosition(\n        defaultPointsPosition,\n        event?.detail,\n        viewportElement\n      ),\n      event,\n      content: ContextMenu,\n\n      // This naming is part of the uiDialogService convention\n      // Clicking outside simply closes the dialog box.\n      onClickOutside: () => this.services.uiDialogService.dismiss({ id: 'context-menu' }),\n\n      contentProps: {\n        items,\n        selectorProps,\n        menus,\n        event,\n        subMenu,\n        eventData: event?.detail,\n\n        onClose: () => {\n          this.services.uiDialogService.dismiss({ id: 'context-menu' });\n        },\n\n        /**\n         * Displays a sub-menu, removing this menu\n         * @param {*} item\n         * @param {*} itemRef\n         * @param {*} subProps\n         */\n        onShowSubMenu: (item, itemRef, subProps) => {\n          if (!itemRef.subMenu) {\n            console.warn('No submenu defined for', item, itemRef, subProps);\n            return;\n          }\n          this.showContextMenu(\n            {\n              ...contextMenuProps,\n              menuId: itemRef.subMenu,\n            },\n            viewportElement,\n            defaultPointsPosition\n          );\n        },\n\n        // Default is to run the specified commands.\n        onDefault: (item, itemRef, subProps) => {\n          this.commandsManager.run(item, {\n            ...selectorProps,\n            ...itemRef,\n            subProps,\n          });\n        },\n      },\n    });\n  }\n\n  static getDefaultPosition = (): Point => {\n    return {\n      x: 0,\n      y: 0,\n    };\n  };\n\n  static _getEventDefaultPosition = eventDetail => ({\n    x: eventDetail && eventDetail.currentPoints.client[0],\n    y: eventDetail && eventDetail.currentPoints.client[1],\n  });\n\n  static _getElementDefaultPosition = element => {\n    if (element) {\n      const boundingClientRect = element.getBoundingClientRect();\n      return {\n        x: boundingClientRect.x,\n        y: boundingClientRect.y,\n      };\n    }\n\n    return {\n      x: undefined,\n      y: undefined,\n    };\n  };\n\n  static _getCanvasPointsPosition = (points = [], element) => {\n    const viewerPos = ContextMenuController._getElementDefaultPosition(element);\n\n    for (let pointIndex = 0; pointIndex < points.length; pointIndex++) {\n      const point = {\n        x: points[pointIndex][0] || points[pointIndex]['x'],\n        y: points[pointIndex][1] || points[pointIndex]['y'],\n      };\n      if (\n        ContextMenuController._isValidPosition(point) &&\n        ContextMenuController._isValidPosition(viewerPos)\n      ) {\n        return {\n          x: point.x + viewerPos.x,\n          y: point.y + viewerPos.y,\n        };\n      }\n    }\n  };\n\n  static _isValidPosition = (source): boolean => {\n    return source && typeof source.x === 'number' && typeof source.y === 'number';\n  };\n\n  /**\n   * Returns the context menu default position. It look for the positions of: canvasPoints (got from selected), event that triggers it, current viewport element\n   */\n  static _getDefaultPosition = (canvasPoints, eventDetail, viewerElement) => {\n    function* getPositionIterator() {\n      yield ContextMenuController._getCanvasPointsPosition(canvasPoints, viewerElement);\n      yield ContextMenuController._getEventDefaultPosition(eventDetail);\n      yield ContextMenuController._getElementDefaultPosition(viewerElement);\n      yield ContextMenuController.getDefaultPosition();\n    }\n\n    const positionIterator = getPositionIterator();\n\n    let current = positionIterator.next();\n    let position = current.value;\n\n    while (!current.done) {\n      position = current.value;\n\n      if (ContextMenuController._isValidPosition(position)) {\n        positionIterator.return();\n      }\n      current = positionIterator.next();\n    }\n\n    return position;\n  };\n}\n","const defaultContextMenu = {\n  id: 'measurementsContextMenu',\n  customizationType: 'ohif.contextMenu',\n  menus: [\n    // Get the items from the UI Customization for the menu name (and have a custom name)\n    {\n      id: 'forExistingMeasurement',\n      selector: ({ nearbyToolData }) => !!nearbyToolData,\n      items: [\n        {\n          label: 'Delete curve',\n          commands: [\n            {\n              commandName: 'deleteMeasurement',\n              // we only have support for cornerstoneTools context menu since\n              // they are svg based\n              context: 'CORNERSTONE',\n            },\n          ],\n        },\n        {\n          label: 'Add comment',\n          commands: [\n            {\n              commandName: 'setMeasurementLabel',\n            },\n          ],\n        },\n        {\n          label: 'Validate curve',\n          commands: [\n            {\n              commandName: 'closeContextMenu'\n            }\n          ]\n        }\n      ],\n    },\n  ],\n};\n\nexport default defaultContextMenu;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { VariableSizeList as List } from 'react-window';\nimport classNames from 'classnames';\nimport debounce from 'lodash.debounce';\n\nconst lineHeightPx = 20;\nconst lineHeightClassName = `leading-[${lineHeightPx}px]`;\nconst rowVerticalPaddingPx = 10;\nconst rowBottomBorderPx = 1;\nconst rowVerticalPaddingStyle = { padding: `${rowVerticalPaddingPx}px 0` };\nconst rowStyle = {\n  borderBottomWidth: `${rowBottomBorderPx}px`,\n  ...rowVerticalPaddingStyle,\n};\n\nfunction ColumnHeaders({ tagRef, vrRef, keywordRef, valueRef }) {\n  return (\n    <div\n      className={classNames(\n        'bg-secondary-dark ohif-scrollbar flex w-full flex-row overflow-y-scroll'\n      )}\n      style={rowVerticalPaddingStyle}\n    >\n      <div className=\"w-4/24 px-3\">\n        <label\n          ref={tagRef}\n          className=\"flex flex-1 select-none flex-col pl-1 text-lg text-white\"\n        >\n          <span className=\"flex flex-row items-center focus:outline-none\">Tag</span>\n        </label>\n      </div>\n      <div className=\"w-2/24 px-3\">\n        <label\n          ref={vrRef}\n          className=\"flex flex-1 select-none flex-col pl-1 text-lg text-white\"\n        >\n          <span className=\"flex flex-row items-center focus:outline-none\">VR</span>\n        </label>\n      </div>\n      <div className=\"w-6/24 px-3\">\n        <label\n          ref={keywordRef}\n          className=\"flex flex-1 select-none flex-col pl-1 text-lg text-white\"\n        >\n          <span className=\"flex flex-row items-center focus:outline-none\">Keyword</span>\n        </label>\n      </div>\n      <div className=\"w-5/24 grow px-3\">\n        <label\n          ref={valueRef}\n          className=\"flex flex-1 select-none flex-col pl-1 text-lg text-white\"\n        >\n          <span className=\"flex flex-row items-center focus:outline-none\">Value</span>\n        </label>\n      </div>\n    </div>\n  );\n}\n\nfunction DicomTagTable({ rows }) {\n  const listRef = useRef();\n  const canvasRef = useRef();\n\n  const [tagHeaderElem, setTagHeaderElem] = useState(null);\n  const [vrHeaderElem, setVrHeaderElem] = useState(null);\n  const [keywordHeaderElem, setKeywordHeaderElem] = useState(null);\n  const [valueHeaderElem, setValueHeaderElem] = useState(null);\n\n  // Here the refs are inturn stored in state to trigger a render of the table.\n  // This virtualized table does NOT render until the header is rendered because the header column widths are used to determine the row heights in the table.\n  // Therefore whenever the refs change (in particular the first time the refs are set), we want to trigger a render of the table.\n  const tagRef = elem => {\n    if (elem) {\n      setTagHeaderElem(elem);\n    }\n  };\n  const vrRef = elem => {\n    if (elem) {\n      setVrHeaderElem(elem);\n    }\n  };\n  const keywordRef = elem => {\n    if (elem) {\n      setKeywordHeaderElem(elem);\n    }\n  };\n  const valueRef = elem => {\n    if (elem) {\n      setValueHeaderElem(elem);\n    }\n  };\n\n  /**\n   * When new rows are set, scroll to the top and reset the virtualization.\n   */\n  useEffect(() => {\n    if (!listRef?.current) {\n      return;\n    }\n\n    listRef.current.scrollTo(0);\n    listRef.current.resetAfterIndex(0);\n  }, [rows]);\n\n  /**\n   * When the browser window resizes, update the row virtualization (i.e. row heights)\n   */\n  useEffect(() => {\n    const debouncedResize = debounce(() => listRef.current.resetAfterIndex(0), 100);\n\n    window.addEventListener('resize', debouncedResize);\n\n    return () => {\n      debouncedResize.cancel();\n      window.removeEventListener('resize', debouncedResize);\n    };\n  }, []);\n\n  const Row = useCallback(\n    ({ index, style }) => {\n      const row = rows[index];\n\n      return (\n        <div\n          style={{ ...style, ...rowStyle }}\n          className={classNames(\n            'hover:bg-secondary-main border-secondary-light flex w-full flex-row items-center break-all bg-black text-base transition duration-300',\n            lineHeightClassName\n          )}\n          key={`DICOMTagRow-${index}`}\n        >\n          <div className=\"w-4/24 px-3\">{row[0]}</div>\n          <div className=\"w-2/24 px-3\">{row[1]}</div>\n          <div className=\"w-6/24 px-3\">{row[2]}</div>\n          <div className=\"w-5/24 grow px-3\">{row[3]}</div>\n        </div>\n      );\n    },\n    [rows]\n  );\n\n  /**\n   * Whenever any one of the column headers is set, then the header is rendered.\n   * Here we chose the tag header.\n   */\n  const isHeaderRendered = useCallback(() => tagHeaderElem !== null, [tagHeaderElem]);\n\n  /**\n   * Get the item/row size. We use the header column widths to calculate the various row heights.\n   * @param index the row index\n   * @returns the row height\n   */\n  const getItemSize = useCallback(\n    index => {\n      const headerWidths = [\n        tagHeaderElem.offsetWidth,\n        vrHeaderElem.offsetWidth,\n        keywordHeaderElem.offsetWidth,\n        valueHeaderElem.offsetWidth,\n      ];\n\n      const context = canvasRef.current.getContext('2d');\n      context.font = getComputedStyle(canvasRef.current).font;\n\n      return rows[index]\n        .map((colText, index) => {\n          const colOneLineWidth = context.measureText(colText).width;\n          const numLines = Math.ceil(colOneLineWidth / headerWidths[index]);\n          return numLines * lineHeightPx + 2 * rowVerticalPaddingPx + rowBottomBorderPx;\n        })\n        .reduce((maxHeight, colHeight) => Math.max(maxHeight, colHeight));\n    },\n    [rows, keywordHeaderElem, tagHeaderElem, valueHeaderElem, vrHeaderElem]\n  );\n\n  return (\n    <div>\n      <canvas\n        style={{ visibility: 'hidden', position: 'absolute' }}\n        className=\"text-base\"\n        ref={canvasRef}\n      />\n      <ColumnHeaders\n        tagRef={tagRef}\n        vrRef={vrRef}\n        keywordRef={keywordRef}\n        valueRef={valueRef}\n      />\n      <div\n        className=\"relative m-auto border-2 border-black bg-black\"\n        style={{ height: '32rem' }}\n      >\n        {isHeaderRendered() && (\n          <List\n            ref={listRef}\n            height={500}\n            itemCount={rows.length}\n            itemSize={getItemSize}\n            width={'100%'}\n            className=\"ohif-scrollbar\"\n          >\n            {Row}\n          </List>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default DicomTagTable;\n","import dcmjs from 'dcmjs';\nimport moment from 'moment';\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { classes } from '@ohif/core';\nimport { InputRange, Select, Typography, InputFilterText } from '@ohif/ui';\nimport debounce from 'lodash.debounce';\n\nimport DicomTagTable from './DicomTagTable';\nimport './DicomTagBrowser.css';\n\nconst { ImageSet } = classes;\nconst { DicomMetaDictionary } = dcmjs.data;\nconst { nameMap } = DicomMetaDictionary;\n\nconst DicomTagBrowser = ({ displaySets, displaySetInstanceUID }) => {\n  // The column indices that are to be excluded during a filter of the table.\n  // At present the column indices are:\n  // 0: DICOM tag\n  // 1: VR\n  // 2: Keyword\n  // 3: Value\n  const excludedColumnIndicesForFilter: Set<number> = new Set([1]);\n\n  const [selectedDisplaySetInstanceUID, setSelectedDisplaySetInstanceUID] =\n    useState(displaySetInstanceUID);\n  const [instanceNumber, setInstanceNumber] = useState(1);\n  const [filterValue, setFilterValue] = useState('');\n\n  const onSelectChange = value => {\n    setSelectedDisplaySetInstanceUID(value.value);\n    setInstanceNumber(1);\n  };\n\n  const activeDisplaySet = displaySets.find(\n    ds => ds.displaySetInstanceUID === selectedDisplaySetInstanceUID\n  );\n\n  const isImageStack = _isImageStack(activeDisplaySet);\n  const showInstanceList = isImageStack && activeDisplaySet.images.length > 1;\n\n  const displaySetList = useMemo(() => {\n    displaySets.sort((a, b) => a.SeriesNumber - b.SeriesNumber);\n    return displaySets.map(displaySet => {\n      const {\n        displaySetInstanceUID,\n        SeriesDate,\n        SeriesTime,\n        SeriesNumber,\n        SeriesDescription,\n        Modality,\n      } = displaySet;\n\n      /* Map to display representation */\n      const dateStr = `${SeriesDate}:${SeriesTime}`.split('.')[0];\n      const date = moment(dateStr, 'YYYYMMDD:HHmmss');\n      const displayDate = date.format('ddd, MMM Do YYYY');\n\n      return {\n        value: displaySetInstanceUID,\n        label: `${SeriesNumber} (${Modality}): ${SeriesDescription}`,\n        description: displayDate,\n      };\n    });\n  }, [displaySets]);\n\n  const rows = useMemo(() => {\n    let metadata;\n    if (isImageStack) {\n      metadata = activeDisplaySet.images[instanceNumber - 1];\n    } else {\n      metadata = activeDisplaySet.instance || activeDisplaySet;\n    }\n    const tags = getSortedTags(metadata);\n    return getFormattedRowsFromTags(tags, metadata);\n  }, [instanceNumber, selectedDisplaySetInstanceUID]);\n\n  const filteredRows = useMemo(() => {\n    if (!filterValue) {\n      return rows;\n    }\n\n    const filterValueLowerCase = filterValue.toLowerCase();\n    return rows.filter(row => {\n      return row.reduce((keepRow, col, colIndex) => {\n        if (keepRow) {\n          // We are already keeping the row, why do more work so return now.\n          return keepRow;\n        }\n\n        if (excludedColumnIndicesForFilter.has(colIndex)) {\n          return keepRow;\n        }\n\n        return keepRow || col.toLowerCase().includes(filterValueLowerCase);\n      }, false);\n    });\n  }, [rows, filterValue]);\n\n  const debouncedSetFilterValue = useMemo(() => {\n    return debounce(setFilterValue, 200);\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      debouncedSetFilterValue?.cancel();\n    };\n  }, []);\n\n  return (\n    <div className=\"dicom-tag-browser-content\">\n      <div className=\"mb-6 flex flex-row items-center pl-1\">\n        <div className=\"flex w-1/2 flex-row items-center\">\n          <Typography\n            variant=\"subtitle\"\n            className=\"mr-4\"\n          >\n            Series\n          </Typography>\n          <div className=\"mr-8 grow\">\n            <Select\n              id=\"display-set-selector\"\n              isClearable={false}\n              onChange={onSelectChange}\n              options={displaySetList}\n              value={displaySetList.find(ds => ds.value === selectedDisplaySetInstanceUID)}\n              className=\"text-white\"\n            />\n          </div>\n        </div>\n        <div className=\"flex w-1/2 flex-row items-center\">\n          {showInstanceList && (\n            <Typography\n              variant=\"subtitle\"\n              className=\"mr-4\"\n            >\n              Instance Number\n            </Typography>\n          )}\n          {showInstanceList && (\n            <div className=\"grow\">\n              <InputRange\n                value={instanceNumber}\n                key={selectedDisplaySetInstanceUID}\n                onChange={value => {\n                  setInstanceNumber(parseInt(value));\n                }}\n                minValue={1}\n                maxValue={activeDisplaySet.images.length}\n                step={1}\n                inputClassName=\"w-full\"\n                labelPosition=\"left\"\n                trackColor={'#3a3f99'}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n      <div className=\"h-1 w-full bg-black\"></div>\n      <div className=\"my-3 flex w-1/2 flex-row\">\n        <InputFilterText\n          className=\"mr-8 block w-full\"\n          placeholder=\"Search metadata...\"\n          onDebounceChange={setFilterValue}\n        ></InputFilterText>\n      </div>\n      <DicomTagTable rows={filteredRows} />\n    </div>\n  );\n};\n\nfunction getFormattedRowsFromTags(tags, metadata) {\n  const rows = [];\n\n  tags.forEach(tagInfo => {\n    if (tagInfo.vr === 'SQ') {\n      rows.push([`${tagInfo.tagIndent}${tagInfo.tag}`, tagInfo.vr, tagInfo.keyword, '']);\n\n      const { values } = tagInfo;\n\n      values.forEach((item, index) => {\n        const formatedRowsFromTags = getFormattedRowsFromTags(item, metadata);\n\n        rows.push([`${item[0].tagIndent}(FFFE,E000)`, '', `Item #${index}`, '']);\n\n        rows.push(...formatedRowsFromTags);\n      });\n    } else {\n      if (tagInfo.vr === 'xs') {\n        try {\n          const tag = dcmjs.data.Tag.fromPString(tagInfo.tag).toCleanString();\n          const originalTagInfo = metadata[tag];\n          tagInfo.vr = originalTagInfo.vr;\n        } catch (error) {\n          console.error(`Failed to parse value representation for tag '${tagInfo.keyword}'`);\n        }\n      }\n      rows.push([`${tagInfo.tagIndent}${tagInfo.tag}`, tagInfo.vr, tagInfo.keyword, tagInfo.value]);\n    }\n  });\n\n  return rows;\n}\n\nfunction getSortedTags(metadata) {\n  const tagList = getRows(metadata);\n\n  // Sort top level tags, sequence groups are sorted when created.\n  _sortTagList(tagList);\n\n  return tagList;\n}\n\nfunction getRows(metadata, depth = 0) {\n  // Tag, Type, Value, Keyword\n\n  const keywords = Object.keys(metadata);\n\n  let tagIndent = '';\n\n  for (let i = 0; i < depth; i++) {\n    tagIndent += '>';\n  }\n\n  if (depth > 0) {\n    tagIndent += ' '; // If indented, add a space after the indents.\n  }\n\n  const rows = [];\n  for (let i = 0; i < keywords.length; i++) {\n    let keyword = keywords[i];\n\n    if (keyword === '_vrMap') {\n      continue;\n    }\n\n    const tagInfo = nameMap[keyword];\n\n    let value = metadata[keyword];\n\n    if (tagInfo && tagInfo.vr === 'SQ') {\n      const sequenceAsArray = toArray(value);\n\n      // Push line defining the sequence\n\n      const sequence = {\n        tag: tagInfo.tag,\n        tagIndent,\n        vr: tagInfo.vr,\n        keyword,\n        values: [],\n      };\n\n      rows.push(sequence);\n\n      if (value === null) {\n        // Type 2 Sequence\n        continue;\n      }\n\n      sequenceAsArray.forEach(item => {\n        const sequenceRows = getRows(item, depth + 1);\n\n        if (sequenceRows.length) {\n          // Sort the sequence group.\n          _sortTagList(sequenceRows);\n          sequence.values.push(sequenceRows);\n        }\n      });\n\n      continue;\n    }\n\n    if (Array.isArray(value)) {\n      if (value.length > 0 && typeof value[0] != 'object') {\n        value = value.join('\\\\');\n      }\n    }\n\n    if (typeof value === 'number') {\n      value = value.toString();\n    }\n\n    if (typeof value !== 'string') {\n      if (value === null) {\n        value = ' ';\n      } else {\n        if (typeof value === 'object') {\n          if (value.InlineBinary) {\n            value = 'Inline Binary';\n          } else if (value.BulkDataURI) {\n            value = `Bulk Data URI`; //: ${value.BulkDataURI}`;\n          } else if (value.Alphabetic) {\n            value = value.Alphabetic;\n          } else {\n            console.warn(`Unrecognised Value: ${value} for ${keyword}:`);\n            console.warn(value);\n            value = ' ';\n          }\n        } else {\n          console.warn(`Unrecognised Value: ${value} for ${keyword}:`);\n          value = ' ';\n        }\n      }\n    }\n\n    // tag / vr/ keyword/ value\n\n    // Remove retired tags\n    keyword = keyword.replace('RETIRED_', '');\n    if (tagInfo) {\n      rows.push({\n        tag: tagInfo.tag,\n        tagIndent,\n        vr: tagInfo.vr,\n        keyword,\n        value,\n      });\n    } else {\n      // skip properties without hex tag numbers\n      const regex = /[0-9A-Fa-f]{6}/g;\n      if (keyword.match(regex)) {\n        const tag = `(${keyword.substring(0, 4)},${keyword.substring(4, 8)})`;\n        rows.push({\n          tag,\n          tagIndent,\n          vr: '',\n          keyword: 'Private Tag',\n          value,\n        });\n      }\n    }\n  }\n\n  return rows;\n}\n\nfunction _isImageStack(displaySet) {\n  return displaySet instanceof ImageSet;\n}\n\nfunction toArray(objectOrArray) {\n  return Array.isArray(objectOrArray) ? objectOrArray : [objectOrArray];\n}\n\nfunction _sortTagList(tagList) {\n  tagList.sort((a, b) => {\n    if (a.tag < b.tag) {\n      return -1;\n    }\n\n    return 1;\n  });\n}\n\nexport default DicomTagBrowser;\n","import { HangingProtocolService, StateSyncService, Types } from '@ohif/core';\n\nexport type ReturnType = {\n  hangingProtocolStageIndexMap: Record<string, Types.HangingProtocol.HPInfo>;\n  viewportGridStore: Record<string, unknown>;\n  displaySetSelectorMap: Record<string, string>;\n};\n\n/**\n * Calculates a set of state information for hanging protocols and viewport grid\n * which defines the currently applied hanging protocol state.\n * @param state is the viewport grid state\n * @param syncService is the state sync service to use for getting existing state\n * @returns Set of states that can be applied to the state sync to remember\n *   the current view state.\n */\nconst reuseCachedLayout = (\n  state,\n  hangingProtocolService: HangingProtocolService,\n  syncService: StateSyncService,\n  displaySetsCache: string[],\n): ReturnType => {\n  console.log('HP - REUSE CACHED LAYOUT', state, hangingProtocolService, syncService, displaySetsCache)\n  const { activeViewportId } = state;\n  const { protocol } = hangingProtocolService.getActiveProtocol();\n\n  if (!protocol) {\n    return;\n  }\n\n  const hpInfo = hangingProtocolService.getState();\n  const { protocolId, stageIndex, activeStudyUID } = hpInfo;\n\n  const syncState = syncService.getState();\n  const viewportGridStore = { ...syncState.viewportGridStore };\n  const displaySetSelectorMap = { ...syncState.displaySetSelectorMap };\n\n  const stage = protocol.stages[stageIndex];\n  const storeId = `${activeStudyUID}:${protocolId}:${stageIndex}`;\n  const cacheId = `${activeStudyUID}:${protocolId}`;\n  const hangingProtocolStageIndexMap = {\n    ...syncState.hangingProtocolStageIndexMap,\n  };\n  const { rows, columns } = stage.viewportStructure.properties;\n  const custom =\n    stage.viewports.length !== state.viewports.size ||\n    state.layout.numRows !== rows ||\n    state.layout.numCols !== columns;\n\n  hangingProtocolStageIndexMap[cacheId] = hpInfo;\n\n  if (storeId && custom) {\n    viewportGridStore[storeId] = { ...state };\n  }\n\n  state.viewports.forEach((viewport, viewportId) => {\n    const { displaySetOptions, displaySetInstanceUIDs } = viewport;\n    if (!displaySetOptions) {\n      return;\n    }\n    for (let i = 0; i < displaySetOptions.length; i++) {\n      const displaySetUID = displaySetInstanceUIDs[i];\n      if (!displaySetUID || !displaySetsCache.includes(displaySetUID)) {\n        continue;\n      }\n      if (viewportId === activeViewportId && i === 0) {\n        displaySetSelectorMap[`${activeStudyUID}:activeDisplaySet:0`] = displaySetUID;\n      }\n      if (displaySetOptions[i]?.id) {\n        displaySetSelectorMap[\n          `${activeStudyUID}:${displaySetOptions[i].id}:${\n            displaySetOptions[i].matchedDisplaySetsIndex || 0\n          }`\n        ] = displaySetUID;\n      }\n    }\n  });\n\n  return {\n    hangingProtocolStageIndexMap,\n    viewportGridStore,\n    displaySetSelectorMap,\n  };\n};\n\nexport default reuseCachedLayout;\n","import { StateSyncService } from '@ohif/core';\n\n/**\n * This find or create viewport is paired with the reduce results from\n * below, and the action of this viewport is to look for previously filled\n * viewports, and to reuse by position id.  If there is no filled viewport,\n * then one can be re-used from the display set if it isn't going to be displayed.\n * @param hangingProtocolService - bound parameter supplied before using this\n * @param viewportsByPosition - bound parameter supplied before using this\n * @param position - the position in the grid to retrieve\n * @param positionId - the current position on screen to retrieve\n * @param options - the set of options used, so that subsequent calls can\n *                  store state that is reset by the setLayout.\n *                  This class uses the options to store the already viewed\n *                  display sets, filling it initially with the pre-existing viewports.\n */\nexport const findOrCreateViewport = (\n  hangingProtocolService,\n  isHangingProtocolLayout,\n  viewportsByPosition,\n  position: number,\n  positionId: string,\n  options: Record<string, unknown>\n) => {\n  const byPositionViewport = viewportsByPosition?.[positionId];\n  if (byPositionViewport) {\n    return { ...byPositionViewport };\n  }\n  const { protocolId, stageIndex } = hangingProtocolService.getState();\n\n  // Setup the initial in display correctly for initial view/select\n  if (!options.inDisplay) {\n    options.inDisplay = [...viewportsByPosition.initialInDisplay];\n  }\n\n  // See if there is a default viewport for new views\n  const missing = hangingProtocolService.getMissingViewport(\n    isHangingProtocolLayout ? protocolId : 'default',\n    stageIndex,\n    options\n  );\n  if (missing) {\n    const displaySetInstanceUIDs = missing.displaySetsInfo.map(it => it.displaySetInstanceUID);\n    options.inDisplay.push(...displaySetInstanceUIDs);\n    return {\n      displaySetInstanceUIDs,\n      displaySetOptions: missing.displaySetsInfo.map(it => it.displaySetOptions),\n      viewportOptions: {\n        ...missing.viewportOptions,\n      },\n    };\n  }\n\n  // and lastly if there is no default viewport, then we see if we can grab the\n  // viewportsByPosition at the position index and use that\n  // const candidate = Object.values(viewportsByPosition)[position];\n\n  // // if it has something to display, then we can use it\n  // return candidate?.displaySetInstanceUIDs ? candidate : {};\n  return {};\n};\n\n/**\n * Records the information on what viewports are displayed in which position.\n * Also records what instances from the existing positions are going to be in\n * view initially.\n * @param state is the viewport grid state\n * @param syncService is the state sync service to use for getting existing state\n * @returns Set of states that can be applied to the state sync to remember\n *   the current view state.\n */\nconst findViewportsByPosition = (\n  state,\n  { numRows, numCols },\n  syncService: StateSyncService\n): Record<string, Record<string, unknown>> => {\n  const { viewports } = state;\n  const syncState = syncService.getState();\n  const viewportsByPosition = { ...syncState.viewportsByPosition };\n  const initialInDisplay = [];\n\n  viewports.forEach(viewport => {\n    if (viewport.positionId) {\n      const storedViewport = {\n        ...viewport,\n        viewportOptions: { ...viewport.viewportOptions },\n      };\n      viewportsByPosition[viewport.positionId] = storedViewport;\n    }\n  });\n\n  for (let row = 0; row < numRows; row++) {\n    for (let col = 0; col < numCols; col++) {\n      const positionId = `${col}-${row}`;\n      const viewport = viewportsByPosition[positionId];\n      if (viewport?.displaySetInstanceUIDs) {\n        initialInDisplay.push(...viewport.displaySetInstanceUIDs);\n      }\n    }\n  }\n\n  // Store the initially displayed elements\n  viewportsByPosition.initialInDisplay = initialInDisplay;\n\n  return { viewportsByPosition };\n};\n\nexport default findViewportsByPosition;\n","import { ServicesManager, utils, Types } from '@ohif/core';\n\nimport { ContextMenuController, defaultContextMenu } from './CustomizableContextMenu';\nimport DicomTagBrowser from './DicomTagBrowser/DicomTagBrowser';\nimport reuseCachedLayouts from './utils/reuseCachedLayouts';\nimport findViewportsByPosition, {\n  findOrCreateViewport as layoutFindOrCreate,\n} from './findViewportsByPosition';\n\nimport { ContextMenuProps } from './CustomizableContextMenu/types';\nimport { NavigateHistory } from './types/commandModuleTypes';\nimport { history } from '@ohif/app';\n\nconst { subscribeToNextViewportGridChange } = utils;\n\nexport type HangingProtocolParams = {\n  protocolId?: string;\n  stageIndex?: number;\n  activeStudyUID?: string;\n  stageId?: string;\n  reset?: false;\n};\n\nexport type UpdateViewportDisplaySetParams = {\n  direction: number;\n  excludeNonImageModalities?: boolean;\n};\n\nconst commandsModule = ({\n  servicesManager,\n  commandsManager,\n}: Types.Extensions.ExtensionParams): Types.Extensions.CommandsModule => {\n  const {\n    customizationService,\n    measurementService,\n    hangingProtocolService,\n    uiNotificationService,\n    viewportGridService,\n    displaySetService,\n    stateSyncService,\n  } = (servicesManager as ServicesManager).services;\n\n  // Define a context menu controller for use with any context menus\n  const contextMenuController = new ContextMenuController(servicesManager, commandsManager);\n\n  const actions = {\n    /**\n     * Show the context menu.\n     * @param options.menuId defines the menu name to lookup, from customizationService\n     * @param options.defaultMenu contains the default menu set to use\n     * @param options.element is the element to show the menu within\n     * @param options.event is the event that caused the context menu\n     * @param options.selectorProps is the set of selection properties to use\n     */\n    showContextMenu: (options: ContextMenuProps) => {\n      const {\n        menuCustomizationId,\n        element,\n        event,\n        selectorProps,\n        defaultPointsPosition = [],\n      } = options;\n\n      const optionsToUse = { ...options };\n\n      if (menuCustomizationId) {\n        Object.assign(\n          optionsToUse,\n          customizationService.get(menuCustomizationId, defaultContextMenu)\n        );\n      }\n\n      // TODO - make the selectorProps richer by including the study metadata and display set.\n      const { protocol, stage } = hangingProtocolService.getActiveProtocol();\n      optionsToUse.selectorProps = {\n        event,\n        protocol,\n        stage,\n        ...selectorProps,\n      };\n\n      contextMenuController.showContextMenu(optionsToUse, element, defaultPointsPosition);\n    },\n\n    /** Close a context menu currently displayed */\n    closeContextMenu: () => {\n      contextMenuController.closeContextMenu();\n    },\n\n    displayNotification: ({ text, title, type }) => {\n      uiNotificationService.show({\n        title: title,\n        message: text,\n        type: type,\n      });\n    },\n    clearMeasurements: () => {\n      measurementService.clear();\n    },\n\n    /**\n     *  Sets the specified protocol\n     *    1. Records any existing state using the viewport grid service\n     *    2. Finds the destination state - this can be one of:\n     *       a. The specified protocol stage\n     *       b. An alternate (toggled or restored) protocol stage\n     *       c. A restored custom layout\n     *    3. Finds the parameters for the specified state\n     *       a. Gets the displaySetSelectorMap\n     *       b. Gets the map by position\n     *       c. Gets any toggle mapping to map position to/from current view\n     *    4. If restore, then sets layout\n     *       a. Maps viewport position by currently displayed viewport map id\n     *       b. Uses toggle information to map display set id\n     *    5. Else applies the hanging protocol\n     *       a. HP Service is provided displaySetSelectorMap\n     *       b. HP Service will throw an exception if it isn't applicable\n     * @param options - contains information on the HP to apply\n     * @param options.activeStudyUID - the updated study to apply the HP to\n     * @param options.protocolId - the protocol ID to change to\n     * @param options.stageId - the stageId to apply\n     * @param options.stageIndex - the index of the stage to go to.\n     * @param options.reset - flag to indicate if the HP should be reset to its original and not restored to a previous state\n     */\n    setHangingProtocol: ({\n      activeStudyUID = '',\n      protocolId,\n      stageId,\n      stageIndex,\n      reset = false,\n    }: HangingProtocolParams): boolean => {\n      try {\n        // Stores in the state the display set selector id to displaySetUID mapping\n        // Pass in viewportId for the active viewport.  This item will get set as\n        // the activeViewportId\n        const state = viewportGridService.getState();\n        const hpInfo = hangingProtocolService.getState();\n        const displaySetServiceCached = Array.from(displaySetService.getDisplaySetCache().entries()).map(e => {return e[0]})\n        const stateSyncReduce = reuseCachedLayouts(state, hangingProtocolService, stateSyncService, displaySetServiceCached);\n        console.log('HP - STATE SYNC REDUCE', stateSyncReduce)\n        const { hangingProtocolStageIndexMap, viewportGridStore, displaySetSelectorMap } =\n          stateSyncReduce;\n\n        if (!protocolId) {\n          // Reuse the previous protocol id, and optionally stage\n          protocolId = hpInfo.protocolId;\n          if (stageId === undefined && stageIndex === undefined) {\n            stageIndex = hpInfo.stageIndex;\n          }\n        } else if (stageIndex === undefined && stageId === undefined) {\n          // Re-set the same stage as was previously used\n          const hangingId = `${activeStudyUID || hpInfo.activeStudyUID}:${protocolId}`;\n          stageIndex = hangingProtocolStageIndexMap[hangingId]?.stageIndex;\n        }\n\n        const useStageIdx =\n          stageIndex ??\n          hangingProtocolService.getStageIndex(protocolId, {\n            stageId,\n            stageIndex,\n          });\n\n        if (activeStudyUID) {\n          hangingProtocolService.setActiveStudyUID(activeStudyUID);\n        }\n\n        const storedHanging = `${hangingProtocolService.getState().activeStudyUID}:${protocolId}:${\n          useStageIdx || 0\n        }`;\n\n        const restoreProtocol = !reset && viewportGridStore[storedHanging];\n\n        if (\n          protocolId === hpInfo.protocolId &&\n          useStageIdx === hpInfo.stageIndex &&\n          !activeStudyUID\n        ) {\n          // Clear the HP setting to reset them\n          hangingProtocolService.setProtocol(protocolId, {\n            stageId,\n            stageIndex: useStageIdx,\n          });\n        } else {\n          //GO HERE\n          hangingProtocolService.setProtocol(protocolId, {\n            displaySetSelectorMap,\n            stageId,\n            stageIndex: useStageIdx,\n            restoreProtocol,\n          });\n          if (restoreProtocol) {\n            viewportGridService.set(viewportGridStore[storedHanging]);\n          }\n        }\n        // Do this after successfully applying the update\n        // Note, don't store the active display set - it is only needed while\n        // changing display sets.  This causes jump to measurement to fail on\n        // multi-study display.\n        delete displaySetSelectorMap[\n          `${activeStudyUID || hpInfo.activeStudyUID}:activeDisplaySet:0`\n        ];\n        stateSyncService.store(stateSyncReduce);\n        return true;\n      } catch (e) {\n        console.error(e);\n        uiNotificationService.show({\n          title: 'Apply Hanging Protocol',\n          message: 'The hanging protocol could not be applied.',\n          type: 'error',\n          duration: 3000,\n        });\n        return false;\n      }\n    },\n\n    toggleHangingProtocol: ({ protocolId, stageIndex }: HangingProtocolParams): boolean => {\n      const {\n        protocol,\n        stageIndex: desiredStageIndex,\n        activeStudy,\n      } = hangingProtocolService.getActiveProtocol();\n      const { toggleHangingProtocol } = stateSyncService.getState();\n      const storedHanging = `${activeStudy.StudyInstanceUID}:${protocolId}:${stageIndex | 0}`;\n      if (\n        protocol.id === protocolId &&\n        (stageIndex === undefined || stageIndex === desiredStageIndex)\n      ) {\n        // Toggling off - restore to previous state\n        const previousState = toggleHangingProtocol[storedHanging] || {\n          protocolId: 'default',\n        };\n        return actions.setHangingProtocol(previousState);\n      } else {\n        stateSyncService.store({\n          toggleHangingProtocol: {\n            ...toggleHangingProtocol,\n            [storedHanging]: {\n              protocolId: protocol.id,\n              stageIndex: desiredStageIndex,\n            },\n          },\n        });\n        //GO HERE\n        return actions.setHangingProtocol({\n          protocolId,\n          stageIndex,\n          reset: true,\n        });\n      }\n    },\n\n    deltaStage: ({ direction }) => {\n      const { protocolId, stageIndex: oldStageIndex } = hangingProtocolService.getState();\n      const { protocol } = hangingProtocolService.getActiveProtocol();\n      for (\n        let stageIndex = oldStageIndex + direction;\n        stageIndex >= 0 && stageIndex < protocol.stages.length;\n        stageIndex += direction\n      ) {\n        if (protocol.stages[stageIndex].status !== 'disabled') {\n          return actions.setHangingProtocol({\n            protocolId,\n            stageIndex,\n          });\n        }\n      }\n      uiNotificationService.show({\n        title: 'Change Stage',\n        message: 'The hanging protocol has no more applicable stages',\n        type: 'info',\n        duration: 3000,\n      });\n    },\n\n    /**\n     * Changes the viewport grid layout in terms of the MxN layout.\n     */\n    setViewportGridLayout: ({ numRows, numCols, isHangingProtocolLayout = false }) => {\n      const { protocol } = hangingProtocolService.getActiveProtocol();\n      const onLayoutChange = protocol.callbacks?.onLayoutChange;\n      if (commandsManager.run(onLayoutChange, { numRows, numCols }) === false) {\n        console.log('setViewportGridLayout running', onLayoutChange, numRows, numCols);\n        // Don't apply the layout if the run command returns false\n        return;\n      }\n\n      const completeLayout = () => {\n        const state = viewportGridService.getState();\n        const stateReduce = findViewportsByPosition(state, { numRows, numCols }, stateSyncService);\n        const findOrCreateViewport = layoutFindOrCreate.bind(\n          null,\n          hangingProtocolService,\n          isHangingProtocolLayout,\n          stateReduce.viewportsByPosition\n        );\n\n        viewportGridService.setLayout({\n          numRows,\n          numCols,\n          findOrCreateViewport,\n          isHangingProtocolLayout,\n        });\n        stateSyncService.store(stateReduce);\n      };\n      // Need to finish any work in the callback\n      window.setTimeout(completeLayout, 0);\n    },\n\n    toggleOneUpCustom() {\n      const viewportGridState = viewportGridService.getState();\n      const { activeViewportId, viewports, layout, isHangingProtocolLayout } = viewportGridState;\n      const { displaySetInstanceUIDs, displaySetOptions, viewportOptions } =\n        viewports.get(activeViewportId);\n\n      console.log('DoubleClick - TOGGLE ONE UP', viewportOptions);\n      //Disable double click zoom for other volumes than 3d volume\n      // if(viewportOptions.toolGroupId !== 'volume3d') {\n      //   console.warn('DOUBLE_CLICK::EVENT::WARNING : Double click focus disabled for other window than 3D volume one');\n      //   return;\n      // }\n\n      if (layout.numCols === 1 && layout.numRows === 1) {\n        // The viewer is in one-up. Check if there is a state to restore/toggle back to.\n        const { toggleOneUpViewportGridStore } = stateSyncService.getState();\n\n        if (!toggleOneUpViewportGridStore.layout) {\n          return;\n        }\n        // There is a state to toggle back to. The viewport that was\n        // originally toggled to one up was the former active viewport.\n        const viewportIdToUpdate = toggleOneUpViewportGridStore.activeViewportId;\n\n        // We are restoring the previous layout but taking into the account that\n        // the current one up viewport might have a new displaySet dragged and dropped on it.\n        // updatedViewportsViaHP below contains the viewports applicable to the HP that existed\n        // prior to the toggle to one-up - including the updated viewports if a display\n        // set swap were to have occurred.\n        const updatedViewportsViaHP =\n          displaySetInstanceUIDs.length > 1\n            ? []\n            : displaySetInstanceUIDs\n                .map(displaySetInstanceUID =>\n                  hangingProtocolService.getViewportsRequireUpdate(\n                    viewportIdToUpdate,\n                    displaySetInstanceUID,\n                    isHangingProtocolLayout\n                  )\n                )\n                .flat();\n\n        // findOrCreateViewport returns either one of the updatedViewportsViaHP\n        // returned from the HP service OR if there is not one from the HP service then\n        // simply returns what was in the previous state for a given position in the layout.\n        const findOrCreateViewport = (position: number, positionId: string) => {\n          // Find the viewport for the given position prior to the toggle to one-up.\n          const preOneUpViewport = Array.from(toggleOneUpViewportGridStore.viewports.values()).find(\n            viewport => viewport.positionId === positionId\n          );\n\n          // Use the viewport id from before the toggle to one-up to find any updates to the viewport.\n          const viewport = updatedViewportsViaHP.find(\n            viewport => viewport.viewportId === preOneUpViewport.viewportId\n          );\n\n          return viewport\n            ? // Use the applicable viewport from the HP updated viewports\n              { viewportOptions, displaySetOptions, ...viewport }\n            : // Use the previous viewport for the given position\n              preOneUpViewport;\n        };\n\n        const layoutOptions = viewportGridService.getLayoutOptionsFromState(\n          toggleOneUpViewportGridStore\n        );\n\n        // Restore the previous layout including the active viewport.\n        viewportGridService.setLayout({\n          numRows: toggleOneUpViewportGridStore.layout.numRows,\n          numCols: toggleOneUpViewportGridStore.layout.numCols,\n          activeViewportId: viewportIdToUpdate,\n          layoutOptions,\n          findOrCreateViewport,\n          isHangingProtocolLayout: true,\n        });\n      } else {\n        // We are not in one-up, so toggle to one up.\n\n        // Store the current viewport grid state so we can toggle it back later.\n        stateSyncService.store({\n          toggleOneUpViewportGridStore: viewportGridState,\n        });\n\n        // This findOrCreateViewport only return one viewport - the active\n        // one being toggled to one up.\n        const findOrCreateViewport = () => {\n          return {\n            displaySetInstanceUIDs,\n            displaySetOptions,\n            viewportOptions,\n          };\n        };\n\n        // Set the layout to be 1x1/one-up.\n        viewportGridService.setLayout({\n          numRows: 1,\n          numCols: 1,\n          findOrCreateViewport,\n          isHangingProtocolLayout: true,\n        });\n\n        // Subscribe to ANY (i.e. manual and hanging protocol) layout changes so that\n        // any grid layout state to toggle to from one up is cleared. This is performed on\n        // a timeout to avoid clearing the state for the actual to one up change.\n        // Whenever the next layout change event is fired, the subscriptions are unsubscribed.\n        /* const clearToggleOneUpViewportGridStore = () => {\n          const toggleOneUpViewportGridStore = {};\n          stateSyncService.store({\n            toggleOneUpViewportGridStore,\n          });\n        };\n\n        subscribeToNextViewportGridChange(viewportGridService, clearToggleOneUpViewportGridStore);*/\n      }\n    },\n\n    toggleOneUp() {\n      const viewportGridState = viewportGridService.getState();\n      const { activeViewportId, viewports, layout, isHangingProtocolLayout } = viewportGridState;\n      const { displaySetInstanceUIDs, displaySetOptions, viewportOptions } =\n        viewports.get(activeViewportId);\n\n      if (layout.numCols === 1 && layout.numRows === 1) {\n        // The viewer is in one-up. Check if there is a state to restore/toggle back to.\n        const { toggleOneUpViewportGridStore } = stateSyncService.getState();\n\n        if (!toggleOneUpViewportGridStore.layout) {\n          return;\n        }\n        // There is a state to toggle back to. The viewport that was\n        // originally toggled to one up was the former active viewport.\n        const viewportIdToUpdate = toggleOneUpViewportGridStore.activeViewportId;\n\n        // We are restoring the previous layout but taking into the account that\n        // the current one up viewport might have a new displaySet dragged and dropped on it.\n        // updatedViewportsViaHP below contains the viewports applicable to the HP that existed\n        // prior to the toggle to one-up - including the updated viewports if a display\n        // set swap were to have occurred.\n        const updatedViewportsViaHP =\n          displaySetInstanceUIDs.length > 1\n            ? []\n            : displaySetInstanceUIDs\n                .map(displaySetInstanceUID =>\n                  hangingProtocolService.getViewportsRequireUpdate(\n                    viewportIdToUpdate,\n                    displaySetInstanceUID,\n                    isHangingProtocolLayout\n                  )\n                )\n                .flat();\n\n        // findOrCreateViewport returns either one of the updatedViewportsViaHP\n        // returned from the HP service OR if there is not one from the HP service then\n        // simply returns what was in the previous state for a given position in the layout.\n        const findOrCreateViewport = (position: number, positionId: string) => {\n          // Find the viewport for the given position prior to the toggle to one-up.\n          const preOneUpViewport = Array.from(toggleOneUpViewportGridStore.viewports.values()).find(\n            viewport => viewport.positionId === positionId\n          );\n\n          // Use the viewport id from before the toggle to one-up to find any updates to the viewport.\n          const viewport = updatedViewportsViaHP.find(\n            viewport => viewport.viewportId === preOneUpViewport.viewportId\n          );\n\n          return viewport\n            ? // Use the applicable viewport from the HP updated viewports\n              { viewportOptions, displaySetOptions, ...viewport }\n            : // Use the previous viewport for the given position\n              preOneUpViewport;\n        };\n\n        const layoutOptions = viewportGridService.getLayoutOptionsFromState(\n          toggleOneUpViewportGridStore\n        );\n\n        // Restore the previous layout including the active viewport.\n        viewportGridService.setLayout({\n          numRows: toggleOneUpViewportGridStore.layout.numRows,\n          numCols: toggleOneUpViewportGridStore.layout.numCols,\n          activeViewportId: viewportIdToUpdate,\n          layoutOptions,\n          findOrCreateViewport,\n          isHangingProtocolLayout: true,\n        });\n      } else {\n        // We are not in one-up, so toggle to one up.\n\n        // Store the current viewport grid state so we can toggle it back later.\n        stateSyncService.store({\n          toggleOneUpViewportGridStore: viewportGridState,\n        });\n\n        // This findOrCreateViewport only return one viewport - the active\n        // one being toggled to one up.\n        const findOrCreateViewport = () => {\n          return {\n            displaySetInstanceUIDs,\n            displaySetOptions,\n            viewportOptions,\n          };\n        };\n\n        // Set the layout to be 1x1/one-up.\n        viewportGridService.setLayout({\n          numRows: 1,\n          numCols: 1,\n          findOrCreateViewport,\n          isHangingProtocolLayout: true,\n        });\n\n        // Subscribe to ANY (i.e. manual and hanging protocol) layout changes so that\n        // any grid layout state to toggle to from one up is cleared. This is performed on\n        // a timeout to avoid clearing the state for the actual to one up change.\n        // Whenever the next layout change event is fired, the subscriptions are unsubscribed.\n        const clearToggleOneUpViewportGridStore = () => {\n          const toggleOneUpViewportGridStore = {};\n          stateSyncService.store({\n            toggleOneUpViewportGridStore,\n          });\n        };\n\n        subscribeToNextViewportGridChange(viewportGridService, clearToggleOneUpViewportGridStore);\n      }\n    },\n\n    /**\n     * Exposes the browser history navigation used by OHIF. This command can be used to either replace or\n     * push a new entry into the browser history. For example, the following will replace the current\n     * browser history entry with the specified relative URL which changes the study displayed to the\n     * study with study instance UID 1.2.3. Note that as a result of using `options.replace = true`, the\n     * page prior to invoking this command cannot be returned to via the browser back button.\n     *\n     * navigateHistory({\n     *   to: 'viewer?StudyInstanceUIDs=1.2.3',\n     *   options: { replace: true },\n     * });\n     *\n     * @param historyArgs - arguments for the history function;\n     *                      the `to` property is the URL;\n     *                      the `options.replace` is a boolean indicating if the current browser history entry\n     *                      should be replaced or a new entry pushed onto the history (stack); the default value\n     *                      for `replace` is false\n     */\n    navigateHistory(historyArgs: NavigateHistory) {\n      history.navigate(historyArgs.to, historyArgs.options);\n    },\n\n    openDICOMTagViewer() {\n      const { activeViewportId, viewports } = viewportGridService.getState();\n      const activeViewportSpecificData = viewports.get(activeViewportId);\n      const { displaySetInstanceUIDs } = activeViewportSpecificData;\n\n      const displaySets = displaySetService.activeDisplaySets;\n      const { UIModalService } = servicesManager.services;\n\n      const displaySetInstanceUID = displaySetInstanceUIDs[0];\n      UIModalService.show({\n        content: DicomTagBrowser,\n        contentProps: {\n          displaySets,\n          displaySetInstanceUID,\n          onClose: UIModalService.hide,\n        },\n        containerDimensions: 'w-[70%] max-w-[900px]',\n        title: 'DICOM Tag Browser',\n      });\n    },\n\n    /**\n     * Toggle viewport overlay (the information panel shown on the four corners\n     * of the viewport)\n     * @see ViewportOverlay and CustomizableViewportOverlay components\n     */\n    toggleOverlays: () => {\n      const overlays = document.getElementsByClassName('viewport-overlay');\n      for (let i = 0; i < overlays.length; i++) {\n        overlays.item(i).classList.toggle('hidden');\n      }\n    },\n\n    scrollActiveThumbnailIntoView: () => {\n      const { activeViewportId, viewports } = viewportGridService.getState();\n\n      const activeViewport = viewports.get(activeViewportId);\n      const activeDisplaySetInstanceUID = activeViewport.displaySetInstanceUIDs[0];\n\n      const thumbnailList = document.querySelector('#ohif-thumbnail-list');\n\n      if (!thumbnailList) {\n        return;\n      }\n\n      const thumbnailListBounds = thumbnailList.getBoundingClientRect();\n\n      const thumbnail = document.querySelector(`#thumbnail-${activeDisplaySetInstanceUID}`);\n\n      if (!thumbnail) {\n        return;\n      }\n\n      const thumbnailBounds = thumbnail.getBoundingClientRect();\n\n      // This only handles a vertical thumbnail list.\n      if (\n        thumbnailBounds.top >= thumbnailListBounds.top &&\n        thumbnailBounds.top <= thumbnailListBounds.bottom\n      ) {\n        return;\n      }\n\n      thumbnail.scrollIntoView({ behavior: 'smooth' });\n    },\n\n    updateViewportDisplaySet: ({\n      direction,\n      excludeNonImageModalities,\n    }: UpdateViewportDisplaySetParams) => {\n      const nonImageModalities = ['SR', 'SEG', 'SM', 'RTSTRUCT', 'RTPLAN', 'RTDOSE'];\n\n      // Sort the display sets as per the hanging protocol service viewport/display set scoring system.\n      // The thumbnail list uses the same sorting.\n      const dsSortFn = hangingProtocolService.getDisplaySetSortFunction();\n      const currentDisplaySets = [...displaySetService.activeDisplaySets];\n\n      currentDisplaySets.sort(dsSortFn);\n\n      const { activeViewportId, viewports, isHangingProtocolLayout } =\n        viewportGridService.getState();\n\n      const { displaySetInstanceUIDs } = viewports.get(activeViewportId);\n\n      const activeDisplaySetIndex = currentDisplaySets.findIndex(displaySet =>\n        displaySetInstanceUIDs.includes(displaySet.displaySetInstanceUID)\n      );\n\n      let displaySetIndexToShow: number;\n\n      for (\n        displaySetIndexToShow = activeDisplaySetIndex + direction;\n        displaySetIndexToShow > -1 && displaySetIndexToShow < currentDisplaySets.length;\n        displaySetIndexToShow += direction\n      ) {\n        if (\n          !excludeNonImageModalities ||\n          !nonImageModalities.includes(currentDisplaySets[displaySetIndexToShow].Modality)\n        ) {\n          break;\n        }\n      }\n\n      if (displaySetIndexToShow < 0 || displaySetIndexToShow >= currentDisplaySets.length) {\n        return;\n      }\n\n      const { displaySetInstanceUID } = currentDisplaySets[displaySetIndexToShow];\n\n      let updatedViewports = [];\n\n      try {\n        updatedViewports = hangingProtocolService.getViewportsRequireUpdate(\n          activeViewportId,\n          displaySetInstanceUID,\n          isHangingProtocolLayout\n        );\n      } catch (error) {\n        console.warn(error);\n        uiNotificationService.show({\n          title: 'Navigate Viewport Display Set',\n          message:\n            'The requested display sets could not be added to the viewport due to a mismatch in the Hanging Protocol rules.',\n          type: 'info',\n          duration: 3000,\n        });\n      }\n\n      viewportGridService.setDisplaySetsForViewports(updatedViewports);\n\n      setTimeout(() => actions.scrollActiveThumbnailIntoView(), 0);\n    },\n  };\n\n  const definitions = {\n    showContextMenu: {\n      commandFn: actions.showContextMenu,\n    },\n    closeContextMenu: {\n      commandFn: actions.closeContextMenu,\n    },\n    clearMeasurements: {\n      commandFn: actions.clearMeasurements,\n    },\n    displayNotification: {\n      commandFn: actions.displayNotification,\n    },\n    setHangingProtocol: {\n      commandFn: actions.setHangingProtocol,\n    },\n    toggleHangingProtocol: {\n      commandFn: actions.toggleHangingProtocol,\n    },\n    navigateHistory: {\n      commandFn: actions.navigateHistory,\n    },\n    nextStage: {\n      commandFn: actions.deltaStage,\n      options: { direction: 1 },\n    },\n    previousStage: {\n      commandFn: actions.deltaStage,\n      options: { direction: -1 },\n    },\n    setViewportGridLayout: {\n      commandFn: actions.setViewportGridLayout,\n    },\n    toggleOneUp: {\n      commandFn: actions.toggleOneUp,\n    },\n    toggleOneUpCustom: {\n      commandFn: actions.toggleOneUpCustom,\n      storeContexts: [],\n      options: {},\n    },\n    openDICOMTagViewer: {\n      commandFn: actions.openDICOMTagViewer,\n    },\n    updateViewportDisplaySet: {\n      commandFn: actions.updateViewportDisplaySet,\n    },\n  };\n\n  return {\n    actions,\n    definitions,\n    defaultContext: 'DEFAULT',\n  };\n};\n\nexport default commandsModule;\n","import { Types } from '@ohif/core';\n\n/**\n * This hanging protocol can be activated on the primary mode by directly\n * referencing it in a URL or by directly including it within a mode, e.g.:\n * `&hangingProtocolId=@ohif/mnGrid` added to the viewer URL\n * It is not included in the viewer mode by default.\n */\nconst hpMN: Types.HangingProtocol.Protocol = {\n  id: '@ohif/mnGrid',\n  description: 'Has various hanging protocol grid layouts',\n  name: '2x2',\n  protocolMatchingRules: [\n    {\n      id: 'OneOrMoreSeries',\n      weight: 25,\n      attribute: 'numberOfDisplaySetsWithImages',\n      constraint: {\n        greaterThan: 0,\n      },\n    },\n  ],\n  toolGroupIds: ['default'],\n  displaySetSelectors: {\n    defaultDisplaySetId: {\n      seriesMatchingRules: [\n        {\n          attribute: 'numImageFrames',\n          constraint: {\n            greaterThan: { value: 0 },\n          },\n          required: true,\n        },\n        // This display set will select the specified items by preference\n        // It has no affect if nothing is specified in the URL.\n        {\n          attribute: 'isDisplaySetFromUrl',\n          weight: 10,\n          constraint: {\n            equals: true,\n          },\n        },\n      ],\n    },\n  },\n  defaultViewport: {\n    viewportOptions: {\n      viewportType: 'stack',\n      toolGroupId: 'default',\n      allowUnmatchedView: true,\n    },\n    displaySets: [\n      {\n        id: 'defaultDisplaySetId',\n        matchedDisplaySetsIndex: -1,\n      },\n    ],\n  },\n  stages: [\n    {\n      id: '2x2',\n      stageActivation: {\n        enabled: {\n          minViewportsMatched: 4,\n        },\n      },\n      viewportStructure: {\n        layoutType: 'grid',\n        properties: {\n          rows: 2,\n          columns: 2,\n        },\n      },\n      viewports: [\n        {\n          viewportOptions: {\n            toolGroupId: 'default',\n            allowUnmatchedView: true,\n          },\n          displaySets: [\n            {\n              id: 'defaultDisplaySetId',\n            },\n          ],\n        },\n        {\n          viewportOptions: {\n            toolGroupId: 'default',\n            allowUnmatchedView: true,\n          },\n          displaySets: [\n            {\n              matchedDisplaySetsIndex: 1,\n              id: 'defaultDisplaySetId',\n            },\n          ],\n        },\n        {\n          viewportOptions: {\n            toolGroupId: 'default',\n            allowUnmatchedView: true,\n          },\n          displaySets: [\n            {\n              matchedDisplaySetsIndex: 2,\n              id: 'defaultDisplaySetId',\n            },\n          ],\n        },\n        {\n          viewportOptions: {\n            toolGroupId: 'default',\n            allowUnmatchedView: true,\n          },\n          displaySets: [\n            {\n              matchedDisplaySetsIndex: 3,\n              id: 'defaultDisplaySetId',\n            },\n          ],\n        },\n      ],\n    },\n\n    // 3x1 stage\n    {\n      id: '3x1',\n      // Obsolete settings:\n      requiredViewports: 1,\n      preferredViewports: 3,\n      // New equivalent:\n      stageActivation: {\n        enabled: {\n          minViewportsMatched: 3,\n        },\n      },\n      viewportStructure: {\n        layoutType: 'grid',\n        properties: {\n          rows: 1,\n          columns: 3,\n        },\n      },\n      viewports: [\n        {\n          viewportOptions: {\n            toolGroupId: 'default',\n            allowUnmatchedView: true,\n          },\n          displaySets: [\n            {\n              id: 'defaultDisplaySetId',\n            },\n          ],\n        },\n        {\n          viewportOptions: {\n            toolGroupId: 'default',\n            allowUnmatchedView: true,\n          },\n          displaySets: [\n            {\n              id: 'defaultDisplaySetId',\n              matchedDisplaySetsIndex: 1,\n            },\n          ],\n        },\n        {\n          viewportOptions: {\n            toolGroupId: 'default',\n            allowUnmatchedView: true,\n          },\n          displaySets: [\n            {\n              id: 'defaultDisplaySetId',\n              matchedDisplaySetsIndex: 2,\n            },\n          ],\n        },\n      ],\n    },\n\n    // A 2x1 stage\n    {\n      id: '2x1',\n      requiredViewports: 1,\n      preferredViewports: 2,\n      stageActivation: {\n        enabled: {\n          minViewportsMatched: 2,\n        },\n      },\n      viewportStructure: {\n        layoutType: 'grid',\n        properties: {\n          rows: 1,\n          columns: 2,\n        },\n      },\n      viewports: [\n        {\n          viewportOptions: {\n            toolGroupId: 'default',\n            allowUnmatchedView: true,\n          },\n          displaySets: [\n            {\n              id: 'defaultDisplaySetId',\n            },\n          ],\n        },\n        {\n          viewportOptions: {\n            toolGroupId: 'default',\n            allowUnmatchedView: true,\n          },\n          displaySets: [\n            {\n              matchedDisplaySetsIndex: 1,\n              id: 'defaultDisplaySetId',\n            },\n          ],\n        },\n      ],\n    },\n\n    // A 1x1 stage - should be automatically activated if there is only 1 viewable instance\n    {\n      id: '1x1',\n      requiredViewports: 1,\n      preferredViewports: 1,\n      stageActivation: {\n        enabled: {\n          minViewportsMatched: 1,\n        },\n      },\n      viewportStructure: {\n        layoutType: 'grid',\n        properties: {\n          rows: 1,\n          columns: 1,\n        },\n      },\n      viewports: [\n        {\n          viewportOptions: {\n            toolGroupId: 'default',\n            allowUnmatchedView: true,\n          },\n          displaySets: [\n            {\n              id: 'defaultDisplaySetId',\n            },\n          ],\n        },\n      ],\n    },\n  ],\n  numberOfPriorsReferenced: -1,\n};\n\nexport default hpMN;\n","import { Types } from '@ohif/core';\n\nconst defaultDisplaySetSelector = {\n  studyMatchingRules: [\n    {\n      // The priorInstance is a study counter that indicates what position this study is in\n      // and the value comes from the options parameter.\n      attribute: 'studyInstanceUIDsIndex',\n      from: 'options',\n      required: true,\n      constraint: {\n        equals: { value: 0 },\n      },\n    },\n  ],\n  seriesMatchingRules: [\n    {\n      attribute: 'numImageFrames',\n      constraint: {\n        greaterThan: { value: 0 },\n      },\n    },\n    // This display set will select the specified items by preference\n    // It has no affect if nothing is specified in the URL.\n    {\n      attribute: 'isDisplaySetFromUrl',\n      weight: 10,\n      constraint: {\n        equals: true,\n      },\n    },\n  ],\n};\n\nconst priorDisplaySetSelector = {\n  studyMatchingRules: [\n    {\n      // The priorInstance is a study counter that indicates what position this study is in\n      // and the value comes from the options parameter.\n      attribute: 'studyInstanceUIDsIndex',\n      from: 'options',\n      required: true,\n      constraint: {\n        equals: { value: 1 },\n      },\n    },\n  ],\n  seriesMatchingRules: [\n    {\n      attribute: 'numImageFrames',\n      constraint: {\n        greaterThan: { value: 0 },\n      },\n    },\n    // This display set will select the specified items by preference\n    // It has no affect if nothing is specified in the URL.\n    {\n      attribute: 'isDisplaySetFromUrl',\n      weight: 10,\n      constraint: {\n        equals: true,\n      },\n    },\n  ],\n};\n\nconst currentDisplaySet = {\n  id: 'defaultDisplaySetId',\n};\n\nconst priorDisplaySet = {\n  id: 'priorDisplaySetId',\n};\n\nconst currentViewport0 = {\n  viewportOptions: {\n    toolGroupId: 'default',\n    allowUnmatchedView: true,\n  },\n  displaySets: [currentDisplaySet],\n};\n\nconst currentViewport1 = {\n  ...currentViewport0,\n  displaySets: [\n    {\n      ...currentDisplaySet,\n      matchedDisplaySetsIndex: 1,\n    },\n  ],\n};\n\nconst priorViewport0 = {\n  ...currentViewport0,\n  displaySets: [priorDisplaySet],\n};\n\nconst priorViewport1 = {\n  ...priorViewport0,\n  displaySets: [\n    {\n      ...priorDisplaySet,\n      matchedDisplaySetsIndex: 1,\n    },\n  ],\n};\n\n/**\n * This hanging protocol can be activated on the primary mode by directly\n * referencing it in a URL or by directly including it within a mode, e.g.:\n * `&hangingProtocolId=@ohif/mnGrid` added to the viewer URL\n * It is not included in the viewer mode by default.\n */\nconst hpMNCompare: Types.HangingProtocol.Protocol = {\n  id: '@ohif/hpCompare',\n  description: 'Compare two studies in various layouts',\n  name: 'Compare Two Studies',\n  numberOfPriorsReferenced: 1,\n  protocolMatchingRules: [\n    {\n      id: 'Two Studies',\n      weight: 1000,\n      attribute: 'StudyInstanceUID',\n      // The 'from' attribute says where to get the 'attribute' value from.  In this case\n      // prior means the second study in the study list.\n      from: 'prior',\n      required: true,\n      constraint: {\n        notNull: true,\n      },\n    },\n  ],\n  toolGroupIds: ['default'],\n  displaySetSelectors: {\n    defaultDisplaySetId: defaultDisplaySetSelector,\n    priorDisplaySetId: priorDisplaySetSelector,\n  },\n  defaultViewport: {\n    viewportOptions: {\n      viewportType: 'stack',\n      toolGroupId: 'default',\n      allowUnmatchedView: true,\n    },\n    displaySets: [\n      {\n        id: 'defaultDisplaySetId',\n        matchedDisplaySetsIndex: -1,\n      },\n    ],\n  },\n  stages: [\n    {\n      name: '2x2',\n      stageActivation: {\n        enabled: {\n          minViewportsMatched: 4,\n        },\n      },\n      viewportStructure: {\n        layoutType: 'grid',\n        properties: {\n          rows: 2,\n          columns: 2,\n        },\n      },\n      viewports: [currentViewport0, priorViewport0, currentViewport1, priorViewport1],\n    },\n\n    {\n      name: '2x1',\n      stageActivation: {\n        enabled: {\n          minViewportsMatched: 2,\n        },\n      },\n      viewportStructure: {\n        layoutType: 'grid',\n        properties: {\n          rows: 1,\n          columns: 2,\n        },\n      },\n      viewports: [currentViewport0, priorViewport0],\n    },\n  ],\n};\n\nexport default hpMNCompare;\n","import hpMNGrid from './hpMNGrid';\nimport hpMNCompare from './hpCompare';\n\nconst defaultProtocol = {\n  id: 'default',\n  locked: true,\n  // Don't store this hanging protocol as it applies to the currently active\n  // display set by default\n  // cacheId: null,\n  name: 'Default',\n  createdDate: '2021-02-23T19:22:08.894Z',\n  modifiedDate: '2023-04-01',\n  availableTo: {},\n  editableBy: {},\n  protocolMatchingRules: [],\n  toolGroupIds: ['default'],\n  hpInitiationCriteria: { minSeriesLoaded: 1 },\n  // -1 would be used to indicate active only, whereas other values are\n  // the number of required priors referenced - so 0 means active with\n  // 0 or more priors.\n  numberOfPriorsReferenced: 0,\n  // Default viewport is used to define the viewport when\n  // additional viewports are added using the layout tool\n  defaultViewport: {\n    viewportOptions: {\n      viewportType: 'stack',\n      toolGroupId: 'default',\n      allowUnmatchedView: true,\n    },\n    displaySets: [\n      {\n        id: 'defaultDisplaySetId',\n        matchedDisplaySetsIndex: -1,\n      },\n    ],\n  },\n  displaySetSelectors: {\n    defaultDisplaySetId: {\n      // Matches displaysets, NOT series\n      seriesMatchingRules: [\n        // Try to match series with images by default, to prevent weird display\n        // on SEG/SR containing studies\n        {\n          attribute: 'numImageFrames',\n          constraint: {\n            greaterThan: { value: 0 },\n          },\n        },\n        // This display set will select the specified items by preference\n        // It has no affect if nothing is specified in the URL.\n        {\n          attribute: 'isSeriesUIDFromURL',\n          weight: 10,\n          constraint: {\n            equals: true,\n          },\n        },\n      ],\n      // Can be used to select matching studies\n      // studyMatchingRules: [],\n    },\n  },\n  stages: [\n    {\n      name: 'default',\n      viewportStructure: {\n        layoutType: 'grid',\n        properties: {\n          rows: 1,\n          columns: 1,\n        },\n      },\n      viewports: [\n        {\n          viewportOptions: {\n            viewportType: 'stack',\n            viewportId: 'default',\n            toolGroupId: 'default',\n            // This will specify the initial image options index if it matches in the URL\n            // and will otherwise not specify anything.\n            initialImageOptions: {\n              custom: 'sopInstanceLocation',\n            },\n            // Other options for initialImageOptions, which can be included in the default\n            // custom attribute, or can be provided directly.\n            //   index: 180,\n            //   preset: 'middle', // 'first', 'last', 'middle'\n            // },\n          },\n          displaySets: [\n            {\n              id: 'defaultDisplaySetId',\n            },\n          ],\n        },\n      ],\n      createdDate: '2021-02-23T18:32:42.850Z',\n    },\n  ],\n};\n\nfunction getHangingProtocolModule() {\n  return [\n    {\n      name: defaultProtocol.id,\n      protocol: defaultProtocol,\n    },\n    // Create a MxN hanging protocol available by default\n    {\n      name: hpMNGrid.id,\n      protocol: hpMNGrid,\n    },\n    // Create a MxN comparison hanging protocol available by default\n    {\n      name: hpMNCompare.id,\n      protocol: hpMNCompare,\n    },\n  ];\n}\n\nexport default getHangingProtocolModule;\n","import React from 'react';\nimport classnames from 'classnames';\nimport { useNavigate } from 'react-router-dom';\nimport { useAppConfig } from '@state';\n\nimport { Button, ButtonEnums } from '@ohif/ui';\n\nfunction DataSourceSelector() {\n  const [appConfig] = useAppConfig();\n  const navigate = useNavigate();\n\n  // This is frowned upon, but the raw config is needed here to provide\n  // the selector\n  const dsConfigs = appConfig.dataSources;\n\n  return (\n    <div style={{ width: '100%', height: '100%' }}>\n      <div className=\"flex h-screen w-screen items-center justify-center \">\n        <div className=\"bg-secondary-dark mx-auto space-y-2 rounded-lg py-8 px-8 drop-shadow-md\">\n          <img\n            className=\"mx-auto block h-14\"\n            src=\"./ohif-logo.svg\"\n            alt=\"OHIF\"\n          />\n          <div className=\"space-y-2 pt-4 text-center\">\n            {dsConfigs\n              .filter(it => it.sourceName !== 'dicomjson' && it.sourceName !== 'dicomlocal')\n              .map(ds => (\n                <div key={ds.sourceName}>\n                  <h1 className=\"text-white\">\n                    {ds.configuration?.friendlyName || ds.friendlyName}\n                  </h1>\n                  <Button\n                    type={ButtonEnums.type.primary}\n                    className={classnames('ml-2')}\n                    onClick={() => {\n                      navigate({\n                        pathname: '/',\n                        search: `datasources=${ds.sourceName}`,\n                      });\n                    }}\n                  >\n                    {ds.sourceName}\n                  </Button>\n                  <br />\n                </div>\n              ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DataSourceSelector;\n","import classNames from 'classnames';\nimport React, { ReactElement, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Button, Icon, InputFilterText, LoadingIndicatorProgress } from '@ohif/ui';\nimport { Types } from '@ohif/core';\n\ntype ItemListComponentProps = {\n  itemLabel: string;\n  itemList: Array<Types.BaseDataSourceConfigurationAPIItem>;\n  onItemClicked: (item: Types.BaseDataSourceConfigurationAPIItem) => void;\n};\n\nfunction ItemListComponent({\n  itemLabel,\n  itemList,\n  onItemClicked,\n}: ItemListComponentProps): ReactElement {\n  const { t } = useTranslation('DataSourceConfiguration');\n  const [filterValue, setFilterValue] = useState('');\n\n  useEffect(() => {\n    setFilterValue('');\n  }, [itemList]);\n\n  return (\n    <div className=\"flex min-h-[1px] grow flex-col gap-4\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"text-primary-light text-[20px]\">{t(`Select ${itemLabel}`)}</div>\n        <InputFilterText\n          className=\"max-w-[40%] grow\"\n          value={filterValue}\n          onDebounceChange={setFilterValue}\n          placeholder={t(`Search ${itemLabel} list`)}\n        ></InputFilterText>\n      </div>\n      <div className=\"relative flex min-h-[1px] grow flex-col bg-black text-[14px]\">\n        {itemList == null ? (\n          <LoadingIndicatorProgress className={'h-full w-full'} />\n        ) : itemList.length === 0 ? (\n          <div className=\"text-primary-light flex h-full flex-col items-center justify-center px-6 py-4\">\n            <Icon\n              name=\"magnifier\"\n              className=\"mb-4\"\n            />\n            <span>{t(`No ${itemLabel} available`)}</span>\n          </div>\n        ) : (\n          <>\n            <div className=\"bg-secondary-dark px-3 py-1.5 text-white\">{t(itemLabel)}</div>\n            <div className=\"ohif-scrollbar overflow-auto\">\n              {itemList\n                .filter(\n                  item =>\n                    !filterValue || item.name.toLowerCase().includes(filterValue.toLowerCase())\n                )\n                .map(item => {\n                  const border =\n                    'rounded border-transparent border-b-secondary-light border-[1px] hover:border-primary-light';\n                  return (\n                    <div\n                      className={classNames(\n                        'hover:text-primary-light hover:bg-primary-dark group mx-2 flex items-center justify-between px-6 py-2',\n                        border\n                      )}\n                      key={item.id}\n                    >\n                      <div>{item.name}</div>\n                      <Button\n                        onClick={() => onItemClicked(item)}\n                        className=\"invisible group-hover:visible\"\n                        endIcon={<Icon name=\"arrow-left\" />}\n                      >\n                        {t('Select')}\n                      </Button>\n                    </div>\n                  );\n                })}\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default ItemListComponent;\n","import classNames from 'classnames';\nimport React, { ReactElement, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Icon } from '@ohif/ui';\nimport { Types } from '@ohif/core';\nimport ItemListComponent from './ItemListComponent';\n\nconst NO_WRAP_ELLIPSIS_CLASS_NAMES = 'text-ellipsis whitespace-nowrap overflow-hidden';\n\ntype DataSourceConfigurationModalComponentProps = {\n  configurationAPI: Types.BaseDataSourceConfigurationAPI;\n  configuredItems: Array<Types.BaseDataSourceConfigurationAPIItem>;\n  onHide: () => void;\n};\n\nfunction DataSourceConfigurationModalComponent({\n  configurationAPI,\n  configuredItems,\n  onHide,\n}: DataSourceConfigurationModalComponentProps) {\n  const { t } = useTranslation('DataSourceConfiguration');\n\n  const [itemList, setItemList] = useState<Array<Types.BaseDataSourceConfigurationAPIItem>>();\n\n  const [selectedItems, setSelectedItems] = useState(configuredItems);\n\n  const [errorMessage, setErrorMessage] = useState<string>();\n\n  const [itemLabels] = useState(configurationAPI.getItemLabels());\n\n  // Determines whether to show the full/existing configuration for the data source.\n  // A full or complete configuration is one where the data source (path) has the\n  // maximum/required number of path items. Anything less is considered not complete and\n  // the configuration starts from scratch (i.e. as if no items are configured at all).\n  // TODO: consider configuration starting from a partial (i.e. non-empty) configuration\n  const [showFullConfig, setShowFullConfig] = useState(\n    itemLabels.length === configuredItems.length\n  );\n\n  /**\n   * The index of the selected item that is considered current and for which\n   * its sub-items should be displayed in the items list component. When the\n   * full/existing configuration for a data source is to be shown, the current\n   * selected item is the second to last in the `selectedItems` list.\n   */\n  const currentSelectedItemIndex = showFullConfig\n    ? selectedItems.length - 2\n    : selectedItems.length - 1;\n\n  useEffect(() => {\n    let shouldUpdate = true;\n\n    setErrorMessage(null);\n\n    // Clear out the former/old list while we fetch the next sub item list.\n    setItemList(null);\n\n    if (selectedItems.length === 0) {\n      configurationAPI\n        .initialize()\n        .then(items => {\n          if (shouldUpdate) {\n            setItemList(items);\n          }\n        })\n        .catch(error => setErrorMessage(error.message));\n    } else if (!showFullConfig && selectedItems.length === itemLabels.length) {\n      // The last item to configure the data source (path) has been selected.\n      configurationAPI.setCurrentItem(selectedItems[selectedItems.length - 1]);\n      // We can hide the modal dialog now.\n      onHide();\n    } else {\n      configurationAPI\n        .setCurrentItem(selectedItems[currentSelectedItemIndex])\n        .then(items => {\n          if (shouldUpdate) {\n            setItemList(items);\n          }\n        })\n        .catch(error => setErrorMessage(error.message));\n    }\n\n    return () => {\n      shouldUpdate = false;\n    };\n  }, [\n    selectedItems,\n    configurationAPI,\n    onHide,\n    itemLabels,\n    showFullConfig,\n    currentSelectedItemIndex,\n  ]);\n\n  const getSelectedItemCursorClasses = itemIndex =>\n    itemIndex !== itemLabels.length - 1 && itemIndex < selectedItems.length\n      ? 'cursor-pointer'\n      : 'cursor-auto';\n\n  const getSelectedItemBackgroundClasses = itemIndex =>\n    itemIndex < selectedItems.length\n      ? classNames(\n          'bg-black/[.4]',\n          itemIndex !== itemLabels.length - 1 ? 'hover:bg-transparent active:bg-secondary-dark' : ''\n        )\n      : 'bg-transparent';\n\n  const getSelectedItemBorderClasses = itemIndex =>\n    itemIndex === currentSelectedItemIndex + 1\n      ? classNames('border-2', 'border-solid', 'border-primary-light')\n      : itemIndex < selectedItems.length\n      ? 'border border-solid border-primary-active hover:border-primary-light active:border-white'\n      : 'border border-dashed border-secondary-light';\n\n  const getSelectedItemTextClasses = itemIndex =>\n    itemIndex <= selectedItems.length ? 'text-primary-light' : 'text-primary-active';\n\n  const getErrorComponent = (): ReactElement => {\n    return (\n      <div className=\"flex min-h-[1px] grow flex-col gap-4\">\n        <div className=\"text-primary-light text-[20px]\">\n          {t(`Error fetching ${itemLabels[selectedItems.length]} list`)}\n        </div>\n        <div className=\"grow bg-black p-4 text-[14px]\">{errorMessage}</div>\n      </div>\n    );\n  };\n\n  const getSelectedItemsComponent = (): ReactElement => {\n    return (\n      <div className=\"flex gap-4\">\n        {itemLabels.map((itemLabel, itemLabelIndex) => {\n          return (\n            <div\n              key={itemLabel}\n              className={classNames(\n                'flex min-w-[1px] shrink basis-[200px] flex-col gap-1 rounded-md p-3.5',\n                getSelectedItemCursorClasses(itemLabelIndex),\n                getSelectedItemBackgroundClasses(itemLabelIndex),\n                getSelectedItemBorderClasses(itemLabelIndex),\n                getSelectedItemTextClasses(itemLabelIndex)\n              )}\n              onClick={\n                (showFullConfig && itemLabelIndex < currentSelectedItemIndex) ||\n                itemLabelIndex <= currentSelectedItemIndex\n                  ? () => {\n                      setShowFullConfig(false);\n                      setSelectedItems(theList => theList.slice(0, itemLabelIndex));\n                    }\n                  : undefined\n              }\n            >\n              <div className=\"text- flex items-center gap-2\">\n                {itemLabelIndex < selectedItems.length ? (\n                  <Icon name=\"status-tracked\" />\n                ) : (\n                  <Icon name=\"status-untracked\" />\n                )}\n                <div className={classNames(NO_WRAP_ELLIPSIS_CLASS_NAMES)}>{t(itemLabel)}</div>\n              </div>\n              {itemLabelIndex < selectedItems.length ? (\n                <div className={classNames('text-[14px] text-white', NO_WRAP_ELLIPSIS_CLASS_NAMES)}>\n                  {selectedItems[itemLabelIndex].name}\n                </div>\n              ) : (\n                <br></br>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"flex h-[calc(100vh-300px)] select-none flex-col gap-4 pt-0.5\">\n      {getSelectedItemsComponent()}\n      <div className=\"h-0.5 w-full shrink-0 bg-black\"></div>\n      {errorMessage ? (\n        getErrorComponent()\n      ) : (\n        <ItemListComponent\n          itemLabel={itemLabels[currentSelectedItemIndex + 1]}\n          itemList={itemList}\n          onItemClicked={item => {\n            setShowFullConfig(false);\n            setSelectedItems(theList => [...theList.slice(0, currentSelectedItemIndex + 1), item]);\n          }}\n        ></ItemListComponent>\n      )}\n    </div>\n  );\n}\n\nexport default DataSourceConfigurationModalComponent;\n","import React, { ReactElement, useCallback, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Icon, useModal } from '@ohif/ui';\nimport { ExtensionManager, ServicesManager, Types } from '@ohif/core';\nimport DataSourceConfigurationModalComponent from './DataSourceConfigurationModalComponent';\n\ntype DataSourceConfigurationComponentProps = {\n  servicesManager: ServicesManager;\n  extensionManager: ExtensionManager;\n};\n\nfunction DataSourceConfigurationComponent({\n  servicesManager,\n  extensionManager,\n}: DataSourceConfigurationComponentProps): ReactElement {\n  const { t } = useTranslation('DataSourceConfiguration');\n  const { show, hide } = useModal();\n\n  const { customizationService } = servicesManager.services;\n\n  const [configurationAPI, setConfigurationAPI] = useState<Types.BaseDataSourceConfigurationAPI>();\n\n  const [configuredItems, setConfiguredItems] =\n    useState<Array<Types.BaseDataSourceConfigurationAPIItem>>();\n\n  useEffect(() => {\n    let shouldUpdate = true;\n\n    const dataSourceChangedCallback = async () => {\n      const activeDataSourceDef = extensionManager.getActiveDataSourceDefinition();\n\n      if (!activeDataSourceDef.configuration.configurationAPI) {\n        return;\n      }\n\n      const { factory: configurationAPIFactory } =\n        customizationService.get(activeDataSourceDef.configuration.configurationAPI) ?? {};\n\n      if (!configurationAPIFactory) {\n        return;\n      }\n\n      const configAPI = configurationAPIFactory(activeDataSourceDef.sourceName);\n      setConfigurationAPI(configAPI);\n\n      // New configuration API means that the existing configured items must be cleared.\n      setConfiguredItems(null);\n\n      configAPI.getConfiguredItems().then(list => {\n        if (shouldUpdate) {\n          setConfiguredItems(list);\n        }\n      });\n    };\n\n    const sub = extensionManager.subscribe(\n      extensionManager.EVENTS.ACTIVE_DATA_SOURCE_CHANGED,\n      dataSourceChangedCallback\n    );\n\n    dataSourceChangedCallback();\n\n    return () => {\n      shouldUpdate = false;\n      sub.unsubscribe();\n    };\n  }, []);\n\n  const showConfigurationModal = useCallback(() => {\n    show({\n      content: DataSourceConfigurationModalComponent,\n      title: t('Configure Data Source'),\n      contentProps: {\n        configurationAPI,\n        configuredItems,\n        onHide: hide,\n      },\n    });\n  }, [configurationAPI, configuredItems]);\n\n  useEffect(() => {\n    if (!configurationAPI || !configuredItems) {\n      return;\n    }\n\n    if (configuredItems.length !== configurationAPI.getItemLabels().length) {\n      // Not the correct number of configured items, so show the modal to configure the data source.\n      showConfigurationModal();\n    }\n  }, [configurationAPI, configuredItems, showConfigurationModal]);\n\n  return configuredItems ? (\n    <div className=\"text-aqua-pale flex items-center overflow-hidden\">\n      <Icon\n        name=\"settings\"\n        className=\"mr-2.5 h-3.5 w-3.5 shrink-0 cursor-pointer\"\n        onClick={showConfigurationModal}\n      ></Icon>\n      {configuredItems.map((item, itemIndex) => {\n        return (\n          <div\n            key={itemIndex}\n            className=\"flex overflow-hidden\"\n          >\n            <div\n              key={itemIndex}\n              className=\"overflow-hidden text-ellipsis whitespace-nowrap\"\n            >\n              {item.name}\n            </div>\n            {itemIndex !== configuredItems.length - 1 && <div className=\"px-2.5\">|</div>}\n          </div>\n        );\n      })}\n    </div>\n  ) : (\n    <></>\n  );\n}\n\nexport default DataSourceConfigurationComponent;\n","import { ExtensionManager, Types } from '@ohif/core';\n\n/**\n * This file contains the implementations of BaseDataSourceConfigurationAPIItem\n * and BaseDataSourceConfigurationAPI for the Google cloud healthcare API. To\n * better understand this implementation and/or to implement custom implementations,\n * see the platform\\core\\src\\types\\DataSourceConfigurationAPI.ts and its JS doc\n * comments as a guide.\n */\n\n/**\n * The various Google Cloud Healthcare path item types.\n */\nenum ItemType {\n  projects = 0,\n  locations = 1,\n  datasets = 2,\n  dicomStores = 3,\n}\n\ninterface NamedItem {\n  name: string;\n}\ninterface Project extends NamedItem {\n  projectId: string;\n}\n\nconst initialUrl = 'https://cloudresourcemanager.googleapis.com/v1';\nconst baseHealthcareUrl = 'https://healthcare.googleapis.com/v1';\n\nclass GoogleCloudDataSourceConfigurationAPIItem\n  implements Types.BaseDataSourceConfigurationAPIItem\n{\n  id: string;\n  name: string;\n  url: string;\n  itemType: ItemType;\n}\n\nclass GoogleCloudDataSourceConfigurationAPI implements Types.BaseDataSourceConfigurationAPI {\n  private _extensionManager: ExtensionManager;\n  private _fetchOptions: { method: string; headers: unknown };\n  private _dataSourceName: string;\n\n  constructor(dataSourceName, servicesManager, extensionManager) {\n    this._dataSourceName = dataSourceName;\n    this._extensionManager = extensionManager;\n    const userAuthenticationService = servicesManager.services.userAuthenticationService;\n    this._fetchOptions = {\n      method: 'GET',\n      headers: userAuthenticationService.getAuthorizationHeader(),\n    };\n  }\n\n  getItemLabels = () => ['Project', 'Location', 'Data set', 'DICOM store'];\n\n  async initialize(): Promise<Types.BaseDataSourceConfigurationAPIItem[]> {\n    const url = `${initialUrl}/projects`;\n\n    const projects = (await GoogleCloudDataSourceConfigurationAPI._doFetch(\n      url,\n      ItemType.projects,\n      this._fetchOptions\n    )) as Array<Project>;\n\n    if (!projects?.length) {\n      return [];\n    }\n\n    const projectItems = projects.map(project => {\n      return {\n        id: project.projectId,\n        name: project.name,\n        itemType: ItemType.projects,\n        url: `${baseHealthcareUrl}/projects/${project.projectId}`,\n      };\n    });\n\n    return projectItems;\n  }\n\n  async setCurrentItem(\n    anItem: Types.BaseDataSourceConfigurationAPIItem\n  ): Promise<Types.BaseDataSourceConfigurationAPIItem[]> {\n    const googleCloudItem = anItem as GoogleCloudDataSourceConfigurationAPIItem;\n\n    if (googleCloudItem.itemType === ItemType.dicomStores) {\n      // Last configurable item, so update the data source configuration.\n      const url = `${googleCloudItem.url}/dicomWeb`;\n      const dataSourceDefCopy = JSON.parse(\n        JSON.stringify(this._extensionManager.getDataSourceDefinition(this._dataSourceName))\n      );\n      dataSourceDefCopy.configuration = {\n        ...dataSourceDefCopy.configuration,\n        wadoUriRoot: url,\n        qidoRoot: url,\n        wadoRoot: url,\n      };\n\n      this._extensionManager.updateDataSourceConfiguration(\n        dataSourceDefCopy.sourceName,\n        dataSourceDefCopy.configuration\n      );\n\n      return [];\n    }\n\n    const subItemType = googleCloudItem.itemType + 1;\n    const subItemField = `${ItemType[subItemType]}`;\n\n    const url = `${googleCloudItem.url}/${subItemField}`;\n\n    const fetchedSubItems = await GoogleCloudDataSourceConfigurationAPI._doFetch(\n      url,\n      subItemType,\n      this._fetchOptions\n    );\n\n    if (!fetchedSubItems?.length) {\n      return [];\n    }\n\n    const subItems = fetchedSubItems.map(subItem => {\n      const nameSplit = subItem.name.split('/');\n      return {\n        id: subItem.name,\n        name: nameSplit[nameSplit.length - 1],\n        itemType: subItemType,\n        url: `${baseHealthcareUrl}/${subItem.name}`,\n      };\n    });\n\n    return subItems;\n  }\n\n  async getConfiguredItems(): Promise<Array<GoogleCloudDataSourceConfigurationAPIItem>> {\n    const dataSourceDefinition = this._extensionManager.getDataSourceDefinition(\n      this._dataSourceName\n    );\n\n    const url = dataSourceDefinition.configuration.wadoUriRoot;\n    const projectsIndex = url.indexOf('projects');\n    // Split the configured URL into (essentially) pairs (i.e. item type followed by item)\n    // Explicitly: ['projects','aProject','locations','aLocation','datasets','aDataSet','dicomStores','aDicomStore']\n    // Note that a partial configuration will have a subset of the above.\n    const urlSplit = url.substring(projectsIndex).split('/');\n\n    const configuredItems = [];\n\n    for (\n      let itemType = 0;\n      // the number of configured items is either the max (4) or the number extracted from the url split\n      itemType < 4 && (itemType + 1) * 2 < urlSplit.length;\n      itemType += 1\n    ) {\n      if (itemType === ItemType.projects) {\n        const projectId = urlSplit[1];\n        const projectUrl = `${initialUrl}/projects/${projectId}`;\n        const data = await GoogleCloudDataSourceConfigurationAPI._doFetch(\n          projectUrl,\n          ItemType.projects,\n          this._fetchOptions\n        );\n        const project = data[0] as Project;\n        configuredItems.push({\n          id: project.projectId,\n          name: project.name,\n          itemType: itemType,\n          url: `${baseHealthcareUrl}/projects/${project.projectId}`,\n        });\n      } else {\n        const relativePath = urlSplit.slice(0, itemType * 2 + 2).join('/');\n        configuredItems.push({\n          id: relativePath,\n          name: urlSplit[itemType * 2 + 1],\n          itemType: itemType,\n          url: `${baseHealthcareUrl}/${relativePath}`,\n        });\n      }\n    }\n\n    return configuredItems;\n  }\n\n  /**\n   * Fetches an array of items the specified item type.\n   * @param urlStr the fetch url\n   * @param fetchItemType the type to fetch\n   * @param fetchOptions the header options for the fetch (e.g. authorization header)\n   * @param fetchSearchParams any search query params; currently only used for paging results\n   * @returns an array of items of the specified type\n   */\n  private static async _doFetch(\n    urlStr: string,\n    fetchItemType: ItemType,\n    fetchOptions = {},\n    fetchSearchParams: Record<string, string> = {}\n  ): Promise<Array<Project> | Array<NamedItem>> {\n    try {\n      const url = new URL(urlStr);\n      url.search = new URLSearchParams(fetchSearchParams).toString();\n\n      const response = await fetch(url, fetchOptions);\n      const data = await response.json();\n      if (response.status >= 200 && response.status < 300 && data != null) {\n        if (data.nextPageToken != null) {\n          fetchSearchParams.pageToken = data.nextPageToken;\n          const subPageData = await this._doFetch(\n            urlStr,\n            fetchItemType,\n            fetchOptions,\n            fetchSearchParams\n          );\n          data[ItemType[fetchItemType]] = data[ItemType[fetchItemType]].concat(subPageData);\n        }\n        if (data[ItemType[fetchItemType]]) {\n          return data[ItemType[fetchItemType]];\n        } else if (data.name) {\n          return [data];\n        } else {\n          return [];\n        }\n      } else {\n        const message =\n          data?.error?.message ||\n          `Error returned from Google Cloud Healthcare: ${response.status} - ${response.statusText}`;\n        throw new Error(message);\n      }\n    } catch (err) {\n      const message = err?.message || 'Error occurred during fetch request.';\n      throw new Error(message);\n    }\n  }\n}\n\nexport { GoogleCloudDataSourceConfigurationAPI };\n","import React from 'react';\nimport { LineChart } from '@ohif/ui';\n\nconst LineChartViewport = ({ displaySets }) => {\n  const displaySet = displaySets[0];\n  const { axis: chartAxis, series: chartSeries } = displaySet.instance.chartData;\n\n  return (\n    <LineChart\n      showLegend={true}\n      legendWidth={150}\n      axis={{\n        x: {\n          label: chartAxis.x.label,\n          indexRef: 0,\n          type: 'x',\n          range: {\n            min: 0,\n          },\n        },\n        y: {\n          label: chartAxis.y.label,\n          indexRef: 1,\n          type: 'y',\n        },\n      }}\n      series={chartSeries}\n    />\n  );\n};\n\nexport { LineChartViewport as default };\n","import OHIF from '@ohif/core';\n\nimport { InstanceMetadata, PhilipsPETPrivateGroup } from '@cornerstonejs/calculate-suv/src/types';\n\nconst metadataProvider = OHIF.classes.MetadataProvider;\n\nexport default function getPTImageIdInstanceMetadata(imageId: string): InstanceMetadata {\n  const dicomMetaData = metadataProvider.get('instance', imageId);\n\n  if (!dicomMetaData) {\n    throw new Error('dicom metadata are required');\n  }\n\n  if (\n    dicomMetaData.SeriesDate === undefined ||\n    dicomMetaData.SeriesTime === undefined ||\n    dicomMetaData.CorrectedImage === undefined ||\n    dicomMetaData.Units === undefined ||\n    !dicomMetaData.RadiopharmaceuticalInformationSequence ||\n    dicomMetaData.RadiopharmaceuticalInformationSequence[0].RadionuclideHalfLife === undefined ||\n    dicomMetaData.RadiopharmaceuticalInformationSequence[0].RadionuclideTotalDose === undefined ||\n    dicomMetaData.DecayCorrection === undefined ||\n    dicomMetaData.AcquisitionDate === undefined ||\n    dicomMetaData.AcquisitionTime === undefined ||\n    (dicomMetaData.RadiopharmaceuticalInformationSequence[0].RadiopharmaceuticalStartDateTime ===\n      undefined &&\n      dicomMetaData.RadiopharmaceuticalInformationSequence[0].RadiopharmaceuticalStartTime ===\n        undefined)\n  ) {\n    throw new Error('required metadata are missing');\n  }\n\n  if (dicomMetaData.PatientWeight === undefined) {\n    console.warn('PatientWeight missing from PT instance metadata');\n  }\n\n  const instanceMetadata: InstanceMetadata = {\n    CorrectedImage: dicomMetaData.CorrectedImage,\n    Units: dicomMetaData.Units,\n    RadionuclideHalfLife:\n      dicomMetaData.RadiopharmaceuticalInformationSequence[0].RadionuclideHalfLife,\n    RadionuclideTotalDose:\n      dicomMetaData.RadiopharmaceuticalInformationSequence[0].RadionuclideTotalDose,\n    RadiopharmaceuticalStartDateTime:\n      dicomMetaData.RadiopharmaceuticalInformationSequence[0].RadiopharmaceuticalStartDateTime,\n    RadiopharmaceuticalStartTime:\n      dicomMetaData.RadiopharmaceuticalInformationSequence[0].RadiopharmaceuticalStartTime,\n    DecayCorrection: dicomMetaData.DecayCorrection,\n    PatientWeight: dicomMetaData.PatientWeight,\n    SeriesDate: dicomMetaData.SeriesDate,\n    SeriesTime: dicomMetaData.SeriesTime,\n    AcquisitionDate: dicomMetaData.AcquisitionDate,\n    AcquisitionTime: dicomMetaData.AcquisitionTime,\n  };\n\n  if (\n    dicomMetaData['70531000'] ||\n    dicomMetaData['70531000'] !== undefined ||\n    dicomMetaData['70531009'] ||\n    dicomMetaData['70531009'] !== undefined\n  ) {\n    const philipsPETPrivateGroup: PhilipsPETPrivateGroup = {\n      SUVScaleFactor: dicomMetaData['70531000'],\n      ActivityConcentrationScaleFactor: dicomMetaData['70531009'],\n    };\n    instanceMetadata.PhilipsPETPrivateGroup = philipsPETPrivateGroup;\n  }\n\n  if (dicomMetaData['0009100d'] && dicomMetaData['0009100d'] !== undefined) {\n    instanceMetadata.GEPrivatePostInjectionDateTime = dicomMetaData['0009100d'];\n  }\n\n  if (dicomMetaData.FrameReferenceTime && dicomMetaData.FrameReferenceTime !== undefined) {\n    instanceMetadata.FrameReferenceTime = dicomMetaData.FrameReferenceTime;\n  }\n\n  if (dicomMetaData.ActualFrameDuration && dicomMetaData.ActualFrameDuration !== undefined) {\n    instanceMetadata.ActualFrameDuration = dicomMetaData.ActualFrameDuration;\n  }\n\n  if (dicomMetaData.PatientSex && dicomMetaData.PatientSex !== undefined) {\n    instanceMetadata.PatientSex = dicomMetaData.PatientSex;\n  }\n\n  if (dicomMetaData.PatientSize && dicomMetaData.PatientSize !== undefined) {\n    instanceMetadata.PatientSize = dicomMetaData.PatientSize;\n  }\n\n  return instanceMetadata;\n}\n\nfunction convertInterfaceTimeToString(time): string {\n  const hours = `${time.hours || '00'}`.padStart(2, '0');\n  const minutes = `${time.minutes || '00'}`.padStart(2, '0');\n  const seconds = `${time.seconds || '00'}`.padStart(2, '0');\n\n  const fractionalSeconds = `${time.fractionalSeconds || '000000'}`.padEnd(6, '0');\n\n  const timeString = `${hours}${minutes}${seconds}.${fractionalSeconds}`;\n  return timeString;\n}\n\nfunction convertInterfaceDateToString(date): string {\n  const month = `${date.month}`.padStart(2, '0');\n  const day = `${date.day}`.padStart(2, '0');\n  const dateString = `${date.year}${month}${day}`;\n  return dateString;\n}\n\nexport { getPTImageIdInstanceMetadata };\n","export default [\n  {\n    ColorSpace: 'RGB',\n    Name: 'hot_iron',\n    RGBPoints: [\n      0.0, 0.0039215686, 0.0039215686, 0.0156862745, 0.00392156862745098, 0.0039215686,\n      0.0039215686, 0.0156862745, 0.00784313725490196, 0.0039215686, 0.0039215686, 0.031372549,\n      0.011764705882352941, 0.0039215686, 0.0039215686, 0.0470588235, 0.01568627450980392,\n      0.0039215686, 0.0039215686, 0.062745098, 0.0196078431372549, 0.0039215686, 0.0039215686,\n      0.0784313725, 0.023529411764705882, 0.0039215686, 0.0039215686, 0.0941176471,\n      0.027450980392156862, 0.0039215686, 0.0039215686, 0.1098039216, 0.03137254901960784,\n      0.0039215686, 0.0039215686, 0.1254901961, 0.03529411764705882, 0.0039215686, 0.0039215686,\n      0.1411764706, 0.0392156862745098, 0.0039215686, 0.0039215686, 0.1568627451,\n      0.043137254901960784, 0.0039215686, 0.0039215686, 0.1725490196, 0.047058823529411764,\n      0.0039215686, 0.0039215686, 0.1882352941, 0.050980392156862744, 0.0039215686, 0.0039215686,\n      0.2039215686, 0.054901960784313725, 0.0039215686, 0.0039215686, 0.2196078431,\n      0.05882352941176471, 0.0039215686, 0.0039215686, 0.2352941176, 0.06274509803921569,\n      0.0039215686, 0.0039215686, 0.2509803922, 0.06666666666666667, 0.0039215686, 0.0039215686,\n      0.262745098, 0.07058823529411765, 0.0039215686, 0.0039215686, 0.2784313725,\n      0.07450980392156863, 0.0039215686, 0.0039215686, 0.2941176471, 0.0784313725490196,\n      0.0039215686, 0.0039215686, 0.3098039216, 0.08235294117647059, 0.0039215686, 0.0039215686,\n      0.3254901961, 0.08627450980392157, 0.0039215686, 0.0039215686, 0.3411764706,\n      0.09019607843137255, 0.0039215686, 0.0039215686, 0.3568627451, 0.09411764705882353,\n      0.0039215686, 0.0039215686, 0.3725490196, 0.09803921568627451, 0.0039215686, 0.0039215686,\n      0.3882352941, 0.10196078431372549, 0.0039215686, 0.0039215686, 0.4039215686,\n      0.10588235294117647, 0.0039215686, 0.0039215686, 0.4196078431, 0.10980392156862745,\n      0.0039215686, 0.0039215686, 0.4352941176, 0.11372549019607843, 0.0039215686, 0.0039215686,\n      0.4509803922, 0.11764705882352942, 0.0039215686, 0.0039215686, 0.4666666667,\n      0.12156862745098039, 0.0039215686, 0.0039215686, 0.4823529412, 0.12549019607843137,\n      0.0039215686, 0.0039215686, 0.4980392157, 0.12941176470588237, 0.0039215686, 0.0039215686,\n      0.5137254902, 0.13333333333333333, 0.0039215686, 0.0039215686, 0.5294117647,\n      0.13725490196078433, 0.0039215686, 0.0039215686, 0.5450980392, 0.1411764705882353,\n      0.0039215686, 0.0039215686, 0.5607843137, 0.1450980392156863, 0.0039215686, 0.0039215686,\n      0.5764705882, 0.14901960784313725, 0.0039215686, 0.0039215686, 0.5921568627,\n      0.15294117647058825, 0.0039215686, 0.0039215686, 0.6078431373, 0.1568627450980392,\n      0.0039215686, 0.0039215686, 0.6235294118, 0.1607843137254902, 0.0039215686, 0.0039215686,\n      0.6392156863, 0.16470588235294117, 0.0039215686, 0.0039215686, 0.6549019608,\n      0.16862745098039217, 0.0039215686, 0.0039215686, 0.6705882353, 0.17254901960784313,\n      0.0039215686, 0.0039215686, 0.6862745098, 0.17647058823529413, 0.0039215686, 0.0039215686,\n      0.7019607843, 0.1803921568627451, 0.0039215686, 0.0039215686, 0.7176470588,\n      0.1843137254901961, 0.0039215686, 0.0039215686, 0.7333333333, 0.18823529411764706,\n      0.0039215686, 0.0039215686, 0.7490196078, 0.19215686274509805, 0.0039215686, 0.0039215686,\n      0.7607843137, 0.19607843137254902, 0.0039215686, 0.0039215686, 0.7764705882, 0.2,\n      0.0039215686, 0.0039215686, 0.7921568627, 0.20392156862745098, 0.0039215686, 0.0039215686,\n      0.8078431373, 0.20784313725490197, 0.0039215686, 0.0039215686, 0.8235294118,\n      0.21176470588235294, 0.0039215686, 0.0039215686, 0.8392156863, 0.21568627450980393,\n      0.0039215686, 0.0039215686, 0.8549019608, 0.2196078431372549, 0.0039215686, 0.0039215686,\n      0.8705882353, 0.2235294117647059, 0.0039215686, 0.0039215686, 0.8862745098,\n      0.22745098039215686, 0.0039215686, 0.0039215686, 0.9019607843, 0.23137254901960785,\n      0.0039215686, 0.0039215686, 0.9176470588, 0.23529411764705885, 0.0039215686, 0.0039215686,\n      0.9333333333, 0.23921568627450984, 0.0039215686, 0.0039215686, 0.9490196078,\n      0.24313725490196078, 0.0039215686, 0.0039215686, 0.9647058824, 0.24705882352941178,\n      0.0039215686, 0.0039215686, 0.9803921569, 0.25098039215686274, 0.0039215686, 0.0039215686,\n      0.9960784314, 0.2549019607843137, 0.0039215686, 0.0039215686, 0.9960784314,\n      0.25882352941176473, 0.0156862745, 0.0039215686, 0.9803921569, 0.2627450980392157,\n      0.031372549, 0.0039215686, 0.9647058824, 0.26666666666666666, 0.0470588235, 0.0039215686,\n      0.9490196078, 0.27058823529411763, 0.062745098, 0.0039215686, 0.9333333333,\n      0.27450980392156865, 0.0784313725, 0.0039215686, 0.9176470588, 0.2784313725490196,\n      0.0941176471, 0.0039215686, 0.9019607843, 0.2823529411764706, 0.1098039216, 0.0039215686,\n      0.8862745098, 0.28627450980392155, 0.1254901961, 0.0039215686, 0.8705882353,\n      0.2901960784313726, 0.1411764706, 0.0039215686, 0.8549019608, 0.29411764705882354,\n      0.1568627451, 0.0039215686, 0.8392156863, 0.2980392156862745, 0.1725490196, 0.0039215686,\n      0.8235294118, 0.30196078431372547, 0.1882352941, 0.0039215686, 0.8078431373,\n      0.3058823529411765, 0.2039215686, 0.0039215686, 0.7921568627, 0.30980392156862746,\n      0.2196078431, 0.0039215686, 0.7764705882, 0.3137254901960784, 0.2352941176, 0.0039215686,\n      0.7607843137, 0.3176470588235294, 0.2509803922, 0.0039215686, 0.7490196078,\n      0.3215686274509804, 0.262745098, 0.0039215686, 0.7333333333, 0.3254901960784314, 0.2784313725,\n      0.0039215686, 0.7176470588, 0.32941176470588235, 0.2941176471, 0.0039215686, 0.7019607843,\n      0.3333333333333333, 0.3098039216, 0.0039215686, 0.6862745098, 0.33725490196078434,\n      0.3254901961, 0.0039215686, 0.6705882353, 0.3411764705882353, 0.3411764706, 0.0039215686,\n      0.6549019608, 0.34509803921568627, 0.3568627451, 0.0039215686, 0.6392156863,\n      0.34901960784313724, 0.3725490196, 0.0039215686, 0.6235294118, 0.35294117647058826,\n      0.3882352941, 0.0039215686, 0.6078431373, 0.3568627450980392, 0.4039215686, 0.0039215686,\n      0.5921568627, 0.3607843137254902, 0.4196078431, 0.0039215686, 0.5764705882,\n      0.36470588235294116, 0.4352941176, 0.0039215686, 0.5607843137, 0.3686274509803922,\n      0.4509803922, 0.0039215686, 0.5450980392, 0.37254901960784315, 0.4666666667, 0.0039215686,\n      0.5294117647, 0.3764705882352941, 0.4823529412, 0.0039215686, 0.5137254902,\n      0.3803921568627451, 0.4980392157, 0.0039215686, 0.4980392157, 0.3843137254901961,\n      0.5137254902, 0.0039215686, 0.4823529412, 0.38823529411764707, 0.5294117647, 0.0039215686,\n      0.4666666667, 0.39215686274509803, 0.5450980392, 0.0039215686, 0.4509803922,\n      0.396078431372549, 0.5607843137, 0.0039215686, 0.4352941176, 0.4, 0.5764705882, 0.0039215686,\n      0.4196078431, 0.403921568627451, 0.5921568627, 0.0039215686, 0.4039215686,\n      0.40784313725490196, 0.6078431373, 0.0039215686, 0.3882352941, 0.4117647058823529,\n      0.6235294118, 0.0039215686, 0.3725490196, 0.41568627450980394, 0.6392156863, 0.0039215686,\n      0.3568627451, 0.4196078431372549, 0.6549019608, 0.0039215686, 0.3411764706,\n      0.4235294117647059, 0.6705882353, 0.0039215686, 0.3254901961, 0.42745098039215684,\n      0.6862745098, 0.0039215686, 0.3098039216, 0.43137254901960786, 0.7019607843, 0.0039215686,\n      0.2941176471, 0.43529411764705883, 0.7176470588, 0.0039215686, 0.2784313725,\n      0.4392156862745098, 0.7333333333, 0.0039215686, 0.262745098, 0.44313725490196076,\n      0.7490196078, 0.0039215686, 0.2509803922, 0.4470588235294118, 0.7607843137, 0.0039215686,\n      0.2352941176, 0.45098039215686275, 0.7764705882, 0.0039215686, 0.2196078431,\n      0.4549019607843137, 0.7921568627, 0.0039215686, 0.2039215686, 0.4588235294117647,\n      0.8078431373, 0.0039215686, 0.1882352941, 0.4627450980392157, 0.8235294118, 0.0039215686,\n      0.1725490196, 0.4666666666666667, 0.8392156863, 0.0039215686, 0.1568627451,\n      0.4705882352941177, 0.8549019608, 0.0039215686, 0.1411764706, 0.4745098039215686,\n      0.8705882353, 0.0039215686, 0.1254901961, 0.4784313725490197, 0.8862745098, 0.0039215686,\n      0.1098039216, 0.48235294117647065, 0.9019607843, 0.0039215686, 0.0941176471,\n      0.48627450980392156, 0.9176470588, 0.0039215686, 0.0784313725, 0.49019607843137253,\n      0.9333333333, 0.0039215686, 0.062745098, 0.49411764705882355, 0.9490196078, 0.0039215686,\n      0.0470588235, 0.4980392156862745, 0.9647058824, 0.0039215686, 0.031372549, 0.5019607843137255,\n      0.9803921569, 0.0039215686, 0.0156862745, 0.5058823529411764, 0.9960784314, 0.0039215686,\n      0.0039215686, 0.5098039215686274, 0.9960784314, 0.0156862745, 0.0039215686,\n      0.5137254901960784, 0.9960784314, 0.031372549, 0.0039215686, 0.5176470588235295, 0.9960784314,\n      0.0470588235, 0.0039215686, 0.5215686274509804, 0.9960784314, 0.062745098, 0.0039215686,\n      0.5254901960784314, 0.9960784314, 0.0784313725, 0.0039215686, 0.5294117647058824,\n      0.9960784314, 0.0941176471, 0.0039215686, 0.5333333333333333, 0.9960784314, 0.1098039216,\n      0.0039215686, 0.5372549019607843, 0.9960784314, 0.1254901961, 0.0039215686,\n      0.5411764705882353, 0.9960784314, 0.1411764706, 0.0039215686, 0.5450980392156862,\n      0.9960784314, 0.1568627451, 0.0039215686, 0.5490196078431373, 0.9960784314, 0.1725490196,\n      0.0039215686, 0.5529411764705883, 0.9960784314, 0.1882352941, 0.0039215686,\n      0.5568627450980392, 0.9960784314, 0.2039215686, 0.0039215686, 0.5607843137254902,\n      0.9960784314, 0.2196078431, 0.0039215686, 0.5647058823529412, 0.9960784314, 0.2352941176,\n      0.0039215686, 0.5686274509803921, 0.9960784314, 0.2509803922, 0.0039215686,\n      0.5725490196078431, 0.9960784314, 0.262745098, 0.0039215686, 0.5764705882352941, 0.9960784314,\n      0.2784313725, 0.0039215686, 0.5803921568627451, 0.9960784314, 0.2941176471, 0.0039215686,\n      0.5843137254901961, 0.9960784314, 0.3098039216, 0.0039215686, 0.5882352941176471,\n      0.9960784314, 0.3254901961, 0.0039215686, 0.592156862745098, 0.9960784314, 0.3411764706,\n      0.0039215686, 0.596078431372549, 0.9960784314, 0.3568627451, 0.0039215686, 0.6, 0.9960784314,\n      0.3725490196, 0.0039215686, 0.6039215686274509, 0.9960784314, 0.3882352941, 0.0039215686,\n      0.6078431372549019, 0.9960784314, 0.4039215686, 0.0039215686, 0.611764705882353, 0.9960784314,\n      0.4196078431, 0.0039215686, 0.615686274509804, 0.9960784314, 0.4352941176, 0.0039215686,\n      0.6196078431372549, 0.9960784314, 0.4509803922, 0.0039215686, 0.6235294117647059,\n      0.9960784314, 0.4666666667, 0.0039215686, 0.6274509803921569, 0.9960784314, 0.4823529412,\n      0.0039215686, 0.6313725490196078, 0.9960784314, 0.4980392157, 0.0039215686,\n      0.6352941176470588, 0.9960784314, 0.5137254902, 0.0039215686, 0.6392156862745098,\n      0.9960784314, 0.5294117647, 0.0039215686, 0.6431372549019608, 0.9960784314, 0.5450980392,\n      0.0039215686, 0.6470588235294118, 0.9960784314, 0.5607843137, 0.0039215686,\n      0.6509803921568628, 0.9960784314, 0.5764705882, 0.0039215686, 0.6549019607843137,\n      0.9960784314, 0.5921568627, 0.0039215686, 0.6588235294117647, 0.9960784314, 0.6078431373,\n      0.0039215686, 0.6627450980392157, 0.9960784314, 0.6235294118, 0.0039215686,\n      0.6666666666666666, 0.9960784314, 0.6392156863, 0.0039215686, 0.6705882352941176,\n      0.9960784314, 0.6549019608, 0.0039215686, 0.6745098039215687, 0.9960784314, 0.6705882353,\n      0.0039215686, 0.6784313725490196, 0.9960784314, 0.6862745098, 0.0039215686,\n      0.6823529411764706, 0.9960784314, 0.7019607843, 0.0039215686, 0.6862745098039216,\n      0.9960784314, 0.7176470588, 0.0039215686, 0.6901960784313725, 0.9960784314, 0.7333333333,\n      0.0039215686, 0.6941176470588235, 0.9960784314, 0.7490196078, 0.0039215686,\n      0.6980392156862745, 0.9960784314, 0.7607843137, 0.0039215686, 0.7019607843137254,\n      0.9960784314, 0.7764705882, 0.0039215686, 0.7058823529411765, 0.9960784314, 0.7921568627,\n      0.0039215686, 0.7098039215686275, 0.9960784314, 0.8078431373, 0.0039215686,\n      0.7137254901960784, 0.9960784314, 0.8235294118, 0.0039215686, 0.7176470588235294,\n      0.9960784314, 0.8392156863, 0.0039215686, 0.7215686274509804, 0.9960784314, 0.8549019608,\n      0.0039215686, 0.7254901960784313, 0.9960784314, 0.8705882353, 0.0039215686,\n      0.7294117647058823, 0.9960784314, 0.8862745098, 0.0039215686, 0.7333333333333333,\n      0.9960784314, 0.9019607843, 0.0039215686, 0.7372549019607844, 0.9960784314, 0.9176470588,\n      0.0039215686, 0.7411764705882353, 0.9960784314, 0.9333333333, 0.0039215686,\n      0.7450980392156863, 0.9960784314, 0.9490196078, 0.0039215686, 0.7490196078431373,\n      0.9960784314, 0.9647058824, 0.0039215686, 0.7529411764705882, 0.9960784314, 0.9803921569,\n      0.0039215686, 0.7568627450980392, 0.9960784314, 0.9960784314, 0.0039215686,\n      0.7607843137254902, 0.9960784314, 0.9960784314, 0.0196078431, 0.7647058823529411,\n      0.9960784314, 0.9960784314, 0.0352941176, 0.7686274509803922, 0.9960784314, 0.9960784314,\n      0.0509803922, 0.7725490196078432, 0.9960784314, 0.9960784314, 0.0666666667,\n      0.7764705882352941, 0.9960784314, 0.9960784314, 0.0823529412, 0.7803921568627451,\n      0.9960784314, 0.9960784314, 0.0980392157, 0.7843137254901961, 0.9960784314, 0.9960784314,\n      0.1137254902, 0.788235294117647, 0.9960784314, 0.9960784314, 0.1294117647, 0.792156862745098,\n      0.9960784314, 0.9960784314, 0.1450980392, 0.796078431372549, 0.9960784314, 0.9960784314,\n      0.1607843137, 0.8, 0.9960784314, 0.9960784314, 0.1764705882, 0.803921568627451, 0.9960784314,\n      0.9960784314, 0.1921568627, 0.807843137254902, 0.9960784314, 0.9960784314, 0.2078431373,\n      0.8117647058823529, 0.9960784314, 0.9960784314, 0.2235294118, 0.8156862745098039,\n      0.9960784314, 0.9960784314, 0.2392156863, 0.8196078431372549, 0.9960784314, 0.9960784314,\n      0.2509803922, 0.8235294117647058, 0.9960784314, 0.9960784314, 0.2666666667,\n      0.8274509803921568, 0.9960784314, 0.9960784314, 0.2823529412, 0.8313725490196079,\n      0.9960784314, 0.9960784314, 0.2980392157, 0.8352941176470589, 0.9960784314, 0.9960784314,\n      0.3137254902, 0.8392156862745098, 0.9960784314, 0.9960784314, 0.3333333333,\n      0.8431372549019608, 0.9960784314, 0.9960784314, 0.3490196078, 0.8470588235294118,\n      0.9960784314, 0.9960784314, 0.3647058824, 0.8509803921568627, 0.9960784314, 0.9960784314,\n      0.3803921569, 0.8549019607843137, 0.9960784314, 0.9960784314, 0.3960784314,\n      0.8588235294117647, 0.9960784314, 0.9960784314, 0.4117647059, 0.8627450980392157,\n      0.9960784314, 0.9960784314, 0.4274509804, 0.8666666666666667, 0.9960784314, 0.9960784314,\n      0.4431372549, 0.8705882352941177, 0.9960784314, 0.9960784314, 0.4588235294,\n      0.8745098039215686, 0.9960784314, 0.9960784314, 0.4745098039, 0.8784313725490196,\n      0.9960784314, 0.9960784314, 0.4901960784, 0.8823529411764706, 0.9960784314, 0.9960784314,\n      0.5058823529, 0.8862745098039215, 0.9960784314, 0.9960784314, 0.5215686275,\n      0.8901960784313725, 0.9960784314, 0.9960784314, 0.537254902, 0.8941176470588236, 0.9960784314,\n      0.9960784314, 0.5529411765, 0.8980392156862745, 0.9960784314, 0.9960784314, 0.568627451,\n      0.9019607843137255, 0.9960784314, 0.9960784314, 0.5843137255, 0.9058823529411765,\n      0.9960784314, 0.9960784314, 0.6, 0.9098039215686274, 0.9960784314, 0.9960784314, 0.6156862745,\n      0.9137254901960784, 0.9960784314, 0.9960784314, 0.631372549, 0.9176470588235294, 0.9960784314,\n      0.9960784314, 0.6470588235, 0.9215686274509803, 0.9960784314, 0.9960784314, 0.6666666667,\n      0.9254901960784314, 0.9960784314, 0.9960784314, 0.6823529412, 0.9294117647058824,\n      0.9960784314, 0.9960784314, 0.6980392157, 0.9333333333333333, 0.9960784314, 0.9960784314,\n      0.7137254902, 0.9372549019607843, 0.9960784314, 0.9960784314, 0.7294117647,\n      0.9411764705882354, 0.9960784314, 0.9960784314, 0.7450980392, 0.9450980392156864,\n      0.9960784314, 0.9960784314, 0.7568627451, 0.9490196078431372, 0.9960784314, 0.9960784314,\n      0.7725490196, 0.9529411764705882, 0.9960784314, 0.9960784314, 0.7882352941,\n      0.9568627450980394, 0.9960784314, 0.9960784314, 0.8039215686, 0.9607843137254903,\n      0.9960784314, 0.9960784314, 0.8196078431, 0.9647058823529413, 0.9960784314, 0.9960784314,\n      0.8352941176, 0.9686274509803922, 0.9960784314, 0.9960784314, 0.8509803922,\n      0.9725490196078431, 0.9960784314, 0.9960784314, 0.8666666667, 0.9764705882352941,\n      0.9960784314, 0.9960784314, 0.8823529412, 0.9803921568627451, 0.9960784314, 0.9960784314,\n      0.8980392157, 0.984313725490196, 0.9960784314, 0.9960784314, 0.9137254902, 0.9882352941176471,\n      0.9960784314, 0.9960784314, 0.9294117647, 0.9921568627450981, 0.9960784314, 0.9960784314,\n      0.9450980392, 0.996078431372549, 0.9960784314, 0.9960784314, 0.9607843137, 1.0, 0.9960784314,\n      0.9960784314, 0.9607843137,\n    ],\n  },\n  {\n    ColorSpace: 'RGB',\n    Name: 'red_hot',\n    RGBPoints: [\n      0.0, 0.0, 0.0, 0.0, 0.00392156862745098, 0.0, 0.0, 0.0, 0.00784313725490196, 0.0, 0.0, 0.0,\n      0.011764705882352941, 0.0, 0.0, 0.0, 0.01568627450980392, 0.0039215686, 0.0039215686,\n      0.0039215686, 0.0196078431372549, 0.0039215686, 0.0039215686, 0.0039215686,\n      0.023529411764705882, 0.0039215686, 0.0039215686, 0.0039215686, 0.027450980392156862,\n      0.0039215686, 0.0039215686, 0.0039215686, 0.03137254901960784, 0.0039215686, 0.0039215686,\n      0.0039215686, 0.03529411764705882, 0.0156862745, 0.0, 0.0, 0.0392156862745098, 0.0274509804,\n      0.0, 0.0, 0.043137254901960784, 0.0392156863, 0.0, 0.0, 0.047058823529411764, 0.0509803922,\n      0.0, 0.0, 0.050980392156862744, 0.062745098, 0.0, 0.0, 0.054901960784313725, 0.0784313725,\n      0.0, 0.0, 0.05882352941176471, 0.0901960784, 0.0, 0.0, 0.06274509803921569, 0.1058823529, 0.0,\n      0.0, 0.06666666666666667, 0.1176470588, 0.0, 0.0, 0.07058823529411765, 0.1294117647, 0.0, 0.0,\n      0.07450980392156863, 0.1411764706, 0.0, 0.0, 0.0784313725490196, 0.1529411765, 0.0, 0.0,\n      0.08235294117647059, 0.1647058824, 0.0, 0.0, 0.08627450980392157, 0.1764705882, 0.0, 0.0,\n      0.09019607843137255, 0.1882352941, 0.0, 0.0, 0.09411764705882353, 0.2039215686, 0.0, 0.0,\n      0.09803921568627451, 0.2156862745, 0.0, 0.0, 0.10196078431372549, 0.2274509804, 0.0, 0.0,\n      0.10588235294117647, 0.2392156863, 0.0, 0.0, 0.10980392156862745, 0.2549019608, 0.0, 0.0,\n      0.11372549019607843, 0.2666666667, 0.0, 0.0, 0.11764705882352942, 0.2784313725, 0.0, 0.0,\n      0.12156862745098039, 0.2901960784, 0.0, 0.0, 0.12549019607843137, 0.3058823529, 0.0, 0.0,\n      0.12941176470588237, 0.3176470588, 0.0, 0.0, 0.13333333333333333, 0.3294117647, 0.0, 0.0,\n      0.13725490196078433, 0.3411764706, 0.0, 0.0, 0.1411764705882353, 0.3529411765, 0.0, 0.0,\n      0.1450980392156863, 0.3647058824, 0.0, 0.0, 0.14901960784313725, 0.3764705882, 0.0, 0.0,\n      0.15294117647058825, 0.3882352941, 0.0, 0.0, 0.1568627450980392, 0.4039215686, 0.0, 0.0,\n      0.1607843137254902, 0.4156862745, 0.0, 0.0, 0.16470588235294117, 0.431372549, 0.0, 0.0,\n      0.16862745098039217, 0.4431372549, 0.0, 0.0, 0.17254901960784313, 0.4588235294, 0.0, 0.0,\n      0.17647058823529413, 0.4705882353, 0.0, 0.0, 0.1803921568627451, 0.4823529412, 0.0, 0.0,\n      0.1843137254901961, 0.4941176471, 0.0, 0.0, 0.18823529411764706, 0.5098039216, 0.0, 0.0,\n      0.19215686274509805, 0.5215686275, 0.0, 0.0, 0.19607843137254902, 0.5333333333, 0.0, 0.0, 0.2,\n      0.5450980392, 0.0, 0.0, 0.20392156862745098, 0.5568627451, 0.0, 0.0, 0.20784313725490197,\n      0.568627451, 0.0, 0.0, 0.21176470588235294, 0.5803921569, 0.0, 0.0, 0.21568627450980393,\n      0.5921568627, 0.0, 0.0, 0.2196078431372549, 0.6078431373, 0.0, 0.0, 0.2235294117647059,\n      0.6196078431, 0.0, 0.0, 0.22745098039215686, 0.631372549, 0.0, 0.0, 0.23137254901960785,\n      0.6431372549, 0.0, 0.0, 0.23529411764705885, 0.6588235294, 0.0, 0.0, 0.23921568627450984,\n      0.6705882353, 0.0, 0.0, 0.24313725490196078, 0.6823529412, 0.0, 0.0, 0.24705882352941178,\n      0.6941176471, 0.0, 0.0, 0.25098039215686274, 0.7098039216, 0.0, 0.0, 0.2549019607843137,\n      0.7215686275, 0.0, 0.0, 0.25882352941176473, 0.7333333333, 0.0, 0.0, 0.2627450980392157,\n      0.7450980392, 0.0, 0.0, 0.26666666666666666, 0.7568627451, 0.0, 0.0, 0.27058823529411763,\n      0.768627451, 0.0, 0.0, 0.27450980392156865, 0.7843137255, 0.0, 0.0, 0.2784313725490196,\n      0.7960784314, 0.0, 0.0, 0.2823529411764706, 0.8117647059, 0.0, 0.0, 0.28627450980392155,\n      0.8235294118, 0.0, 0.0, 0.2901960784313726, 0.8352941176, 0.0, 0.0, 0.29411764705882354,\n      0.8470588235, 0.0, 0.0, 0.2980392156862745, 0.862745098, 0.0, 0.0, 0.30196078431372547,\n      0.8745098039, 0.0, 0.0, 0.3058823529411765, 0.8862745098, 0.0, 0.0, 0.30980392156862746,\n      0.8980392157, 0.0, 0.0, 0.3137254901960784, 0.9137254902, 0.0, 0.0, 0.3176470588235294,\n      0.9254901961, 0.0, 0.0, 0.3215686274509804, 0.937254902, 0.0, 0.0, 0.3254901960784314,\n      0.9490196078, 0.0, 0.0, 0.32941176470588235, 0.9607843137, 0.0, 0.0, 0.3333333333333333,\n      0.968627451, 0.0, 0.0, 0.33725490196078434, 0.9803921569, 0.0039215686, 0.0,\n      0.3411764705882353, 0.9882352941, 0.0078431373, 0.0, 0.34509803921568627, 1.0, 0.0117647059,\n      0.0, 0.34901960784313724, 1.0, 0.0235294118, 0.0, 0.35294117647058826, 1.0, 0.0352941176, 0.0,\n      0.3568627450980392, 1.0, 0.0470588235, 0.0, 0.3607843137254902, 1.0, 0.062745098, 0.0,\n      0.36470588235294116, 1.0, 0.0745098039, 0.0, 0.3686274509803922, 1.0, 0.0862745098, 0.0,\n      0.37254901960784315, 1.0, 0.0980392157, 0.0, 0.3764705882352941, 1.0, 0.1137254902, 0.0,\n      0.3803921568627451, 1.0, 0.1254901961, 0.0, 0.3843137254901961, 1.0, 0.137254902, 0.0,\n      0.38823529411764707, 1.0, 0.1490196078, 0.0, 0.39215686274509803, 1.0, 0.1647058824, 0.0,\n      0.396078431372549, 1.0, 0.1764705882, 0.0, 0.4, 1.0, 0.1882352941, 0.0, 0.403921568627451,\n      1.0, 0.2, 0.0, 0.40784313725490196, 1.0, 0.2156862745, 0.0, 0.4117647058823529, 1.0,\n      0.2274509804, 0.0, 0.41568627450980394, 1.0, 0.2392156863, 0.0, 0.4196078431372549, 1.0,\n      0.2509803922, 0.0, 0.4235294117647059, 1.0, 0.2666666667, 0.0, 0.42745098039215684, 1.0,\n      0.2784313725, 0.0, 0.43137254901960786, 1.0, 0.2901960784, 0.0, 0.43529411764705883, 1.0,\n      0.3019607843, 0.0, 0.4392156862745098, 1.0, 0.3176470588, 0.0, 0.44313725490196076, 1.0,\n      0.3294117647, 0.0, 0.4470588235294118, 1.0, 0.3411764706, 0.0, 0.45098039215686275, 1.0,\n      0.3529411765, 0.0, 0.4549019607843137, 1.0, 0.368627451, 0.0, 0.4588235294117647, 1.0,\n      0.3803921569, 0.0, 0.4627450980392157, 1.0, 0.3921568627, 0.0, 0.4666666666666667, 1.0,\n      0.4039215686, 0.0, 0.4705882352941177, 1.0, 0.4156862745, 0.0, 0.4745098039215686, 1.0,\n      0.4274509804, 0.0, 0.4784313725490197, 1.0, 0.4392156863, 0.0, 0.48235294117647065, 1.0,\n      0.4509803922, 0.0, 0.48627450980392156, 1.0, 0.4666666667, 0.0, 0.49019607843137253, 1.0,\n      0.4784313725, 0.0, 0.49411764705882355, 1.0, 0.4941176471, 0.0, 0.4980392156862745, 1.0,\n      0.5058823529, 0.0, 0.5019607843137255, 1.0, 0.5215686275, 0.0, 0.5058823529411764, 1.0,\n      0.5333333333, 0.0, 0.5098039215686274, 1.0, 0.5450980392, 0.0, 0.5137254901960784, 1.0,\n      0.5568627451, 0.0, 0.5176470588235295, 1.0, 0.568627451, 0.0, 0.5215686274509804, 1.0,\n      0.5803921569, 0.0, 0.5254901960784314, 1.0, 0.5921568627, 0.0, 0.5294117647058824, 1.0,\n      0.6039215686, 0.0, 0.5333333333333333, 1.0, 0.6196078431, 0.0, 0.5372549019607843, 1.0,\n      0.631372549, 0.0, 0.5411764705882353, 1.0, 0.6431372549, 0.0, 0.5450980392156862, 1.0,\n      0.6549019608, 0.0, 0.5490196078431373, 1.0, 0.6705882353, 0.0, 0.5529411764705883, 1.0,\n      0.6823529412, 0.0, 0.5568627450980392, 1.0, 0.6941176471, 0.0, 0.5607843137254902, 1.0,\n      0.7058823529, 0.0, 0.5647058823529412, 1.0, 0.7215686275, 0.0, 0.5686274509803921, 1.0,\n      0.7333333333, 0.0, 0.5725490196078431, 1.0, 0.7450980392, 0.0, 0.5764705882352941, 1.0,\n      0.7568627451, 0.0, 0.5803921568627451, 1.0, 0.7725490196, 0.0, 0.5843137254901961, 1.0,\n      0.7843137255, 0.0, 0.5882352941176471, 1.0, 0.7960784314, 0.0, 0.592156862745098, 1.0,\n      0.8078431373, 0.0, 0.596078431372549, 1.0, 0.8196078431, 0.0, 0.6, 1.0, 0.831372549, 0.0,\n      0.6039215686274509, 1.0, 0.8470588235, 0.0, 0.6078431372549019, 1.0, 0.8588235294, 0.0,\n      0.611764705882353, 1.0, 0.8745098039, 0.0, 0.615686274509804, 1.0, 0.8862745098, 0.0,\n      0.6196078431372549, 1.0, 0.8980392157, 0.0, 0.6235294117647059, 1.0, 0.9098039216, 0.0,\n      0.6274509803921569, 1.0, 0.9254901961, 0.0, 0.6313725490196078, 1.0, 0.937254902, 0.0,\n      0.6352941176470588, 1.0, 0.9490196078, 0.0, 0.6392156862745098, 1.0, 0.9607843137, 0.0,\n      0.6431372549019608, 1.0, 0.9764705882, 0.0, 0.6470588235294118, 1.0, 0.9803921569,\n      0.0039215686, 0.6509803921568628, 1.0, 0.9882352941, 0.0117647059, 0.6549019607843137, 1.0,\n      0.9921568627, 0.0156862745, 0.6588235294117647, 1.0, 1.0, 0.0235294118, 0.6627450980392157,\n      1.0, 1.0, 0.0352941176, 0.6666666666666666, 1.0, 1.0, 0.0470588235, 0.6705882352941176, 1.0,\n      1.0, 0.0588235294, 0.6745098039215687, 1.0, 1.0, 0.0745098039, 0.6784313725490196, 1.0, 1.0,\n      0.0862745098, 0.6823529411764706, 1.0, 1.0, 0.0980392157, 0.6862745098039216, 1.0, 1.0,\n      0.1098039216, 0.6901960784313725, 1.0, 1.0, 0.1254901961, 0.6941176470588235, 1.0, 1.0,\n      0.137254902, 0.6980392156862745, 1.0, 1.0, 0.1490196078, 0.7019607843137254, 1.0, 1.0,\n      0.1607843137, 0.7058823529411765, 1.0, 1.0, 0.1764705882, 0.7098039215686275, 1.0, 1.0,\n      0.1882352941, 0.7137254901960784, 1.0, 1.0, 0.2, 0.7176470588235294, 1.0, 1.0, 0.2117647059,\n      0.7215686274509804, 1.0, 1.0, 0.2274509804, 0.7254901960784313, 1.0, 1.0, 0.2392156863,\n      0.7294117647058823, 1.0, 1.0, 0.2509803922, 0.7333333333333333, 1.0, 1.0, 0.262745098,\n      0.7372549019607844, 1.0, 1.0, 0.2784313725, 0.7411764705882353, 1.0, 1.0, 0.2901960784,\n      0.7450980392156863, 1.0, 1.0, 0.3019607843, 0.7490196078431373, 1.0, 1.0, 0.3137254902,\n      0.7529411764705882, 1.0, 1.0, 0.3294117647, 0.7568627450980392, 1.0, 1.0, 0.3411764706,\n      0.7607843137254902, 1.0, 1.0, 0.3529411765, 0.7647058823529411, 1.0, 1.0, 0.3647058824,\n      0.7686274509803922, 1.0, 1.0, 0.3803921569, 0.7725490196078432, 1.0, 1.0, 0.3921568627,\n      0.7764705882352941, 1.0, 1.0, 0.4039215686, 0.7803921568627451, 1.0, 1.0, 0.4156862745,\n      0.7843137254901961, 1.0, 1.0, 0.431372549, 0.788235294117647, 1.0, 1.0, 0.4431372549,\n      0.792156862745098, 1.0, 1.0, 0.4549019608, 0.796078431372549, 1.0, 1.0, 0.4666666667, 0.8,\n      1.0, 1.0, 0.4784313725, 0.803921568627451, 1.0, 1.0, 0.4901960784, 0.807843137254902, 1.0,\n      1.0, 0.5019607843, 0.8117647058823529, 1.0, 1.0, 0.5137254902, 0.8156862745098039, 1.0, 1.0,\n      0.5294117647, 0.8196078431372549, 1.0, 1.0, 0.5411764706, 0.8235294117647058, 1.0, 1.0,\n      0.5568627451, 0.8274509803921568, 1.0, 1.0, 0.568627451, 0.8313725490196079, 1.0, 1.0,\n      0.5843137255, 0.8352941176470589, 1.0, 1.0, 0.5960784314, 0.8392156862745098, 1.0, 1.0,\n      0.6078431373, 0.8431372549019608, 1.0, 1.0, 0.6196078431, 0.8470588235294118, 1.0, 1.0,\n      0.631372549, 0.8509803921568627, 1.0, 1.0, 0.6431372549, 0.8549019607843137, 1.0, 1.0,\n      0.6549019608, 0.8588235294117647, 1.0, 1.0, 0.6666666667, 0.8627450980392157, 1.0, 1.0,\n      0.6823529412, 0.8666666666666667, 1.0, 1.0, 0.6941176471, 0.8705882352941177, 1.0, 1.0,\n      0.7058823529, 0.8745098039215686, 1.0, 1.0, 0.7176470588, 0.8784313725490196, 1.0, 1.0,\n      0.7333333333, 0.8823529411764706, 1.0, 1.0, 0.7450980392, 0.8862745098039215, 1.0, 1.0,\n      0.7568627451, 0.8901960784313725, 1.0, 1.0, 0.768627451, 0.8941176470588236, 1.0, 1.0,\n      0.7843137255, 0.8980392156862745, 1.0, 1.0, 0.7960784314, 0.9019607843137255, 1.0, 1.0,\n      0.8078431373, 0.9058823529411765, 1.0, 1.0, 0.8196078431, 0.9098039215686274, 1.0, 1.0,\n      0.8352941176, 0.9137254901960784, 1.0, 1.0, 0.8470588235, 0.9176470588235294, 1.0, 1.0,\n      0.8588235294, 0.9215686274509803, 1.0, 1.0, 0.8705882353, 0.9254901960784314, 1.0, 1.0,\n      0.8823529412, 0.9294117647058824, 1.0, 1.0, 0.8941176471, 0.9333333333333333, 1.0, 1.0,\n      0.9098039216, 0.9372549019607843, 1.0, 1.0, 0.9215686275, 0.9411764705882354, 1.0, 1.0,\n      0.937254902, 0.9450980392156864, 1.0, 1.0, 0.9490196078, 0.9490196078431372, 1.0, 1.0,\n      0.9607843137, 0.9529411764705882, 1.0, 1.0, 0.9725490196, 0.9568627450980394, 1.0, 1.0,\n      0.9882352941, 0.9607843137254903, 1.0, 1.0, 0.9882352941, 0.9647058823529413, 1.0, 1.0,\n      0.9921568627, 0.9686274509803922, 1.0, 1.0, 0.9960784314, 0.9725490196078431, 1.0, 1.0, 1.0,\n      0.9764705882352941, 1.0, 1.0, 1.0, 0.9803921568627451, 1.0, 1.0, 1.0, 0.984313725490196, 1.0,\n      1.0, 1.0, 0.9882352941176471, 1.0, 1.0, 1.0, 0.9921568627450981, 1.0, 1.0, 1.0,\n      0.996078431372549, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,\n    ],\n  },\n  {\n    ColorSpace: 'RGB',\n    Name: 's_pet',\n    RGBPoints: [\n      0.0, 0.0156862745, 0.0039215686, 0.0156862745, 0.00392156862745098, 0.0156862745,\n      0.0039215686, 0.0156862745, 0.00784313725490196, 0.0274509804, 0.0039215686, 0.031372549,\n      0.011764705882352941, 0.0352941176, 0.0039215686, 0.0509803922, 0.01568627450980392,\n      0.0392156863, 0.0039215686, 0.0666666667, 0.0196078431372549, 0.0509803922, 0.0039215686,\n      0.0823529412, 0.023529411764705882, 0.062745098, 0.0039215686, 0.0980392157,\n      0.027450980392156862, 0.0705882353, 0.0039215686, 0.1176470588, 0.03137254901960784,\n      0.0745098039, 0.0039215686, 0.1333333333, 0.03529411764705882, 0.0862745098, 0.0039215686,\n      0.1490196078, 0.0392156862745098, 0.0980392157, 0.0039215686, 0.1647058824,\n      0.043137254901960784, 0.1058823529, 0.0039215686, 0.1843137255, 0.047058823529411764,\n      0.1098039216, 0.0039215686, 0.2, 0.050980392156862744, 0.1215686275, 0.0039215686,\n      0.2156862745, 0.054901960784313725, 0.1333333333, 0.0039215686, 0.231372549,\n      0.05882352941176471, 0.137254902, 0.0039215686, 0.2509803922, 0.06274509803921569,\n      0.1490196078, 0.0039215686, 0.262745098, 0.06666666666666667, 0.1607843137, 0.0039215686,\n      0.2784313725, 0.07058823529411765, 0.168627451, 0.0039215686, 0.2941176471,\n      0.07450980392156863, 0.1725490196, 0.0039215686, 0.3137254902, 0.0784313725490196,\n      0.1843137255, 0.0039215686, 0.3294117647, 0.08235294117647059, 0.1960784314, 0.0039215686,\n      0.3450980392, 0.08627450980392157, 0.2039215686, 0.0039215686, 0.3607843137,\n      0.09019607843137255, 0.2078431373, 0.0039215686, 0.3803921569, 0.09411764705882353,\n      0.2196078431, 0.0039215686, 0.3960784314, 0.09803921568627451, 0.231372549, 0.0039215686,\n      0.4117647059, 0.10196078431372549, 0.2392156863, 0.0039215686, 0.4274509804,\n      0.10588235294117647, 0.2431372549, 0.0039215686, 0.4470588235, 0.10980392156862745,\n      0.2509803922, 0.0039215686, 0.462745098, 0.11372549019607843, 0.262745098, 0.0039215686,\n      0.4784313725, 0.11764705882352942, 0.2666666667, 0.0039215686, 0.4980392157,\n      0.12156862745098039, 0.2666666667, 0.0039215686, 0.4980392157, 0.12549019607843137,\n      0.262745098, 0.0039215686, 0.5137254902, 0.12941176470588237, 0.2509803922, 0.0039215686,\n      0.5294117647, 0.13333333333333333, 0.2431372549, 0.0039215686, 0.5450980392,\n      0.13725490196078433, 0.2392156863, 0.0039215686, 0.5607843137, 0.1411764705882353,\n      0.231372549, 0.0039215686, 0.5764705882, 0.1450980392156863, 0.2196078431, 0.0039215686,\n      0.5921568627, 0.14901960784313725, 0.2078431373, 0.0039215686, 0.6078431373,\n      0.15294117647058825, 0.2039215686, 0.0039215686, 0.6235294118, 0.1568627450980392,\n      0.1960784314, 0.0039215686, 0.6392156863, 0.1607843137254902, 0.1843137255, 0.0039215686,\n      0.6549019608, 0.16470588235294117, 0.1725490196, 0.0039215686, 0.6705882353,\n      0.16862745098039217, 0.168627451, 0.0039215686, 0.6862745098, 0.17254901960784313,\n      0.1607843137, 0.0039215686, 0.7019607843, 0.17647058823529413, 0.1490196078, 0.0039215686,\n      0.7176470588, 0.1803921568627451, 0.137254902, 0.0039215686, 0.7333333333, 0.1843137254901961,\n      0.1333333333, 0.0039215686, 0.7490196078, 0.18823529411764706, 0.1215686275, 0.0039215686,\n      0.7607843137, 0.19215686274509805, 0.1098039216, 0.0039215686, 0.7764705882,\n      0.19607843137254902, 0.1058823529, 0.0039215686, 0.7921568627, 0.2, 0.0980392157,\n      0.0039215686, 0.8078431373, 0.20392156862745098, 0.0862745098, 0.0039215686, 0.8235294118,\n      0.20784313725490197, 0.0745098039, 0.0039215686, 0.8392156863, 0.21176470588235294,\n      0.0705882353, 0.0039215686, 0.8549019608, 0.21568627450980393, 0.062745098, 0.0039215686,\n      0.8705882353, 0.2196078431372549, 0.0509803922, 0.0039215686, 0.8862745098,\n      0.2235294117647059, 0.0392156863, 0.0039215686, 0.9019607843, 0.22745098039215686,\n      0.0352941176, 0.0039215686, 0.9176470588, 0.23137254901960785, 0.0274509804, 0.0039215686,\n      0.9333333333, 0.23529411764705885, 0.0156862745, 0.0039215686, 0.9490196078,\n      0.23921568627450984, 0.0078431373, 0.0039215686, 0.9647058824, 0.24313725490196078,\n      0.0039215686, 0.0039215686, 0.9960784314, 0.24705882352941178, 0.0039215686, 0.0039215686,\n      0.9960784314, 0.25098039215686274, 0.0039215686, 0.0196078431, 0.9647058824,\n      0.2549019607843137, 0.0039215686, 0.0392156863, 0.9490196078, 0.25882352941176473,\n      0.0039215686, 0.0549019608, 0.9333333333, 0.2627450980392157, 0.0039215686, 0.0745098039,\n      0.9176470588, 0.26666666666666666, 0.0039215686, 0.0901960784, 0.9019607843,\n      0.27058823529411763, 0.0039215686, 0.1098039216, 0.8862745098, 0.27450980392156865,\n      0.0039215686, 0.1254901961, 0.8705882353, 0.2784313725490196, 0.0039215686, 0.1450980392,\n      0.8549019608, 0.2823529411764706, 0.0039215686, 0.1607843137, 0.8392156863,\n      0.28627450980392155, 0.0039215686, 0.1803921569, 0.8235294118, 0.2901960784313726,\n      0.0039215686, 0.1960784314, 0.8078431373, 0.29411764705882354, 0.0039215686, 0.2156862745,\n      0.7921568627, 0.2980392156862745, 0.0039215686, 0.231372549, 0.7764705882,\n      0.30196078431372547, 0.0039215686, 0.2509803922, 0.7607843137, 0.3058823529411765,\n      0.0039215686, 0.262745098, 0.7490196078, 0.30980392156862746, 0.0039215686, 0.2823529412,\n      0.7333333333, 0.3137254901960784, 0.0039215686, 0.2980392157, 0.7176470588,\n      0.3176470588235294, 0.0039215686, 0.3176470588, 0.7019607843, 0.3215686274509804,\n      0.0039215686, 0.3333333333, 0.6862745098, 0.3254901960784314, 0.0039215686, 0.3529411765,\n      0.6705882353, 0.32941176470588235, 0.0039215686, 0.368627451, 0.6549019608,\n      0.3333333333333333, 0.0039215686, 0.3882352941, 0.6392156863, 0.33725490196078434,\n      0.0039215686, 0.4039215686, 0.6235294118, 0.3411764705882353, 0.0039215686, 0.4235294118,\n      0.6078431373, 0.34509803921568627, 0.0039215686, 0.4392156863, 0.5921568627,\n      0.34901960784313724, 0.0039215686, 0.4588235294, 0.5764705882, 0.35294117647058826,\n      0.0039215686, 0.4745098039, 0.5607843137, 0.3568627450980392, 0.0039215686, 0.4941176471,\n      0.5450980392, 0.3607843137254902, 0.0039215686, 0.5098039216, 0.5294117647,\n      0.36470588235294116, 0.0039215686, 0.5294117647, 0.5137254902, 0.3686274509803922,\n      0.0039215686, 0.5450980392, 0.4980392157, 0.37254901960784315, 0.0039215686, 0.5647058824,\n      0.4784313725, 0.3764705882352941, 0.0039215686, 0.5803921569, 0.462745098, 0.3803921568627451,\n      0.0039215686, 0.6, 0.4470588235, 0.3843137254901961, 0.0039215686, 0.6156862745, 0.4274509804,\n      0.38823529411764707, 0.0039215686, 0.6352941176, 0.4117647059, 0.39215686274509803,\n      0.0039215686, 0.6509803922, 0.3960784314, 0.396078431372549, 0.0039215686, 0.6705882353,\n      0.3803921569, 0.4, 0.0039215686, 0.6862745098, 0.3607843137, 0.403921568627451, 0.0039215686,\n      0.7058823529, 0.3450980392, 0.40784313725490196, 0.0039215686, 0.7215686275, 0.3294117647,\n      0.4117647058823529, 0.0039215686, 0.7411764706, 0.3137254902, 0.41568627450980394,\n      0.0039215686, 0.7529411765, 0.2941176471, 0.4196078431372549, 0.0039215686, 0.7960784314,\n      0.2784313725, 0.4235294117647059, 0.0039215686, 0.7960784314, 0.262745098,\n      0.42745098039215684, 0.0392156863, 0.8039215686, 0.2509803922, 0.43137254901960786,\n      0.0745098039, 0.8117647059, 0.231372549, 0.43529411764705883, 0.1098039216, 0.8196078431,\n      0.2156862745, 0.4392156862745098, 0.1450980392, 0.8274509804, 0.2, 0.44313725490196076,\n      0.1803921569, 0.8352941176, 0.1843137255, 0.4470588235294118, 0.2156862745, 0.8431372549,\n      0.1647058824, 0.45098039215686275, 0.2509803922, 0.8509803922, 0.1490196078,\n      0.4549019607843137, 0.2823529412, 0.8588235294, 0.1333333333, 0.4588235294117647,\n      0.3176470588, 0.8666666667, 0.1176470588, 0.4627450980392157, 0.3529411765, 0.8745098039,\n      0.0980392157, 0.4666666666666667, 0.3882352941, 0.8823529412, 0.0823529412,\n      0.4705882352941177, 0.4235294118, 0.8901960784, 0.0666666667, 0.4745098039215686,\n      0.4588235294, 0.8980392157, 0.0509803922, 0.4784313725490197, 0.4941176471, 0.9058823529,\n      0.0431372549, 0.48235294117647065, 0.5294117647, 0.9137254902, 0.031372549,\n      0.48627450980392156, 0.5647058824, 0.9215686275, 0.0196078431, 0.49019607843137253, 0.6,\n      0.9294117647, 0.0078431373, 0.49411764705882355, 0.6352941176, 0.937254902, 0.0039215686,\n      0.4980392156862745, 0.6705882353, 0.9450980392, 0.0039215686, 0.5019607843137255,\n      0.7058823529, 0.9490196078, 0.0039215686, 0.5058823529411764, 0.7411764706, 0.9568627451,\n      0.0039215686, 0.5098039215686274, 0.7725490196, 0.9607843137, 0.0039215686,\n      0.5137254901960784, 0.8078431373, 0.968627451, 0.0039215686, 0.5176470588235295, 0.8431372549,\n      0.9725490196, 0.0039215686, 0.5215686274509804, 0.8784313725, 0.9803921569, 0.0039215686,\n      0.5254901960784314, 0.9137254902, 0.9843137255, 0.0039215686, 0.5294117647058824,\n      0.9490196078, 0.9921568627, 0.0039215686, 0.5333333333333333, 0.9960784314, 0.9960784314,\n      0.0039215686, 0.5372549019607843, 0.9960784314, 0.9960784314, 0.0039215686,\n      0.5411764705882353, 0.9960784314, 0.9921568627, 0.0039215686, 0.5450980392156862,\n      0.9960784314, 0.9843137255, 0.0039215686, 0.5490196078431373, 0.9960784314, 0.9764705882,\n      0.0039215686, 0.5529411764705883, 0.9960784314, 0.968627451, 0.0039215686, 0.5568627450980392,\n      0.9960784314, 0.9607843137, 0.0039215686, 0.5607843137254902, 0.9960784314, 0.9529411765,\n      0.0039215686, 0.5647058823529412, 0.9960784314, 0.9450980392, 0.0039215686,\n      0.5686274509803921, 0.9960784314, 0.937254902, 0.0039215686, 0.5725490196078431, 0.9960784314,\n      0.9294117647, 0.0039215686, 0.5764705882352941, 0.9960784314, 0.9215686275, 0.0039215686,\n      0.5803921568627451, 0.9960784314, 0.9137254902, 0.0039215686, 0.5843137254901961,\n      0.9960784314, 0.9058823529, 0.0039215686, 0.5882352941176471, 0.9960784314, 0.8980392157,\n      0.0039215686, 0.592156862745098, 0.9960784314, 0.8901960784, 0.0039215686, 0.596078431372549,\n      0.9960784314, 0.8823529412, 0.0039215686, 0.6, 0.9960784314, 0.8745098039, 0.0039215686,\n      0.6039215686274509, 0.9960784314, 0.8666666667, 0.0039215686, 0.6078431372549019,\n      0.9960784314, 0.8588235294, 0.0039215686, 0.611764705882353, 0.9960784314, 0.8509803922,\n      0.0039215686, 0.615686274509804, 0.9960784314, 0.8431372549, 0.0039215686, 0.6196078431372549,\n      0.9960784314, 0.8352941176, 0.0039215686, 0.6235294117647059, 0.9960784314, 0.8274509804,\n      0.0039215686, 0.6274509803921569, 0.9960784314, 0.8196078431, 0.0039215686,\n      0.6313725490196078, 0.9960784314, 0.8117647059, 0.0039215686, 0.6352941176470588,\n      0.9960784314, 0.8039215686, 0.0039215686, 0.6392156862745098, 0.9960784314, 0.7960784314,\n      0.0039215686, 0.6431372549019608, 0.9960784314, 0.7882352941, 0.0039215686,\n      0.6470588235294118, 0.9960784314, 0.7803921569, 0.0039215686, 0.6509803921568628,\n      0.9960784314, 0.7725490196, 0.0039215686, 0.6549019607843137, 0.9960784314, 0.7647058824,\n      0.0039215686, 0.6588235294117647, 0.9960784314, 0.7568627451, 0.0039215686,\n      0.6627450980392157, 0.9960784314, 0.7490196078, 0.0039215686, 0.6666666666666666,\n      0.9960784314, 0.7450980392, 0.0039215686, 0.6705882352941176, 0.9960784314, 0.737254902,\n      0.0039215686, 0.6745098039215687, 0.9960784314, 0.7294117647, 0.0039215686,\n      0.6784313725490196, 0.9960784314, 0.7215686275, 0.0039215686, 0.6823529411764706,\n      0.9960784314, 0.7137254902, 0.0039215686, 0.6862745098039216, 0.9960784314, 0.7058823529,\n      0.0039215686, 0.6901960784313725, 0.9960784314, 0.6980392157, 0.0039215686,\n      0.6941176470588235, 0.9960784314, 0.6901960784, 0.0039215686, 0.6980392156862745,\n      0.9960784314, 0.6823529412, 0.0039215686, 0.7019607843137254, 0.9960784314, 0.6745098039,\n      0.0039215686, 0.7058823529411765, 0.9960784314, 0.6666666667, 0.0039215686,\n      0.7098039215686275, 0.9960784314, 0.6588235294, 0.0039215686, 0.7137254901960784,\n      0.9960784314, 0.6509803922, 0.0039215686, 0.7176470588235294, 0.9960784314, 0.6431372549,\n      0.0039215686, 0.7215686274509804, 0.9960784314, 0.6352941176, 0.0039215686,\n      0.7254901960784313, 0.9960784314, 0.6274509804, 0.0039215686, 0.7294117647058823,\n      0.9960784314, 0.6196078431, 0.0039215686, 0.7333333333333333, 0.9960784314, 0.6117647059,\n      0.0039215686, 0.7372549019607844, 0.9960784314, 0.6039215686, 0.0039215686,\n      0.7411764705882353, 0.9960784314, 0.5960784314, 0.0039215686, 0.7450980392156863,\n      0.9960784314, 0.5882352941, 0.0039215686, 0.7490196078431373, 0.9960784314, 0.5803921569,\n      0.0039215686, 0.7529411764705882, 0.9960784314, 0.5725490196, 0.0039215686,\n      0.7568627450980392, 0.9960784314, 0.5647058824, 0.0039215686, 0.7607843137254902,\n      0.9960784314, 0.5568627451, 0.0039215686, 0.7647058823529411, 0.9960784314, 0.5490196078,\n      0.0039215686, 0.7686274509803922, 0.9960784314, 0.5411764706, 0.0039215686,\n      0.7725490196078432, 0.9960784314, 0.5333333333, 0.0039215686, 0.7764705882352941,\n      0.9960784314, 0.5254901961, 0.0039215686, 0.7803921568627451, 0.9960784314, 0.5176470588,\n      0.0039215686, 0.7843137254901961, 0.9960784314, 0.5098039216, 0.0039215686, 0.788235294117647,\n      0.9960784314, 0.5019607843, 0.0039215686, 0.792156862745098, 0.9960784314, 0.4941176471,\n      0.0039215686, 0.796078431372549, 0.9960784314, 0.4862745098, 0.0039215686, 0.8, 0.9960784314,\n      0.4784313725, 0.0039215686, 0.803921568627451, 0.9960784314, 0.4705882353, 0.0039215686,\n      0.807843137254902, 0.9960784314, 0.462745098, 0.0039215686, 0.8117647058823529, 0.9960784314,\n      0.4549019608, 0.0039215686, 0.8156862745098039, 0.9960784314, 0.4470588235, 0.0039215686,\n      0.8196078431372549, 0.9960784314, 0.4392156863, 0.0039215686, 0.8235294117647058,\n      0.9960784314, 0.431372549, 0.0039215686, 0.8274509803921568, 0.9960784314, 0.4235294118,\n      0.0039215686, 0.8313725490196079, 0.9960784314, 0.4156862745, 0.0039215686,\n      0.8352941176470589, 0.9960784314, 0.4078431373, 0.0039215686, 0.8392156862745098,\n      0.9960784314, 0.4, 0.0039215686, 0.8431372549019608, 0.9960784314, 0.3921568627, 0.0039215686,\n      0.8470588235294118, 0.9960784314, 0.3843137255, 0.0039215686, 0.8509803921568627,\n      0.9960784314, 0.3764705882, 0.0039215686, 0.8549019607843137, 0.9960784314, 0.368627451,\n      0.0039215686, 0.8588235294117647, 0.9960784314, 0.3607843137, 0.0039215686,\n      0.8627450980392157, 0.9960784314, 0.3529411765, 0.0039215686, 0.8666666666666667,\n      0.9960784314, 0.3450980392, 0.0039215686, 0.8705882352941177, 0.9960784314, 0.337254902,\n      0.0039215686, 0.8745098039215686, 0.9960784314, 0.3294117647, 0.0039215686,\n      0.8784313725490196, 0.9960784314, 0.3215686275, 0.0039215686, 0.8823529411764706,\n      0.9960784314, 0.3137254902, 0.0039215686, 0.8862745098039215, 0.9960784314, 0.3058823529,\n      0.0039215686, 0.8901960784313725, 0.9960784314, 0.2980392157, 0.0039215686,\n      0.8941176470588236, 0.9960784314, 0.2901960784, 0.0039215686, 0.8980392156862745,\n      0.9960784314, 0.2823529412, 0.0039215686, 0.9019607843137255, 0.9960784314, 0.2705882353,\n      0.0039215686, 0.9058823529411765, 0.9960784314, 0.2588235294, 0.0039215686,\n      0.9098039215686274, 0.9960784314, 0.2509803922, 0.0039215686, 0.9137254901960784,\n      0.9960784314, 0.2431372549, 0.0039215686, 0.9176470588235294, 0.9960784314, 0.231372549,\n      0.0039215686, 0.9215686274509803, 0.9960784314, 0.2196078431, 0.0039215686,\n      0.9254901960784314, 0.9960784314, 0.2117647059, 0.0039215686, 0.9294117647058824,\n      0.9960784314, 0.2, 0.0039215686, 0.9333333333333333, 0.9960784314, 0.1882352941, 0.0039215686,\n      0.9372549019607843, 0.9960784314, 0.1764705882, 0.0039215686, 0.9411764705882354,\n      0.9960784314, 0.168627451, 0.0039215686, 0.9450980392156864, 0.9960784314, 0.1568627451,\n      0.0039215686, 0.9490196078431372, 0.9960784314, 0.1450980392, 0.0039215686,\n      0.9529411764705882, 0.9960784314, 0.1333333333, 0.0039215686, 0.9568627450980394,\n      0.9960784314, 0.1254901961, 0.0039215686, 0.9607843137254903, 0.9960784314, 0.1137254902,\n      0.0039215686, 0.9647058823529413, 0.9960784314, 0.1019607843, 0.0039215686,\n      0.9686274509803922, 0.9960784314, 0.0901960784, 0.0039215686, 0.9725490196078431,\n      0.9960784314, 0.0823529412, 0.0039215686, 0.9764705882352941, 0.9960784314, 0.0705882353,\n      0.0039215686, 0.9803921568627451, 0.9960784314, 0.0588235294, 0.0039215686, 0.984313725490196,\n      0.9960784314, 0.0470588235, 0.0039215686, 0.9882352941176471, 0.9960784314, 0.0392156863,\n      0.0039215686, 0.9921568627450981, 0.9960784314, 0.0274509804, 0.0039215686, 0.996078431372549,\n      0.9960784314, 0.0156862745, 0.0039215686, 1.0, 0.9960784314, 0.0156862745, 0.0039215686,\n    ],\n  },\n  {\n    ColorSpace: 'RGB',\n    Name: 'perfusion',\n    RGBPoints: [\n      0.0, 0.0, 0.0, 0.0, 0.00392156862745098, 0.0078431373, 0.0235294118, 0.0235294118,\n      0.00784313725490196, 0.0078431373, 0.031372549, 0.0470588235, 0.011764705882352941,\n      0.0078431373, 0.0392156863, 0.062745098, 0.01568627450980392, 0.0078431373, 0.0470588235,\n      0.0862745098, 0.0196078431372549, 0.0078431373, 0.0549019608, 0.1019607843,\n      0.023529411764705882, 0.0078431373, 0.0549019608, 0.1254901961, 0.027450980392156862,\n      0.0078431373, 0.062745098, 0.1411764706, 0.03137254901960784, 0.0078431373, 0.0705882353,\n      0.1647058824, 0.03529411764705882, 0.0078431373, 0.0784313725, 0.1803921569,\n      0.0392156862745098, 0.0078431373, 0.0862745098, 0.2039215686, 0.043137254901960784,\n      0.0078431373, 0.0862745098, 0.2196078431, 0.047058823529411764, 0.0078431373, 0.0941176471,\n      0.2431372549, 0.050980392156862744, 0.0078431373, 0.1019607843, 0.2666666667,\n      0.054901960784313725, 0.0078431373, 0.1098039216, 0.2823529412, 0.05882352941176471,\n      0.0078431373, 0.1176470588, 0.3058823529, 0.06274509803921569, 0.0078431373, 0.1176470588,\n      0.3215686275, 0.06666666666666667, 0.0078431373, 0.1254901961, 0.3450980392,\n      0.07058823529411765, 0.0078431373, 0.1333333333, 0.3607843137, 0.07450980392156863,\n      0.0078431373, 0.1411764706, 0.3843137255, 0.0784313725490196, 0.0078431373, 0.1490196078, 0.4,\n      0.08235294117647059, 0.0078431373, 0.1490196078, 0.4235294118, 0.08627450980392157,\n      0.0078431373, 0.1568627451, 0.4392156863, 0.09019607843137255, 0.0078431373, 0.1647058824,\n      0.462745098, 0.09411764705882353, 0.0078431373, 0.1725490196, 0.4784313725,\n      0.09803921568627451, 0.0078431373, 0.1803921569, 0.5019607843, 0.10196078431372549,\n      0.0078431373, 0.1803921569, 0.5254901961, 0.10588235294117647, 0.0078431373, 0.1882352941,\n      0.5411764706, 0.10980392156862745, 0.0078431373, 0.1960784314, 0.5647058824,\n      0.11372549019607843, 0.0078431373, 0.2039215686, 0.5803921569, 0.11764705882352942,\n      0.0078431373, 0.2117647059, 0.6039215686, 0.12156862745098039, 0.0078431373, 0.2117647059,\n      0.6196078431, 0.12549019607843137, 0.0078431373, 0.2196078431, 0.6431372549,\n      0.12941176470588237, 0.0078431373, 0.2274509804, 0.6588235294, 0.13333333333333333,\n      0.0078431373, 0.2352941176, 0.6823529412, 0.13725490196078433, 0.0078431373, 0.2431372549,\n      0.6980392157, 0.1411764705882353, 0.0078431373, 0.2431372549, 0.7215686275,\n      0.1450980392156863, 0.0078431373, 0.2509803922, 0.737254902, 0.14901960784313725,\n      0.0078431373, 0.2588235294, 0.7607843137, 0.15294117647058825, 0.0078431373, 0.2666666667,\n      0.7843137255, 0.1568627450980392, 0.0078431373, 0.2745098039, 0.8, 0.1607843137254902,\n      0.0078431373, 0.2745098039, 0.8235294118, 0.16470588235294117, 0.0078431373, 0.2823529412,\n      0.8392156863, 0.16862745098039217, 0.0078431373, 0.2901960784, 0.862745098,\n      0.17254901960784313, 0.0078431373, 0.2980392157, 0.8784313725, 0.17647058823529413,\n      0.0078431373, 0.3058823529, 0.9019607843, 0.1803921568627451, 0.0078431373, 0.3058823529,\n      0.9176470588, 0.1843137254901961, 0.0078431373, 0.2980392157, 0.9411764706,\n      0.18823529411764706, 0.0078431373, 0.3058823529, 0.9568627451, 0.19215686274509805,\n      0.0078431373, 0.2980392157, 0.9803921569, 0.19607843137254902, 0.0078431373, 0.2980392157,\n      0.9882352941, 0.2, 0.0078431373, 0.2901960784, 0.9803921569, 0.20392156862745098,\n      0.0078431373, 0.2901960784, 0.9647058824, 0.20784313725490197, 0.0078431373, 0.2823529412,\n      0.9568627451, 0.21176470588235294, 0.0078431373, 0.2823529412, 0.9411764706,\n      0.21568627450980393, 0.0078431373, 0.2745098039, 0.9333333333, 0.2196078431372549,\n      0.0078431373, 0.2666666667, 0.9176470588, 0.2235294117647059, 0.0078431373, 0.2666666667,\n      0.9098039216, 0.22745098039215686, 0.0078431373, 0.2588235294, 0.9019607843,\n      0.23137254901960785, 0.0078431373, 0.2588235294, 0.8862745098, 0.23529411764705885,\n      0.0078431373, 0.2509803922, 0.8784313725, 0.23921568627450984, 0.0078431373, 0.2509803922,\n      0.862745098, 0.24313725490196078, 0.0078431373, 0.2431372549, 0.8549019608,\n      0.24705882352941178, 0.0078431373, 0.2352941176, 0.8392156863, 0.25098039215686274,\n      0.0078431373, 0.2352941176, 0.831372549, 0.2549019607843137, 0.0078431373, 0.2274509804,\n      0.8235294118, 0.25882352941176473, 0.0078431373, 0.2274509804, 0.8078431373,\n      0.2627450980392157, 0.0078431373, 0.2196078431, 0.8, 0.26666666666666666, 0.0078431373,\n      0.2196078431, 0.7843137255, 0.27058823529411763, 0.0078431373, 0.2117647059, 0.7764705882,\n      0.27450980392156865, 0.0078431373, 0.2039215686, 0.7607843137, 0.2784313725490196,\n      0.0078431373, 0.2039215686, 0.7529411765, 0.2823529411764706, 0.0078431373, 0.1960784314,\n      0.7450980392, 0.28627450980392155, 0.0078431373, 0.1960784314, 0.7294117647,\n      0.2901960784313726, 0.0078431373, 0.1882352941, 0.7215686275, 0.29411764705882354,\n      0.0078431373, 0.1882352941, 0.7058823529, 0.2980392156862745, 0.0078431373, 0.1803921569,\n      0.6980392157, 0.30196078431372547, 0.0078431373, 0.1803921569, 0.6823529412,\n      0.3058823529411765, 0.0078431373, 0.1725490196, 0.6745098039, 0.30980392156862746,\n      0.0078431373, 0.1647058824, 0.6666666667, 0.3137254901960784, 0.0078431373, 0.1647058824,\n      0.6509803922, 0.3176470588235294, 0.0078431373, 0.1568627451, 0.6431372549,\n      0.3215686274509804, 0.0078431373, 0.1568627451, 0.6274509804, 0.3254901960784314,\n      0.0078431373, 0.1490196078, 0.6196078431, 0.32941176470588235, 0.0078431373, 0.1490196078,\n      0.6039215686, 0.3333333333333333, 0.0078431373, 0.1411764706, 0.5960784314,\n      0.33725490196078434, 0.0078431373, 0.1333333333, 0.5882352941, 0.3411764705882353,\n      0.0078431373, 0.1333333333, 0.5725490196, 0.34509803921568627, 0.0078431373, 0.1254901961,\n      0.5647058824, 0.34901960784313724, 0.0078431373, 0.1254901961, 0.5490196078,\n      0.35294117647058826, 0.0078431373, 0.1176470588, 0.5411764706, 0.3568627450980392,\n      0.0078431373, 0.1176470588, 0.5254901961, 0.3607843137254902, 0.0078431373, 0.1098039216,\n      0.5176470588, 0.36470588235294116, 0.0078431373, 0.1019607843, 0.5098039216,\n      0.3686274509803922, 0.0078431373, 0.1019607843, 0.4941176471, 0.37254901960784315,\n      0.0078431373, 0.0941176471, 0.4862745098, 0.3764705882352941, 0.0078431373, 0.0941176471,\n      0.4705882353, 0.3803921568627451, 0.0078431373, 0.0862745098, 0.462745098, 0.3843137254901961,\n      0.0078431373, 0.0862745098, 0.4470588235, 0.38823529411764707, 0.0078431373, 0.0784313725,\n      0.4392156863, 0.39215686274509803, 0.0078431373, 0.0705882353, 0.431372549, 0.396078431372549,\n      0.0078431373, 0.0705882353, 0.4156862745, 0.4, 0.0078431373, 0.062745098, 0.4078431373,\n      0.403921568627451, 0.0078431373, 0.062745098, 0.3921568627, 0.40784313725490196, 0.0078431373,\n      0.0549019608, 0.3843137255, 0.4117647058823529, 0.0078431373, 0.0549019608, 0.368627451,\n      0.41568627450980394, 0.0078431373, 0.0470588235, 0.3607843137, 0.4196078431372549,\n      0.0078431373, 0.0470588235, 0.3529411765, 0.4235294117647059, 0.0078431373, 0.0392156863,\n      0.337254902, 0.42745098039215684, 0.0078431373, 0.031372549, 0.3294117647,\n      0.43137254901960786, 0.0078431373, 0.031372549, 0.3137254902, 0.43529411764705883,\n      0.0078431373, 0.0235294118, 0.3058823529, 0.4392156862745098, 0.0078431373, 0.0235294118,\n      0.2901960784, 0.44313725490196076, 0.0078431373, 0.0156862745, 0.2823529412,\n      0.4470588235294118, 0.0078431373, 0.0156862745, 0.2745098039, 0.45098039215686275,\n      0.0078431373, 0.0078431373, 0.2588235294, 0.4549019607843137, 0.0235294118, 0.0078431373,\n      0.2509803922, 0.4588235294117647, 0.0078431373, 0.0078431373, 0.2352941176,\n      0.4627450980392157, 0.0078431373, 0.0078431373, 0.2274509804, 0.4666666666666667,\n      0.0078431373, 0.0078431373, 0.2117647059, 0.4705882352941177, 0.0078431373, 0.0078431373,\n      0.2039215686, 0.4745098039215686, 0.0078431373, 0.0078431373, 0.1960784314,\n      0.4784313725490197, 0.0078431373, 0.0078431373, 0.1803921569, 0.48235294117647065,\n      0.0078431373, 0.0078431373, 0.1725490196, 0.48627450980392156, 0.0078431373, 0.0078431373,\n      0.1568627451, 0.49019607843137253, 0.0078431373, 0.0078431373, 0.1490196078,\n      0.49411764705882355, 0.0078431373, 0.0078431373, 0.1333333333, 0.4980392156862745,\n      0.0078431373, 0.0078431373, 0.1254901961, 0.5019607843137255, 0.0078431373, 0.0078431373,\n      0.1176470588, 0.5058823529411764, 0.0078431373, 0.0078431373, 0.1019607843,\n      0.5098039215686274, 0.0078431373, 0.0078431373, 0.0941176471, 0.5137254901960784,\n      0.0078431373, 0.0078431373, 0.0784313725, 0.5176470588235295, 0.0078431373, 0.0078431373,\n      0.0705882353, 0.5215686274509804, 0.0078431373, 0.0078431373, 0.0549019608,\n      0.5254901960784314, 0.0078431373, 0.0078431373, 0.0470588235, 0.5294117647058824,\n      0.0235294118, 0.0078431373, 0.0392156863, 0.5333333333333333, 0.031372549, 0.0078431373,\n      0.0235294118, 0.5372549019607843, 0.0392156863, 0.0078431373, 0.0156862745,\n      0.5411764705882353, 0.0549019608, 0.0078431373, 0.0, 0.5450980392156862, 0.062745098,\n      0.0078431373, 0.0, 0.5490196078431373, 0.0705882353, 0.0078431373, 0.0, 0.5529411764705883,\n      0.0862745098, 0.0078431373, 0.0, 0.5568627450980392, 0.0941176471, 0.0078431373, 0.0,\n      0.5607843137254902, 0.1019607843, 0.0078431373, 0.0, 0.5647058823529412, 0.1098039216,\n      0.0078431373, 0.0, 0.5686274509803921, 0.1254901961, 0.0078431373, 0.0, 0.5725490196078431,\n      0.1333333333, 0.0078431373, 0.0, 0.5764705882352941, 0.1411764706, 0.0078431373, 0.0,\n      0.5803921568627451, 0.1568627451, 0.0078431373, 0.0, 0.5843137254901961, 0.1647058824,\n      0.0078431373, 0.0, 0.5882352941176471, 0.1725490196, 0.0078431373, 0.0, 0.592156862745098,\n      0.1882352941, 0.0078431373, 0.0, 0.596078431372549, 0.1960784314, 0.0078431373, 0.0, 0.6,\n      0.2039215686, 0.0078431373, 0.0, 0.6039215686274509, 0.2117647059, 0.0078431373, 0.0,\n      0.6078431372549019, 0.2274509804, 0.0078431373, 0.0, 0.611764705882353, 0.2352941176,\n      0.0078431373, 0.0, 0.615686274509804, 0.2431372549, 0.0078431373, 0.0, 0.6196078431372549,\n      0.2588235294, 0.0078431373, 0.0, 0.6235294117647059, 0.2666666667, 0.0078431373, 0.0,\n      0.6274509803921569, 0.2745098039, 0.0, 0.0, 0.6313725490196078, 0.2901960784, 0.0156862745,\n      0.0, 0.6352941176470588, 0.2980392157, 0.0235294118, 0.0, 0.6392156862745098, 0.3058823529,\n      0.0392156863, 0.0, 0.6431372549019608, 0.3137254902, 0.0470588235, 0.0, 0.6470588235294118,\n      0.3294117647, 0.0549019608, 0.0, 0.6509803921568628, 0.337254902, 0.0705882353, 0.0,\n      0.6549019607843137, 0.3450980392, 0.0784313725, 0.0, 0.6588235294117647, 0.3607843137,\n      0.0862745098, 0.0, 0.6627450980392157, 0.368627451, 0.1019607843, 0.0, 0.6666666666666666,\n      0.3764705882, 0.1098039216, 0.0, 0.6705882352941176, 0.3843137255, 0.1176470588, 0.0,\n      0.6745098039215687, 0.4, 0.1333333333, 0.0, 0.6784313725490196, 0.4078431373, 0.1411764706,\n      0.0, 0.6823529411764706, 0.4156862745, 0.1490196078, 0.0, 0.6862745098039216, 0.431372549,\n      0.1647058824, 0.0, 0.6901960784313725, 0.4392156863, 0.1725490196, 0.0, 0.6941176470588235,\n      0.4470588235, 0.1803921569, 0.0, 0.6980392156862745, 0.462745098, 0.1960784314, 0.0,\n      0.7019607843137254, 0.4705882353, 0.2039215686, 0.0, 0.7058823529411765, 0.4784313725,\n      0.2117647059, 0.0, 0.7098039215686275, 0.4862745098, 0.2274509804, 0.0, 0.7137254901960784,\n      0.5019607843, 0.2352941176, 0.0, 0.7176470588235294, 0.5098039216, 0.2431372549, 0.0,\n      0.7215686274509804, 0.5176470588, 0.2588235294, 0.0, 0.7254901960784313, 0.5333333333,\n      0.2666666667, 0.0, 0.7294117647058823, 0.5411764706, 0.2745098039, 0.0, 0.7333333333333333,\n      0.5490196078, 0.2901960784, 0.0, 0.7372549019607844, 0.5647058824, 0.2980392157, 0.0,\n      0.7411764705882353, 0.5725490196, 0.3058823529, 0.0, 0.7450980392156863, 0.5803921569,\n      0.3215686275, 0.0, 0.7490196078431373, 0.5882352941, 0.3294117647, 0.0, 0.7529411764705882,\n      0.6039215686, 0.337254902, 0.0, 0.7568627450980392, 0.6117647059, 0.3529411765, 0.0,\n      0.7607843137254902, 0.6196078431, 0.3607843137, 0.0, 0.7647058823529411, 0.6352941176,\n      0.368627451, 0.0, 0.7686274509803922, 0.6431372549, 0.3843137255, 0.0, 0.7725490196078432,\n      0.6509803922, 0.3921568627, 0.0, 0.7764705882352941, 0.6588235294, 0.4, 0.0,\n      0.7803921568627451, 0.6745098039, 0.4156862745, 0.0, 0.7843137254901961, 0.6823529412,\n      0.4235294118, 0.0, 0.788235294117647, 0.6901960784, 0.431372549, 0.0, 0.792156862745098,\n      0.7058823529, 0.4470588235, 0.0, 0.796078431372549, 0.7137254902, 0.4549019608, 0.0, 0.8,\n      0.7215686275, 0.462745098, 0.0, 0.803921568627451, 0.737254902, 0.4784313725, 0.0,\n      0.807843137254902, 0.7450980392, 0.4862745098, 0.0, 0.8117647058823529, 0.7529411765,\n      0.4941176471, 0.0, 0.8156862745098039, 0.7607843137, 0.5098039216, 0.0, 0.8196078431372549,\n      0.7764705882, 0.5176470588, 0.0, 0.8235294117647058, 0.7843137255, 0.5254901961, 0.0,\n      0.8274509803921568, 0.7921568627, 0.5411764706, 0.0, 0.8313725490196079, 0.8078431373,\n      0.5490196078, 0.0, 0.8352941176470589, 0.8156862745, 0.5568627451, 0.0, 0.8392156862745098,\n      0.8235294118, 0.5725490196, 0.0, 0.8431372549019608, 0.8392156863, 0.5803921569, 0.0,\n      0.8470588235294118, 0.8470588235, 0.5882352941, 0.0, 0.8509803921568627, 0.8549019608,\n      0.6039215686, 0.0, 0.8549019607843137, 0.862745098, 0.6117647059, 0.0, 0.8588235294117647,\n      0.8784313725, 0.6196078431, 0.0, 0.8627450980392157, 0.8862745098, 0.6352941176, 0.0,\n      0.8666666666666667, 0.8941176471, 0.6431372549, 0.0, 0.8705882352941177, 0.9098039216,\n      0.6509803922, 0.0, 0.8745098039215686, 0.9176470588, 0.6666666667, 0.0, 0.8784313725490196,\n      0.9254901961, 0.6745098039, 0.0, 0.8823529411764706, 0.9411764706, 0.6823529412, 0.0,\n      0.8862745098039215, 0.9490196078, 0.6980392157, 0.0, 0.8901960784313725, 0.9568627451,\n      0.7058823529, 0.0, 0.8941176470588236, 0.9647058824, 0.7137254902, 0.0, 0.8980392156862745,\n      0.9803921569, 0.7294117647, 0.0, 0.9019607843137255, 0.9882352941, 0.737254902, 0.0,\n      0.9058823529411765, 0.9960784314, 0.7450980392, 0.0, 0.9098039215686274, 0.9960784314,\n      0.7607843137, 0.0, 0.9137254901960784, 0.9960784314, 0.768627451, 0.0, 0.9176470588235294,\n      0.9960784314, 0.7764705882, 0.0, 0.9215686274509803, 0.9960784314, 0.7921568627, 0.0,\n      0.9254901960784314, 0.9960784314, 0.8, 0.0, 0.9294117647058824, 0.9960784314, 0.8078431373,\n      0.0, 0.9333333333333333, 0.9960784314, 0.8235294118, 0.0, 0.9372549019607843, 0.9960784314,\n      0.831372549, 0.0, 0.9411764705882354, 0.9960784314, 0.8392156863, 0.0, 0.9450980392156864,\n      0.9960784314, 0.8549019608, 0.0, 0.9490196078431372, 0.9960784314, 0.862745098, 0.0549019608,\n      0.9529411764705882, 0.9960784314, 0.8705882353, 0.1098039216, 0.9568627450980394,\n      0.9960784314, 0.8862745098, 0.1647058824, 0.9607843137254903, 0.9960784314, 0.8941176471,\n      0.2196078431, 0.9647058823529413, 0.9960784314, 0.9019607843, 0.2666666667,\n      0.9686274509803922, 0.9960784314, 0.9176470588, 0.3215686275, 0.9725490196078431,\n      0.9960784314, 0.9254901961, 0.3764705882, 0.9764705882352941, 0.9960784314, 0.9333333333,\n      0.431372549, 0.9803921568627451, 0.9960784314, 0.9490196078, 0.4862745098, 0.984313725490196,\n      0.9960784314, 0.9568627451, 0.5333333333, 0.9882352941176471, 0.9960784314, 0.9647058824,\n      0.5882352941, 0.9921568627450981, 0.9960784314, 0.9803921569, 0.6431372549, 0.996078431372549,\n      0.9960784314, 0.9882352941, 0.6980392157, 1.0, 0.9960784314, 0.9960784314, 0.7450980392,\n    ],\n  },\n  {\n    ColorSpace: 'RGB',\n    Name: 'rainbow_2',\n    RGBPoints: [\n      0.0, 0.0, 0.0, 0.0, 0.00392156862745098, 0.0156862745, 0.0, 0.0117647059, 0.00784313725490196,\n      0.0352941176, 0.0, 0.0274509804, 0.011764705882352941, 0.0509803922, 0.0, 0.0392156863,\n      0.01568627450980392, 0.0705882353, 0.0, 0.0549019608, 0.0196078431372549, 0.0862745098, 0.0,\n      0.0745098039, 0.023529411764705882, 0.1058823529, 0.0, 0.0901960784, 0.027450980392156862,\n      0.1215686275, 0.0, 0.1098039216, 0.03137254901960784, 0.1411764706, 0.0, 0.1254901961,\n      0.03529411764705882, 0.1568627451, 0.0, 0.1490196078, 0.0392156862745098, 0.1764705882, 0.0,\n      0.168627451, 0.043137254901960784, 0.1960784314, 0.0, 0.1882352941, 0.047058823529411764,\n      0.2117647059, 0.0, 0.2078431373, 0.050980392156862744, 0.2274509804, 0.0, 0.231372549,\n      0.054901960784313725, 0.2392156863, 0.0, 0.2470588235, 0.05882352941176471, 0.2509803922, 0.0,\n      0.2666666667, 0.06274509803921569, 0.2666666667, 0.0, 0.2823529412, 0.06666666666666667,\n      0.2705882353, 0.0, 0.3019607843, 0.07058823529411765, 0.2823529412, 0.0, 0.3176470588,\n      0.07450980392156863, 0.2901960784, 0.0, 0.337254902, 0.0784313725490196, 0.3019607843, 0.0,\n      0.3568627451, 0.08235294117647059, 0.3098039216, 0.0, 0.3725490196, 0.08627450980392157,\n      0.3137254902, 0.0, 0.3921568627, 0.09019607843137255, 0.3215686275, 0.0, 0.4078431373,\n      0.09411764705882353, 0.3254901961, 0.0, 0.4274509804, 0.09803921568627451, 0.3333333333, 0.0,\n      0.4431372549, 0.10196078431372549, 0.3294117647, 0.0, 0.462745098, 0.10588235294117647,\n      0.337254902, 0.0, 0.4784313725, 0.10980392156862745, 0.3411764706, 0.0, 0.4980392157,\n      0.11372549019607843, 0.3450980392, 0.0, 0.5176470588, 0.11764705882352942, 0.337254902, 0.0,\n      0.5333333333, 0.12156862745098039, 0.3411764706, 0.0, 0.5529411765, 0.12549019607843137,\n      0.3411764706, 0.0, 0.568627451, 0.12941176470588237, 0.3411764706, 0.0, 0.5882352941,\n      0.13333333333333333, 0.3333333333, 0.0, 0.6039215686, 0.13725490196078433, 0.3294117647, 0.0,\n      0.6235294118, 0.1411764705882353, 0.3294117647, 0.0, 0.6392156863, 0.1450980392156863,\n      0.3294117647, 0.0, 0.6588235294, 0.14901960784313725, 0.3254901961, 0.0, 0.6784313725,\n      0.15294117647058825, 0.3098039216, 0.0, 0.6941176471, 0.1568627450980392, 0.3058823529, 0.0,\n      0.7137254902, 0.1607843137254902, 0.3019607843, 0.0, 0.7294117647, 0.16470588235294117,\n      0.2980392157, 0.0, 0.7490196078, 0.16862745098039217, 0.2784313725, 0.0, 0.7647058824,\n      0.17254901960784313, 0.2745098039, 0.0, 0.7843137255, 0.17647058823529413, 0.2666666667, 0.0,\n      0.8, 0.1803921568627451, 0.2588235294, 0.0, 0.8196078431, 0.1843137254901961, 0.2352941176,\n      0.0, 0.8392156863, 0.18823529411764706, 0.2274509804, 0.0, 0.8549019608, 0.19215686274509805,\n      0.2156862745, 0.0, 0.8745098039, 0.19607843137254902, 0.2078431373, 0.0, 0.8901960784, 0.2,\n      0.1803921569, 0.0, 0.9098039216, 0.20392156862745098, 0.168627451, 0.0, 0.9254901961,\n      0.20784313725490197, 0.1568627451, 0.0, 0.9450980392, 0.21176470588235294, 0.1411764706, 0.0,\n      0.9607843137, 0.21568627450980393, 0.1294117647, 0.0, 0.9803921569, 0.2196078431372549,\n      0.0980392157, 0.0, 1.0, 0.2235294117647059, 0.0823529412, 0.0, 1.0, 0.22745098039215686,\n      0.062745098, 0.0, 1.0, 0.23137254901960785, 0.0470588235, 0.0, 1.0, 0.23529411764705885,\n      0.0156862745, 0.0, 1.0, 0.23921568627450984, 0.0, 0.0, 1.0, 0.24313725490196078, 0.0,\n      0.0156862745, 1.0, 0.24705882352941178, 0.0, 0.031372549, 1.0, 0.25098039215686274, 0.0,\n      0.062745098, 1.0, 0.2549019607843137, 0.0, 0.0823529412, 1.0, 0.25882352941176473, 0.0,\n      0.0980392157, 1.0, 0.2627450980392157, 0.0, 0.1137254902, 1.0, 0.26666666666666666, 0.0,\n      0.1490196078, 1.0, 0.27058823529411763, 0.0, 0.1647058824, 1.0, 0.27450980392156865, 0.0,\n      0.1803921569, 1.0, 0.2784313725490196, 0.0, 0.2, 1.0, 0.2823529411764706, 0.0, 0.2156862745,\n      1.0, 0.28627450980392155, 0.0, 0.2470588235, 1.0, 0.2901960784313726, 0.0, 0.262745098, 1.0,\n      0.29411764705882354, 0.0, 0.2823529412, 1.0, 0.2980392156862745, 0.0, 0.2980392157, 1.0,\n      0.30196078431372547, 0.0, 0.3294117647, 1.0, 0.3058823529411765, 0.0, 0.3490196078, 1.0,\n      0.30980392156862746, 0.0, 0.3647058824, 1.0, 0.3137254901960784, 0.0, 0.3803921569, 1.0,\n      0.3176470588235294, 0.0, 0.4156862745, 1.0, 0.3215686274509804, 0.0, 0.431372549, 1.0,\n      0.3254901960784314, 0.0, 0.4470588235, 1.0, 0.32941176470588235, 0.0, 0.4666666667, 1.0,\n      0.3333333333333333, 0.0, 0.4980392157, 1.0, 0.33725490196078434, 0.0, 0.5137254902, 1.0,\n      0.3411764705882353, 0.0, 0.5294117647, 1.0, 0.34509803921568627, 0.0, 0.5490196078, 1.0,\n      0.34901960784313724, 0.0, 0.5647058824, 1.0, 0.35294117647058826, 0.0, 0.5960784314, 1.0,\n      0.3568627450980392, 0.0, 0.6156862745, 1.0, 0.3607843137254902, 0.0, 0.631372549, 1.0,\n      0.36470588235294116, 0.0, 0.6470588235, 1.0, 0.3686274509803922, 0.0, 0.6823529412, 1.0,\n      0.37254901960784315, 0.0, 0.6980392157, 1.0, 0.3764705882352941, 0.0, 0.7137254902, 1.0,\n      0.3803921568627451, 0.0, 0.7333333333, 1.0, 0.3843137254901961, 0.0, 0.7647058824, 1.0,\n      0.38823529411764707, 0.0, 0.7803921569, 1.0, 0.39215686274509803, 0.0, 0.7960784314, 1.0,\n      0.396078431372549, 0.0, 0.8156862745, 1.0, 0.4, 0.0, 0.8470588235, 1.0, 0.403921568627451,\n      0.0, 0.862745098, 1.0, 0.40784313725490196, 0.0, 0.8823529412, 1.0, 0.4117647058823529, 0.0,\n      0.8980392157, 1.0, 0.41568627450980394, 0.0, 0.9137254902, 1.0, 0.4196078431372549, 0.0,\n      0.9490196078, 1.0, 0.4235294117647059, 0.0, 0.9647058824, 1.0, 0.42745098039215684, 0.0,\n      0.9803921569, 1.0, 0.43137254901960786, 0.0, 1.0, 1.0, 0.43529411764705883, 0.0, 1.0,\n      0.9647058824, 0.4392156862745098, 0.0, 1.0, 0.9490196078, 0.44313725490196076, 0.0, 1.0,\n      0.9333333333, 0.4470588235294118, 0.0, 1.0, 0.9137254902, 0.45098039215686275, 0.0, 1.0,\n      0.8823529412, 0.4549019607843137, 0.0, 1.0, 0.862745098, 0.4588235294117647, 0.0, 1.0,\n      0.8470588235, 0.4627450980392157, 0.0, 1.0, 0.831372549, 0.4666666666666667, 0.0, 1.0,\n      0.7960784314, 0.4705882352941177, 0.0, 1.0, 0.7803921569, 0.4745098039215686, 0.0, 1.0,\n      0.7647058824, 0.4784313725490197, 0.0, 1.0, 0.7490196078, 0.48235294117647065, 0.0, 1.0,\n      0.7333333333, 0.48627450980392156, 0.0, 1.0, 0.6980392157, 0.49019607843137253, 0.0, 1.0,\n      0.6823529412, 0.49411764705882355, 0.0, 1.0, 0.6666666667, 0.4980392156862745, 0.0, 1.0,\n      0.6470588235, 0.5019607843137255, 0.0, 1.0, 0.6156862745, 0.5058823529411764, 0.0, 1.0,\n      0.5960784314, 0.5098039215686274, 0.0, 1.0, 0.5803921569, 0.5137254901960784, 0.0, 1.0,\n      0.5647058824, 0.5176470588235295, 0.0, 1.0, 0.5294117647, 0.5215686274509804, 0.0, 1.0,\n      0.5137254902, 0.5254901960784314, 0.0, 1.0, 0.4980392157, 0.5294117647058824, 0.0, 1.0,\n      0.4823529412, 0.5333333333333333, 0.0, 1.0, 0.4470588235, 0.5372549019607843, 0.0, 1.0,\n      0.431372549, 0.5411764705882353, 0.0, 1.0, 0.4156862745, 0.5450980392156862, 0.0, 1.0, 0.4,\n      0.5490196078431373, 0.0, 1.0, 0.3803921569, 0.5529411764705883, 0.0, 1.0, 0.3490196078,\n      0.5568627450980392, 0.0, 1.0, 0.3294117647, 0.5607843137254902, 0.0, 1.0, 0.3137254902,\n      0.5647058823529412, 0.0, 1.0, 0.2980392157, 0.5686274509803921, 0.0, 1.0, 0.262745098,\n      0.5725490196078431, 0.0, 1.0, 0.2470588235, 0.5764705882352941, 0.0, 1.0, 0.231372549,\n      0.5803921568627451, 0.0, 1.0, 0.2156862745, 0.5843137254901961, 0.0, 1.0, 0.1803921569,\n      0.5882352941176471, 0.0, 1.0, 0.1647058824, 0.592156862745098, 0.0, 1.0, 0.1490196078,\n      0.596078431372549, 0.0, 1.0, 0.1333333333, 0.6, 0.0, 1.0, 0.0980392157, 0.6039215686274509,\n      0.0, 1.0, 0.0823529412, 0.6078431372549019, 0.0, 1.0, 0.062745098, 0.611764705882353, 0.0,\n      1.0, 0.0470588235, 0.615686274509804, 0.0, 1.0, 0.031372549, 0.6196078431372549, 0.0, 1.0,\n      0.0, 0.6235294117647059, 0.0156862745, 1.0, 0.0, 0.6274509803921569, 0.031372549, 1.0, 0.0,\n      0.6313725490196078, 0.0470588235, 1.0, 0.0, 0.6352941176470588, 0.0823529412, 1.0, 0.0,\n      0.6392156862745098, 0.0980392157, 1.0, 0.0, 0.6431372549019608, 0.1137254902, 1.0, 0.0,\n      0.6470588235294118, 0.1294117647, 1.0, 0.0, 0.6509803921568628, 0.1647058824, 1.0, 0.0,\n      0.6549019607843137, 0.1803921569, 1.0, 0.0, 0.6588235294117647, 0.2, 1.0, 0.0,\n      0.6627450980392157, 0.2156862745, 1.0, 0.0, 0.6666666666666666, 0.2470588235, 1.0, 0.0,\n      0.6705882352941176, 0.262745098, 1.0, 0.0, 0.6745098039215687, 0.2823529412, 1.0, 0.0,\n      0.6784313725490196, 0.2980392157, 1.0, 0.0, 0.6823529411764706, 0.3137254902, 1.0, 0.0,\n      0.6862745098039216, 0.3490196078, 1.0, 0.0, 0.6901960784313725, 0.3647058824, 1.0, 0.0,\n      0.6941176470588235, 0.3803921569, 1.0, 0.0, 0.6980392156862745, 0.3960784314, 1.0, 0.0,\n      0.7019607843137254, 0.431372549, 1.0, 0.0, 0.7058823529411765, 0.4470588235, 1.0, 0.0,\n      0.7098039215686275, 0.4666666667, 1.0, 0.0, 0.7137254901960784, 0.4823529412, 1.0, 0.0,\n      0.7176470588235294, 0.5137254902, 1.0, 0.0, 0.7215686274509804, 0.5294117647, 1.0, 0.0,\n      0.7254901960784313, 0.5490196078, 1.0, 0.0, 0.7294117647058823, 0.5647058824, 1.0, 0.0,\n      0.7333333333333333, 0.6, 1.0, 0.0, 0.7372549019607844, 0.6156862745, 1.0, 0.0,\n      0.7411764705882353, 0.631372549, 1.0, 0.0, 0.7450980392156863, 0.6470588235, 1.0, 0.0,\n      0.7490196078431373, 0.662745098, 1.0, 0.0, 0.7529411764705882, 0.6980392157, 1.0, 0.0,\n      0.7568627450980392, 0.7137254902, 1.0, 0.0, 0.7607843137254902, 0.7333333333, 1.0, 0.0,\n      0.7647058823529411, 0.7490196078, 1.0, 0.0, 0.7686274509803922, 0.7803921569, 1.0, 0.0,\n      0.7725490196078432, 0.7960784314, 1.0, 0.0, 0.7764705882352941, 0.8156862745, 1.0, 0.0,\n      0.7803921568627451, 0.831372549, 1.0, 0.0, 0.7843137254901961, 0.8666666667, 1.0, 0.0,\n      0.788235294117647, 0.8823529412, 1.0, 0.0, 0.792156862745098, 0.8980392157, 1.0, 0.0,\n      0.796078431372549, 0.9137254902, 1.0, 0.0, 0.8, 0.9490196078, 1.0, 0.0, 0.803921568627451,\n      0.9647058824, 1.0, 0.0, 0.807843137254902, 0.9803921569, 1.0, 0.0, 0.8117647058823529, 1.0,\n      1.0, 0.0, 0.8156862745098039, 1.0, 0.9803921569, 0.0, 0.8196078431372549, 1.0, 0.9490196078,\n      0.0, 0.8235294117647058, 1.0, 0.9333333333, 0.0, 0.8274509803921568, 1.0, 0.9137254902, 0.0,\n      0.8313725490196079, 1.0, 0.8980392157, 0.0, 0.8352941176470589, 1.0, 0.8666666667, 0.0,\n      0.8392156862745098, 1.0, 0.8470588235, 0.0, 0.8431372549019608, 1.0, 0.831372549, 0.0,\n      0.8470588235294118, 1.0, 0.8156862745, 0.0, 0.8509803921568627, 1.0, 0.7803921569, 0.0,\n      0.8549019607843137, 1.0, 0.7647058824, 0.0, 0.8588235294117647, 1.0, 0.7490196078, 0.0,\n      0.8627450980392157, 1.0, 0.7333333333, 0.0, 0.8666666666666667, 1.0, 0.6980392157, 0.0,\n      0.8705882352941177, 1.0, 0.6823529412, 0.0, 0.8745098039215686, 1.0, 0.6666666667, 0.0,\n      0.8784313725490196, 1.0, 0.6470588235, 0.0, 0.8823529411764706, 1.0, 0.631372549, 0.0,\n      0.8862745098039215, 1.0, 0.6, 0.0, 0.8901960784313725, 1.0, 0.5803921569, 0.0,\n      0.8941176470588236, 1.0, 0.5647058824, 0.0, 0.8980392156862745, 1.0, 0.5490196078, 0.0,\n      0.9019607843137255, 1.0, 0.5137254902, 0.0, 0.9058823529411765, 1.0, 0.4980392157, 0.0,\n      0.9098039215686274, 1.0, 0.4823529412, 0.0, 0.9137254901960784, 1.0, 0.4666666667, 0.0,\n      0.9176470588235294, 1.0, 0.431372549, 0.0, 0.9215686274509803, 1.0, 0.4156862745, 0.0,\n      0.9254901960784314, 1.0, 0.4, 0.0, 0.9294117647058824, 1.0, 0.3803921569, 0.0,\n      0.9333333333333333, 1.0, 0.3490196078, 0.0, 0.9372549019607843, 1.0, 0.3333333333, 0.0,\n      0.9411764705882354, 1.0, 0.3137254902, 0.0, 0.9450980392156864, 1.0, 0.2980392157, 0.0,\n      0.9490196078431372, 1.0, 0.2823529412, 0.0, 0.9529411764705882, 1.0, 0.2470588235, 0.0,\n      0.9568627450980394, 1.0, 0.231372549, 0.0, 0.9607843137254903, 1.0, 0.2156862745, 0.0,\n      0.9647058823529413, 1.0, 0.2, 0.0, 0.9686274509803922, 1.0, 0.1647058824, 0.0,\n      0.9725490196078431, 1.0, 0.1490196078, 0.0, 0.9764705882352941, 1.0, 0.1333333333, 0.0,\n      0.9803921568627451, 1.0, 0.1137254902, 0.0, 0.984313725490196, 1.0, 0.0823529412, 0.0,\n      0.9882352941176471, 1.0, 0.0666666667, 0.0, 0.9921568627450981, 1.0, 0.0470588235, 0.0,\n      0.996078431372549, 1.0, 0.031372549, 0.0, 1.0, 1.0, 0.0, 0.0,\n    ],\n  },\n  {\n    ColorSpace: 'RGB',\n    Name: 'suv',\n    RGBPoints: [\n      0.0, 1.0, 1.0, 1.0, 0.00392156862745098, 1.0, 1.0, 1.0, 0.00784313725490196, 1.0, 1.0, 1.0,\n      0.011764705882352941, 1.0, 1.0, 1.0, 0.01568627450980392, 1.0, 1.0, 1.0, 0.0196078431372549,\n      1.0, 1.0, 1.0, 0.023529411764705882, 1.0, 1.0, 1.0, 0.027450980392156862, 1.0, 1.0, 1.0,\n      0.03137254901960784, 1.0, 1.0, 1.0, 0.03529411764705882, 1.0, 1.0, 1.0, 0.0392156862745098,\n      1.0, 1.0, 1.0, 0.043137254901960784, 1.0, 1.0, 1.0, 0.047058823529411764, 1.0, 1.0, 1.0,\n      0.050980392156862744, 1.0, 1.0, 1.0, 0.054901960784313725, 1.0, 1.0, 1.0, 0.05882352941176471,\n      1.0, 1.0, 1.0, 0.06274509803921569, 1.0, 1.0, 1.0, 0.06666666666666667, 1.0, 1.0, 1.0,\n      0.07058823529411765, 1.0, 1.0, 1.0, 0.07450980392156863, 1.0, 1.0, 1.0, 0.0784313725490196,\n      1.0, 1.0, 1.0, 0.08235294117647059, 1.0, 1.0, 1.0, 0.08627450980392157, 1.0, 1.0, 1.0,\n      0.09019607843137255, 1.0, 1.0, 1.0, 0.09411764705882353, 1.0, 1.0, 1.0, 0.09803921568627451,\n      1.0, 1.0, 1.0, 0.10196078431372549, 0.737254902, 0.737254902, 0.737254902,\n      0.10588235294117647, 0.737254902, 0.737254902, 0.737254902, 0.10980392156862745, 0.737254902,\n      0.737254902, 0.737254902, 0.11372549019607843, 0.737254902, 0.737254902, 0.737254902,\n      0.11764705882352942, 0.737254902, 0.737254902, 0.737254902, 0.12156862745098039, 0.737254902,\n      0.737254902, 0.737254902, 0.12549019607843137, 0.737254902, 0.737254902, 0.737254902,\n      0.12941176470588237, 0.737254902, 0.737254902, 0.737254902, 0.13333333333333333, 0.737254902,\n      0.737254902, 0.737254902, 0.13725490196078433, 0.737254902, 0.737254902, 0.737254902,\n      0.1411764705882353, 0.737254902, 0.737254902, 0.737254902, 0.1450980392156863, 0.737254902,\n      0.737254902, 0.737254902, 0.14901960784313725, 0.737254902, 0.737254902, 0.737254902,\n      0.15294117647058825, 0.737254902, 0.737254902, 0.737254902, 0.1568627450980392, 0.737254902,\n      0.737254902, 0.737254902, 0.1607843137254902, 0.737254902, 0.737254902, 0.737254902,\n      0.16470588235294117, 0.737254902, 0.737254902, 0.737254902, 0.16862745098039217, 0.737254902,\n      0.737254902, 0.737254902, 0.17254901960784313, 0.737254902, 0.737254902, 0.737254902,\n      0.17647058823529413, 0.737254902, 0.737254902, 0.737254902, 0.1803921568627451, 0.737254902,\n      0.737254902, 0.737254902, 0.1843137254901961, 0.737254902, 0.737254902, 0.737254902,\n      0.18823529411764706, 0.737254902, 0.737254902, 0.737254902, 0.19215686274509805, 0.737254902,\n      0.737254902, 0.737254902, 0.19607843137254902, 0.737254902, 0.737254902, 0.737254902, 0.2,\n      0.737254902, 0.737254902, 0.737254902, 0.20392156862745098, 0.431372549, 0.0, 0.568627451,\n      0.20784313725490197, 0.431372549, 0.0, 0.568627451, 0.21176470588235294, 0.431372549, 0.0,\n      0.568627451, 0.21568627450980393, 0.431372549, 0.0, 0.568627451, 0.2196078431372549,\n      0.431372549, 0.0, 0.568627451, 0.2235294117647059, 0.431372549, 0.0, 0.568627451,\n      0.22745098039215686, 0.431372549, 0.0, 0.568627451, 0.23137254901960785, 0.431372549, 0.0,\n      0.568627451, 0.23529411764705885, 0.431372549, 0.0, 0.568627451, 0.23921568627450984,\n      0.431372549, 0.0, 0.568627451, 0.24313725490196078, 0.431372549, 0.0, 0.568627451,\n      0.24705882352941178, 0.431372549, 0.0, 0.568627451, 0.25098039215686274, 0.431372549, 0.0,\n      0.568627451, 0.2549019607843137, 0.431372549, 0.0, 0.568627451, 0.25882352941176473,\n      0.431372549, 0.0, 0.568627451, 0.2627450980392157, 0.431372549, 0.0, 0.568627451,\n      0.26666666666666666, 0.431372549, 0.0, 0.568627451, 0.27058823529411763, 0.431372549, 0.0,\n      0.568627451, 0.27450980392156865, 0.431372549, 0.0, 0.568627451, 0.2784313725490196,\n      0.431372549, 0.0, 0.568627451, 0.2823529411764706, 0.431372549, 0.0, 0.568627451,\n      0.28627450980392155, 0.431372549, 0.0, 0.568627451, 0.2901960784313726, 0.431372549, 0.0,\n      0.568627451, 0.29411764705882354, 0.431372549, 0.0, 0.568627451, 0.2980392156862745,\n      0.431372549, 0.0, 0.568627451, 0.30196078431372547, 0.431372549, 0.0, 0.568627451,\n      0.3058823529411765, 0.2509803922, 0.3333333333, 0.6509803922, 0.30980392156862746,\n      0.2509803922, 0.3333333333, 0.6509803922, 0.3137254901960784, 0.2509803922, 0.3333333333,\n      0.6509803922, 0.3176470588235294, 0.2509803922, 0.3333333333, 0.6509803922,\n      0.3215686274509804, 0.2509803922, 0.3333333333, 0.6509803922, 0.3254901960784314,\n      0.2509803922, 0.3333333333, 0.6509803922, 0.32941176470588235, 0.2509803922, 0.3333333333,\n      0.6509803922, 0.3333333333333333, 0.2509803922, 0.3333333333, 0.6509803922,\n      0.33725490196078434, 0.2509803922, 0.3333333333, 0.6509803922, 0.3411764705882353,\n      0.2509803922, 0.3333333333, 0.6509803922, 0.34509803921568627, 0.2509803922, 0.3333333333,\n      0.6509803922, 0.34901960784313724, 0.2509803922, 0.3333333333, 0.6509803922,\n      0.35294117647058826, 0.2509803922, 0.3333333333, 0.6509803922, 0.3568627450980392,\n      0.2509803922, 0.3333333333, 0.6509803922, 0.3607843137254902, 0.2509803922, 0.3333333333,\n      0.6509803922, 0.36470588235294116, 0.2509803922, 0.3333333333, 0.6509803922,\n      0.3686274509803922, 0.2509803922, 0.3333333333, 0.6509803922, 0.37254901960784315,\n      0.2509803922, 0.3333333333, 0.6509803922, 0.3764705882352941, 0.2509803922, 0.3333333333,\n      0.6509803922, 0.3803921568627451, 0.2509803922, 0.3333333333, 0.6509803922,\n      0.3843137254901961, 0.2509803922, 0.3333333333, 0.6509803922, 0.38823529411764707,\n      0.2509803922, 0.3333333333, 0.6509803922, 0.39215686274509803, 0.2509803922, 0.3333333333,\n      0.6509803922, 0.396078431372549, 0.2509803922, 0.3333333333, 0.6509803922, 0.4, 0.2509803922,\n      0.3333333333, 0.6509803922, 0.403921568627451, 0.2509803922, 0.3333333333, 0.6509803922,\n      0.40784313725490196, 0.0, 0.8, 1.0, 0.4117647058823529, 0.0, 0.8, 1.0, 0.41568627450980394,\n      0.0, 0.8, 1.0, 0.4196078431372549, 0.0, 0.8, 1.0, 0.4235294117647059, 0.0, 0.8, 1.0,\n      0.42745098039215684, 0.0, 0.8, 1.0, 0.43137254901960786, 0.0, 0.8, 1.0, 0.43529411764705883,\n      0.0, 0.8, 1.0, 0.4392156862745098, 0.0, 0.8, 1.0, 0.44313725490196076, 0.0, 0.8, 1.0,\n      0.4470588235294118, 0.0, 0.8, 1.0, 0.45098039215686275, 0.0, 0.8, 1.0, 0.4549019607843137,\n      0.0, 0.8, 1.0, 0.4588235294117647, 0.0, 0.8, 1.0, 0.4627450980392157, 0.0, 0.8, 1.0,\n      0.4666666666666667, 0.0, 0.8, 1.0, 0.4705882352941177, 0.0, 0.8, 1.0, 0.4745098039215686, 0.0,\n      0.8, 1.0, 0.4784313725490197, 0.0, 0.8, 1.0, 0.48235294117647065, 0.0, 0.8, 1.0,\n      0.48627450980392156, 0.0, 0.8, 1.0, 0.49019607843137253, 0.0, 0.8, 1.0, 0.49411764705882355,\n      0.0, 0.8, 1.0, 0.4980392156862745, 0.0, 0.8, 1.0, 0.5019607843137255, 0.0, 0.8, 1.0,\n      0.5058823529411764, 0.0, 0.6666666667, 0.5333333333, 0.5098039215686274, 0.0, 0.6666666667,\n      0.5333333333, 0.5137254901960784, 0.0, 0.6666666667, 0.5333333333, 0.5176470588235295, 0.0,\n      0.6666666667, 0.5333333333, 0.5215686274509804, 0.0, 0.6666666667, 0.5333333333,\n      0.5254901960784314, 0.0, 0.6666666667, 0.5333333333, 0.5294117647058824, 0.0, 0.6666666667,\n      0.5333333333, 0.5333333333333333, 0.0, 0.6666666667, 0.5333333333, 0.5372549019607843, 0.0,\n      0.6666666667, 0.5333333333, 0.5411764705882353, 0.0, 0.6666666667, 0.5333333333,\n      0.5450980392156862, 0.0, 0.6666666667, 0.5333333333, 0.5490196078431373, 0.0, 0.6666666667,\n      0.5333333333, 0.5529411764705883, 0.0, 0.6666666667, 0.5333333333, 0.5568627450980392, 0.0,\n      0.6666666667, 0.5333333333, 0.5607843137254902, 0.0, 0.6666666667, 0.5333333333,\n      0.5647058823529412, 0.0, 0.6666666667, 0.5333333333, 0.5686274509803921, 0.0, 0.6666666667,\n      0.5333333333, 0.5725490196078431, 0.0, 0.6666666667, 0.5333333333, 0.5764705882352941, 0.0,\n      0.6666666667, 0.5333333333, 0.5803921568627451, 0.0, 0.6666666667, 0.5333333333,\n      0.5843137254901961, 0.0, 0.6666666667, 0.5333333333, 0.5882352941176471, 0.0, 0.6666666667,\n      0.5333333333, 0.592156862745098, 0.0, 0.6666666667, 0.5333333333, 0.596078431372549, 0.0,\n      0.6666666667, 0.5333333333, 0.6, 0.0, 0.6666666667, 0.5333333333, 0.6039215686274509, 0.0,\n      0.6666666667, 0.5333333333, 0.6078431372549019, 0.4, 1.0, 0.4, 0.611764705882353, 0.4, 1.0,\n      0.4, 0.615686274509804, 0.4, 1.0, 0.4, 0.6196078431372549, 0.4, 1.0, 0.4, 0.6235294117647059,\n      0.4, 1.0, 0.4, 0.6274509803921569, 0.4, 1.0, 0.4, 0.6313725490196078, 0.4, 1.0, 0.4,\n      0.6352941176470588, 0.4, 1.0, 0.4, 0.6392156862745098, 0.4, 1.0, 0.4, 0.6431372549019608, 0.4,\n      1.0, 0.4, 0.6470588235294118, 0.4, 1.0, 0.4, 0.6509803921568628, 0.4, 1.0, 0.4,\n      0.6549019607843137, 0.4, 1.0, 0.4, 0.6588235294117647, 0.4, 1.0, 0.4, 0.6627450980392157, 0.4,\n      1.0, 0.4, 0.6666666666666666, 0.4, 1.0, 0.4, 0.6705882352941176, 0.4, 1.0, 0.4,\n      0.6745098039215687, 0.4, 1.0, 0.4, 0.6784313725490196, 0.4, 1.0, 0.4, 0.6823529411764706, 0.4,\n      1.0, 0.4, 0.6862745098039216, 0.4, 1.0, 0.4, 0.6901960784313725, 0.4, 1.0, 0.4,\n      0.6941176470588235, 0.4, 1.0, 0.4, 0.6980392156862745, 0.4, 1.0, 0.4, 0.7019607843137254, 0.4,\n      1.0, 0.4, 0.7058823529411765, 1.0, 0.9490196078, 0.0, 0.7098039215686275, 1.0, 0.9490196078,\n      0.0, 0.7137254901960784, 1.0, 0.9490196078, 0.0, 0.7176470588235294, 1.0, 0.9490196078, 0.0,\n      0.7215686274509804, 1.0, 0.9490196078, 0.0, 0.7254901960784313, 1.0, 0.9490196078, 0.0,\n      0.7294117647058823, 1.0, 0.9490196078, 0.0, 0.7333333333333333, 1.0, 0.9490196078, 0.0,\n      0.7372549019607844, 1.0, 0.9490196078, 0.0, 0.7411764705882353, 1.0, 0.9490196078, 0.0,\n      0.7450980392156863, 1.0, 0.9490196078, 0.0, 0.7490196078431373, 1.0, 0.9490196078, 0.0,\n      0.7529411764705882, 1.0, 0.9490196078, 0.0, 0.7568627450980392, 1.0, 0.9490196078, 0.0,\n      0.7607843137254902, 1.0, 0.9490196078, 0.0, 0.7647058823529411, 1.0, 0.9490196078, 0.0,\n      0.7686274509803922, 1.0, 0.9490196078, 0.0, 0.7725490196078432, 1.0, 0.9490196078, 0.0,\n      0.7764705882352941, 1.0, 0.9490196078, 0.0, 0.7803921568627451, 1.0, 0.9490196078, 0.0,\n      0.7843137254901961, 1.0, 0.9490196078, 0.0, 0.788235294117647, 1.0, 0.9490196078, 0.0,\n      0.792156862745098, 1.0, 0.9490196078, 0.0, 0.796078431372549, 1.0, 0.9490196078, 0.0, 0.8,\n      1.0, 0.9490196078, 0.0, 0.803921568627451, 1.0, 0.9490196078, 0.0, 0.807843137254902,\n      0.9490196078, 0.6509803922, 0.2509803922, 0.8117647058823529, 0.9490196078, 0.6509803922,\n      0.2509803922, 0.8156862745098039, 0.9490196078, 0.6509803922, 0.2509803922,\n      0.8196078431372549, 0.9490196078, 0.6509803922, 0.2509803922, 0.8235294117647058,\n      0.9490196078, 0.6509803922, 0.2509803922, 0.8274509803921568, 0.9490196078, 0.6509803922,\n      0.2509803922, 0.8313725490196079, 0.9490196078, 0.6509803922, 0.2509803922,\n      0.8352941176470589, 0.9490196078, 0.6509803922, 0.2509803922, 0.8392156862745098,\n      0.9490196078, 0.6509803922, 0.2509803922, 0.8431372549019608, 0.9490196078, 0.6509803922,\n      0.2509803922, 0.8470588235294118, 0.9490196078, 0.6509803922, 0.2509803922,\n      0.8509803921568627, 0.9490196078, 0.6509803922, 0.2509803922, 0.8549019607843137,\n      0.9490196078, 0.6509803922, 0.2509803922, 0.8588235294117647, 0.9490196078, 0.6509803922,\n      0.2509803922, 0.8627450980392157, 0.9490196078, 0.6509803922, 0.2509803922,\n      0.8666666666666667, 0.9490196078, 0.6509803922, 0.2509803922, 0.8705882352941177,\n      0.9490196078, 0.6509803922, 0.2509803922, 0.8745098039215686, 0.9490196078, 0.6509803922,\n      0.2509803922, 0.8784313725490196, 0.9490196078, 0.6509803922, 0.2509803922,\n      0.8823529411764706, 0.9490196078, 0.6509803922, 0.2509803922, 0.8862745098039215,\n      0.9490196078, 0.6509803922, 0.2509803922, 0.8901960784313725, 0.9490196078, 0.6509803922,\n      0.2509803922, 0.8941176470588236, 0.9490196078, 0.6509803922, 0.2509803922,\n      0.8980392156862745, 0.9490196078, 0.6509803922, 0.2509803922, 0.9019607843137255,\n      0.9490196078, 0.6509803922, 0.2509803922, 0.9058823529411765, 0.9490196078, 0.6509803922,\n      0.2509803922, 0.9098039215686274, 1.0, 0.0, 0.0, 0.9137254901960784, 1.0, 0.0, 0.0,\n      0.9176470588235294, 1.0, 0.0, 0.0, 0.9215686274509803, 1.0, 0.0, 0.0, 0.9254901960784314, 1.0,\n      0.0, 0.0, 0.9294117647058824, 1.0, 0.0, 0.0, 0.9333333333333333, 1.0, 0.0, 0.0,\n      0.9372549019607843, 1.0, 0.0, 0.0, 0.9411764705882354, 1.0, 0.0, 0.0, 0.9450980392156864, 1.0,\n      0.0, 0.0, 0.9490196078431372, 1.0, 0.0, 0.0, 0.9529411764705882, 1.0, 0.0, 0.0,\n      0.9568627450980394, 1.0, 0.0, 0.0, 0.9607843137254903, 1.0, 0.0, 0.0, 0.9647058823529413, 1.0,\n      0.0, 0.0, 0.9686274509803922, 1.0, 0.0, 0.0, 0.9725490196078431, 1.0, 0.0, 0.0,\n      0.9764705882352941, 1.0, 0.0, 0.0, 0.9803921568627451, 1.0, 0.0, 0.0, 0.984313725490196, 1.0,\n      0.0, 0.0, 0.9882352941176471, 1.0, 0.0, 0.0, 0.9921568627450981, 1.0, 0.0, 0.0,\n      0.996078431372549, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0,\n    ],\n  },\n  {\n    ColorSpace: 'RGB',\n    Name: 'ge_256',\n    RGBPoints: [\n      0.0, 0.0039215686, 0.0078431373, 0.0078431373, 0.00392156862745098, 0.0039215686,\n      0.0078431373, 0.0078431373, 0.00784313725490196, 0.0039215686, 0.0078431373, 0.0117647059,\n      0.011764705882352941, 0.0039215686, 0.0117647059, 0.0156862745, 0.01568627450980392,\n      0.0039215686, 0.0117647059, 0.0196078431, 0.0196078431372549, 0.0039215686, 0.0156862745,\n      0.0235294118, 0.023529411764705882, 0.0039215686, 0.0156862745, 0.0274509804,\n      0.027450980392156862, 0.0039215686, 0.0196078431, 0.031372549, 0.03137254901960784,\n      0.0039215686, 0.0196078431, 0.0352941176, 0.03529411764705882, 0.0039215686, 0.0235294118,\n      0.0392156863, 0.0392156862745098, 0.0039215686, 0.0235294118, 0.0431372549,\n      0.043137254901960784, 0.0039215686, 0.0274509804, 0.0470588235, 0.047058823529411764,\n      0.0039215686, 0.0274509804, 0.0509803922, 0.050980392156862744, 0.0039215686, 0.031372549,\n      0.0549019608, 0.054901960784313725, 0.0039215686, 0.031372549, 0.0588235294,\n      0.05882352941176471, 0.0039215686, 0.0352941176, 0.062745098, 0.06274509803921569,\n      0.0039215686, 0.0352941176, 0.0666666667, 0.06666666666666667, 0.0039215686, 0.0392156863,\n      0.0705882353, 0.07058823529411765, 0.0039215686, 0.0392156863, 0.0745098039,\n      0.07450980392156863, 0.0039215686, 0.0431372549, 0.0784313725, 0.0784313725490196,\n      0.0039215686, 0.0431372549, 0.0823529412, 0.08235294117647059, 0.0039215686, 0.0470588235,\n      0.0862745098, 0.08627450980392157, 0.0039215686, 0.0470588235, 0.0901960784,\n      0.09019607843137255, 0.0039215686, 0.0509803922, 0.0941176471, 0.09411764705882353,\n      0.0039215686, 0.0509803922, 0.0980392157, 0.09803921568627451, 0.0039215686, 0.0549019608,\n      0.1019607843, 0.10196078431372549, 0.0039215686, 0.0549019608, 0.1058823529,\n      0.10588235294117647, 0.0039215686, 0.0588235294, 0.1098039216, 0.10980392156862745,\n      0.0039215686, 0.0588235294, 0.1137254902, 0.11372549019607843, 0.0039215686, 0.062745098,\n      0.1176470588, 0.11764705882352942, 0.0039215686, 0.062745098, 0.1215686275,\n      0.12156862745098039, 0.0039215686, 0.0666666667, 0.1254901961, 0.12549019607843137,\n      0.0039215686, 0.0666666667, 0.1294117647, 0.12941176470588237, 0.0039215686, 0.0705882353,\n      0.1333333333, 0.13333333333333333, 0.0039215686, 0.0705882353, 0.137254902,\n      0.13725490196078433, 0.0039215686, 0.0745098039, 0.1411764706, 0.1411764705882353,\n      0.0039215686, 0.0745098039, 0.1450980392, 0.1450980392156863, 0.0039215686, 0.0784313725,\n      0.1490196078, 0.14901960784313725, 0.0039215686, 0.0784313725, 0.1529411765,\n      0.15294117647058825, 0.0039215686, 0.0823529412, 0.1568627451, 0.1568627450980392,\n      0.0039215686, 0.0823529412, 0.1607843137, 0.1607843137254902, 0.0039215686, 0.0862745098,\n      0.1647058824, 0.16470588235294117, 0.0039215686, 0.0862745098, 0.168627451,\n      0.16862745098039217, 0.0039215686, 0.0901960784, 0.1725490196, 0.17254901960784313,\n      0.0039215686, 0.0901960784, 0.1764705882, 0.17647058823529413, 0.0039215686, 0.0941176471,\n      0.1803921569, 0.1803921568627451, 0.0039215686, 0.0941176471, 0.1843137255,\n      0.1843137254901961, 0.0039215686, 0.0980392157, 0.1882352941, 0.18823529411764706,\n      0.0039215686, 0.0980392157, 0.1921568627, 0.19215686274509805, 0.0039215686, 0.1019607843,\n      0.1960784314, 0.19607843137254902, 0.0039215686, 0.1019607843, 0.2, 0.2, 0.0039215686,\n      0.1058823529, 0.2039215686, 0.20392156862745098, 0.0039215686, 0.1058823529, 0.2078431373,\n      0.20784313725490197, 0.0039215686, 0.1098039216, 0.2117647059, 0.21176470588235294,\n      0.0039215686, 0.1098039216, 0.2156862745, 0.21568627450980393, 0.0039215686, 0.1137254902,\n      0.2196078431, 0.2196078431372549, 0.0039215686, 0.1137254902, 0.2235294118,\n      0.2235294117647059, 0.0039215686, 0.1176470588, 0.2274509804, 0.22745098039215686,\n      0.0039215686, 0.1176470588, 0.231372549, 0.23137254901960785, 0.0039215686, 0.1215686275,\n      0.2352941176, 0.23529411764705885, 0.0039215686, 0.1215686275, 0.2392156863,\n      0.23921568627450984, 0.0039215686, 0.1254901961, 0.2431372549, 0.24313725490196078,\n      0.0039215686, 0.1254901961, 0.2470588235, 0.24705882352941178, 0.0039215686, 0.1294117647,\n      0.2509803922, 0.25098039215686274, 0.0039215686, 0.1294117647, 0.2509803922,\n      0.2549019607843137, 0.0078431373, 0.1254901961, 0.2549019608, 0.25882352941176473,\n      0.0156862745, 0.1254901961, 0.2588235294, 0.2627450980392157, 0.0235294118, 0.1215686275,\n      0.262745098, 0.26666666666666666, 0.031372549, 0.1215686275, 0.2666666667,\n      0.27058823529411763, 0.0392156863, 0.1176470588, 0.2705882353, 0.27450980392156865,\n      0.0470588235, 0.1176470588, 0.2745098039, 0.2784313725490196, 0.0549019608, 0.1137254902,\n      0.2784313725, 0.2823529411764706, 0.062745098, 0.1137254902, 0.2823529412,\n      0.28627450980392155, 0.0705882353, 0.1098039216, 0.2862745098, 0.2901960784313726,\n      0.0784313725, 0.1098039216, 0.2901960784, 0.29411764705882354, 0.0862745098, 0.1058823529,\n      0.2941176471, 0.2980392156862745, 0.0941176471, 0.1058823529, 0.2980392157,\n      0.30196078431372547, 0.1019607843, 0.1019607843, 0.3019607843, 0.3058823529411765,\n      0.1098039216, 0.1019607843, 0.3058823529, 0.30980392156862746, 0.1176470588, 0.0980392157,\n      0.3098039216, 0.3137254901960784, 0.1254901961, 0.0980392157, 0.3137254902,\n      0.3176470588235294, 0.1333333333, 0.0941176471, 0.3176470588, 0.3215686274509804,\n      0.1411764706, 0.0941176471, 0.3215686275, 0.3254901960784314, 0.1490196078, 0.0901960784,\n      0.3254901961, 0.32941176470588235, 0.1568627451, 0.0901960784, 0.3294117647,\n      0.3333333333333333, 0.1647058824, 0.0862745098, 0.3333333333, 0.33725490196078434,\n      0.1725490196, 0.0862745098, 0.337254902, 0.3411764705882353, 0.1803921569, 0.0823529412,\n      0.3411764706, 0.34509803921568627, 0.1882352941, 0.0823529412, 0.3450980392,\n      0.34901960784313724, 0.1960784314, 0.0784313725, 0.3490196078, 0.35294117647058826,\n      0.2039215686, 0.0784313725, 0.3529411765, 0.3568627450980392, 0.2117647059, 0.0745098039,\n      0.3568627451, 0.3607843137254902, 0.2196078431, 0.0745098039, 0.3607843137,\n      0.36470588235294116, 0.2274509804, 0.0705882353, 0.3647058824, 0.3686274509803922,\n      0.2352941176, 0.0705882353, 0.368627451, 0.37254901960784315, 0.2431372549, 0.0666666667,\n      0.3725490196, 0.3764705882352941, 0.2509803922, 0.0666666667, 0.3764705882,\n      0.3803921568627451, 0.2549019608, 0.062745098, 0.3803921569, 0.3843137254901961, 0.262745098,\n      0.062745098, 0.3843137255, 0.38823529411764707, 0.2705882353, 0.0588235294, 0.3882352941,\n      0.39215686274509803, 0.2784313725, 0.0588235294, 0.3921568627, 0.396078431372549,\n      0.2862745098, 0.0549019608, 0.3960784314, 0.4, 0.2941176471, 0.0549019608, 0.4,\n      0.403921568627451, 0.3019607843, 0.0509803922, 0.4039215686, 0.40784313725490196,\n      0.3098039216, 0.0509803922, 0.4078431373, 0.4117647058823529, 0.3176470588, 0.0470588235,\n      0.4117647059, 0.41568627450980394, 0.3254901961, 0.0470588235, 0.4156862745,\n      0.4196078431372549, 0.3333333333, 0.0431372549, 0.4196078431, 0.4235294117647059,\n      0.3411764706, 0.0431372549, 0.4235294118, 0.42745098039215684, 0.3490196078, 0.0392156863,\n      0.4274509804, 0.43137254901960786, 0.3568627451, 0.0392156863, 0.431372549,\n      0.43529411764705883, 0.3647058824, 0.0352941176, 0.4352941176, 0.4392156862745098,\n      0.3725490196, 0.0352941176, 0.4392156863, 0.44313725490196076, 0.3803921569, 0.031372549,\n      0.4431372549, 0.4470588235294118, 0.3882352941, 0.031372549, 0.4470588235,\n      0.45098039215686275, 0.3960784314, 0.0274509804, 0.4509803922, 0.4549019607843137,\n      0.4039215686, 0.0274509804, 0.4549019608, 0.4588235294117647, 0.4117647059, 0.0235294118,\n      0.4588235294, 0.4627450980392157, 0.4196078431, 0.0235294118, 0.462745098, 0.4666666666666667,\n      0.4274509804, 0.0196078431, 0.4666666667, 0.4705882352941177, 0.4352941176, 0.0196078431,\n      0.4705882353, 0.4745098039215686, 0.4431372549, 0.0156862745, 0.4745098039,\n      0.4784313725490197, 0.4509803922, 0.0156862745, 0.4784313725, 0.48235294117647065,\n      0.4588235294, 0.0117647059, 0.4823529412, 0.48627450980392156, 0.4666666667, 0.0117647059,\n      0.4862745098, 0.49019607843137253, 0.4745098039, 0.0078431373, 0.4901960784,\n      0.49411764705882355, 0.4823529412, 0.0078431373, 0.4941176471, 0.4980392156862745,\n      0.4901960784, 0.0039215686, 0.4980392157, 0.5019607843137255, 0.4980392157, 0.0117647059,\n      0.4980392157, 0.5058823529411764, 0.5058823529, 0.0156862745, 0.4901960784,\n      0.5098039215686274, 0.5137254902, 0.0235294118, 0.4823529412, 0.5137254901960784,\n      0.5215686275, 0.0274509804, 0.4745098039, 0.5176470588235295, 0.5294117647, 0.0352941176,\n      0.4666666667, 0.5215686274509804, 0.537254902, 0.0392156863, 0.4588235294, 0.5254901960784314,\n      0.5450980392, 0.0470588235, 0.4509803922, 0.5294117647058824, 0.5529411765, 0.0509803922,\n      0.4431372549, 0.5333333333333333, 0.5607843137, 0.0588235294, 0.4352941176,\n      0.5372549019607843, 0.568627451, 0.062745098, 0.4274509804, 0.5411764705882353, 0.5764705882,\n      0.0705882353, 0.4196078431, 0.5450980392156862, 0.5843137255, 0.0745098039, 0.4117647059,\n      0.5490196078431373, 0.5921568627, 0.0823529412, 0.4039215686, 0.5529411764705883, 0.6,\n      0.0862745098, 0.3960784314, 0.5568627450980392, 0.6078431373, 0.0941176471, 0.3882352941,\n      0.5607843137254902, 0.6156862745, 0.0980392157, 0.3803921569, 0.5647058823529412,\n      0.6235294118, 0.1058823529, 0.3725490196, 0.5686274509803921, 0.631372549, 0.1098039216,\n      0.3647058824, 0.5725490196078431, 0.6392156863, 0.1176470588, 0.3568627451,\n      0.5764705882352941, 0.6470588235, 0.1215686275, 0.3490196078, 0.5803921568627451,\n      0.6549019608, 0.1294117647, 0.3411764706, 0.5843137254901961, 0.662745098, 0.1333333333,\n      0.3333333333, 0.5882352941176471, 0.6705882353, 0.1411764706, 0.3254901961, 0.592156862745098,\n      0.6784313725, 0.1450980392, 0.3176470588, 0.596078431372549, 0.6862745098, 0.1529411765,\n      0.3098039216, 0.6, 0.6941176471, 0.1568627451, 0.3019607843, 0.6039215686274509, 0.7019607843,\n      0.1647058824, 0.2941176471, 0.6078431372549019, 0.7098039216, 0.168627451, 0.2862745098,\n      0.611764705882353, 0.7176470588, 0.1764705882, 0.2784313725, 0.615686274509804, 0.7254901961,\n      0.1803921569, 0.2705882353, 0.6196078431372549, 0.7333333333, 0.1882352941, 0.262745098,\n      0.6235294117647059, 0.7411764706, 0.1921568627, 0.2549019608, 0.6274509803921569,\n      0.7490196078, 0.2, 0.2509803922, 0.6313725490196078, 0.7529411765, 0.2039215686, 0.2431372549,\n      0.6352941176470588, 0.7607843137, 0.2117647059, 0.2352941176, 0.6392156862745098, 0.768627451,\n      0.2156862745, 0.2274509804, 0.6431372549019608, 0.7764705882, 0.2235294118, 0.2196078431,\n      0.6470588235294118, 0.7843137255, 0.2274509804, 0.2117647059, 0.6509803921568628,\n      0.7921568627, 0.2352941176, 0.2039215686, 0.6549019607843137, 0.8, 0.2392156863, 0.1960784314,\n      0.6588235294117647, 0.8078431373, 0.2470588235, 0.1882352941, 0.6627450980392157,\n      0.8156862745, 0.2509803922, 0.1803921569, 0.6666666666666666, 0.8235294118, 0.2549019608,\n      0.1725490196, 0.6705882352941176, 0.831372549, 0.2588235294, 0.1647058824, 0.6745098039215687,\n      0.8392156863, 0.2666666667, 0.1568627451, 0.6784313725490196, 0.8470588235, 0.2705882353,\n      0.1490196078, 0.6823529411764706, 0.8549019608, 0.2784313725, 0.1411764706,\n      0.6862745098039216, 0.862745098, 0.2823529412, 0.1333333333, 0.6901960784313725, 0.8705882353,\n      0.2901960784, 0.1254901961, 0.6941176470588235, 0.8784313725, 0.2941176471, 0.1176470588,\n      0.6980392156862745, 0.8862745098, 0.3019607843, 0.1098039216, 0.7019607843137254,\n      0.8941176471, 0.3058823529, 0.1019607843, 0.7058823529411765, 0.9019607843, 0.3137254902,\n      0.0941176471, 0.7098039215686275, 0.9098039216, 0.3176470588, 0.0862745098,\n      0.7137254901960784, 0.9176470588, 0.3254901961, 0.0784313725, 0.7176470588235294,\n      0.9254901961, 0.3294117647, 0.0705882353, 0.7215686274509804, 0.9333333333, 0.337254902,\n      0.062745098, 0.7254901960784313, 0.9411764706, 0.3411764706, 0.0549019608, 0.7294117647058823,\n      0.9490196078, 0.3490196078, 0.0470588235, 0.7333333333333333, 0.9568627451, 0.3529411765,\n      0.0392156863, 0.7372549019607844, 0.9647058824, 0.3607843137, 0.031372549, 0.7411764705882353,\n      0.9725490196, 0.3647058824, 0.0235294118, 0.7450980392156863, 0.9803921569, 0.3725490196,\n      0.0156862745, 0.7490196078431373, 0.9882352941, 0.3725490196, 0.0039215686,\n      0.7529411764705882, 0.9960784314, 0.3843137255, 0.0156862745, 0.7568627450980392,\n      0.9960784314, 0.3921568627, 0.031372549, 0.7607843137254902, 0.9960784314, 0.4039215686,\n      0.0470588235, 0.7647058823529411, 0.9960784314, 0.4117647059, 0.062745098, 0.7686274509803922,\n      0.9960784314, 0.4235294118, 0.0784313725, 0.7725490196078432, 0.9960784314, 0.431372549,\n      0.0941176471, 0.7764705882352941, 0.9960784314, 0.4431372549, 0.1098039216,\n      0.7803921568627451, 0.9960784314, 0.4509803922, 0.1254901961, 0.7843137254901961,\n      0.9960784314, 0.462745098, 0.1411764706, 0.788235294117647, 0.9960784314, 0.4705882353,\n      0.1568627451, 0.792156862745098, 0.9960784314, 0.4823529412, 0.1725490196, 0.796078431372549,\n      0.9960784314, 0.4901960784, 0.1882352941, 0.8, 0.9960784314, 0.5019607843, 0.2039215686,\n      0.803921568627451, 0.9960784314, 0.5098039216, 0.2196078431, 0.807843137254902, 0.9960784314,\n      0.5215686275, 0.2352941176, 0.8117647058823529, 0.9960784314, 0.5294117647, 0.2509803922,\n      0.8156862745098039, 0.9960784314, 0.5411764706, 0.262745098, 0.8196078431372549, 0.9960784314,\n      0.5490196078, 0.2784313725, 0.8235294117647058, 0.9960784314, 0.5607843137, 0.2941176471,\n      0.8274509803921568, 0.9960784314, 0.568627451, 0.3098039216, 0.8313725490196079, 0.9960784314,\n      0.5803921569, 0.3254901961, 0.8352941176470589, 0.9960784314, 0.5882352941, 0.3411764706,\n      0.8392156862745098, 0.9960784314, 0.6, 0.3568627451, 0.8431372549019608, 0.9960784314,\n      0.6078431373, 0.3725490196, 0.8470588235294118, 0.9960784314, 0.6196078431, 0.3882352941,\n      0.8509803921568627, 0.9960784314, 0.6274509804, 0.4039215686, 0.8549019607843137,\n      0.9960784314, 0.6392156863, 0.4196078431, 0.8588235294117647, 0.9960784314, 0.6470588235,\n      0.4352941176, 0.8627450980392157, 0.9960784314, 0.6588235294, 0.4509803922,\n      0.8666666666666667, 0.9960784314, 0.6666666667, 0.4666666667, 0.8705882352941177,\n      0.9960784314, 0.6784313725, 0.4823529412, 0.8745098039215686, 0.9960784314, 0.6862745098,\n      0.4980392157, 0.8784313725490196, 0.9960784314, 0.6980392157, 0.5137254902,\n      0.8823529411764706, 0.9960784314, 0.7058823529, 0.5294117647, 0.8862745098039215,\n      0.9960784314, 0.7176470588, 0.5450980392, 0.8901960784313725, 0.9960784314, 0.7254901961,\n      0.5607843137, 0.8941176470588236, 0.9960784314, 0.737254902, 0.5764705882, 0.8980392156862745,\n      0.9960784314, 0.7450980392, 0.5921568627, 0.9019607843137255, 0.9960784314, 0.7529411765,\n      0.6078431373, 0.9058823529411765, 0.9960784314, 0.7607843137, 0.6235294118,\n      0.9098039215686274, 0.9960784314, 0.7725490196, 0.6392156863, 0.9137254901960784,\n      0.9960784314, 0.7803921569, 0.6549019608, 0.9176470588235294, 0.9960784314, 0.7921568627,\n      0.6705882353, 0.9215686274509803, 0.9960784314, 0.8, 0.6862745098, 0.9254901960784314,\n      0.9960784314, 0.8117647059, 0.7019607843, 0.9294117647058824, 0.9960784314, 0.8196078431,\n      0.7176470588, 0.9333333333333333, 0.9960784314, 0.831372549, 0.7333333333, 0.9372549019607843,\n      0.9960784314, 0.8392156863, 0.7490196078, 0.9411764705882354, 0.9960784314, 0.8509803922,\n      0.7607843137, 0.9450980392156864, 0.9960784314, 0.8588235294, 0.7764705882,\n      0.9490196078431372, 0.9960784314, 0.8705882353, 0.7921568627, 0.9529411764705882,\n      0.9960784314, 0.8784313725, 0.8078431373, 0.9568627450980394, 0.9960784314, 0.8901960784,\n      0.8235294118, 0.9607843137254903, 0.9960784314, 0.8980392157, 0.8392156863,\n      0.9647058823529413, 0.9960784314, 0.9098039216, 0.8549019608, 0.9686274509803922,\n      0.9960784314, 0.9176470588, 0.8705882353, 0.9725490196078431, 0.9960784314, 0.9294117647,\n      0.8862745098, 0.9764705882352941, 0.9960784314, 0.937254902, 0.9019607843, 0.9803921568627451,\n      0.9960784314, 0.9490196078, 0.9176470588, 0.984313725490196, 0.9960784314, 0.9568627451,\n      0.9333333333, 0.9882352941176471, 0.9960784314, 0.968627451, 0.9490196078, 0.9921568627450981,\n      0.9960784314, 0.9764705882, 0.9647058824, 0.996078431372549, 0.9960784314, 0.9882352941,\n      0.9803921569, 1.0, 0.9960784314, 0.9882352941, 0.9803921569,\n    ],\n  },\n  {\n    ColorSpace: 'RGB',\n    Name: 'ge',\n    RGBPoints: [\n      0.0, 0.0078431373, 0.0078431373, 0.0078431373, 0.00392156862745098, 0.0078431373,\n      0.0078431373, 0.0078431373, 0.00784313725490196, 0.0078431373, 0.0078431373, 0.0078431373,\n      0.011764705882352941, 0.0078431373, 0.0078431373, 0.0078431373, 0.01568627450980392,\n      0.0078431373, 0.0078431373, 0.0078431373, 0.0196078431372549, 0.0078431373, 0.0078431373,\n      0.0078431373, 0.023529411764705882, 0.0078431373, 0.0078431373, 0.0078431373,\n      0.027450980392156862, 0.0078431373, 0.0078431373, 0.0078431373, 0.03137254901960784,\n      0.0078431373, 0.0078431373, 0.0078431373, 0.03529411764705882, 0.0078431373, 0.0078431373,\n      0.0078431373, 0.0392156862745098, 0.0078431373, 0.0078431373, 0.0078431373,\n      0.043137254901960784, 0.0078431373, 0.0078431373, 0.0078431373, 0.047058823529411764,\n      0.0078431373, 0.0078431373, 0.0078431373, 0.050980392156862744, 0.0078431373, 0.0078431373,\n      0.0078431373, 0.054901960784313725, 0.0078431373, 0.0078431373, 0.0078431373,\n      0.05882352941176471, 0.0117647059, 0.0078431373, 0.0078431373, 0.06274509803921569,\n      0.0078431373, 0.0156862745, 0.0156862745, 0.06666666666666667, 0.0078431373, 0.0235294118,\n      0.0235294118, 0.07058823529411765, 0.0078431373, 0.031372549, 0.031372549,\n      0.07450980392156863, 0.0078431373, 0.0392156863, 0.0392156863, 0.0784313725490196,\n      0.0078431373, 0.0470588235, 0.0470588235, 0.08235294117647059, 0.0078431373, 0.0549019608,\n      0.0549019608, 0.08627450980392157, 0.0078431373, 0.062745098, 0.062745098,\n      0.09019607843137255, 0.0078431373, 0.0705882353, 0.0705882353, 0.09411764705882353,\n      0.0078431373, 0.0784313725, 0.0784313725, 0.09803921568627451, 0.0078431373, 0.0901960784,\n      0.0862745098, 0.10196078431372549, 0.0078431373, 0.0980392157, 0.0941176471,\n      0.10588235294117647, 0.0078431373, 0.1058823529, 0.1019607843, 0.10980392156862745,\n      0.0078431373, 0.1137254902, 0.1098039216, 0.11372549019607843, 0.0078431373, 0.1215686275,\n      0.1176470588, 0.11764705882352942, 0.0078431373, 0.1294117647, 0.1254901961,\n      0.12156862745098039, 0.0078431373, 0.137254902, 0.1333333333, 0.12549019607843137,\n      0.0078431373, 0.1450980392, 0.1411764706, 0.12941176470588237, 0.0078431373, 0.1529411765,\n      0.1490196078, 0.13333333333333333, 0.0078431373, 0.1647058824, 0.1568627451,\n      0.13725490196078433, 0.0078431373, 0.1725490196, 0.1647058824, 0.1411764705882353,\n      0.0078431373, 0.1803921569, 0.1725490196, 0.1450980392156863, 0.0078431373, 0.1882352941,\n      0.1803921569, 0.14901960784313725, 0.0078431373, 0.1960784314, 0.1882352941,\n      0.15294117647058825, 0.0078431373, 0.2039215686, 0.1960784314, 0.1568627450980392,\n      0.0078431373, 0.2117647059, 0.2039215686, 0.1607843137254902, 0.0078431373, 0.2196078431,\n      0.2117647059, 0.16470588235294117, 0.0078431373, 0.2274509804, 0.2196078431,\n      0.16862745098039217, 0.0078431373, 0.2352941176, 0.2274509804, 0.17254901960784313,\n      0.0078431373, 0.2470588235, 0.2352941176, 0.17647058823529413, 0.0078431373, 0.2509803922,\n      0.2431372549, 0.1803921568627451, 0.0078431373, 0.2549019608, 0.2509803922,\n      0.1843137254901961, 0.0078431373, 0.262745098, 0.2509803922, 0.18823529411764706,\n      0.0078431373, 0.2705882353, 0.2588235294, 0.19215686274509805, 0.0078431373, 0.2784313725,\n      0.2666666667, 0.19607843137254902, 0.0078431373, 0.2862745098, 0.2745098039, 0.2,\n      0.0078431373, 0.2941176471, 0.2823529412, 0.20392156862745098, 0.0078431373, 0.3019607843,\n      0.2901960784, 0.20784313725490197, 0.0078431373, 0.3137254902, 0.2980392157,\n      0.21176470588235294, 0.0078431373, 0.3215686275, 0.3058823529, 0.21568627450980393,\n      0.0078431373, 0.3294117647, 0.3137254902, 0.2196078431372549, 0.0078431373, 0.337254902,\n      0.3215686275, 0.2235294117647059, 0.0078431373, 0.3450980392, 0.3294117647,\n      0.22745098039215686, 0.0078431373, 0.3529411765, 0.337254902, 0.23137254901960785,\n      0.0078431373, 0.3607843137, 0.3450980392, 0.23529411764705885, 0.0078431373, 0.368627451,\n      0.3529411765, 0.23921568627450984, 0.0078431373, 0.3764705882, 0.3607843137,\n      0.24313725490196078, 0.0078431373, 0.3843137255, 0.368627451, 0.24705882352941178,\n      0.0078431373, 0.3960784314, 0.3764705882, 0.25098039215686274, 0.0078431373, 0.4039215686,\n      0.3843137255, 0.2549019607843137, 0.0078431373, 0.4117647059, 0.3921568627,\n      0.25882352941176473, 0.0078431373, 0.4196078431, 0.4, 0.2627450980392157, 0.0078431373,\n      0.4274509804, 0.4078431373, 0.26666666666666666, 0.0078431373, 0.4352941176, 0.4156862745,\n      0.27058823529411763, 0.0078431373, 0.4431372549, 0.4235294118, 0.27450980392156865,\n      0.0078431373, 0.4509803922, 0.431372549, 0.2784313725490196, 0.0078431373, 0.4588235294,\n      0.4392156863, 0.2823529411764706, 0.0078431373, 0.4705882353, 0.4470588235,\n      0.28627450980392155, 0.0078431373, 0.4784313725, 0.4549019608, 0.2901960784313726,\n      0.0078431373, 0.4862745098, 0.462745098, 0.29411764705882354, 0.0078431373, 0.4941176471,\n      0.4705882353, 0.2980392156862745, 0.0078431373, 0.5019607843, 0.4784313725,\n      0.30196078431372547, 0.0117647059, 0.5098039216, 0.4862745098, 0.3058823529411765,\n      0.0196078431, 0.5019607843, 0.4941176471, 0.30980392156862746, 0.0274509804, 0.4941176471,\n      0.5058823529, 0.3137254901960784, 0.0352941176, 0.4862745098, 0.5137254902,\n      0.3176470588235294, 0.0431372549, 0.4784313725, 0.5215686275, 0.3215686274509804,\n      0.0509803922, 0.4705882353, 0.5294117647, 0.3254901960784314, 0.0588235294, 0.462745098,\n      0.537254902, 0.32941176470588235, 0.0666666667, 0.4549019608, 0.5450980392,\n      0.3333333333333333, 0.0745098039, 0.4470588235, 0.5529411765, 0.33725490196078434,\n      0.0823529412, 0.4392156863, 0.5607843137, 0.3411764705882353, 0.0901960784, 0.431372549,\n      0.568627451, 0.34509803921568627, 0.0980392157, 0.4235294118, 0.5764705882,\n      0.34901960784313724, 0.1058823529, 0.4156862745, 0.5843137255, 0.35294117647058826,\n      0.1137254902, 0.4078431373, 0.5921568627, 0.3568627450980392, 0.1215686275, 0.4, 0.6,\n      0.3607843137254902, 0.1294117647, 0.3921568627, 0.6078431373, 0.36470588235294116,\n      0.137254902, 0.3843137255, 0.6156862745, 0.3686274509803922, 0.1450980392, 0.3764705882,\n      0.6235294118, 0.37254901960784315, 0.1529411765, 0.368627451, 0.631372549, 0.3764705882352941,\n      0.1607843137, 0.3607843137, 0.6392156863, 0.3803921568627451, 0.168627451, 0.3529411765,\n      0.6470588235, 0.3843137254901961, 0.1764705882, 0.3450980392, 0.6549019608,\n      0.38823529411764707, 0.1843137255, 0.337254902, 0.662745098, 0.39215686274509803,\n      0.1921568627, 0.3294117647, 0.6705882353, 0.396078431372549, 0.2, 0.3215686275, 0.6784313725,\n      0.4, 0.2078431373, 0.3137254902, 0.6862745098, 0.403921568627451, 0.2156862745, 0.3058823529,\n      0.6941176471, 0.40784313725490196, 0.2235294118, 0.2980392157, 0.7019607843,\n      0.4117647058823529, 0.231372549, 0.2901960784, 0.7098039216, 0.41568627450980394,\n      0.2392156863, 0.2823529412, 0.7176470588, 0.4196078431372549, 0.2470588235, 0.2745098039,\n      0.7254901961, 0.4235294117647059, 0.2509803922, 0.2666666667, 0.7333333333,\n      0.42745098039215684, 0.2509803922, 0.2588235294, 0.7411764706, 0.43137254901960786,\n      0.2588235294, 0.2509803922, 0.7490196078, 0.43529411764705883, 0.2666666667, 0.2509803922,\n      0.7490196078, 0.4392156862745098, 0.2745098039, 0.2431372549, 0.7568627451,\n      0.44313725490196076, 0.2823529412, 0.2352941176, 0.7647058824, 0.4470588235294118,\n      0.2901960784, 0.2274509804, 0.7725490196, 0.45098039215686275, 0.2980392157, 0.2196078431,\n      0.7803921569, 0.4549019607843137, 0.3058823529, 0.2117647059, 0.7882352941,\n      0.4588235294117647, 0.3137254902, 0.2039215686, 0.7960784314, 0.4627450980392157,\n      0.3215686275, 0.1960784314, 0.8039215686, 0.4666666666666667, 0.3294117647, 0.1882352941,\n      0.8117647059, 0.4705882352941177, 0.337254902, 0.1803921569, 0.8196078431, 0.4745098039215686,\n      0.3450980392, 0.1725490196, 0.8274509804, 0.4784313725490197, 0.3529411765, 0.1647058824,\n      0.8352941176, 0.48235294117647065, 0.3607843137, 0.1568627451, 0.8431372549,\n      0.48627450980392156, 0.368627451, 0.1490196078, 0.8509803922, 0.49019607843137253,\n      0.3764705882, 0.1411764706, 0.8588235294, 0.49411764705882355, 0.3843137255, 0.1333333333,\n      0.8666666667, 0.4980392156862745, 0.3921568627, 0.1254901961, 0.8745098039,\n      0.5019607843137255, 0.4, 0.1176470588, 0.8823529412, 0.5058823529411764, 0.4078431373,\n      0.1098039216, 0.8901960784, 0.5098039215686274, 0.4156862745, 0.1019607843, 0.8980392157,\n      0.5137254901960784, 0.4235294118, 0.0941176471, 0.9058823529, 0.5176470588235295, 0.431372549,\n      0.0862745098, 0.9137254902, 0.5215686274509804, 0.4392156863, 0.0784313725, 0.9215686275,\n      0.5254901960784314, 0.4470588235, 0.0705882353, 0.9294117647, 0.5294117647058824,\n      0.4549019608, 0.062745098, 0.937254902, 0.5333333333333333, 0.462745098, 0.0549019608,\n      0.9450980392, 0.5372549019607843, 0.4705882353, 0.0470588235, 0.9529411765,\n      0.5411764705882353, 0.4784313725, 0.0392156863, 0.9607843137, 0.5450980392156862,\n      0.4862745098, 0.031372549, 0.968627451, 0.5490196078431373, 0.4941176471, 0.0235294118,\n      0.9764705882, 0.5529411764705883, 0.4980392157, 0.0156862745, 0.9843137255,\n      0.5568627450980392, 0.5058823529, 0.0078431373, 0.9921568627, 0.5607843137254902,\n      0.5137254902, 0.0156862745, 0.9803921569, 0.5647058823529412, 0.5215686275, 0.0235294118,\n      0.9647058824, 0.5686274509803921, 0.5294117647, 0.0352941176, 0.9490196078,\n      0.5725490196078431, 0.537254902, 0.0431372549, 0.9333333333, 0.5764705882352941, 0.5450980392,\n      0.0509803922, 0.9176470588, 0.5803921568627451, 0.5529411765, 0.062745098, 0.9019607843,\n      0.5843137254901961, 0.5607843137, 0.0705882353, 0.8862745098, 0.5882352941176471, 0.568627451,\n      0.0784313725, 0.8705882353, 0.592156862745098, 0.5764705882, 0.0901960784, 0.8549019608,\n      0.596078431372549, 0.5843137255, 0.0980392157, 0.8392156863, 0.6, 0.5921568627, 0.1098039216,\n      0.8235294118, 0.6039215686274509, 0.6, 0.1176470588, 0.8078431373, 0.6078431372549019,\n      0.6078431373, 0.1254901961, 0.7921568627, 0.611764705882353, 0.6156862745, 0.137254902,\n      0.7764705882, 0.615686274509804, 0.6235294118, 0.1450980392, 0.7607843137, 0.6196078431372549,\n      0.631372549, 0.1529411765, 0.7490196078, 0.6235294117647059, 0.6392156863, 0.1647058824,\n      0.737254902, 0.6274509803921569, 0.6470588235, 0.1725490196, 0.7215686275, 0.6313725490196078,\n      0.6549019608, 0.1843137255, 0.7058823529, 0.6352941176470588, 0.662745098, 0.1921568627,\n      0.6901960784, 0.6392156862745098, 0.6705882353, 0.2, 0.6745098039, 0.6431372549019608,\n      0.6784313725, 0.2117647059, 0.6588235294, 0.6470588235294118, 0.6862745098, 0.2196078431,\n      0.6431372549, 0.6509803921568628, 0.6941176471, 0.2274509804, 0.6274509804,\n      0.6549019607843137, 0.7019607843, 0.2392156863, 0.6117647059, 0.6588235294117647,\n      0.7098039216, 0.2470588235, 0.5960784314, 0.6627450980392157, 0.7176470588, 0.2509803922,\n      0.5803921569, 0.6666666666666666, 0.7254901961, 0.2588235294, 0.5647058824,\n      0.6705882352941176, 0.7333333333, 0.2666666667, 0.5490196078, 0.6745098039215687,\n      0.7411764706, 0.2784313725, 0.5333333333, 0.6784313725490196, 0.7490196078, 0.2862745098,\n      0.5176470588, 0.6823529411764706, 0.7490196078, 0.2941176471, 0.5019607843,\n      0.6862745098039216, 0.7529411765, 0.3058823529, 0.4862745098, 0.6901960784313725,\n      0.7607843137, 0.3137254902, 0.4705882353, 0.6941176470588235, 0.768627451, 0.3215686275,\n      0.4549019608, 0.6980392156862745, 0.7764705882, 0.3333333333, 0.4392156863,\n      0.7019607843137254, 0.7843137255, 0.3411764706, 0.4235294118, 0.7058823529411765,\n      0.7921568627, 0.3529411765, 0.4078431373, 0.7098039215686275, 0.8, 0.3607843137, 0.3921568627,\n      0.7137254901960784, 0.8078431373, 0.368627451, 0.3764705882, 0.7176470588235294, 0.8156862745,\n      0.3803921569, 0.3607843137, 0.7215686274509804, 0.8235294118, 0.3882352941, 0.3450980392,\n      0.7254901960784313, 0.831372549, 0.3960784314, 0.3294117647, 0.7294117647058823, 0.8392156863,\n      0.4078431373, 0.3137254902, 0.7333333333333333, 0.8470588235, 0.4156862745, 0.2980392157,\n      0.7372549019607844, 0.8549019608, 0.4274509804, 0.2823529412, 0.7411764705882353, 0.862745098,\n      0.4352941176, 0.2666666667, 0.7450980392156863, 0.8705882353, 0.4431372549, 0.2509803922,\n      0.7490196078431373, 0.8784313725, 0.4549019608, 0.2431372549, 0.7529411764705882,\n      0.8862745098, 0.462745098, 0.2274509804, 0.7568627450980392, 0.8941176471, 0.4705882353,\n      0.2117647059, 0.7607843137254902, 0.9019607843, 0.4823529412, 0.1960784314,\n      0.7647058823529411, 0.9098039216, 0.4901960784, 0.1803921569, 0.7686274509803922,\n      0.9176470588, 0.4980392157, 0.1647058824, 0.7725490196078432, 0.9254901961, 0.5098039216,\n      0.1490196078, 0.7764705882352941, 0.9333333333, 0.5176470588, 0.1333333333,\n      0.7803921568627451, 0.9411764706, 0.5294117647, 0.1176470588, 0.7843137254901961,\n      0.9490196078, 0.537254902, 0.1019607843, 0.788235294117647, 0.9568627451, 0.5450980392,\n      0.0862745098, 0.792156862745098, 0.9647058824, 0.5568627451, 0.0705882353, 0.796078431372549,\n      0.9725490196, 0.5647058824, 0.0549019608, 0.8, 0.9803921569, 0.5725490196, 0.0392156863,\n      0.803921568627451, 0.9882352941, 0.5843137255, 0.0235294118, 0.807843137254902, 0.9921568627,\n      0.5921568627, 0.0078431373, 0.8117647058823529, 0.9921568627, 0.6039215686, 0.0274509804,\n      0.8156862745098039, 0.9921568627, 0.6117647059, 0.0509803922, 0.8196078431372549,\n      0.9921568627, 0.6196078431, 0.0745098039, 0.8235294117647058, 0.9921568627, 0.631372549,\n      0.0980392157, 0.8274509803921568, 0.9921568627, 0.6392156863, 0.1215686275,\n      0.8313725490196079, 0.9921568627, 0.6470588235, 0.1411764706, 0.8352941176470589,\n      0.9921568627, 0.6588235294, 0.1647058824, 0.8392156862745098, 0.9921568627, 0.6666666667,\n      0.1882352941, 0.8431372549019608, 0.9921568627, 0.6784313725, 0.2117647059,\n      0.8470588235294118, 0.9921568627, 0.6862745098, 0.2352941176, 0.8509803921568627,\n      0.9921568627, 0.6941176471, 0.2509803922, 0.8549019607843137, 0.9921568627, 0.7058823529,\n      0.2705882353, 0.8588235294117647, 0.9921568627, 0.7137254902, 0.2941176471,\n      0.8627450980392157, 0.9921568627, 0.7215686275, 0.3176470588, 0.8666666666666667,\n      0.9921568627, 0.7333333333, 0.3411764706, 0.8705882352941177, 0.9921568627, 0.7411764706,\n      0.3647058824, 0.8745098039215686, 0.9921568627, 0.7490196078, 0.3843137255,\n      0.8784313725490196, 0.9921568627, 0.7529411765, 0.4078431373, 0.8823529411764706,\n      0.9921568627, 0.7607843137, 0.431372549, 0.8862745098039215, 0.9921568627, 0.7725490196,\n      0.4549019608, 0.8901960784313725, 0.9921568627, 0.7803921569, 0.4784313725,\n      0.8941176470588236, 0.9921568627, 0.7882352941, 0.4980392157, 0.8980392156862745,\n      0.9921568627, 0.8, 0.5215686275, 0.9019607843137255, 0.9921568627, 0.8078431373, 0.5450980392,\n      0.9058823529411765, 0.9921568627, 0.8156862745, 0.568627451, 0.9098039215686274, 0.9921568627,\n      0.8274509804, 0.5921568627, 0.9137254901960784, 0.9921568627, 0.8352941176, 0.6156862745,\n      0.9176470588235294, 0.9921568627, 0.8470588235, 0.6352941176, 0.9215686274509803,\n      0.9921568627, 0.8549019608, 0.6588235294, 0.9254901960784314, 0.9921568627, 0.862745098,\n      0.6823529412, 0.9294117647058824, 0.9921568627, 0.8745098039, 0.7058823529,\n      0.9333333333333333, 0.9921568627, 0.8823529412, 0.7294117647, 0.9372549019607843,\n      0.9921568627, 0.8901960784, 0.7490196078, 0.9411764705882354, 0.9921568627, 0.9019607843,\n      0.7647058824, 0.9450980392156864, 0.9921568627, 0.9098039216, 0.7882352941,\n      0.9490196078431372, 0.9921568627, 0.9215686275, 0.8117647059, 0.9529411764705882,\n      0.9921568627, 0.9294117647, 0.8352941176, 0.9568627450980394, 0.9921568627, 0.937254902,\n      0.8588235294, 0.9607843137254903, 0.9921568627, 0.9490196078, 0.8784313725,\n      0.9647058823529413, 0.9921568627, 0.9568627451, 0.9019607843, 0.9686274509803922,\n      0.9921568627, 0.9647058824, 0.9254901961, 0.9725490196078431, 0.9921568627, 0.9764705882,\n      0.9490196078, 0.9764705882352941, 0.9921568627, 0.9843137255, 0.9725490196,\n      0.9803921568627451, 0.9921568627, 0.9921568627, 0.9921568627, 0.984313725490196, 0.9921568627,\n      0.9921568627, 0.9921568627, 0.9882352941176471, 0.9921568627, 0.9921568627, 0.9921568627,\n      0.9921568627450981, 0.9921568627, 0.9921568627, 0.9921568627, 0.996078431372549, 0.9921568627,\n      0.9921568627, 0.9921568627, 1.0, 0.9921568627, 0.9921568627, 0.9921568627,\n    ],\n  },\n  {\n    ColorSpace: 'RGB',\n    Name: 'siemens',\n    RGBPoints: [\n      0.0, 0.0078431373, 0.0039215686, 0.1254901961, 0.00392156862745098, 0.0078431373,\n      0.0039215686, 0.1254901961, 0.00784313725490196, 0.0078431373, 0.0039215686, 0.1882352941,\n      0.011764705882352941, 0.0117647059, 0.0039215686, 0.2509803922, 0.01568627450980392,\n      0.0117647059, 0.0039215686, 0.3098039216, 0.0196078431372549, 0.0156862745, 0.0039215686,\n      0.3725490196, 0.023529411764705882, 0.0156862745, 0.0039215686, 0.3725490196,\n      0.027450980392156862, 0.0156862745, 0.0039215686, 0.3725490196, 0.03137254901960784,\n      0.0156862745, 0.0039215686, 0.3725490196, 0.03529411764705882, 0.0156862745, 0.0039215686,\n      0.3725490196, 0.0392156862745098, 0.0156862745, 0.0039215686, 0.3725490196,\n      0.043137254901960784, 0.0156862745, 0.0039215686, 0.3725490196, 0.047058823529411764,\n      0.0156862745, 0.0039215686, 0.3725490196, 0.050980392156862744, 0.0156862745, 0.0039215686,\n      0.3725490196, 0.054901960784313725, 0.0156862745, 0.0039215686, 0.3725490196,\n      0.05882352941176471, 0.0156862745, 0.0039215686, 0.3725490196, 0.06274509803921569,\n      0.0156862745, 0.0039215686, 0.3882352941, 0.06666666666666667, 0.0156862745, 0.0039215686,\n      0.4078431373, 0.07058823529411765, 0.0156862745, 0.0039215686, 0.4235294118,\n      0.07450980392156863, 0.0156862745, 0.0039215686, 0.4431372549, 0.0784313725490196,\n      0.0156862745, 0.0039215686, 0.462745098, 0.08235294117647059, 0.0156862745, 0.0039215686,\n      0.4784313725, 0.08627450980392157, 0.0156862745, 0.0039215686, 0.4980392157,\n      0.09019607843137255, 0.0196078431, 0.0039215686, 0.5137254902, 0.09411764705882353,\n      0.0196078431, 0.0039215686, 0.5333333333, 0.09803921568627451, 0.0196078431, 0.0039215686,\n      0.5529411765, 0.10196078431372549, 0.0196078431, 0.0039215686, 0.568627451,\n      0.10588235294117647, 0.0196078431, 0.0039215686, 0.5882352941, 0.10980392156862745,\n      0.0196078431, 0.0039215686, 0.6039215686, 0.11372549019607843, 0.0196078431, 0.0039215686,\n      0.6235294118, 0.11764705882352942, 0.0196078431, 0.0039215686, 0.6431372549,\n      0.12156862745098039, 0.0235294118, 0.0039215686, 0.6588235294, 0.12549019607843137,\n      0.0235294118, 0.0039215686, 0.6784313725, 0.12941176470588237, 0.0235294118, 0.0039215686,\n      0.6980392157, 0.13333333333333333, 0.0235294118, 0.0039215686, 0.7137254902,\n      0.13725490196078433, 0.0235294118, 0.0039215686, 0.7333333333, 0.1411764705882353,\n      0.0235294118, 0.0039215686, 0.7490196078, 0.1450980392156863, 0.0235294118, 0.0039215686,\n      0.7647058824, 0.14901960784313725, 0.0235294118, 0.0039215686, 0.7843137255,\n      0.15294117647058825, 0.0274509804, 0.0039215686, 0.8, 0.1568627450980392, 0.0274509804,\n      0.0039215686, 0.8196078431, 0.1607843137254902, 0.0274509804, 0.0039215686, 0.8352941176,\n      0.16470588235294117, 0.0274509804, 0.0039215686, 0.8549019608, 0.16862745098039217,\n      0.0274509804, 0.0039215686, 0.8745098039, 0.17254901960784313, 0.0274509804, 0.0039215686,\n      0.8901960784, 0.17647058823529413, 0.0274509804, 0.0039215686, 0.9098039216,\n      0.1803921568627451, 0.031372549, 0.0039215686, 0.9294117647, 0.1843137254901961, 0.031372549,\n      0.0039215686, 0.9254901961, 0.18823529411764706, 0.0509803922, 0.0039215686, 0.9098039216,\n      0.19215686274509805, 0.0705882353, 0.0039215686, 0.8901960784, 0.19607843137254902,\n      0.0901960784, 0.0039215686, 0.8705882353, 0.2, 0.1137254902, 0.0039215686, 0.8509803922,\n      0.20392156862745098, 0.1333333333, 0.0039215686, 0.831372549, 0.20784313725490197,\n      0.1529411765, 0.0039215686, 0.8117647059, 0.21176470588235294, 0.1725490196, 0.0039215686,\n      0.7921568627, 0.21568627450980393, 0.1960784314, 0.0039215686, 0.7725490196,\n      0.2196078431372549, 0.2156862745, 0.0039215686, 0.7529411765, 0.2235294117647059,\n      0.2352941176, 0.0039215686, 0.737254902, 0.22745098039215686, 0.2509803922, 0.0039215686,\n      0.7176470588, 0.23137254901960785, 0.2745098039, 0.0039215686, 0.6980392157,\n      0.23529411764705885, 0.2941176471, 0.0039215686, 0.6784313725, 0.23921568627450984,\n      0.3137254902, 0.0039215686, 0.6588235294, 0.24313725490196078, 0.3333333333, 0.0039215686,\n      0.6392156863, 0.24705882352941178, 0.3568627451, 0.0039215686, 0.6196078431,\n      0.25098039215686274, 0.3764705882, 0.0039215686, 0.6, 0.2549019607843137, 0.3960784314,\n      0.0039215686, 0.5803921569, 0.25882352941176473, 0.4156862745, 0.0039215686, 0.5607843137,\n      0.2627450980392157, 0.4392156863, 0.0039215686, 0.5411764706, 0.26666666666666666,\n      0.4588235294, 0.0039215686, 0.5215686275, 0.27058823529411763, 0.4784313725, 0.0039215686,\n      0.5019607843, 0.27450980392156865, 0.4980392157, 0.0039215686, 0.4823529412,\n      0.2784313725490196, 0.5215686275, 0.0039215686, 0.4666666667, 0.2823529411764706,\n      0.5411764706, 0.0039215686, 0.4470588235, 0.28627450980392155, 0.5607843137, 0.0039215686,\n      0.4274509804, 0.2901960784313726, 0.5803921569, 0.0039215686, 0.4078431373,\n      0.29411764705882354, 0.6039215686, 0.0039215686, 0.3882352941, 0.2980392156862745,\n      0.6235294118, 0.0039215686, 0.368627451, 0.30196078431372547, 0.6431372549, 0.0039215686,\n      0.3490196078, 0.3058823529411765, 0.662745098, 0.0039215686, 0.3294117647,\n      0.30980392156862746, 0.6862745098, 0.0039215686, 0.3098039216, 0.3137254901960784,\n      0.7058823529, 0.0039215686, 0.2901960784, 0.3176470588235294, 0.7254901961, 0.0039215686,\n      0.2705882353, 0.3215686274509804, 0.7450980392, 0.0039215686, 0.2509803922,\n      0.3254901960784314, 0.7647058824, 0.0039215686, 0.2352941176, 0.32941176470588235,\n      0.7843137255, 0.0039215686, 0.2156862745, 0.3333333333333333, 0.8039215686, 0.0039215686,\n      0.1960784314, 0.33725490196078434, 0.8235294118, 0.0039215686, 0.1764705882,\n      0.3411764705882353, 0.8470588235, 0.0039215686, 0.1568627451, 0.34509803921568627,\n      0.8666666667, 0.0039215686, 0.137254902, 0.34901960784313724, 0.8862745098, 0.0039215686,\n      0.1176470588, 0.35294117647058826, 0.9058823529, 0.0039215686, 0.0980392157,\n      0.3568627450980392, 0.9294117647, 0.0039215686, 0.0784313725, 0.3607843137254902,\n      0.9490196078, 0.0039215686, 0.0588235294, 0.36470588235294116, 0.968627451, 0.0039215686,\n      0.0392156863, 0.3686274509803922, 0.9921568627, 0.0039215686, 0.0235294118,\n      0.37254901960784315, 0.9529411765, 0.0039215686, 0.0588235294, 0.3764705882352941,\n      0.9529411765, 0.0078431373, 0.0549019608, 0.3803921568627451, 0.9529411765, 0.0156862745,\n      0.0549019608, 0.3843137254901961, 0.9529411765, 0.0235294118, 0.0549019608,\n      0.38823529411764707, 0.9529411765, 0.031372549, 0.0549019608, 0.39215686274509803,\n      0.9529411765, 0.0352941176, 0.0549019608, 0.396078431372549, 0.9529411765, 0.0431372549,\n      0.0549019608, 0.4, 0.9529411765, 0.0509803922, 0.0549019608, 0.403921568627451, 0.9529411765,\n      0.0588235294, 0.0549019608, 0.40784313725490196, 0.9529411765, 0.062745098, 0.0549019608,\n      0.4117647058823529, 0.9529411765, 0.0705882353, 0.0549019608, 0.41568627450980394,\n      0.9529411765, 0.0784313725, 0.0509803922, 0.4196078431372549, 0.9529411765, 0.0862745098,\n      0.0509803922, 0.4235294117647059, 0.9568627451, 0.0941176471, 0.0509803922,\n      0.42745098039215684, 0.9568627451, 0.0980392157, 0.0509803922, 0.43137254901960786,\n      0.9568627451, 0.1058823529, 0.0509803922, 0.43529411764705883, 0.9568627451, 0.1137254902,\n      0.0509803922, 0.4392156862745098, 0.9568627451, 0.1215686275, 0.0509803922,\n      0.44313725490196076, 0.9568627451, 0.1254901961, 0.0509803922, 0.4470588235294118,\n      0.9568627451, 0.1333333333, 0.0509803922, 0.45098039215686275, 0.9568627451, 0.1411764706,\n      0.0509803922, 0.4549019607843137, 0.9568627451, 0.1490196078, 0.0470588235,\n      0.4588235294117647, 0.9568627451, 0.1568627451, 0.0470588235, 0.4627450980392157,\n      0.9568627451, 0.1607843137, 0.0470588235, 0.4666666666666667, 0.9568627451, 0.168627451,\n      0.0470588235, 0.4705882352941177, 0.9607843137, 0.1764705882, 0.0470588235,\n      0.4745098039215686, 0.9607843137, 0.1843137255, 0.0470588235, 0.4784313725490197,\n      0.9607843137, 0.1882352941, 0.0470588235, 0.48235294117647065, 0.9607843137, 0.1960784314,\n      0.0470588235, 0.48627450980392156, 0.9607843137, 0.2039215686, 0.0470588235,\n      0.49019607843137253, 0.9607843137, 0.2117647059, 0.0470588235, 0.49411764705882355,\n      0.9607843137, 0.2196078431, 0.0431372549, 0.4980392156862745, 0.9607843137, 0.2235294118,\n      0.0431372549, 0.5019607843137255, 0.9607843137, 0.231372549, 0.0431372549, 0.5058823529411764,\n      0.9607843137, 0.2392156863, 0.0431372549, 0.5098039215686274, 0.9607843137, 0.2470588235,\n      0.0431372549, 0.5137254901960784, 0.9607843137, 0.2509803922, 0.0431372549,\n      0.5176470588235295, 0.9647058824, 0.2549019608, 0.0431372549, 0.5215686274509804,\n      0.9647058824, 0.262745098, 0.0431372549, 0.5254901960784314, 0.9647058824, 0.2705882353,\n      0.0431372549, 0.5294117647058824, 0.9647058824, 0.2745098039, 0.0431372549,\n      0.5333333333333333, 0.9647058824, 0.2823529412, 0.0392156863, 0.5372549019607843,\n      0.9647058824, 0.2901960784, 0.0392156863, 0.5411764705882353, 0.9647058824, 0.2980392157,\n      0.0392156863, 0.5450980392156862, 0.9647058824, 0.3058823529, 0.0392156863,\n      0.5490196078431373, 0.9647058824, 0.3098039216, 0.0392156863, 0.5529411764705883,\n      0.9647058824, 0.3176470588, 0.0392156863, 0.5568627450980392, 0.9647058824, 0.3254901961,\n      0.0392156863, 0.5607843137254902, 0.9647058824, 0.3333333333, 0.0392156863,\n      0.5647058823529412, 0.9647058824, 0.337254902, 0.0392156863, 0.5686274509803921, 0.968627451,\n      0.3450980392, 0.0392156863, 0.5725490196078431, 0.968627451, 0.3529411765, 0.0352941176,\n      0.5764705882352941, 0.968627451, 0.3607843137, 0.0352941176, 0.5803921568627451, 0.968627451,\n      0.368627451, 0.0352941176, 0.5843137254901961, 0.968627451, 0.3725490196, 0.0352941176,\n      0.5882352941176471, 0.968627451, 0.3803921569, 0.0352941176, 0.592156862745098, 0.968627451,\n      0.3882352941, 0.0352941176, 0.596078431372549, 0.968627451, 0.3960784314, 0.0352941176, 0.6,\n      0.968627451, 0.4, 0.0352941176, 0.6039215686274509, 0.968627451, 0.4078431373, 0.0352941176,\n      0.6078431372549019, 0.968627451, 0.4156862745, 0.0352941176, 0.611764705882353, 0.968627451,\n      0.4235294118, 0.031372549, 0.615686274509804, 0.9725490196, 0.431372549, 0.031372549,\n      0.6196078431372549, 0.9725490196, 0.4352941176, 0.031372549, 0.6235294117647059, 0.9725490196,\n      0.4431372549, 0.031372549, 0.6274509803921569, 0.9725490196, 0.4509803922, 0.031372549,\n      0.6313725490196078, 0.9725490196, 0.4588235294, 0.031372549, 0.6352941176470588, 0.9725490196,\n      0.462745098, 0.031372549, 0.6392156862745098, 0.9725490196, 0.4705882353, 0.031372549,\n      0.6431372549019608, 0.9725490196, 0.4784313725, 0.031372549, 0.6470588235294118, 0.9725490196,\n      0.4862745098, 0.031372549, 0.6509803921568628, 0.9725490196, 0.4941176471, 0.0274509804,\n      0.6549019607843137, 0.9725490196, 0.4980392157, 0.0274509804, 0.6588235294117647,\n      0.9725490196, 0.5058823529, 0.0274509804, 0.6627450980392157, 0.9764705882, 0.5137254902,\n      0.0274509804, 0.6666666666666666, 0.9764705882, 0.5215686275, 0.0274509804,\n      0.6705882352941176, 0.9764705882, 0.5254901961, 0.0274509804, 0.6745098039215687,\n      0.9764705882, 0.5333333333, 0.0274509804, 0.6784313725490196, 0.9764705882, 0.5411764706,\n      0.0274509804, 0.6823529411764706, 0.9764705882, 0.5490196078, 0.0274509804,\n      0.6862745098039216, 0.9764705882, 0.5529411765, 0.0274509804, 0.6901960784313725,\n      0.9764705882, 0.5607843137, 0.0235294118, 0.6941176470588235, 0.9764705882, 0.568627451,\n      0.0235294118, 0.6980392156862745, 0.9764705882, 0.5764705882, 0.0235294118,\n      0.7019607843137254, 0.9764705882, 0.5843137255, 0.0235294118, 0.7058823529411765,\n      0.9764705882, 0.5882352941, 0.0235294118, 0.7098039215686275, 0.9764705882, 0.5960784314,\n      0.0235294118, 0.7137254901960784, 0.9803921569, 0.6039215686, 0.0235294118,\n      0.7176470588235294, 0.9803921569, 0.6117647059, 0.0235294118, 0.7215686274509804,\n      0.9803921569, 0.6156862745, 0.0235294118, 0.7254901960784313, 0.9803921569, 0.6235294118,\n      0.0235294118, 0.7294117647058823, 0.9803921569, 0.631372549, 0.0196078431, 0.7333333333333333,\n      0.9803921569, 0.6392156863, 0.0196078431, 0.7372549019607844, 0.9803921569, 0.6470588235,\n      0.0196078431, 0.7411764705882353, 0.9803921569, 0.6509803922, 0.0196078431,\n      0.7450980392156863, 0.9803921569, 0.6588235294, 0.0196078431, 0.7490196078431373,\n      0.9803921569, 0.6666666667, 0.0196078431, 0.7529411764705882, 0.9803921569, 0.6745098039,\n      0.0196078431, 0.7568627450980392, 0.9803921569, 0.6784313725, 0.0196078431,\n      0.7607843137254902, 0.9843137255, 0.6862745098, 0.0196078431, 0.7647058823529411,\n      0.9843137255, 0.6941176471, 0.0196078431, 0.7686274509803922, 0.9843137255, 0.7019607843,\n      0.0156862745, 0.7725490196078432, 0.9843137255, 0.7098039216, 0.0156862745,\n      0.7764705882352941, 0.9843137255, 0.7137254902, 0.0156862745, 0.7803921568627451,\n      0.9843137255, 0.7215686275, 0.0156862745, 0.7843137254901961, 0.9843137255, 0.7294117647,\n      0.0156862745, 0.788235294117647, 0.9843137255, 0.737254902, 0.0156862745, 0.792156862745098,\n      0.9843137255, 0.7411764706, 0.0156862745, 0.796078431372549, 0.9843137255, 0.7490196078,\n      0.0156862745, 0.8, 0.9843137255, 0.7529411765, 0.0156862745, 0.803921568627451, 0.9843137255,\n      0.7607843137, 0.0156862745, 0.807843137254902, 0.9882352941, 0.768627451, 0.0156862745,\n      0.8117647058823529, 0.9882352941, 0.768627451, 0.0156862745, 0.8156862745098039, 0.9843137255,\n      0.7843137255, 0.0117647059, 0.8196078431372549, 0.9843137255, 0.8, 0.0117647059,\n      0.8235294117647058, 0.9843137255, 0.8156862745, 0.0117647059, 0.8274509803921568,\n      0.9803921569, 0.831372549, 0.0117647059, 0.8313725490196079, 0.9803921569, 0.8431372549,\n      0.0117647059, 0.8352941176470589, 0.9803921569, 0.8588235294, 0.0078431373,\n      0.8392156862745098, 0.9803921569, 0.8745098039, 0.0078431373, 0.8431372549019608,\n      0.9764705882, 0.8901960784, 0.0078431373, 0.8470588235294118, 0.9764705882, 0.9058823529,\n      0.0078431373, 0.8509803921568627, 0.9764705882, 0.9176470588, 0.0078431373,\n      0.8549019607843137, 0.9764705882, 0.9333333333, 0.0039215686, 0.8588235294117647,\n      0.9725490196, 0.9490196078, 0.0039215686, 0.8627450980392157, 0.9725490196, 0.9647058824,\n      0.0039215686, 0.8666666666666667, 0.9725490196, 0.9803921569, 0.0039215686,\n      0.8705882352941177, 0.9725490196, 0.9960784314, 0.0039215686, 0.8745098039215686,\n      0.9725490196, 0.9960784314, 0.0039215686, 0.8784313725490196, 0.9725490196, 0.9960784314,\n      0.0352941176, 0.8823529411764706, 0.9725490196, 0.9960784314, 0.0666666667,\n      0.8862745098039215, 0.9725490196, 0.9960784314, 0.0980392157, 0.8901960784313725,\n      0.9725490196, 0.9960784314, 0.1294117647, 0.8941176470588236, 0.9725490196, 0.9960784314,\n      0.1647058824, 0.8980392156862745, 0.9764705882, 0.9960784314, 0.1960784314,\n      0.9019607843137255, 0.9764705882, 0.9960784314, 0.2274509804, 0.9058823529411765,\n      0.9764705882, 0.9960784314, 0.2549019608, 0.9098039215686274, 0.9764705882, 0.9960784314,\n      0.2901960784, 0.9137254901960784, 0.9764705882, 0.9960784314, 0.3215686275,\n      0.9176470588235294, 0.9803921569, 0.9960784314, 0.3529411765, 0.9215686274509803,\n      0.9803921569, 0.9960784314, 0.3843137255, 0.9254901960784314, 0.9803921569, 0.9960784314,\n      0.4156862745, 0.9294117647058824, 0.9803921569, 0.9960784314, 0.4509803922,\n      0.9333333333333333, 0.9803921569, 0.9960784314, 0.4823529412, 0.9372549019607843,\n      0.9843137255, 0.9960784314, 0.5137254902, 0.9411764705882354, 0.9843137255, 0.9960784314,\n      0.5450980392, 0.9450980392156864, 0.9843137255, 0.9960784314, 0.5803921569,\n      0.9490196078431372, 0.9843137255, 0.9960784314, 0.6117647059, 0.9529411764705882,\n      0.9843137255, 0.9960784314, 0.6431372549, 0.9568627450980394, 0.9882352941, 0.9960784314,\n      0.6745098039, 0.9607843137254903, 0.9882352941, 0.9960784314, 0.7058823529,\n      0.9647058823529413, 0.9882352941, 0.9960784314, 0.7411764706, 0.9686274509803922,\n      0.9882352941, 0.9960784314, 0.768627451, 0.9725490196078431, 0.9882352941, 0.9960784314, 0.8,\n      0.9764705882352941, 0.9921568627, 0.9960784314, 0.831372549, 0.9803921568627451, 0.9921568627,\n      0.9960784314, 0.8666666667, 0.984313725490196, 0.9921568627, 0.9960784314, 0.8980392157,\n      0.9882352941176471, 0.9921568627, 0.9960784314, 0.9294117647, 0.9921568627450981,\n      0.9921568627, 0.9960784314, 0.9607843137, 0.996078431372549, 0.9960784314, 0.9960784314,\n      0.9607843137, 1.0, 0.9960784314, 0.9960784314, 0.9607843137,\n    ],\n  },\n];\n","import { DicomMetadataStore, classes } from '@ohif/core';\nimport { calculateSUVScalingFactors } from '@cornerstonejs/calculate-suv';\n\nimport getPTImageIdInstanceMetadata from './getPTImageIdInstanceMetadata';\nimport { utilities } from '@cornerstonejs/core';\nimport colormaps from '../../tmtv/src/utils/colormaps';\n\nconst { registerColormap } = utilities.colormap;\n\nconst metadataProvider = classes.MetadataProvider;\n\n/**\n *\n * @param {Object} servicesManager\n * @param {Object} configuration\n */\nexport default function init({ servicesManager, configuration = {}, commandsManager }): void {\n  const { stateSyncService, toolbarService, cineService, viewportGridService } =\n    servicesManager.services;\n\n  toolbarService.registerEventForToolbarUpdate(cineService, [\n    cineService.EVENTS.CINE_STATE_CHANGED,\n  ]);\n  // Add\n  DicomMetadataStore.subscribe(DicomMetadataStore.EVENTS.INSTANCES_ADDED, handlePETImageMetadata);\n\n  // If the metadata for PET has changed by the user (e.g. manually changing the PatientWeight)\n  // we need to recalculate the SUV Scaling Factors\n  DicomMetadataStore.subscribe(DicomMetadataStore.EVENTS.SERIES_UPDATED, handlePETImageMetadata);\n\n  // viewportGridStore is a sync state which stores the entire\n  // ViewportGridService getState, by the keys `<activeStudyUID>:<protocolId>:<stageIndex>`\n  // Used to recover manual changes to the layout of a stage.\n  stateSyncService.register('viewportGridStore', { clearOnModeExit: true });\n\n  // uiStateStore is a sync state which stores the relevant\n  // UI state for the viewer\n  stateSyncService.register('uiStateStore', { clearOnModeExit: true });\n\n  // displaySetSelectorMap stores a map from\n  // `<activeStudyUID>:<displaySetSelectorId>:<matchOffset>` to\n  // a displaySetInstanceUID, used to display named display sets in\n  // specific spots within a hanging protocol and be able to remember what the\n  // user did with those named spots between stages and protocols.\n  stateSyncService.register('displaySetSelectorMap', { clearOnModeExit: true });\n\n  // Stores a map from `<activeStudyUID>:${protocolId}` to the getHPInfo results\n  // in order to recover the correct stage when returning to a Hanging Protocol.\n  stateSyncService.register('hangingProtocolStageIndexMap', {\n    clearOnModeExit: true,\n  });\n\n  // Stores a map from the to be applied hanging protocols `<activeStudyUID>:<protocolId>`\n  // to the previously applied hanging protocolStageIndexMap key, in order to toggle\n  // off the applied protocol and remember the old state.\n  stateSyncService.register('toggleHangingProtocol', { clearOnModeExit: true });\n\n  // Stores the viewports by `rows-cols` position so that when the layout\n  // changes numRows and numCols, the viewports can be remembers and then replaced\n  // afterwards.\n  stateSyncService.register('viewportsByPosition', { clearOnModeExit: true });\n\n  // Function to process and subscribe to events for a given set of commands and listeners\n  const subscribeToEvents = listeners => {\n    Object.entries(listeners).forEach(([event, commands]) => {\n      const supportedEvents = [\n        viewportGridService.EVENTS.ACTIVE_VIEWPORT_ID_CHANGED,\n        viewportGridService.EVENTS.VIEWPORTS_READY,\n      ];\n\n      if (supportedEvents.includes(event)) {\n        viewportGridService.subscribe(event, eventData => {\n          const viewportId = eventData?.viewportId ?? viewportGridService.getActiveViewportId();\n\n          commandsManager.run(commands, { viewportId });\n        });\n      }\n    });\n  };\n\n  toolbarService.subscribe(toolbarService.EVENTS.TOOL_BAR_MODIFIED, state => {\n    const { buttons } = state;\n    for (const [id, button] of Object.entries(buttons)) {\n      const { groupId, items, listeners } = button.props || {};\n\n      // Handle group items' listeners\n      if (groupId && items) {\n        items.forEach(item => {\n          if (item.listeners) {\n            subscribeToEvents(item.listeners);\n          }\n        });\n      }\n\n      // Handle button listeners\n      if (listeners) {\n        subscribeToEvents(listeners);\n      }\n    }\n  });\n}\n\nconst handlePETImageMetadata = ({ SeriesInstanceUID, StudyInstanceUID }) => {\n  const { instances } = DicomMetadataStore.getSeries(StudyInstanceUID, SeriesInstanceUID);\n\n  if (!instances?.length) {\n    return;\n  }\n\n  const modality = instances[0].Modality;\n\n  if (!modality || modality !== 'PT') {\n    return;\n  }\n\n  const imageIds = instances.map(instance => instance.imageId);\n  const instanceMetadataArray = [];\n\n  // try except block to prevent errors when the metadata is not correct\n  try {\n    imageIds.forEach(imageId => {\n      const instanceMetadata = getPTImageIdInstanceMetadata(imageId);\n      if (instanceMetadata) {\n        instanceMetadataArray.push(instanceMetadata);\n      }\n    });\n\n    if (!instanceMetadataArray.length) {\n      return;\n    }\n\n    const suvScalingFactors = calculateSUVScalingFactors(instanceMetadataArray);\n    instanceMetadataArray.forEach((instanceMetadata, index) => {\n      metadataProvider.addCustomMetadata(\n        imageIds[index],\n        'scalingModule',\n        suvScalingFactors[index]\n      );\n    });\n  \n    colormaps.forEach(registerColormap);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { Types } from '@ohif/core';\n\nimport getDataSourcesModule from './getDataSourcesModule.js';\nimport getLayoutTemplateModule from './getLayoutTemplateModule.js';\nimport getPanelModule from './getPanelModule';\nimport getSopClassHandlerModule from './getSopClassHandlerModule.js';\nimport getToolbarModule from './getToolbarModule';\nimport getCommandsModule from './commandsModule';\nimport getHangingProtocolModule from './getHangingProtocolModule';\nimport getStudiesForPatientByMRN from './Panels/getStudiesForPatientByMRN';\nimport getCustomizationModule from './getCustomizationModule';\nimport getViewportModule from './getViewportModule';\nimport { id } from './id.js';\nimport preRegistration from './init';\nimport { ContextMenuController, CustomizableContextMenuTypes } from './CustomizableContextMenu';\nimport * as dicomWebUtils from './DicomWebDataSource/utils';\nimport { createReportDialogPrompt } from './Panels';\nimport createReportAsync from './Actions/createReportAsync';\nimport StaticWadoClient from './DicomWebDataSource/utils/StaticWadoClient';\n\nconst defaultExtension: Types.Extensions.Extension = {\n  /**\n   * Only required property. Should be a unique value across all extensions.\n   */\n  id,\n  preRegistration,\n  getDataSourcesModule,\n  getViewportModule,\n  getLayoutTemplateModule,\n  getPanelModule,\n  getHangingProtocolModule,\n  getSopClassHandlerModule,\n  getToolbarModule,\n  getCommandsModule,\n  getUtilityModule({ servicesManager }) {\n    return [\n      {\n        name: 'common',\n        exports: {\n          getStudiesForPatientByMRN,\n        },\n      },\n    ];\n  },\n\n  getCustomizationModule,\n};\n\nexport default defaultExtension;\n\nexport {\n  ContextMenuController,\n  CustomizableContextMenuTypes,\n  getStudiesForPatientByMRN,\n  dicomWebUtils,\n  createReportDialogPrompt,\n  createReportAsync,\n  StaticWadoClient,\n};\n","import { ServicesManager, CommandsManager, ExtensionManager } from '@ohif/core';\nimport LineChartViewport from './Components/LineChartViewport/index';\n\nconst getViewportModule = ({\n  servicesManager,\n  commandsManager,\n  extensionManager,\n}: {\n  servicesManager: ServicesManager;\n  commandsManager: CommandsManager;\n  extensionManager: ExtensionManager;\n}) => {\n  return [\n    {\n      name: 'chartViewport',\n      component: LineChartViewport,\n    },\n  ];\n};\n\nexport { getViewportModule as default };\n","import ViewerLayout from './ViewerLayout';\n/*\n- Define layout for the viewer in mode configuration.\n- Pass in the viewport types that can populate the viewer.\n- Init layout based on the displaySets and the objects.\n*/\n\nexport default function ({ servicesManager, extensionManager, commandsManager, hotkeysManager }) {\n  function ViewerLayoutWithServices(props) {\n    return ViewerLayout({\n      servicesManager,\n      extensionManager,\n      commandsManager,\n      hotkeysManager,\n      ...props,\n    });\n  }\n\n  return [\n    // Layout Template Definition\n    // TODO: this is weird naming\n    {\n      name: 'viewerLayout',\n      id: 'viewerLayout',\n      component: ViewerLayoutWithServices,\n    },\n  ];\n}\n","import ToolbarDivider from './Toolbar/ToolbarDivider';\nimport ToolbarLayoutSelectorWithServices from './Toolbar/ToolbarLayoutSelector';\nimport ToolbarSplitButtonWithServices from './Toolbar/ToolbarSplitButtonWithServices';\nimport ToolbarButtonGroupWithServices from './Toolbar/ToolbarButtonGroupWithServices';\nimport { ToolbarButton } from '@ohif/ui';\nimport ProgressDropdownWithService from './Components/ProgressDropdownWithService';\n\nconst getClassName = isToggled => {\n  return {\n    className: isToggled\n      ? '!text-primary-active'\n      : '!text-common-bright hover:!bg-primary-dark hover:text-primary-light',\n  };\n};\n\nexport default function getToolbarModule({ commandsManager, servicesManager }) {\n  const { cineService } = servicesManager.services;\n  return [\n    {\n      name: 'ohif.radioGroup',\n      defaultComponent: ToolbarButton,\n    },\n    {\n      name: 'ohif.divider',\n      defaultComponent: ToolbarDivider,\n    },\n    {\n      name: 'ohif.splitButton',\n      defaultComponent: ToolbarSplitButtonWithServices,\n    },\n    {\n      name: 'ohif.layoutSelector',\n      defaultComponent: props =>\n        ToolbarLayoutSelectorWithServices({ ...props, commandsManager, servicesManager }),\n    },\n    {\n      name: 'ohif.buttonGroup',\n      defaultComponent: ToolbarButtonGroupWithServices,\n    },\n    {\n      name: 'ohif.progressDropdown',\n      defaultComponent: ProgressDropdownWithService,\n    },\n    {\n      name: 'evaluate.group.promoteToPrimary',\n      evaluate: ({ viewportId, button, itemId }) => {\n        const { items } = button.props;\n\n        if (!itemId) {\n          return {\n            primary: button.props.primary,\n            items,\n          };\n        }\n\n        // other wise we can move the clicked tool to the primary button\n        const clickedItemProps = items.find(item => item.id === itemId || item.itemId === itemId);\n\n        return {\n          primary: clickedItemProps,\n          items,\n        };\n      },\n    },\n    {\n      name: 'evaluate.cine',\n      evaluate: () => {\n        const isToggled = cineService.getState().isCineEnabled;\n        return getClassName(isToggled);\n      },\n    },\n  ];\n}\n","import { CustomizationService } from '@ohif/core';\nimport React from 'react';\nimport DataSourceSelector from './Panels/DataSourceSelector';\nimport ProgressDropdownWithService from './Components/ProgressDropdownWithService';\nimport DataSourceConfigurationComponent from './Components/DataSourceConfigurationComponent';\nimport { GoogleCloudDataSourceConfigurationAPI } from './DataSourceConfigurationAPI/GoogleCloudDataSourceConfigurationAPI';\n\n/**\n *\n * Note: this is an example of how the customization module can be used\n * using the customization module. Below, we are adding a new custom route\n * to the application at the path /custom and rendering a custom component\n * Real world use cases of the having a custom route would be to add a\n * custom page for the user to view their profile, or to add a custom\n * page for login etc.\n */\nexport default function getCustomizationModule({ servicesManager, extensionManager }) {\n  return [\n    {\n      name: 'helloPage',\n      value: {\n        id: 'customRoutes',\n        routes: [\n          {\n            path: '/custom',\n            children: () => <h1 style={{ color: 'white' }}>Hello Custom Route</h1>,\n          },\n        ],\n      },\n    },\n\n    // Example customization to list a set of datasources\n    {\n      name: 'datasources',\n      value: {\n        id: 'customRoutes',\n        routes: [\n          {\n            path: '/datasources',\n            children: DataSourceSelector,\n          },\n        ],\n      },\n    },\n\n    {\n      name: 'default',\n      value: [\n        /**\n         * Customization Component Type definition for overlay items.\n         * Overlay items are texts (or other components) that will be displayed\n         * on a Viewport Overlay, which contains the information panels on the\n         * four corners of a viewport.\n         *\n         * @definition of a overlay item using this type\n         * The value to be displayed is defined by\n         *  - setting DICOM image instance's property to this field,\n         *  - or defining contentF()\n         *\n         * {\n         *   id: string - unique id for the overlay item\n         *   customizationType: string - indicates customization type definition to this\n         *   label: string - Label, to be displayed for the item\n         *   title: string - Tooltip, for the item\n         *   color: string - Color of the text\n         *   condition: ({ instance }) => boolean - decides whether to display the overlay item or not\n         *   attribute: string - property name of the DICOM image instance\n         *   contentF: ({ instance, formatters }) => string | component,\n         * }\n         *\n         * @example\n         *  {\n         *    id: 'PatientNameOverlay',\n         *    customizationType: 'ohif.overlayItem',\n         *    label: 'PN:',\n         *    title: 'Patient Name',\n         *    color: 'yellow',\n         *    condition: ({ instance }) => instance && instance.PatientName && instance.PatientName.Alphabetic,\n         *    attribute: 'PatientName',\n         *    contentF: ({ instance, formatters: { formatPN } }) => `${formatPN(instance.PatientName.Alphabetic)} ${(instance.PatientSex ? '(' + instance.PatientSex + ')' : '')}`,\n         *  },\n         *\n         * @see CustomizableViewportOverlay\n         */\n        {\n          id: 'ohif.overlayItem',\n          content: function (props) {\n            if (this.condition && !this.condition(props)) {\n              return null;\n            }\n\n            const { instance } = props;\n            const value =\n              instance && this.attribute\n                ? instance[this.attribute]\n                : this.contentF && typeof this.contentF === 'function'\n                  ? this.contentF(props)\n                  : null;\n            if (!value) {\n              return null;\n            }\n\n            return (\n              <span\n                className=\"overlay-item flex flex-row\"\n                style={{ color: this.color || undefined }}\n                title={this.title || ''}\n              >\n                {this.label && <span className=\"mr-1 shrink-0\">{this.label}</span>}\n                <span className=\"font-light\">{value}</span>\n              </span>\n            );\n          },\n        },\n\n        {\n          id: 'ohif.contextMenu',\n\n          /** Applies the customizationType to all the menu items.\n           * This function clones the object and child objects to prevent\n           * changes to the original customization object.\n           */\n          transform: function (customizationService: CustomizationService) {\n            // Don't modify the children, as those are copied by reference\n            const clonedObject = { ...this };\n            clonedObject.menus = this.menus.map(menu => ({ ...menu }));\n\n            for (const menu of clonedObject.menus) {\n              const { items: originalItems } = menu;\n              menu.items = [];\n              for (const item of originalItems) {\n                menu.items.push(customizationService.transform(item));\n              }\n            }\n            return clonedObject;\n          },\n        },\n\n        {\n          // the generic GUI component to configure a data source using an instance of a BaseDataSourceConfigurationAPI\n          id: 'ohif.dataSourceConfigurationComponent',\n          component: DataSourceConfigurationComponent.bind(null, {\n            servicesManager,\n            extensionManager,\n          }),\n        },\n\n        {\n          // The factory for creating an instance of a BaseDataSourceConfigurationAPI for Google Cloud Healthcare\n          id: 'ohif.dataSourceConfigurationAPI.google',\n          factory: (dataSourceName: string) =>\n            new GoogleCloudDataSourceConfigurationAPI(\n              dataSourceName,\n              servicesManager,\n              extensionManager\n            ),\n        },\n\n        {\n          id: 'progressDropdownWithServiceComponent',\n          component: ProgressDropdownWithService,\n        },\n      ],\n    },\n  ];\n}\n"],"names":["getString","getName","getModalities","DICOMWeb","processResults","qidoStudies","length","studies","forEach","qidoStudy","push","studyInstanceUid","date","time","accession","mrn","patientName","utils","formatPN","instances","Number","description","modalities","async","search","dicomWebClient","seriesInstanceUid","queryParameters","searchForStudies","undefined","queryParams","mapParams","params","options","commaSeparatedFields","join","supportsWildcard","withWildcard","value","parameters","PatientName","patientId","AccessionNumber","accessionNumber","StudyDescription","studyDescription","ModalitiesInStudy","modalitiesInStudy","limit","offset","fuzzymatching","supportsFuzzyMatching","includefield","startDate","endDate","StudyDate","today","Date","DD","String","getDate","padStart","MM","getMonth","todayStr","getFullYear","oldDateStr","studyUids","Array","isArray","replace","StudyInstanceUID","final","Object","keys","key","getImageId","instance","frame","config","thumbnail","url","renderingAttr","uri","baseWadoRsUri","SeriesInstanceUID","SOPInstanceUID","wadoRoot","buildInstanceWadoRsUri","buildInstanceFrameWadoRsUri","getWADORSImageId","wadouri","paramString","wadoUriRoot","buildInstanceWadoUrl","imageId","RetrieveMetadataLoader","constructor","client","studyInstanceUID","filters","sortCriteria","sortFunction","this","execLoad","preLoadData","preLoad","loadData","load","posLoad","runLoaders","loaders","result","loader","next","done","Error","configLoad","RetrieveMetadataLoaderSync","getOptions","seriesInstanceUID","getLoaders","retrieveSeriesMetadata","bind","retrieveStudyMetadata","includeField","DeferredPromise","metadata","processFunction","internalPromise","thenFunction","rejectFunction","setMetadata","setProcessFunction","func","getPromise","start","then","reject","RetrieveMetadataLoaderAsync","getPreLoaders","preLoaders","searchForSeries","naturalizeDataset","dcmjs","DicomMetaDictionary","naturalized","map","sortStudySeries","seriesAsyncLoader","seriesInstanceUIDList","freeze","hasNext","shift","promise","makeSeriesAsyncLoader","seriesMetadata","promises","enableStudyLazyLoad","retrieveMetadataLoader","SeriesInstanceUIDs","Promise","resolve","uid","seriesSpecificFilters","assign","RetrieveMetadata","all","results","aggregatedResult","concat","moduleName","StudyMetaDataPromises","Map","dicomWebConfig","promiseId","name","has","get","retrieveMetadataFiltered","data","set","deleteStudyMetadataPromise","delete","checkToken","token","dataOffset","endIndex","i","str","uint","Uint8Array","j","charCodeAt","stringToUint8Array","fixMultipart","arrayData","dashIndex","findIndexOfString","tokenIndex","header","fromCharCode","uint8ArrayToString","boundary","substr","findBoundary","split","slice","buffer","DICOMwebClient","api","anyDicomwebClient","_orig_buildMultipartAcceptHeaderFieldValue","_buildMultipartAcceptHeaderFieldValue","mediaTypes","acceptableTypes","mediaType","endsWith","StaticWadoClient","super","staticWado","retrieveBulkData","shouldFixMultipart","fixBulkdataMultipart","useOptions","retrieveInstanceFrames","searchResult","lowerParams","toLowerParams","filter","study","studyFilterKeys","filterItem","series","seriesFilterKeys","compareValues","desired","actual","find","item","actualItem","Alphabetic","indexOf","substring","compareDateRange","range","dash","end","sourceFilterMap","altKey","testValue","valueElem","vr","Value","entries","toLowerCase","studyinstanceuid","patientname","studydescription","studydate","modalitiesinstudy","accessionnumber","seriesinstanceuid","seriesnumber","modality","getDirectURL","singlepart","tag","defaultPath","defaultType","fetchPart","DirectRetrieveURL","InlineBinary","blob","b64toBlob","URL","createObjectURL","arr","Blob","type","console","warn","BulkDataURI","hasQuery","hasAccept","fixBulkDataURI","startsWith","origin","bulkDataURI","relativeResolution","DicomDict","denaturalizeDataset","ImplementationClassUID","ImplementationVersionName","EXPLICIT_VR_LITTLE_ENDIAN","metadataProvider","classes","MetadataProvider","createDicomWebApi","servicesManager","userAuthenticationService","customizationService","services","dicomWebConfigCopy","qidoConfig","wadoConfig","qidoDicomWebClient","wadoDicomWebClient","getAuthrorizationHeader","generateWadoHeader","implementation","initialize","query","onConfiguration","JSON","parse","stringify","xhrRequestHeaders","authHeaders","getAuthorizationHeader","Authorization","Accept","generateAcceptHeader","acceptHeader","requestTransferSyntaxUID","omitQuotationForMultipartRequest","qidoRoot","headers","errorInterceptor","errorHandler","getHTTPErrorHandler","origParams","mappedParams","qidoSearch","qidoSeries","seriesNumber","seriesDate","formatDate","numSeriesInstances","processSeriesResults","seriesInStudy","call","retrieve","directURL","multipart","val","madeInClient","returnPromises","_retrieveSeriesMetadataAsync","_retrieveSeriesMetadataSync","store","dicom","dataset","request","dicomDict","ArrayBuffer","datasets","storeInstances","effectiveDicomDict","meta","FileMetaInformationVersion","_meta","MediaStorageSOPClassUID","SOPClassUID","MediaStorageSOPInstanceUID","TransferSyntaxUID","denaturalized","defaultDicomDict","dict","write","naturalizedInstancesMetadata","seriesSummaryMetadata","instancesPerSeries","SeriesDescription","SeriesNumber","SeriesTime","ProtocolName","Modality","getImageIdsForInstance","wadoUri","addImageIdToUIDs","values","DicomMetadataStore","addSeriesMetadata","addInstances","seriesPromises","addRetrieveBulkData","enabled","ret","arrayBuffer","byteLength","setSuccessFlag","getStudy","isLoaded","aSeries","seriesDeliveredPromises","naturalizedInstances","getImageIdsForDisplaySet","displaySet","images","imageIds","NumberOfFrames","getConfig","getStudyInstanceUIDs","StudyInstanceUIDs","paramsStudyInstanceUIDs","queryStudyInstanceUIDs","splitComma","getAll","supportsReject","xhr","XMLHttpRequest","open","log","onreadystatechange","readyState","status","responseText","send","IWebApiDataSource","create","OHIF","mappings","_store","urls","studyInstanceUIDMap","wrapSequences","obj","reduce","acc","addAccessors","getMetaDataByURL","metaData","findStudies","aStudy","createDicomJSONApi","dicomJsonConfig","response","fetch","json","naturalizedDicom","param","mappedParam","NumInstances","Modalities","PatientID","StudyTime","customSort","seriesSummary","numberOfSeries","index","EVENTS","END_MODALITIES","SR","SEG","DOC","compareValue","v1","v2","def","seriesA","seriesB","instanceA","instanceB","modalityA","modalityB","isEndA","isEndB","createDicomLocalApi","dicomLocalConfig","numInstances","Set","add","firstInstance","from","SeriesDate","_broadcastEvent","SERIES_ADDED","isMultiframe","frameIndex","INSTANCES_ADDED","naturalizedReport","reportBlob","datasetToBlob","objectUrl","window","location","getInstance","StudyInstanceUIDsAsArray","isStudyInCache","sort","createDicomWebProxyApi","dicomWebProxyConfig","dicomWebDelegate","servers","dicomWeb","configuration","args","studyInstanceUIDs","mergeMap","mergeKey","tagFunc","x","sourceName","RetrieveAETitle","updateSeriesMetadata","callForAllDataSourcesAsync","path","extensionManager","dataSourceNames","defaultDataSourceName","defs","dataSourceDefs","defaultDataSourceDef","unshift","sourceNames","dataSourceDef","includes","dataSource","getDataSources","apply","mergedData","allSettled","uniqBy","flat","callForAllDataSources","callForDefaultDataSource","callByRetrieveAETitle","getSeries","createMergeDataSourceApi","mergeConfig","seriesMerge","createDataSource","Toolbar","buttonSection","toolbarButtons","onInteraction","useToolbar","React","toolDef","id","Component","componentProps","tool","_extends","availableLanguages","defaultLanguage","currentLanguage","i18n","hotkeysManager","appConfig","navigate","useNavigate","useLocation","t","useTranslation","show","hide","useModal","hotkeyDefinitions","hotkeyDefaults","menuOptions","title","icon","onClick","content","AboutModal","contentProps","versionNumber","process","commitHash","containerDimensions","UserPreferences","getValidHotkeyDefinitions","onCancel","hotkeys","stopRecord","unpause","onSubmit","language","changeLanguage","setHotkeys","onReset","restoreDefaultBindings","hotkeysModule","oidc","encodeURIComponent","href","Header","isReturnEnabled","showStudyList","onClickReturnButton","pathname","dataSourceIdx","configUrl","URLSearchParams","dataSourceName","existingDataSource","searchQuery","append","decodeURIComponent","toString","WhiteLabeling","whiteLabeling","showPatientInfo","Secondary","ErrorBoundary","context","className","SidePanelWithServices","side","activeTabIndex","activeTabIndexProp","tabs","tabsProp","expandedWidth","props","panelService","hasBeenOpened","setHasBeenOpened","useState","setActiveTabIndex","setTabs","getPanels","handleSidePanelOpen","useCallback","handleActiveTabIndexChange","useEffect","unsubscribe","subscribe","PANELS_CHANGED","panelChangedEvent","position","activatePanelSubscription","ACTIVATE_PANEL","activatePanelEvent","forceActive","tabIndex","findIndex","tab","panelId","SidePanel","onOpen","onActiveTabIndexChange","ViewerLayout","commandsManager","viewports","ViewportGridComp","leftPanelClosed","rightPanelClosed","useAppConfig","hangingProtocolService","showLoadingIndicator","setShowLoadingIndicator","hasPanels","hasRightPanels","setHasRightPanels","hasLeftPanels","setHasLeftPanels","leftPanelClosedState","setLeftPanelClosed","rightPanelClosedState","setRightPanelClosed","document","body","classList","remove","HangingProtocolService","PROTOCOL_CHANGED","viewportComponents","viewportComponent","entry","getModuleEntry","component","getComponent","namespace","displaySetsToDisplay","ViewerHeader","style","height","LoadingIndicatorProgress","InvestigationalUseDialog","dialogConfiguration","investigationalUseDialog","propTypes","PropTypes","isRequired","CommandsManager","ServicesManager","leftPanels","rightPanels","children","sortStudyInstances","PanelStudyBrowser","getImageSrc","getStudiesForPatientByMRN","requestDisplaySetCreationForStudy","displaySetService","uiNotificationService","useImageViewer","activeViewportId","isHangingProtocolLayout","viewportGridService","useViewportGrid","activeTabName","setActiveTabName","expandedStudyInstanceUIDs","setExpandedStudyInstanceUIDs","studyDisplayList","setStudyDisplayList","displaySets","setDisplaySets","thumbnailImageSrcMap","setThumbnailImageSrcMap","sid","qidoForStudyUID","qidoStudiesForPatient","error","actuallyMappedStudies","prevArray","it","fetchStudiesForPatient","activeDisplaySets","newImageSrcEntry","getDisplaySetByUID","dSet","displaySetInstanceUID","Math","floor","unsupported","prevState","mappedDisplaySets","_mapDisplaySets","SubscriptionDisplaySetsAdded","DISPLAY_SETS_ADDED","displaySetsAdded","initialViewport","SubscriptionDisplaySetsChanged","DISPLAY_SETS_CHANGED","changedDisplaySets","SubscriptionDisplaySetMetaDataInvalidated","DISPLAY_SET_SERIES_METADATA_INVALIDATED","getActiveDisplaySets","primaryStudyInstanceUIDs","primaryStudies","recentStudies","allStudies","displaySetsForStudy","ds","tabStudy","label","_createStudyBrowserTabs","activeDisplaySetInstanceUIDs","displaySetInstanceUIDs","StudyBrowser","onDoubleClickThumbnail","updatedViewports","viewportId","getViewportsRequireUpdate","message","duration","setDisplaySetsForViewports","onClickStudy","shouldCollapseStudy","updatedExpandedStudyInstanceUIDs","stdyUid","onClickTab","clickedTabName","thumbnailDisplaySets","thumbnailNoImageDisplaySets","excludeFromThumbnailBrowser","imageSrc","componentType","thumbnailNoImageModalities","_getComponentType","seriesTime","numImageFrames","countIcon","messages","dragData","isHydratedForDerivedDisplaySet","isHydrated","cornerstone","canvas","createElement","utilities","loadImageToCanvas","toDataURL","catch","some","WrappedPanelStudyBrowser","_getStudiesForPatientByMRN","_getImageSrcFromImageId","exports","getCornerstoneLibraries","getImageSrcFromImageId","ex","_createGetImageSrcFromImageIdFn","_requestDisplaySetCreationForStudy","CREATE_REPORT_DIALOG_RESPONSE","CANCEL","CREATE_REPORT","CreateReportDialogPrompt","uiDialogService","dialogId","dataSourcesOpts","dataSourceMap","supportsStow","placeHolder","centralize","isDraggable","Dialog","useLastPosition","showOverlay","activeDataSource","noCloseButton","onClose","_handleClose","dismiss","action","actions","text","ButtonEnums","secondary","primary","_handleFormSubmit","setValue","allowMultiSelectExport","Select","closeMenuOnSelect","placeholder","option","onChange","evt","v","isClearable","Input","autoFocus","labelClassName","event","persist","target","onKeyPress","required","Loading","getReport","reportType","loadingDialogId","getMostRecentDisplaySet","MIN_SR_SERIES_NUMBER","findSRWithSameSeriesDescription","sameSeries","InstanceNumber","srSeriesNumbers","max","getNextSRSeriesNumber","downloadCSVReport","PanelMeasurementTable","viewportGrid","measurementService","displayMeasurements","setDisplayMeasurements","debouncedSetDisplayMeasurements","debounce","_getMappedMeasurements","added","MEASUREMENT_ADDED","addedRaw","RAW_MEASUREMENT_ADDED","updated","MEASUREMENT_UPDATED","removed","MEASUREMENT_REMOVED","cleared","MEASUREMENTS_CLEARED","subscriptions","unsub","cancel","onMeasurementItemClickHandler","isActive","measurements","measurement","m","MeasurementTable","jumpToImage","jumpToMeasurement","onEdit","onMeasurementItemEditHandler","getMeasurement","onSubmitHandler","update","ActionButtons","getMeasurements","activeViewport","trackedMeasurements","referenceStudyUID","promptResult","createReportDialogPrompt","createReportAsync","runCommand","measurementData","additionalFindingTypes","types","displayText","baseDisplayText","baseLabel","selected","findingSites","finding","firstSite","siteText","site","measurementType","_mapMeasurementToDisplay","VALUE_TYPES","polyData","_extractGroup","neighborIds","cellGroup","pointGroup","visitedCells","currentCellId","pointIds","getCellPoints","cellPointIds","pointId","visitedPoints","neighborCellId","getPointCells","_buildExtractedPolyData","pBuffer","tBuffer","pointIdMap","idx","points","getPoints","getPoint","cellId","newPointIds","extractedPolyData","vtkPolyData","setData","Float32Array","getPolys","Uint32Array","setNumberOfComponents","extractGroups","extractedPolyDatas","getNumberOfCells","assert","getLinks","fill","getNumberOfPoints","math","require","Quadric","quadric","Axx","Axy","Axz","Ayy","Ayz","Azz","bx","by","bz","c","getCentroid","p0","p1","p2","getNormal","p10","p20","n","vtkMath","evaluate","point","y","z","optimalPoint","v_","a11","a12","a13","a22","a23","a33","det","abs","p","vx","vy","vz","dot","VertexPairCost","v1Id","v2Id","cost","targetReduction","copy","getTuples","setTargetReduction","target_reduction","initLines","lineSet","pointId1","pointId2","pointId3","a","b","id1A","id2A","id1B","id2B","initNeighbors","neighbors","line","lines","initQuadricMatrices","quadricMatrices","q","_computeQ_V_Cost","q1","qMatrices","q2","q_","middlePoint","errorP1","errorP2","errorMp","initPairCosts","pairCosts","nbPairs","lineId","pairCost","buildMinHeap","heapSize","heapify","costs","leftChildIndex","rightChildIndex","smallestIndex","extractMin","minElement","pop","_updateCells","minPairCost","minV1Id","minV2Id","neighborCells","getCellEdgeNeighbors","removeCellReference","getCells","deleteCell","currentNumberOfCells","deletedCells","setTuple","insertNextCellReference","_updatePoints","minV_","setPoint","deletedPoints","deletePoint","currentNumberOfPoints","_updatePairCosts","pairId","curV1Id","curV2Id","newQ_","newV_","newCost","otherVId","newV1Id","newV2Id","lastIndex","_removeDegenerate","degenerateCellPointIds","degenerateCellPointId","pointNeighbors","neighborPointId","clear","_updateNeighbors","minV2Neighbors","decimate","originalNumberOfCells","originalNumberOfPoints","targetNumberOfCells","pointMap","newPolyData","buildLinks","vtkErrorMacro","vtkDebugMacro","macro","DEFAULT_VALUES","contourValue","contourValueMax","computeNormals","mergePoints","extend","publicAPI","model","initialValues","arguments","algo","setGet","classHierarchy","ids","voxelScalars","voxelGradients","voxelPts","edgeLocator","vtkEdgeLocator","newInstance","getVoxelScalars","k","dims","spacing","s","ii","getVoxelPoints","getPointGradient","g","sp","sm","getVoxelGradients","scalars","produceTriangles","cValMin","cValMax","extent","tris","normals","CASE_MASK","VERT_MAP","xyz","pId","scalar","voxelTris","vtkCaseTable","getCase","eid","edgeVerts","getEdge","isInsertedEdge","x0","x1","n0","n1","normalize","insertEdge","requestData","inData","outData","input","getOrigin","getSpacing","getDimensions","getPointData","getScalars","getData","nBuffer","getExtent","polydata","nData","vtkDataArray","numberOfComponents","setNormals","timeEnd","imageMarchingCubes","imageMarchingCubes$1","Edition3DPanel","percentileValues","setPercentileValues","cTPercentile","setCTPercentile","ctValue","setCtValue","reductionPercentile","setReductionPercentile","skinThreshold","setSkinThreshold","boneThreshold","setBoneThreshold","toothThreshold","setToothThreshold","isFirstRender","useRef","cornerstoneViewportService","myRandom","seed","seededRandom","state","getState","getActiveProtocol","protocol","protocolId","stageIndex","current","vp","viewportOptions","viewportType","setActiveViewportIndex","cornerstoneVP","getCornerstoneViewport","actorEntries","getActors","ctfun","vtkColorTransferFunction","addRGBPoint","ofun","vtkPiecewiseFunction","addPoint","actor","getProperty","setRGBTransferFunction","setScalarOpacity","getEnabledElement","element","viewport","render","width","display","flexDirection","justifyContent","Button","size","setActiveViewportId","color","fontSize","min","step","e","marchingCubes","imageData","getImageData","contourType","imageDataCopy","vtkImageData","shallowCopy","cropFilter","vtkImageCropFilter","setCroppingPlanes","setInputData","getOutputData","polyExtractor","polySTL","polyMapper","vtkMapper","polys","vtkActor","setMapper","setDiffuseColor","setOpacity","setBackfaceCulling","allPolys","PolyDataExtractor","polysSize","idxs","selectedPolys","qPolys","QuadricDecimator","mapper","setColor","outlineData","vtkOutlineFilter","mapOutline","setInputConnection","getOutputPort","outline","setActors","cornestoneRenderer","getRenderer","getRenderWindow","setNumberOfLayers","setUseDepthPeeling","setOcclusionRatio","setMaximumNumberOfPeels","getActiveCamera","setParallelProjection","resetCamera","_displayMarchingCubes","exportSTL","actorEntry","actorUID","getMapper","getInputData","fileContents","vtkSTLWriter","writeSTL","FormatTypes","BINARY","download","appendChild","click","zeros","dcmbufferToPng","invertRows","BitsAllocated","BitsStored","rows","Rows","columns","Columns","windowCenter","WindowCenter","windowWidth","WindowWidth","pixelArray","pixelData","PixelData","Int16Array","Int8Array","res","ext","determinationCoefficient","predictions","observations","d","mean","observation","ssyy","difference","sse","accum","prediction","residual","LSFMethods","polynomial","lhs","rhs","len","order","l","coefficients","matrix","maxrow","tmp","total","gaussianElimination","predict","sum","coeff","power","string","equation","reverse","r2","skmeans","DENTASCAN_THICKNESS","DENTAL_CURVE_THICKNESS","DENTASCAN_THRESHOLD_VALUE","TOLERANCE","DENTAL_CURVES_STEP","AXIAL_CURVES_STEP","DENTAL_CURVE_AIP_STEP","DENTAL_CURVE_AIP_THICKNESS","PanoramicGenerationPanel","toolGroupService","cornerstoneCacheService","displaySetOptions","panelMetadata","setPanelMetadata","dentascanViewportData","panoramicViewportData","panoramic","isProcessingPanoramic","setIsProcessingPanoramic","processingPourcent","setProcessingPourcent","numberBasePoints","setNumberBasePoints","dicomDimensions","setDicomDimensions","panoramicDimensions","setPanoramicDimensions","generalSeriesModule","getCurrentImageId","displaySetCache","getDisplaySetCache","generalSeriesInstanceUID","filterMap","predicate","fmap","filteredDSPanoramic","filteredDSContrasted","previousPanoramicMetadata","getPanoramicStateCache","dentascanMeasurements","toolName","pm","dentascan","viewportIds","getViewportIds","pointUp","indexToWorld","initialImageIndex","pointDown","ToolGroupManager","renderingEngineId","getToolInstance","addNewDentascanAnnotation","csToolsUtils","imageIndex","debounceLoading","setPanoramicStateCache","loadBlobInViewport","pngBuf","coloredBuffer","Uint8ClampedArray","imgData","ImageData","getContext","putImageData","toBlob","fileLoaderService","FileLoaderService","addFile","img","loadFile","getDataset","prefilledValues","addInstance","displaySetAdded","makeDisplaySets","viewportData","createViewportData","toolGroupId","initialImageOptions","preset","refreshStudyList","debugShowImage","indexZeroDisplaySet","getViewportInfo","baseVolumeSeriesUID","voiLutModule","imagePixelModule","bitsAllocated","bitsStored","info","drawPoint","radius","pointX","round","pointY","beginPath","fillStyle","fillRect","textX","textY","font","textAlign","fillText","getMax","Infinity","derivative","f","dx","getSlopeVector","slope","vLength","sqrt","getTangentVector","tangentSlope","getDentascanSection","dicomData","vxNormal","vyNormal","getNormalVector","minPoint","maxPoint","dentascanWidth","nbLayers","layer","xi","yi","layerWidth","layerHeight","dicomIdx","layerSize","interval","director","getDentalCurve","transposedBin","transposeImage","transposedArr","transposedOnlyTeethIndex","lsfDentalCurve","lsfDentalLiss","isNaN","minX","maxX","getDentalLiss","c0","c1","sigmoidLeft","exp","sigmoidRight","generatePanoramicControlPoints","debug","handmade","baseId","scalarData","isContrastAlreadyGenerated","baseVolume","cache","getVolumeContainingImageId","volume","dimensions","coronalData","getCoronalDataMax","voxelsXZ","voxelXZ","skMeansCoronal","centroids","centroidsCoronal","idxsCoronal","idxsMaxCoronal","firstIndex","findLastIndex","minLayer","maxLayer","axialData","getAxialDataMean","nbToothLayers","voxelsXY","voxelXY","minValue","maxValue","axialDataContrasted","pixel","normalizedPixel","contrastedPixel","pow","contrastedMetadata","setTimeout","contrastedViewport","contrastedImageData","skMeansResult","maxClusterIdx","binarizedArray","binarizedArrayDilated","filteredIdx","binarizedXy","controlPoints","controlPointsInWorld","cp","toolGroup","arrowAnnotateInstance","removeArrowAnnotation","addNewAnnotationWithMovablePoints","ctx","generatePanoramicFromControlPoints","controlPointsinViewport","hpInfo","panoramicViewportInfo","dentascanViewportInfo","deleteDisplaySet","contrastedDisplaySet","contrastedData","controlPointsInVolume","pointIndex","worldToIndex","dentascans","panoramicWidth","dentalCurvesPointsXY","getDentalCurvesPointsXY","mode","nbDentalCurves","nbAxialCurves","dentalCurvesPoints","dentascanCurve","dentascanMinPoint","dentascanMaxPoint","dentascanVxNormal","dentascanVyNormal","idxInf","idxSup","dentalCurve","dentascansForMIP","dentascanMIP","dentascanScalar","xPosInDentascan","xPosInDentascans","panoramicNormalsIterative","panoramicDepth","pointXY","valuesAlongNormal","xk","yk","scalarValue","absorption","panoramicProcessed","gImage","resultImageData","sigma","gaussianBlur","dist","PI","g0","g1","g2","kernel","normalizeCoef","kernelSize","halfKernelSize","ky","kx","blurPanoramic","image0","gImage0","alpha","scalarSlice","mp","imin","imax","xPt","yPt","sharpenedPanoramic","panoramicMetadata","dentascanObject","dentascansViewportData","random","FrameOfReferenceUID","createDatasetPromise","datasetsStack","layerData","layerI","layerSopInstanceUID","FrameNumber","dsStack","loadMultipleBlobsInViewport","fontWeight","marginBottom","marginRight","parseInt","ProgressBar","bgColor","completed","transitionDuration","transitionTimingFunction","iconName","iconLabel","secondaryLabel","wrappedMeasurementPanel","packageJson","_checkSeriesPositionShift","previousPosition","actualPosition","scanAxisNormal","averageSpacingBetweenFrames","predictedPosition","vec3","areAllImagePositionsEqual","firstImageOrientationPatient","toNumber","ImageOrientationPatient","imageOrientation","rowCosineVec","colCosineVec","calculateScanAxisNormal","firstImagePositionPatient","ImagePositionPatient","lastIpp","_getPerpendicularDistance","previousImagePositionPatient","imagePositionPatient","checkSingleFrames","firstImage","firstImageRows","firstImageColumns","areAllImageDimensionsEqual","addMessage","DisplaySetMessage","CODES","INCONSISTENT_DIMENSIONS","firstImageSamplesPerPixel","SamplesPerPixel","areAllImageComponentsEqual","INCONSISTENT_COMPONENTS","imageOrientationPatient","_isSameOrientation","areAllImageOrientationsEqual","INCONSISTENT_ORIENTATIONS","INCONSISTENT_POSITION_INFORMATION","issuesFound","spacingBetweenFrames","spacingIssue","_getSpacingIssue","issue","reconstructionIssues","MISSING_FRAMES","IRREGULAR_SPACING","areAllImageSpacingEqual","getDisplaySetMessages","isReconstructable","isDynamicVolume","DisplaySetMessageList","NO_VALID_INSTANCES","ImageType","constructableModalities","every","NO_POSITION_INFORMATION","sortedInstances","sortInstancesByPosition","multiFrameInstance","hasPixelMeasurements","MULTIFRAME_NO_PIXEL_MEASUREMENTS","hasOrientation","MULTIFRAME_NO_ORIENTATION","hasPosition","MULTIFRAME_NO_POSITION_INFORMATION","checkMultiFrame","NOT_RECONSTRUCTABLE","getDisplaySetsFromUnsupportedSeries","imageSet","ImageSet","UNSUPPORTED_DISPLAYSET","setAttributes","FrameRate","FrameTime","SOPClassHandlerId","SOPClassHandlerName","makeChartDataDisplaySet","sopClassUids","loading","guid","isDerivedDisplaySet","_displaySetService","_getDisplaySetsFromSeries","uniqueSopClassUidsInSeries","getSopClassUids","chartHandler","getDisplaySetsFromSeries","sopClassHandlerName","appContext","isMultiFrame","getDisplaySetInfo","dynamicVolumeInfo","volumeLoaderUtility","getDynamicVolumeInfo","csGetDynamicVolumeInfo","timePoints","displaySetInfo","timePoint","instancesMap","firstTimePointInstances","isDisplaySetReconstructable","makeDisplaySet","volumeLoaderSchema","sortBy","isSingleImageModality","stackableInstances","isImage","isClip","instanceNumber","acquisitionDatetime","AcquisitionDateTime","setAttribute","sopClassDictionary","ComputedRadiographyImageStorage","DigitalXRayImageStorageForPresentation","DigitalXRayImageStorageForProcessing","DigitalMammographyXRayImageStorageForPresentation","DigitalMammographyXRayImageStorageForProcessing","DigitalIntraOralXRayImageStorageForPresentation","DigitalIntraOralXRayImageStorageForProcessing","CTImageStorage","EnhancedCTImageStorage","LegacyConvertedEnhancedCTImageStorage","UltrasoundMultiframeImageStorage","MRImageStorage","EnhancedMRImageStorage","EnhancedMRColorImageStorage","LegacyConvertedEnhancedMRImageStorage","UltrasoundImageStorage","UltrasoundImageStorageRET","SecondaryCaptureImageStorage","MultiframeSingleBitSecondaryCaptureImageStorage","MultiframeGrayscaleByteSecondaryCaptureImageStorage","MultiframeGrayscaleWordSecondaryCaptureImageStorage","MultiframeTrueColorSecondaryCaptureImageStorage","XRayAngiographicImageStorage","EnhancedXAImageStorage","XRayRadiofluoroscopicImageStorage","EnhancedXRFImageStorage","XRay3DAngiographicImageStorage","XRay3DCraniofacialImageStorage","BreastTomosynthesisImageStorage","BreastProjectionXRayImageStorageForPresentation","BreastProjectionXRayImageStorageForProcessing","IntravascularOpticalCoherenceTomographyImageStorageForPresentation","IntravascularOpticalCoherenceTomographyImageStorageForProcessing","NuclearMedicineImageStorage","VLEndoscopicImageStorage","VideoEndoscopicImageStorage","VLMicroscopicImageStorage","VideoMicroscopicImageStorage","VLSlideCoordinatesMicroscopicImageStorage","VLPhotographicImageStorage","VideoPhotographicImageStorage","OphthalmicPhotography8BitImageStorage","OphthalmicPhotography16BitImageStorage","OphthalmicTomographyImageStorage","VLWholeSlideMicroscopyImageStorage","PositronEmissionTomographyImageStorage","EnhancedPETImageStorage","LegacyConvertedEnhancedPETImageStorage","RTImageStorage","EnhancedUSVolumeStorage","appContextParam","ToolbarDivider","defaultCommonPresets","commandOptions","numRows","numCols","generateAdvancedPresets","hangingProtocols","protocols","getActiveViewportId","displaySetInsaneUIDs","getDisplaySetsUIDsForViewport","hp","isPreset","areValid","_areSelectorsValid","displaySetSelectors","areRequiredSelectorsValid","disabled","LayoutSelector","onSelection","onSelectionPreset","tooltipDisabled","rest","isOpen","setIsOpen","commonPresets","advancedPresets","closeOnOutsideClick","addEventListener","removeEventListener","DropdownContent","OHIFLayoutSelector","ToolbarButton","onInteractionHandler","rounded","disableToolTip","dropdownContent","LayoutPreset","classNames","onLayoutChange","defaultProps","isDisabled","setIsDisabled","run","commandName","onMouseEnter","handleMouseEnter","ToolbarSplitButtonWithServices","groupId","items","renderer","toolbarService","getSplitButtonItems","itemId","commands","PrimaryButtonComponent","getButtonComponentForUIType","uiType","listItemRenderer","SplitButton","isRadio","tooltip","isAction","disabledText","toolTipClassName","ButtonGroup","workflowStepsToDropdownOptions","steps","activated","workflowStepsService","activeStepId","setActiveStepId","activeWorkflowStep","dropdownOptions","setDropdownOptions","workflowSteps","setCurrentAndPreviousOptionsAsCompleted","currentOption","prevOptions","newOptionsState","handleDropdownChange","selectedOption","setActiveWorkflowStep","clearTimeout","timeoutId","unsubStepsChanged","STEPS_CHANGED","unsubActiveStepChanged","ACTIVE_STEP_CHANGED","ProgressDropdown","getMenuItems","selectorProps","menus","menuIdFilter","subProps","menu","subMenu","findIt","menuId","findMenuById","selector","findMenuDefault","findMenuIterator","return","findMenu","menuItems","delegating","toAdd","newItem","actionType","iconRight","itemRef","detail","adaptItem","ContextMenuController","closeContextMenu","showContextMenu","contextMenuProps","viewportElement","defaultPointsPosition","annotationManager","CsAnnotation","locking","targetAnnotationId","nearbyToolData","annotationUID","isAnnotationLocked","getAnnotation","ContextMenuItemsBuilder","preservePosition","preventCutOf","defaultPosition","_getDefaultPosition","ContextMenu","onClickOutside","eventData","onShowSubMenu","onDefault","_ContextMenuController","getDefaultPosition","_getEventDefaultPosition","eventDetail","currentPoints","_getElementDefaultPosition","boundingClientRect","getBoundingClientRect","_getCanvasPointsPosition","viewerPos","_isValidPosition","source","canvasPoints","viewerElement","positionIterator","getPositionIterator","customizationType","rowVerticalPaddingStyle","padding","rowStyle","borderBottomWidth","ColumnHeaders","tagRef","vrRef","keywordRef","valueRef","ref","listRef","canvasRef","tagHeaderElem","setTagHeaderElem","vrHeaderElem","setVrHeaderElem","keywordHeaderElem","setKeywordHeaderElem","valueHeaderElem","setValueHeaderElem","scrollTo","resetAfterIndex","debouncedResize","Row","row","isHeaderRendered","getItemSize","headerWidths","offsetWidth","getComputedStyle","colText","colOneLineWidth","measureText","ceil","maxHeight","colHeight","visibility","elem","List","itemCount","itemSize","nameMap","getFormattedRowsFromTags","tags","tagInfo","tagIndent","keyword","formatedRowsFromTags","Tag","fromPString","toCleanString","originalTagInfo","getRows","depth","keywords","sequenceAsArray","objectOrArray","sequence","sequenceRows","_sortTagList","regex","match","tagList","DicomTagBrowser","excludedColumnIndicesForFilter","selectedDisplaySetInstanceUID","setSelectedDisplaySetInstanceUID","setInstanceNumber","filterValue","setFilterValue","activeDisplaySet","isImageStack","showInstanceList","displaySetList","useMemo","dateStr","moment","format","getSortedTags","filteredRows","filterValueLowerCase","keepRow","col","colIndex","debouncedSetFilterValue","Typography","variant","InputRange","inputClassName","labelPosition","trackColor","InputFilterText","onDebounceChange","DicomTagTable","reuseCachedLayout","syncService","displaySetsCache","activeStudyUID","syncState","viewportGridStore","displaySetSelectorMap","stage","stages","storeId","cacheId","hangingProtocolStageIndexMap","viewportStructure","properties","custom","layout","displaySetUID","matchedDisplaySetsIndex","findOrCreateViewport","viewportsByPosition","positionId","byPositionViewport","inDisplay","initialInDisplay","missing","getMissingViewport","displaySetsInfo","findViewportsByPosition","storedViewport","subscribeToNextViewportGridChange","commandsModule","stateSyncService","contextMenuController","menuCustomizationId","optionsToUse","defaultContextMenu","displayNotification","clearMeasurements","setHangingProtocol","stageId","reset","displaySetServiceCached","stateSyncReduce","reuseCachedLayouts","hangingId","useStageIdx","getStageIndex","setActiveStudyUID","storedHanging","restoreProtocol","setProtocol","toggleHangingProtocol","desiredStageIndex","activeStudy","previousState","deltaStage","direction","oldStageIndex","setViewportGridLayout","callbacks","completeLayout","stateReduce","layoutFindOrCreate","setLayout","toggleOneUpCustom","viewportGridState","toggleOneUpViewportGridStore","viewportIdToUpdate","updatedViewportsViaHP","preOneUpViewport","layoutOptions","getLayoutOptionsFromState","toggleOneUp","clearToggleOneUpViewportGridStore","navigateHistory","historyArgs","history","to","openDICOMTagViewer","activeViewportSpecificData","UIModalService","toggleOverlays","overlays","getElementsByClassName","toggle","scrollActiveThumbnailIntoView","activeDisplaySetInstanceUID","thumbnailList","querySelector","thumbnailListBounds","thumbnailBounds","top","bottom","scrollIntoView","behavior","updateViewportDisplaySet","excludeNonImageModalities","nonImageModalities","dsSortFn","getDisplaySetSortFunction","currentDisplaySets","displaySetIndexToShow","definitions","commandFn","nextStage","previousStage","storeContexts","defaultContext","protocolMatchingRules","weight","attribute","constraint","greaterThan","toolGroupIds","defaultDisplaySetId","seriesMatchingRules","equals","defaultViewport","allowUnmatchedView","stageActivation","minViewportsMatched","layoutType","requiredViewports","preferredViewports","numberOfPriorsReferenced","currentDisplaySet","priorDisplaySet","currentViewport0","currentViewport1","priorViewport0","notNull","studyMatchingRules","priorDisplaySetId","defaultProtocol","locked","createdDate","modifiedDate","availableTo","editableBy","hpInitiationCriteria","minSeriesLoaded","hpMNGrid","hpMNCompare","dsConfigs","dataSources","src","alt","friendlyName","classnames","itemLabel","itemList","onItemClicked","Icon","endIcon","NO_WRAP_ELLIPSIS_CLASS_NAMES","configurationAPI","configuredItems","onHide","setItemList","selectedItems","setSelectedItems","errorMessage","setErrorMessage","itemLabels","getItemLabels","showFullConfig","setShowFullConfig","currentSelectedItemIndex","shouldUpdate","setCurrentItem","getSelectedItemBackgroundClasses","itemIndex","getSelectedItemBorderClasses","getSelectedItemTextClasses","itemLabelIndex","theList","ItemListComponent","setConfigurationAPI","setConfiguredItems","dataSourceChangedCallback","activeDataSourceDef","getActiveDataSourceDefinition","factory","configurationAPIFactory","configAPI","getConfiguredItems","list","sub","ACTIVE_DATA_SOURCE_CHANGED","showConfigurationModal","DataSourceConfigurationModalComponent","ItemType","initialUrl","baseHealthcareUrl","GoogleCloudDataSourceConfigurationAPI","_extensionManager","_fetchOptions","_dataSourceName","method","projects","_doFetch","project","projectId","itemType","anItem","googleCloudItem","dicomStores","dataSourceDefCopy","getDataSourceDefinition","updateDataSourceConfiguration","subItemType","subItemField","fetchedSubItems","subItem","nameSplit","projectsIndex","urlSplit","projectUrl","relativePath","urlStr","fetchItemType","fetchOptions","fetchSearchParams","nextPageToken","pageToken","subPageData","statusText","err","LineChartViewport","axis","chartAxis","chartSeries","chartData","LineChart","showLegend","legendWidth","indexRef","ColorSpace","Name","RGBPoints","registerColormap","handlePETImageMetadata","instanceMetadataArray","instanceMetadata","dicomMetaData","CorrectedImage","Units","RadiopharmaceuticalInformationSequence","RadionuclideHalfLife","RadionuclideTotalDose","DecayCorrection","AcquisitionDate","AcquisitionTime","RadiopharmaceuticalStartDateTime","RadiopharmaceuticalStartTime","PatientWeight","philipsPETPrivateGroup","SUVScaleFactor","ActivityConcentrationScaleFactor","PhilipsPETPrivateGroup","GEPrivatePostInjectionDateTime","FrameReferenceTime","ActualFrameDuration","PatientSex","PatientSize","getPTImageIdInstanceMetadata","suvScalingFactors","calculateSUVScalingFactors","addCustomMetadata","colormaps","defaultExtension","preRegistration","cineService","registerEventForToolbarUpdate","CINE_STATE_CHANGED","SERIES_UPDATED","register","clearOnModeExit","subscribeToEvents","listeners","ACTIVE_VIEWPORT_ID_CHANGED","VIEWPORTS_READY","TOOL_BAR_MODIFIED","buttons","button","getDataSourcesModule","getViewportModule","getLayoutTemplateModule","getPanelModule","getHangingProtocolModule","getSopClassHandlerModule","getToolbarModule","defaultComponent","ToolbarLayoutSelectorWithServices","ToolbarButtonGroupWithServices","ProgressDropdownWithService","isToggled","getClassName","isCineEnabled","getCommandsModule","getUtilityModule","getCustomizationModule","routes","DataSourceSelector","condition","contentF","transform","clonedObject","originalItems","DataSourceConfigurationComponent"],"sourceRoot":""}