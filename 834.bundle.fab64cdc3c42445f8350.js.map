{"version":3,"file":"834.bundle.fab64cdc3c42445f8350.js","mappings":"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AI,EAAG,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,GAAe,CAAC,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAe,CAAC,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAe,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAe,CAAC,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAiB,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAiB,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAgB,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAiB,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAgB,CAAC,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAiB,CAAC,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAiB,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAiB,CAAC,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAiB,CAAC,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAiB,CAAC,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAgB,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAiB,CAAC,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAiB,CAAC,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAiB,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAgB,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAgB,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAiB,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAiB,CAAC,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAgB,CAAC,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAgB,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAgB,CAAC,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAiB,CAAC,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAgB,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAiB,CAAC,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAiB,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAgB,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,GAAiB,CAAC,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,GAAgB,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAgB,CAAC,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAiB,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAgB,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAgB,CAAC,EAAG,EAAG,IAAK,GAAI,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","sources":["webpack:///../../../node_modules/@cornerstonejs/calculate-suv/dist/calculate-suv.esm.js","webpack:///../../../node_modules/@kitware/vtk.js/Filters/General/ImageCropFilter.js","webpack:///../../../node_modules/@kitware/vtk.js/Common/DataModel/EdgeLocator.js","webpack:///../../../node_modules/@kitware/vtk.js/Filters/General/ImageMarchingCubes/caseTable.js","webpack:///../../../node_modules/@kitware/vtk.js/Filters/General/ImageMarchingCubes.js","webpack:///../../../node_modules/@kitware/vtk.js/Filters/General/OutlineFilter.js","webpack:///../../../node_modules/@kitware/vtk.js/IO/Geometry/STLWriter.js","webpack:///../../../node_modules/@kitware/vtk.js/IO/Geometry/STLWriter/Constants.js","webpack:///../../../node_modules/@kitware/vtk.js/Imaging/Core/AbstractImageInterpolator/Constants.js","webpack:///../../../node_modules/@kitware/vtk.js/Imaging/Core/AbstractImageInterpolator/InterpolationInfo.js","webpack:///../../../node_modules/@kitware/vtk.js/Imaging/Core/AbstractImageInterpolator.js","webpack:///../../../node_modules/@kitware/vtk.js/Imaging/Core/ImageInterpolator.js","webpack:///../../../node_modules/@kitware/vtk.js/Imaging/Core/ImagePointDataIterator.js","webpack:///../../../node_modules/@kitware/vtk.js/Imaging/Core/ImageReslice/Constants.js","webpack:///../../../node_modules/@kitware/vtk.js/Imaging/Core/ImageReslice.js","webpack:///../../../node_modules/@ramonak/react-progress-bar/dist/index.js","webpack:///../../../node_modules/iota-array/iota.js","webpack:///../../../node_modules/is-buffer/index.js","webpack:///../../../node_modules/ndarray/ndarray.js","webpack:///../../../node_modules/react-window/dist/index.esm.js","webpack:///../../../node_modules/skmeans/dist/node/distance.js","webpack:///../../../node_modules/skmeans/dist/node/kinit.js","webpack:///../../../node_modules/skmeans/dist/node/main.js","webpack:///../../../node_modules/zeros/zeros.js"],"sourcesContent":["/**\r\n * Javascript object that handles dates and compute the time.\r\n *\r\n * @export\r\n * @class FullDateInterface\r\n */\nclass FullDateInterface {\n  /**\r\n   * Creates an instance of FullDateInterface.\r\n   * @param {string} date formatted as yyyy-mm-ddTHH:MM:SS.FFFFFFZ\r\n   * @memberof FullDateInterface\r\n   */\n  constructor(date) {\n    this.fullDate = date;\n  }\n  /**\r\n   * returns time since 1 january 1970\r\n   *\r\n   * @returns {number} time in sec\r\n   * @memberof FullDateInterface\r\n   */\n\n\n  getTimeInSec() {\n    // yyyy-mm-ddTHH:MM:SS.FFFFFFZ\n    const dateString = this.fullDate.substring(0, 10);\n    const timeString = this.fullDate.substring(11, 28); // yyyy-mm-dd\n\n    const yyyy = parseInt(dateString.substring(0, 4), 10);\n    const mm = dateString.length >= 7 ? parseInt(dateString.substring(5, 7), 10) : undefined;\n    const dd = dateString.length >= 10 ? parseInt(dateString.substring(8, 10), 10) : undefined;\n\n    if (isNaN(yyyy) || mm !== undefined && isNaN(mm) || dd !== undefined && isNaN(dd) || yyyy > 3000 || mm && (mm < 1 || mm > 12) || dd && (dd < 1 || dd > 31)) {\n      throw new Error(`invalid date '${dateString}'`);\n    }\n\n    const dateJS = new Date(`${dateString}T00:00:00.000000Z`); // HHMMSS.FFFFFF\n\n    const HH = parseInt(timeString.substring(0, 2), 10);\n    const MM = timeString.length >= 5 ? parseInt(timeString.substring(3, 5), 10) : undefined;\n    const SS = timeString.length >= 8 ? parseInt(timeString.substring(6, 8), 10) : undefined;\n    const fractionalStr = timeString.substring(9, 15);\n    const FFFFFF = fractionalStr ? parseInt(fractionalStr, 10) * Math.pow(10, -fractionalStr.length) : undefined;\n\n    if (isNaN(HH) || MM !== undefined && isNaN(MM) || SS !== undefined && isNaN(SS) || FFFFFF !== undefined && isNaN(FFFFFF) || HH < 0 || HH > 23 || MM && (MM < 0 || MM > 59) || SS && (SS < 0 || SS > 59) || FFFFFF && (FFFFFF < 0 || FFFFFF > 999999)) {\n      throw new Error(`invalid time '${timeString}'`);\n    }\n\n    let timeInSec = dateJS.getTime() / 1000;\n    timeInSec += HH * 3600;\n\n    if (MM !== undefined) {\n      timeInSec += MM * 60;\n    }\n\n    if (SS !== undefined) {\n      timeInSec += SS;\n    }\n\n    if (FFFFFF !== undefined) {\n      timeInSec += FFFFFF;\n    }\n\n    return timeInSec;\n  }\n  /**\r\n   * returns time since 1 january 1970\r\n   *\r\n   * @returns {number} time in microsec\r\n   * @memberof FullDateInterface\r\n   */\n\n\n  getTimeInMicroSec() {\n    const timeInMicroSec = this.getTimeInSec() * 1e6;\n    return timeInMicroSec;\n  }\n\n}\n/**\r\n * Combines two javascript objects containing the date and time information\r\n *\r\n * @export\r\n * @param {DateInterface} date\r\n * @param {TimeInterface} time\r\n * @returns {FullDateInterface}\r\n */\n\nfunction combineDateTime(date, time) {\n  const hours = `${time.hours || '00'}`.padStart(2, '0');\n  const minutes = `${time.minutes || '00'}`.padStart(2, '0');\n  const seconds = `${time.seconds || '00'}`.padStart(2, '0');\n  const month = `${date.month}`.padStart(2, '0');\n  const day = `${date.day}`.padStart(2, '0');\n  const fractionalSeconds = `${time.fractionalSeconds || '000000'}`.padEnd(6, '0');\n  const dateString = `${date.year}-${month}-${day}`;\n  const timeString = `T${hours}:${minutes}:${seconds}.${fractionalSeconds}Z`;\n  const fullDateString = `${dateString}${timeString}`;\n  return new FullDateInterface(fullDateString);\n}\n\n/**\r\n * Check the number of days for a picked month and year\r\n * algorithm based on http://stackoverflow.com/questions/1433030/validate-number-of-days-in-a-given-month\r\n *\r\n * @param {number} m\r\n * @param {number} y\r\n * @returns {number} number of days\r\n */\nfunction daysInMonth(m, y) {\n  // m is 0 indexed: 0-11\n  switch (m) {\n    case 2:\n      return y % 4 === 0 && y % 100 || y % 400 === 0 ? 29 : 28;\n\n    case 9:\n    case 4:\n    case 6:\n    case 11:\n      return 30;\n\n    default:\n      return 31;\n  }\n}\n/**\r\n * Check if the date is valid\r\n *\r\n * @param {number} d\r\n * @param {number} m\r\n * @param {number} y\r\n * @returns {boolean} boolean result\r\n */\n\n\nfunction isValidDate(d, m, y) {\n  // make year is a number\n  if (isNaN(y)) {\n    return false;\n  }\n\n  return m > 0 && m <= 12 && d > 0 && d <= daysInMonth(m, y);\n}\n/**\r\n * Parses a DA formatted string into a Javascript object\r\n * @param {string} date a string in the DA VR format\r\n * @param {boolean} [validate] - true if an exception should be thrown if the date is invalid\r\n * @returns {DateInterface} Javascript object with properties year, month and day or undefined if not present or not 8 bytes long\r\n */\n\n\nfunction parseDA(date) {\n  if (date === undefined || date === null || date.length !== 8 || typeof date !== 'string') {\n    throw new Error(`invalid DA '${date}'`);\n  }\n\n  const yyyy = parseInt(date.substring(0, 4), 10);\n  const mm = parseInt(date.substring(4, 6), 10);\n  const dd = parseInt(date.substring(6, 8), 10);\n\n  if (isValidDate(dd, mm, yyyy) !== true) {\n    throw new Error(`invalid DA '${date}'`);\n  }\n\n  return {\n    year: yyyy,\n    month: mm,\n    day: dd\n  };\n}\n\n/**\r\n * Parses a TM formatted string into a javascript object with properties for hours, minutes, seconds and fractionalSeconds\r\n * @param {string} time - a string in the TM VR format\r\n * @returns {string} javascript object with properties for hours, minutes, seconds and fractionalSeconds or undefined if no element or data.  Missing fields are set to undefined\r\n */\nfunction parseTM(time) {\n  if (time === null || time === undefined || time.length < 2 || typeof time !== 'string') {\n    // must at least have HH\n    throw new Error(`invalid TM '${time}'`);\n  } // 0123456789\n  // HHMMSS.FFFFFF\n\n\n  const hh = parseInt(time.substring(0, 2), 10);\n  const mm = time.length >= 4 ? parseInt(time.substring(2, 4), 10) : undefined;\n  const ss = time.length >= 6 ? parseInt(time.substring(4, 6), 10) : undefined;\n  const fractionalStr = time.length >= 8 ? time.substring(7, 13) : undefined;\n  const ffffff = fractionalStr ? parseInt(fractionalStr, 10) * Math.pow(10, 6 - fractionalStr.length) : undefined;\n\n  if (isNaN(hh) || mm !== undefined && isNaN(mm) || ss !== undefined && isNaN(ss) || ffffff !== undefined && isNaN(ffffff) || hh < 0 || hh > 23 || mm && (mm < 0 || mm > 59) || ss && (ss < 0 || ss > 59) || ffffff && (ffffff < 0 || ffffff > 999999)) {\n    throw new Error(`invalid TM '${time}'`);\n  }\n\n  return {\n    hours: hh,\n    minutes: mm,\n    seconds: ss,\n    fractionalSeconds: ffffff\n  };\n}\n\n/**\r\n * Utility to create a FullDateInterface object given a string formatted as yyyy-mm-ddTHH:MM:SS.FFFFFFZ\r\n *\r\n * @export\r\n * @param {string} dateTime\r\n * @returns {FullDateInterface}\r\n */\n\nfunction dateTimeToFullDateInterface(dateTime) {\n  if (dateTime === undefined || dateTime === null) {\n    throw new Error('dateTimeToFullDateInterface : dateTime not defined.');\n  }\n\n  const date = parseDA(dateTime.substring(0, 8));\n  const time = parseTM(dateTime.substring(8));\n  return combineDateTime(date, time);\n}\n\n/**\r\n * Calculate the scan times\r\n *\r\n * @export\r\n * @param {InstanceMetadataForScanTimes[]} instances\r\n * @returns {FullDateInterface[]}\r\n */\n\nfunction calculateScanTimes(instances) {\n  const {\n    SeriesDate,\n    SeriesTime,\n    GEPrivatePostInjectionDateTime\n  } = instances[0];\n  const results = new Array(instances.length);\n  const seriesDate = parseDA(SeriesDate);\n  const seriesTime = parseTM(SeriesTime);\n  const seriesDateTime = combineDateTime(seriesDate, seriesTime);\n  let earliestAcquisitionDateTime = new FullDateInterface(`3000-01-01T00:00:00.000000Z`);\n  let timeError = earliestAcquisitionDateTime.getTimeInSec();\n  instances.forEach(instance => {\n    const {\n      AcquisitionDate,\n      AcquisitionTime\n    } = instance;\n    const acquisitionDate = parseDA(AcquisitionDate);\n    const acquisitionTime = parseTM(AcquisitionTime);\n    const acquisitionDateTime = combineDateTime(acquisitionDate, acquisitionTime);\n\n    if (earliestAcquisitionDateTime.getTimeInSec() >= timeError) {\n      earliestAcquisitionDateTime = acquisitionDateTime;\n    } else {\n      earliestAcquisitionDateTime = acquisitionDateTime.getTimeInSec() < earliestAcquisitionDateTime.getTimeInSec() ? acquisitionDateTime : earliestAcquisitionDateTime;\n    }\n  });\n\n  if (earliestAcquisitionDateTime.getTimeInSec() >= timeError) {\n    throw new Error('Earliest acquisition time or date could not be parsed.');\n  }\n\n  if (seriesDateTime.getTimeInSec() <= earliestAcquisitionDateTime.getTimeInSec()) {\n    return results.fill(seriesDateTime);\n  } else {\n    if (GEPrivatePostInjectionDateTime) {\n      // GE Private scan\n      return results.fill(dateTimeToFullDateInterface(GEPrivatePostInjectionDateTime));\n    } else {\n      /*const hasValidFrameTimes = instances.every(instance => {\r\n        return (\r\n          instance.FrameReferenceTime &&\r\n          instance.FrameReferenceTime > 0 &&\r\n          instance.ActualFrameDuration &&\r\n          instance.ActualFrameDuration > 0\r\n        );\r\n      });*/\n      // TODO: Temporarily commented out the checks and logic below to\n      // investigate the BQML_AC_DT_lessThan_S_DT_SIEMENS-instances case\n      //if (!hasValidFrameTimes) {\n      return results.fill(earliestAcquisitionDateTime); //}\n\n      /* Siemens PETsyngo\t3.x\tmulti-injection logic\r\n      - backcompute\tfrom\tcenter\t(average\tcount\trate\t)\tof\ttime\twindow\tfor\tbed\tposition\t(frame)\tin\tseries (reliable\tin\tall\tcases)\r\n      - Acquisition\tDate\t(0x0008,0x0022)\tand\tTime\t(0x0008,0x0032) are\tthe\tstart\tof\tthe\tbed\tposition\t(frame)\r\n      - Frame\tReference\tTime\t(0x0054,0x1300) is\tthe\toffset\t(ms)\tfrom\tthe\tscan\tDate\tand\tTime we\twant\tto\tthe\taverage\tcount\trate\ttime\r\n      */\n\n      /*return instances.map(instance => {\r\n        const {\r\n          FrameReferenceTime,\r\n          ActualFrameDuration,\r\n          RadionuclideHalfLife,\r\n          AcquisitionDate,\r\n          AcquisitionTime,\r\n        } = instance;\r\n        // Some of these checks are only here because the compiler is complaining\r\n        // We could potentially use the ! operator instead\r\n        if (!FrameReferenceTime || FrameReferenceTime <= 0) {\r\n          throw new Error(\r\n            `FrameReferenceTime is invalid: ${FrameReferenceTime}`\r\n          );\r\n        }\r\n               if (!ActualFrameDuration || ActualFrameDuration <= 0) {\r\n          throw new Error(\r\n            `ActualFrameDuration is invalid: ${ActualFrameDuration}`\r\n          );\r\n        }\r\n               if (!RadionuclideHalfLife) {\r\n          throw new Error('RadionuclideHalfLife is required');\r\n        }\r\n               if (!AcquisitionDate) {\r\n          throw new Error('AcquisitionDate is required');\r\n        }\r\n               if (!AcquisitionTime) {\r\n          throw new Error('AcquisitionTime is required');\r\n        }\r\n               const acquisitionDate: DateInterface = parseDA(AcquisitionDate);\r\n        const acquisitionTime: TimeInterface = parseTM(AcquisitionTime);\r\n        const acquisitionDateTime: FullDateInterface = combineDateTime(\r\n          acquisitionDate,\r\n          acquisitionTime\r\n        );\r\n               const frameDurationInSec = ActualFrameDuration / 1000;\r\n        const decayConstant = Math.log(2) / RadionuclideHalfLife;\r\n        const decayDuringFrame = decayConstant * frameDurationInSec;\r\n        // TODO: double check this is correctly copied from QIBA pseudocode\r\n        const averageCountRateTimeWithinFrameInSec =\r\n          (1 / decayConstant) *\r\n          Math.log(decayDuringFrame / (1 - Math.exp(-decayConstant)));\r\n        const scanDateTimeAsNumber =\r\n          Number(acquisitionDateTime) -\r\n          FrameReferenceTime / 1000 +\r\n          averageCountRateTimeWithinFrameInSec;\r\n               const scanDate = new Date(scanDateTimeAsNumber);\r\n        console.log('SIEMENS PATH');\r\n        console.log(new Date(scanDateTimeAsNumber));\r\n        return scanDate;\r\n      });*/\n    }\n  }\n}\n\nfunction calculateSUVlbmScalingFactor(inputs) {\n  const {\n    PatientSex,\n    PatientWeight,\n    PatientSize\n  } = inputs;\n  let LBM;\n  const weightSizeFactor = Math.pow(PatientWeight / (PatientSize * 100), 2); // reference: https://www.medicalconnections.co.uk/kb/calculating-suv-from-pet-images/\n\n  if (PatientSex === 'F') {\n    LBM = 1.07 * PatientWeight - 148 * weightSizeFactor;\n  } else if (PatientSex === 'M') {\n    LBM = 1.1 * PatientWeight - 120 * weightSizeFactor;\n  } else {\n    throw new Error(`PatientSex is an invalid value: ${PatientSex}`);\n  }\n\n  return LBM * 1000; // convert in gr\n}\n/**\r\n * From https://link.springer.com/article/10.1007/s00259-014-2961-x\r\n * and https://link.springer.com/article/10.2165/00003088-200544100-00004\r\n * and\r\n * @param inputs\r\n * @returns\r\n */\n\n\nfunction calculateSUVlbmJanmahasatianScalingFactor(inputs) {\n  const {\n    PatientSex,\n    PatientWeight,\n    PatientSize\n  } = inputs;\n  let LBM;\n  const bodyMassIndex = PatientWeight / Math.pow(PatientSize, 2);\n\n  if (PatientSex === 'F') {\n    LBM = 9270 * PatientWeight / (8780 + 244 * bodyMassIndex);\n  } else if (PatientSex === 'M') {\n    LBM = 9270 * PatientWeight / (6680 + 216 * bodyMassIndex);\n  } else {\n    throw new Error(`PatientSex is an invalid value: ${PatientSex}`);\n  }\n\n  return LBM * 1000; // convert in gr\n}\n\nfunction calculateSUVbsaScalingFactor(inputs) {\n  const {\n    PatientWeight,\n    PatientSize\n  } = inputs;\n  let BSA = Math.pow(PatientWeight, 0.425) * Math.pow(PatientSize * 100, 0.725) * 71.84;\n  return BSA;\n}\n\n/**\r\n * Calculate start time\r\n *\r\n * @export\r\n * @param {{\r\n *   RadiopharmaceuticalStartDateTime?: string;\r\n *   RadiopharmaceuticalStartTime?: string;\r\n *   SeriesDate?: string;\r\n * }} input\r\n * @returns {FullDateInterface}\r\n */\n\nfunction calculateStartTime(input) {\n  const {\n    RadiopharmaceuticalStartDateTime,\n    RadiopharmaceuticalStartTime,\n    SeriesDate\n  } = input;\n  let time;\n  let date;\n\n  if (RadiopharmaceuticalStartDateTime) {\n    return dateTimeToFullDateInterface(RadiopharmaceuticalStartDateTime);\n  } else if (RadiopharmaceuticalStartTime && SeriesDate) {\n    // start Date\tis not explicit - assume\tsame as\tSeries Date;\n    // but consider\tspanning midnight\n    // TODO: do we need some logic to check if the scan went over midnight?\n    time = parseTM(RadiopharmaceuticalStartTime);\n    date = parseDA(SeriesDate);\n    return combineDateTime(date, time);\n  }\n\n  throw new Error(`Invalid input: ${input}`);\n}\n\n/**\r\n * The injected dose used to calculate SUV is corrected for the\r\n * decay that occurs between the time of injection and the start of the scan\r\n *\r\n * @param {InstanceMetadata[]} instances\r\n * @returns {number[]}\r\n */\n\nfunction calculateDecayCorrection(instances) {\n  const {\n    RadionuclideTotalDose,\n    RadionuclideHalfLife,\n    RadiopharmaceuticalStartDateTime,\n    RadiopharmaceuticalStartTime,\n    SeriesDate\n  } = instances[0];\n\n  if (RadionuclideTotalDose === undefined || RadionuclideTotalDose === null) {\n    throw new Error('calculateDecayCorrection : RadionuclideTotalDose value not found.');\n  }\n\n  if (RadionuclideHalfLife === undefined || RadionuclideHalfLife === null) {\n    throw new Error('calculateDecayCorrection : RadionuclideHalfLife value not found.');\n  }\n\n  const scanTimes = calculateScanTimes(instances);\n  const startTime = calculateStartTime({\n    RadiopharmaceuticalStartDateTime,\n    RadiopharmaceuticalStartTime,\n    SeriesDate\n  });\n  return instances.map((_, index) => {\n    const scanTime = scanTimes[index];\n    const decayTimeInSec = scanTime.getTimeInSec() - startTime.getTimeInSec();\n\n    if (decayTimeInSec < 0) {\n      throw new Error('Decay time cannot be less than zero');\n    }\n\n    const decayedDose = RadionuclideTotalDose * Math.pow(2, -decayTimeInSec / RadionuclideHalfLife);\n    return 1 / decayedDose;\n  });\n}\n/**\r\n *\r\n * @param a Simple value or array of simple values\r\n * @param b Simple value or array of simple values\r\n * @returns boolean true if the values are equal.\r\n */\n\n\nconst deepEquals = (a, b) => {\n  return a === b || Array.isArray(a) && Array.isArray(b) && a.length === b.length && a.every((val, index) => val === b[index]);\n};\n/**\r\n * Calculate the SUV factor\r\n *\r\n * Note: Rescale Slope / Intercept must still be applied. These must be applied\r\n *       on a per-Frame basis, since some scanners may have different values per Frame.\r\n *\r\n * @export\r\n * @param {InstanceMetadata[]} instances\r\n * @returns {ScalingFactorResult[]}\r\n */\n\n\nfunction calculateSUVScalingFactors(instances) {\n  const {\n    CorrectedImage,\n    Units,\n    PhilipsPETPrivateGroup,\n    PatientWeight,\n    PatientSex,\n    PatientSize\n  } = instances[0];\n\n  if (!CorrectedImage.includes('ATTN') || !CorrectedImage.includes('DECY')) {\n    throw new Error(`CorrectedImage must contain \"ATTN\" and \"DECY\": ${CorrectedImage}`);\n  } // Sanity check that every instance provided has identical\n  // values for series-level metadata. If not, the provided\n  // data is invalid.\n\n\n  const isSingleSeries = instances.every(instance => {\n    return instance.Units === Units && deepEquals(instance.CorrectedImage, CorrectedImage) && instance.PatientWeight === PatientWeight && instance.PatientSex === PatientSex && instance.PatientSize === PatientSize && instance.RadionuclideHalfLife === instances[0].RadionuclideHalfLife && instance.RadionuclideTotalDose === instances[0].RadionuclideTotalDose && instance.DecayCorrection === instances[0].DecayCorrection && instance.SeriesDate === instances[0].SeriesDate && instance.SeriesTime === instances[0].SeriesTime;\n  });\n\n  if (!isSingleSeries) {\n    throw new Error('The set of instances does not appear to come from one Series. Every instance must have identical values for series-level metadata properties');\n  } // Treat null, undefined and zero as a missing PatientWeight.\n\n\n  if (!PatientWeight) {\n    throw new Error('PatientWeight value is missing. It is not possible to calculate the SUV factors');\n  }\n\n  let decayCorrectionArray = new Array(instances.length);\n  decayCorrectionArray = calculateDecayCorrection(instances);\n  let results = new Array(instances.length);\n  const weightInGrams = PatientWeight * 1000;\n\n  if (Units === 'BQML') {\n    results = decayCorrectionArray.map(function (value) {\n      return value * weightInGrams;\n    });\n  } else if (Units === 'CNTS') {\n    const hasValidSUVScaleFactor = instances.every(instance => {\n      var _instance$PhilipsPETP, _instance$PhilipsPETP2, _instance$PhilipsPETP3;\n\n      return instance.PhilipsPETPrivateGroup && ((_instance$PhilipsPETP = instance.PhilipsPETPrivateGroup) === null || _instance$PhilipsPETP === void 0 ? void 0 : _instance$PhilipsPETP.SUVScaleFactor) !== null && ((_instance$PhilipsPETP2 = instance.PhilipsPETPrivateGroup) === null || _instance$PhilipsPETP2 === void 0 ? void 0 : _instance$PhilipsPETP2.SUVScaleFactor) !== undefined && ((_instance$PhilipsPETP3 = instance.PhilipsPETPrivateGroup) === null || _instance$PhilipsPETP3 === void 0 ? void 0 : _instance$PhilipsPETP3.SUVScaleFactor) !== 0;\n    });\n    const hasValidActivityConcentrationScaleFactor = instances.every(instance => {\n      var _instance$PhilipsPETP4, _instance$PhilipsPETP5, _instance$PhilipsPETP6;\n\n      return instance.PhilipsPETPrivateGroup && !((_instance$PhilipsPETP4 = instance.PhilipsPETPrivateGroup) !== null && _instance$PhilipsPETP4 !== void 0 && _instance$PhilipsPETP4.SUVScaleFactor) && ((_instance$PhilipsPETP5 = instance.PhilipsPETPrivateGroup) === null || _instance$PhilipsPETP5 === void 0 ? void 0 : _instance$PhilipsPETP5.ActivityConcentrationScaleFactor) !== undefined && ((_instance$PhilipsPETP6 = instance.PhilipsPETPrivateGroup) === null || _instance$PhilipsPETP6 === void 0 ? void 0 : _instance$PhilipsPETP6.ActivityConcentrationScaleFactor) !== 0;\n    }); //console.log(`hasValidSUVScaleFactor: ${hasValidSUVScaleFactor}`);\n    //console.log(`hasValidActivityConcentrationScaleFactor: ${hasValidActivityConcentrationScaleFactor}`);\n\n    if (hasValidSUVScaleFactor) {\n      results = instances.map( // Added ! to tell Typescript that this can't be undefined, since we are testing it\n      // in the .every loop above.\n      instance => instance.PhilipsPETPrivateGroup.SUVScaleFactor);\n    } else if (hasValidActivityConcentrationScaleFactor) {\n      // if (0x7053,0x1000) not present, but (0x7053,0x1009) is present, then (0x7053,0x1009) * Rescale Slope,\n      // scales pixels to Bq/ml, and proceed as if Units are BQML\n      results = instances.map((instance, index) => {\n        // Added ! to tell Typescript that this can't be undefined, since we are testing it\n        // in the .every loop above.\n        return instance.PhilipsPETPrivateGroup.ActivityConcentrationScaleFactor * decayCorrectionArray[index] * weightInGrams;\n      });\n    } else {\n      throw new Error(`Units are in CNTS, but PhilipsPETPrivateGroup has invalid values: ${JSON.stringify(PhilipsPETPrivateGroup)}`);\n    }\n  } else if (Units === 'GML') {\n    // assumes that GML indicates SUVbw instead of SUVlbm\n    results.fill(1);\n  } else {\n    throw new Error(`Units has an invalid value: ${Units}`);\n  } // get BSA\n\n\n  let suvbsaFactor;\n\n  if (PatientSize === null || PatientSize === undefined) {\n    console.warn('PatientSize value is missing. It is not possible to calculate the SUV bsa factors');\n  } else {\n    const sulInputs = {\n      PatientWeight,\n      PatientSize\n    };\n    suvbsaFactor = calculateSUVbsaScalingFactor(sulInputs);\n  } // get LBM\n\n\n  let suvlbmFactor;\n  let suvlbmJenmaFactor;\n\n  if (PatientSize === null || PatientSize === undefined) {\n    console.warn('PatientSize value is missing. It is not possible to calculate the SUV lbm factors');\n  } else if (PatientSex === null || PatientSex === undefined) {\n    console.warn('PatientSex value is missing. It is not possible to calculate the SUV lbm factors');\n  } else {\n    const suvlbmInputs = {\n      PatientWeight,\n      PatientSex,\n      PatientSize\n    };\n    suvlbmFactor = calculateSUVlbmScalingFactor(suvlbmInputs);\n    suvlbmJenmaFactor = calculateSUVlbmJanmahasatianScalingFactor(suvlbmInputs);\n  }\n\n  return results.map(function (result, index) {\n    const factors = {\n      suvbw: result\n    };\n\n    if (suvbsaFactor) {\n      // multiply for BSA\n      factors.suvbsa = decayCorrectionArray[index] * suvbsaFactor;\n    }\n\n    if (suvlbmFactor) {\n      // multiply for LBM\n      factors.suvlbm = decayCorrectionArray[index] * suvlbmFactor;\n    }\n\n    if (suvlbmJenmaFactor) {\n      factors.suvlbmJanma = decayCorrectionArray[index] * suvlbmJenmaFactor;\n    } // factor formulaes taken from:\n    // https://www.medicalconnections.co.uk/kb/calculating-suv-from-pet-images/\n\n\n    return factors;\n  });\n}\n\nexport { calculateSUVScalingFactors };\n//# sourceMappingURL=calculate-suv.esm.js.map\n","import { m as macro } from '../../macros2.js';\nimport vtkImageData from '../../Common/DataModel/ImageData.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkImageCropFilter methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageCropFilter(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageCropFilter');\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.reset = () => {\n    const data = publicAPI.getInputData();\n    if (data) {\n      publicAPI.setCroppingPlanes(...data.getExtent());\n    }\n  };\n\n  // --------------------------------------------------------------------------\n\n  publicAPI.requestData = (inData, outData) => {\n    // implement requestData\n    const input = inData[0];\n    if (!input) {\n      vtkErrorMacro('Invalid or missing input');\n      return;\n    }\n    const scalars = input.getPointData().getScalars();\n    if (!scalars) {\n      vtkErrorMacro('No scalars from input');\n      return;\n    }\n    const extent = input.getExtent();\n    const cropped = model.croppingPlanes && model.croppingPlanes.length === 6 ? extent.map((e, i) => {\n      if (i % 2 === 0) {\n        // min plane\n        return Math.max(e, Math.round(model.croppingPlanes[i]));\n      }\n      // max plane\n      return Math.min(e, Math.round(model.croppingPlanes[i]));\n    }) : extent.slice();\n    if (cropped[0] === extent[0] && cropped[1] === extent[1] && cropped[2] === extent[2] && cropped[3] === extent[3] && cropped[4] === extent[4] && cropped[5] === extent[5]) {\n      const sameAsInput = vtkImageData.newInstance();\n      sameAsInput.shallowCopy(input); // Force new mtime\n      outData[0] = sameAsInput;\n      return;\n    }\n\n    // reorder if needed\n    for (let i = 0; i < 3; ++i) {\n      if (cropped[i * 2] > cropped[i * 2 + 1]) {\n        [cropped[i * 2], cropped[i * 2 + 1]] = [cropped[i * 2 + 1], cropped[i * 2]];\n      }\n    }\n\n    // restrict crop bounds based on extent bounds\n    for (let i = 0; i < 6; i += 2) {\n      // min case\n      cropped[i] = Math.max(cropped[i], extent[i]);\n      // max case\n      cropped[i + 1] = Math.min(cropped[i + 1], extent[i + 1]);\n    }\n    const numberOfComponents = scalars.getNumberOfComponents();\n    const componentSize = (cropped[1] - cropped[0] + 1) * (cropped[3] - cropped[2] + 1) * (cropped[5] - cropped[4] + 1) * numberOfComponents;\n    const scalarsData = scalars.getData();\n    const dims = input.getDimensions();\n    const jStride = numberOfComponents * dims[0];\n    const kStride = numberOfComponents * dims[0] * dims[1];\n    const beginOffset = (cropped[0] - extent[0]) * numberOfComponents;\n    const stripSize = (cropped[1] - cropped[0] + 1) * numberOfComponents; // +1 because subarray end is exclusive\n\n    // crop image\n    const croppedArray = new scalarsData.constructor(componentSize);\n    let index = 0;\n    for (let k = cropped[4]; k <= cropped[5]; ++k) {\n      for (let j = cropped[2]; j <= cropped[3]; ++j) {\n        const begin = beginOffset + (j - extent[2]) * jStride + (k - extent[4]) * kStride;\n        const end = begin + stripSize;\n        const slice = scalarsData.subarray(begin, end);\n        croppedArray.set(slice, index);\n        index += slice.length;\n      }\n    }\n    const outImage = vtkImageData.newInstance({\n      extent: cropped,\n      origin: input.getOrigin(),\n      direction: input.getDirection(),\n      spacing: input.getSpacing()\n    });\n    const croppedScalars = vtkDataArray.newInstance({\n      name: scalars.getName(),\n      numberOfComponents,\n      values: croppedArray\n    });\n    outImage.getPointData().setScalars(croppedScalars);\n    outData[0] = outImage;\n  };\n  publicAPI.isResetAvailable = () => {\n    if (model.croppingPlanes == null || model.croppingPlanes.length === 0) {\n      return false;\n    }\n    const data = publicAPI.getInputData();\n    if (data) {\n      const originalExtent = data.getExtent();\n      const findDifference = originalExtent.find((v, i) => Math.abs(model.croppingPlanes[i] - v) > Number.EPSILON);\n      return findDifference !== undefined;\n    }\n    return false;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // croppingPlanes: null,\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Make this a VTK object\n  macro.obj(publicAPI, model);\n\n  // Also make it an algorithm with one input and one output\n  macro.algo(publicAPI, model, 1, 1);\n\n  // no orientation support yet\n  macro.setGetArray(publicAPI, model, ['croppingPlanes'], 6);\n\n  // Object specific methods\n  vtkImageCropFilter(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkImageCropFilter');\n\n// ----------------------------------------------------------------------------\n\nvar vtkImageCropFilter$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkImageCropFilter$1 as default, extend, newInstance };\n","class EdgeLocator {\n  constructor() {\n    let oriented = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    this.oriented = oriented;\n    this.edgeMap = new Map();\n  }\n  initialize() {\n    this.edgeMap.clear();\n  }\n  computeEdgeKey(pointId0, pointId1) {\n    return this.oriented || pointId0 < pointId1 ?\n    // Cantor pairing function:\n    0.5 * (pointId0 * pointId1) * (pointId0 * pointId1 + 1) + pointId1 : 0.5 * (pointId1 * pointId0) * (pointId1 * pointId0 + 1) + pointId0;\n  }\n  insertUniqueEdge(pointId0, pointId1, newEdgeValue) {\n    // Generate a unique key\n    const key = this.computeEdgeKey(pointId0, pointId1);\n    let node = this.edgeMap.get(key);\n    if (!node) {\n      // Didn't find key, so add a new edge entry\n      node = {\n        key,\n        edgeId: this.edgeMap.size,\n        value: newEdgeValue\n      };\n      this.edgeMap.set(key, node);\n    }\n    return node;\n  }\n  insertEdge(pointId0, pointId1, newEdgeValue) {\n    // Generate a unique key\n    const key = this.computeEdgeKey(pointId0, pointId1);\n    const node = {\n      key,\n      edgeId: this.edgeMap.size,\n      value: newEdgeValue\n    };\n    this.edgeMap.set(key, node);\n    return node;\n  }\n  isInsertedEdge(pointId0, pointId1) {\n    const key = this.computeEdgeKey(pointId0, pointId1);\n    return this.edgeMap.get(key);\n  }\n  static getEdgePointIds(node) {\n    const n = 0.5 * (-1 + Math.sqrt(8 * node.key + 1));\n    const pointId0 = node.key - 0.5 * (n + 1) * n;\n    const pointId1 = n - pointId0;\n    return [pointId0, pointId1];\n  }\n}\nfunction newInstance() {\n  let initialValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return new EdgeLocator(initialValues.oriented);\n}\nvar vtkEdgeLocator = {\n  newInstance\n};\n\nexport { vtkEdgeLocator as default };\n","// ----------------------------------------------------------------------------\n// Marching cubes case functions (using triangles to complete tessellation).\n// For each case, a list of edge ids that form the triangles. A -1 marks the\n// end of the list of edges. Edges are taken three at a time to generate\n// triangle points.\n// ----------------------------------------------------------------------------\nconst MARCHING_CUBE_CASES = [[-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 0 0 */, [0, 3, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 1 1 */, [0, 9, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 2 1 */, [1, 3, 8, 9, 1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 3 2 */, [1, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 4 1 */, [0, 3, 8, 1, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 5 3 */, [9, 11, 2, 0, 9, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 6 2 */, [2, 3, 8, 2, 8, 11, 11, 8, 9, -1, -1, -1, -1, -1, -1, -1] /* 7 5 */, [3, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 8 1 */, [0, 2, 10, 8, 0, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 9 2 */, [1, 0, 9, 2, 10, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 10 3 */, [1, 2, 10, 1, 10, 9, 9, 10, 8, -1, -1, -1, -1, -1, -1, -1] /* 11 5 */, [3, 1, 11, 10, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 12 2 */, [0, 1, 11, 0, 11, 8, 8, 11, 10, -1, -1, -1, -1, -1, -1, -1] /* 13 5 */, [3, 0, 9, 3, 9, 10, 10, 9, 11, -1, -1, -1, -1, -1, -1, -1] /* 14 5 */, [9, 11, 8, 11, 10, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 15 8 */, [4, 8, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 16 1 */, [4, 0, 3, 7, 4, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 17 2 */, [0, 9, 1, 8, 7, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 18 3 */, [4, 9, 1, 4, 1, 7, 7, 1, 3, -1, -1, -1, -1, -1, -1, -1] /* 19 5 */, [1, 11, 2, 8, 7, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 20 4 */, [3, 7, 4, 3, 4, 0, 1, 11, 2, -1, -1, -1, -1, -1, -1, -1] /* 21 7 */, [9, 11, 2, 9, 2, 0, 8, 7, 4, -1, -1, -1, -1, -1, -1, -1] /* 22 7 */, [2, 9, 11, 2, 7, 9, 2, 3, 7, 7, 4, 9, -1, -1, -1, -1] /* 23 14 */, [8, 7, 4, 3, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 24 3 */, [10, 7, 4, 10, 4, 2, 2, 4, 0, -1, -1, -1, -1, -1, -1, -1] /* 25 5 */, [9, 1, 0, 8, 7, 4, 2, 10, 3, -1, -1, -1, -1, -1, -1, -1] /* 26 6 */, [4, 10, 7, 9, 10, 4, 9, 2, 10, 9, 1, 2, -1, -1, -1, -1] /* 27 9 */, [3, 1, 11, 3, 11, 10, 7, 4, 8, -1, -1, -1, -1, -1, -1, -1] /* 28 7 */, [1, 11, 10, 1, 10, 4, 1, 4, 0, 7, 4, 10, -1, -1, -1, -1] /* 29 11 */, [4, 8, 7, 9, 10, 0, 9, 11, 10, 10, 3, 0, -1, -1, -1, -1] /* 30 12 */, [4, 10, 7, 4, 9, 10, 9, 11, 10, -1, -1, -1, -1, -1, -1, -1] /* 31 5 */, [9, 4, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 32 1 */, [9, 4, 5, 0, 3, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 33 3 */, [0, 4, 5, 1, 0, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 34 2 */, [8, 4, 5, 8, 5, 3, 3, 5, 1, -1, -1, -1, -1, -1, -1, -1] /* 35 5 */, [1, 11, 2, 9, 4, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 36 3 */, [3, 8, 0, 1, 11, 2, 4, 5, 9, -1, -1, -1, -1, -1, -1, -1] /* 37 6 */, [5, 11, 2, 5, 2, 4, 4, 2, 0, -1, -1, -1, -1, -1, -1, -1] /* 38 5 */, [2, 5, 11, 3, 5, 2, 3, 4, 5, 3, 8, 4, -1, -1, -1, -1] /* 39 9 */, [9, 4, 5, 2, 10, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 40 4 */, [0, 2, 10, 0, 10, 8, 4, 5, 9, -1, -1, -1, -1, -1, -1, -1] /* 41 7 */, [0, 4, 5, 0, 5, 1, 2, 10, 3, -1, -1, -1, -1, -1, -1, -1] /* 42 7 */, [2, 5, 1, 2, 8, 5, 2, 10, 8, 4, 5, 8, -1, -1, -1, -1] /* 43 11 */, [11, 10, 3, 11, 3, 1, 9, 4, 5, -1, -1, -1, -1, -1, -1, -1] /* 44 7 */, [4, 5, 9, 0, 1, 8, 8, 1, 11, 8, 11, 10, -1, -1, -1, -1] /* 45 12 */, [5, 0, 4, 5, 10, 0, 5, 11, 10, 10, 3, 0, -1, -1, -1, -1] /* 46 14 */, [5, 8, 4, 5, 11, 8, 11, 10, 8, -1, -1, -1, -1, -1, -1, -1] /* 47 5 */, [9, 8, 7, 5, 9, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 48 2 */, [9, 0, 3, 9, 3, 5, 5, 3, 7, -1, -1, -1, -1, -1, -1, -1] /* 49 5 */, [0, 8, 7, 0, 7, 1, 1, 7, 5, -1, -1, -1, -1, -1, -1, -1] /* 50 5 */, [1, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 51 8 */, [9, 8, 7, 9, 7, 5, 11, 2, 1, -1, -1, -1, -1, -1, -1, -1] /* 52 7 */, [11, 2, 1, 9, 0, 5, 5, 0, 3, 5, 3, 7, -1, -1, -1, -1] /* 53 12 */, [8, 2, 0, 8, 5, 2, 8, 7, 5, 11, 2, 5, -1, -1, -1, -1] /* 54 11 */, [2, 5, 11, 2, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1] /* 55 5 */, [7, 5, 9, 7, 9, 8, 3, 2, 10, -1, -1, -1, -1, -1, -1, -1] /* 56 7 */, [9, 7, 5, 9, 2, 7, 9, 0, 2, 2, 10, 7, -1, -1, -1, -1] /* 57 14 */, [2, 10, 3, 0, 8, 1, 1, 8, 7, 1, 7, 5, -1, -1, -1, -1] /* 58 12 */, [10, 1, 2, 10, 7, 1, 7, 5, 1, -1, -1, -1, -1, -1, -1, -1] /* 59 5 */, [9, 8, 5, 8, 7, 5, 11, 3, 1, 11, 10, 3, -1, -1, -1, -1] /* 60 10 */, [5, 0, 7, 5, 9, 0, 7, 0, 10, 1, 11, 0, 10, 0, 11, -1] /* 61 7 */, [10, 0, 11, 10, 3, 0, 11, 0, 5, 8, 7, 0, 5, 0, 7, -1] /* 62 7 */, [10, 5, 11, 7, 5, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 63 2 */, [11, 5, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 64 1 */, [0, 3, 8, 5, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 65 4 */, [9, 1, 0, 5, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 66 3 */, [1, 3, 8, 1, 8, 9, 5, 6, 11, -1, -1, -1, -1, -1, -1, -1] /* 67 7 */, [1, 5, 6, 2, 1, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 68 2 */, [1, 5, 6, 1, 6, 2, 3, 8, 0, -1, -1, -1, -1, -1, -1, -1] /* 69 7 */, [9, 5, 6, 9, 6, 0, 0, 6, 2, -1, -1, -1, -1, -1, -1, -1] /* 70 5 */, [5, 8, 9, 5, 2, 8, 5, 6, 2, 3, 8, 2, -1, -1, -1, -1] /* 71 11 */, [2, 10, 3, 11, 5, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 72 3 */, [10, 8, 0, 10, 0, 2, 11, 5, 6, -1, -1, -1, -1, -1, -1, -1] /* 73 7 */, [0, 9, 1, 2, 10, 3, 5, 6, 11, -1, -1, -1, -1, -1, -1, -1] /* 74 6 */, [5, 6, 11, 1, 2, 9, 9, 2, 10, 9, 10, 8, -1, -1, -1, -1] /* 75 12 */, [6, 10, 3, 6, 3, 5, 5, 3, 1, -1, -1, -1, -1, -1, -1, -1] /* 76 5 */, [0, 10, 8, 0, 5, 10, 0, 1, 5, 5, 6, 10, -1, -1, -1, -1] /* 77 14 */, [3, 6, 10, 0, 6, 3, 0, 5, 6, 0, 9, 5, -1, -1, -1, -1] /* 78 9 */, [6, 9, 5, 6, 10, 9, 10, 8, 9, -1, -1, -1, -1, -1, -1, -1] /* 79 5 */, [5, 6, 11, 4, 8, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 80 3 */, [4, 0, 3, 4, 3, 7, 6, 11, 5, -1, -1, -1, -1, -1, -1, -1] /* 81 7 */, [1, 0, 9, 5, 6, 11, 8, 7, 4, -1, -1, -1, -1, -1, -1, -1] /* 82 6 */, [11, 5, 6, 1, 7, 9, 1, 3, 7, 7, 4, 9, -1, -1, -1, -1] /* 83 12 */, [6, 2, 1, 6, 1, 5, 4, 8, 7, -1, -1, -1, -1, -1, -1, -1] /* 84 7 */, [1, 5, 2, 5, 6, 2, 3, 4, 0, 3, 7, 4, -1, -1, -1, -1] /* 85 10 */, [8, 7, 4, 9, 5, 0, 0, 5, 6, 0, 6, 2, -1, -1, -1, -1] /* 86 12 */, [7, 9, 3, 7, 4, 9, 3, 9, 2, 5, 6, 9, 2, 9, 6, -1] /* 87 7 */, [3, 2, 10, 7, 4, 8, 11, 5, 6, -1, -1, -1, -1, -1, -1, -1] /* 88 6 */, [5, 6, 11, 4, 2, 7, 4, 0, 2, 2, 10, 7, -1, -1, -1, -1] /* 89 12 */, [0, 9, 1, 4, 8, 7, 2, 10, 3, 5, 6, 11, -1, -1, -1, -1] /* 90 13 */, [9, 1, 2, 9, 2, 10, 9, 10, 4, 7, 4, 10, 5, 6, 11, -1] /* 91 6 */, [8, 7, 4, 3, 5, 10, 3, 1, 5, 5, 6, 10, -1, -1, -1, -1] /* 92 12 */, [5, 10, 1, 5, 6, 10, 1, 10, 0, 7, 4, 10, 0, 10, 4, -1] /* 93 7 */, [0, 9, 5, 0, 5, 6, 0, 6, 3, 10, 3, 6, 8, 7, 4, -1] /* 94 6 */, [6, 9, 5, 6, 10, 9, 4, 9, 7, 7, 9, 10, -1, -1, -1, -1] /* 95 3 */, [11, 9, 4, 6, 11, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 96 2 */, [4, 6, 11, 4, 11, 9, 0, 3, 8, -1, -1, -1, -1, -1, -1, -1] /* 97 7 */, [11, 1, 0, 11, 0, 6, 6, 0, 4, -1, -1, -1, -1, -1, -1, -1] /* 98 5 */, [8, 1, 3, 8, 6, 1, 8, 4, 6, 6, 11, 1, -1, -1, -1, -1] /* 99 14 */, [1, 9, 4, 1, 4, 2, 2, 4, 6, -1, -1, -1, -1, -1, -1, -1] /* 100 5 */, [3, 8, 0, 1, 9, 2, 2, 9, 4, 2, 4, 6, -1, -1, -1, -1] /* 101 12 */, [0, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 102 8 */, [8, 2, 3, 8, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1] /* 103 5 */, [11, 9, 4, 11, 4, 6, 10, 3, 2, -1, -1, -1, -1, -1, -1, -1] /* 104 7 */, [0, 2, 8, 2, 10, 8, 4, 11, 9, 4, 6, 11, -1, -1, -1, -1] /* 105 10 */, [3, 2, 10, 0, 6, 1, 0, 4, 6, 6, 11, 1, -1, -1, -1, -1] /* 106 12 */, [6, 1, 4, 6, 11, 1, 4, 1, 8, 2, 10, 1, 8, 1, 10, -1] /* 107 7 */, [9, 4, 6, 9, 6, 3, 9, 3, 1, 10, 3, 6, -1, -1, -1, -1] /* 108 11 */, [8, 1, 10, 8, 0, 1, 10, 1, 6, 9, 4, 1, 6, 1, 4, -1] /* 109 7 */, [3, 6, 10, 3, 0, 6, 0, 4, 6, -1, -1, -1, -1, -1, -1, -1] /* 110 5 */, [6, 8, 4, 10, 8, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 111 2 */, [7, 6, 11, 7, 11, 8, 8, 11, 9, -1, -1, -1, -1, -1, -1, -1] /* 112 5 */, [0, 3, 7, 0, 7, 11, 0, 11, 9, 6, 11, 7, -1, -1, -1, -1] /* 113 11 */, [11, 7, 6, 1, 7, 11, 1, 8, 7, 1, 0, 8, -1, -1, -1, -1] /* 114 9 */, [11, 7, 6, 11, 1, 7, 1, 3, 7, -1, -1, -1, -1, -1, -1, -1] /* 115 5 */, [1, 6, 2, 1, 8, 6, 1, 9, 8, 8, 7, 6, -1, -1, -1, -1] /* 116 14 */, [2, 9, 6, 2, 1, 9, 6, 9, 7, 0, 3, 9, 7, 9, 3, -1] /* 117 7 */, [7, 0, 8, 7, 6, 0, 6, 2, 0, -1, -1, -1, -1, -1, -1, -1] /* 118 5 */, [7, 2, 3, 6, 2, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 119 2 */, [2, 10, 3, 11, 8, 6, 11, 9, 8, 8, 7, 6, -1, -1, -1, -1] /* 120 12 */, [2, 7, 0, 2, 10, 7, 0, 7, 9, 6, 11, 7, 9, 7, 11, -1] /* 121 7 */, [1, 0, 8, 1, 8, 7, 1, 7, 11, 6, 11, 7, 2, 10, 3, -1] /* 122 6 */, [10, 1, 2, 10, 7, 1, 11, 1, 6, 6, 1, 7, -1, -1, -1, -1] /* 123 3 */, [8, 6, 9, 8, 7, 6, 9, 6, 1, 10, 3, 6, 1, 6, 3, -1] /* 124 7 */, [0, 1, 9, 10, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 125 4 */, [7, 0, 8, 7, 6, 0, 3, 0, 10, 10, 0, 6, -1, -1, -1, -1] /* 126 3 */, [7, 6, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 127 1 */, [7, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 128 1 */, [3, 8, 0, 10, 6, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 129 3 */, [0, 9, 1, 10, 6, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 130 4 */, [8, 9, 1, 8, 1, 3, 10, 6, 7, -1, -1, -1, -1, -1, -1, -1] /* 131 7 */, [11, 2, 1, 6, 7, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 132 3 */, [1, 11, 2, 3, 8, 0, 6, 7, 10, -1, -1, -1, -1, -1, -1, -1] /* 133 6 */, [2, 0, 9, 2, 9, 11, 6, 7, 10, -1, -1, -1, -1, -1, -1, -1] /* 134 7 */, [6, 7, 10, 2, 3, 11, 11, 3, 8, 11, 8, 9, -1, -1, -1, -1] /* 135 12 */, [7, 3, 2, 6, 7, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 136 2 */, [7, 8, 0, 7, 0, 6, 6, 0, 2, -1, -1, -1, -1, -1, -1, -1] /* 137 5 */, [2, 6, 7, 2, 7, 3, 0, 9, 1, -1, -1, -1, -1, -1, -1, -1] /* 138 7 */, [1, 2, 6, 1, 6, 8, 1, 8, 9, 8, 6, 7, -1, -1, -1, -1] /* 139 14 */, [11, 6, 7, 11, 7, 1, 1, 7, 3, -1, -1, -1, -1, -1, -1, -1] /* 140 5 */, [11, 6, 7, 1, 11, 7, 1, 7, 8, 1, 8, 0, -1, -1, -1, -1] /* 141 9 */, [0, 7, 3, 0, 11, 7, 0, 9, 11, 6, 7, 11, -1, -1, -1, -1] /* 142 11 */, [7, 11, 6, 7, 8, 11, 8, 9, 11, -1, -1, -1, -1, -1, -1, -1] /* 143 5 */, [6, 4, 8, 10, 6, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 144 2 */, [3, 10, 6, 3, 6, 0, 0, 6, 4, -1, -1, -1, -1, -1, -1, -1] /* 145 5 */, [8, 10, 6, 8, 6, 4, 9, 1, 0, -1, -1, -1, -1, -1, -1, -1] /* 146 7 */, [9, 6, 4, 9, 3, 6, 9, 1, 3, 10, 6, 3, -1, -1, -1, -1] /* 147 11 */, [6, 4, 8, 6, 8, 10, 2, 1, 11, -1, -1, -1, -1, -1, -1, -1] /* 148 7 */, [1, 11, 2, 3, 10, 0, 0, 10, 6, 0, 6, 4, -1, -1, -1, -1] /* 149 12 */, [4, 8, 10, 4, 10, 6, 0, 9, 2, 2, 9, 11, -1, -1, -1, -1] /* 150 10 */, [11, 3, 9, 11, 2, 3, 9, 3, 4, 10, 6, 3, 4, 3, 6, -1] /* 151 7 */, [8, 3, 2, 8, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1] /* 152 5 */, [0, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 153 8 */, [1, 0, 9, 2, 4, 3, 2, 6, 4, 4, 8, 3, -1, -1, -1, -1] /* 154 12 */, [1, 4, 9, 1, 2, 4, 2, 6, 4, -1, -1, -1, -1, -1, -1, -1] /* 155 5 */, [8, 3, 1, 8, 1, 6, 8, 6, 4, 6, 1, 11, -1, -1, -1, -1] /* 156 14 */, [11, 0, 1, 11, 6, 0, 6, 4, 0, -1, -1, -1, -1, -1, -1, -1] /* 157 5 */, [4, 3, 6, 4, 8, 3, 6, 3, 11, 0, 9, 3, 11, 3, 9, -1] /* 158 7 */, [11, 4, 9, 6, 4, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 159 2 */, [4, 5, 9, 7, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 160 3 */, [0, 3, 8, 4, 5, 9, 10, 6, 7, -1, -1, -1, -1, -1, -1, -1] /* 161 6 */, [5, 1, 0, 5, 0, 4, 7, 10, 6, -1, -1, -1, -1, -1, -1, -1] /* 162 7 */, [10, 6, 7, 8, 4, 3, 3, 4, 5, 3, 5, 1, -1, -1, -1, -1] /* 163 12 */, [9, 4, 5, 11, 2, 1, 7, 10, 6, -1, -1, -1, -1, -1, -1, -1] /* 164 6 */, [6, 7, 10, 1, 11, 2, 0, 3, 8, 4, 5, 9, -1, -1, -1, -1] /* 165 13 */, [7, 10, 6, 5, 11, 4, 4, 11, 2, 4, 2, 0, -1, -1, -1, -1] /* 166 12 */, [3, 8, 4, 3, 4, 5, 3, 5, 2, 11, 2, 5, 10, 6, 7, -1] /* 167 6 */, [7, 3, 2, 7, 2, 6, 5, 9, 4, -1, -1, -1, -1, -1, -1, -1] /* 168 7 */, [9, 4, 5, 0, 6, 8, 0, 2, 6, 6, 7, 8, -1, -1, -1, -1] /* 169 12 */, [3, 2, 6, 3, 6, 7, 1, 0, 5, 5, 0, 4, -1, -1, -1, -1] /* 170 10 */, [6, 8, 2, 6, 7, 8, 2, 8, 1, 4, 5, 8, 1, 8, 5, -1] /* 171 7 */, [9, 4, 5, 11, 6, 1, 1, 6, 7, 1, 7, 3, -1, -1, -1, -1] /* 172 12 */, [1, 11, 6, 1, 6, 7, 1, 7, 0, 8, 0, 7, 9, 4, 5, -1] /* 173 6 */, [4, 11, 0, 4, 5, 11, 0, 11, 3, 6, 7, 11, 3, 11, 7, -1] /* 174 7 */, [7, 11, 6, 7, 8, 11, 5, 11, 4, 4, 11, 8, -1, -1, -1, -1] /* 175 3 */, [6, 5, 9, 6, 9, 10, 10, 9, 8, -1, -1, -1, -1, -1, -1, -1] /* 176 5 */, [3, 10, 6, 0, 3, 6, 0, 6, 5, 0, 5, 9, -1, -1, -1, -1] /* 177 9 */, [0, 8, 10, 0, 10, 5, 0, 5, 1, 5, 10, 6, -1, -1, -1, -1] /* 178 14 */, [6, 3, 10, 6, 5, 3, 5, 1, 3, -1, -1, -1, -1, -1, -1, -1] /* 179 5 */, [1, 11, 2, 9, 10, 5, 9, 8, 10, 10, 6, 5, -1, -1, -1, -1] /* 180 12 */, [0, 3, 10, 0, 10, 6, 0, 6, 9, 5, 9, 6, 1, 11, 2, -1] /* 181 6 */, [10, 5, 8, 10, 6, 5, 8, 5, 0, 11, 2, 5, 0, 5, 2, -1] /* 182 7 */, [6, 3, 10, 6, 5, 3, 2, 3, 11, 11, 3, 5, -1, -1, -1, -1] /* 183 3 */, [5, 9, 8, 5, 8, 2, 5, 2, 6, 3, 2, 8, -1, -1, -1, -1] /* 184 11 */, [9, 6, 5, 9, 0, 6, 0, 2, 6, -1, -1, -1, -1, -1, -1, -1] /* 185 5 */, [1, 8, 5, 1, 0, 8, 5, 8, 6, 3, 2, 8, 6, 8, 2, -1] /* 186 7 */, [1, 6, 5, 2, 6, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 187 2 */, [1, 6, 3, 1, 11, 6, 3, 6, 8, 5, 9, 6, 8, 6, 9, -1] /* 188 7 */, [11, 0, 1, 11, 6, 0, 9, 0, 5, 5, 0, 6, -1, -1, -1, -1] /* 189 3 */, [0, 8, 3, 5, 11, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 190 4 */, [11, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 191 1 */, [10, 11, 5, 7, 10, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 192 2 */, [10, 11, 5, 10, 5, 7, 8, 0, 3, -1, -1, -1, -1, -1, -1, -1] /* 193 7 */, [5, 7, 10, 5, 10, 11, 1, 0, 9, -1, -1, -1, -1, -1, -1, -1] /* 194 7 */, [11, 5, 7, 11, 7, 10, 9, 1, 8, 8, 1, 3, -1, -1, -1, -1] /* 195 10 */, [10, 2, 1, 10, 1, 7, 7, 1, 5, -1, -1, -1, -1, -1, -1, -1] /* 196 5 */, [0, 3, 8, 1, 7, 2, 1, 5, 7, 7, 10, 2, -1, -1, -1, -1] /* 197 12 */, [9, 5, 7, 9, 7, 2, 9, 2, 0, 2, 7, 10, -1, -1, -1, -1] /* 198 14 */, [7, 2, 5, 7, 10, 2, 5, 2, 9, 3, 8, 2, 9, 2, 8, -1] /* 199 7 */, [2, 11, 5, 2, 5, 3, 3, 5, 7, -1, -1, -1, -1, -1, -1, -1] /* 200 5 */, [8, 0, 2, 8, 2, 5, 8, 5, 7, 11, 5, 2, -1, -1, -1, -1] /* 201 11 */, [9, 1, 0, 5, 3, 11, 5, 7, 3, 3, 2, 11, -1, -1, -1, -1] /* 202 12 */, [9, 2, 8, 9, 1, 2, 8, 2, 7, 11, 5, 2, 7, 2, 5, -1] /* 203 7 */, [1, 5, 3, 3, 5, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 204 8 */, [0, 7, 8, 0, 1, 7, 1, 5, 7, -1, -1, -1, -1, -1, -1, -1] /* 205 5 */, [9, 3, 0, 9, 5, 3, 5, 7, 3, -1, -1, -1, -1, -1, -1, -1] /* 206 5 */, [9, 7, 8, 5, 7, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 207 2 */, [5, 4, 8, 5, 8, 11, 11, 8, 10, -1, -1, -1, -1, -1, -1, -1] /* 208 5 */, [5, 4, 0, 5, 0, 10, 5, 10, 11, 10, 0, 3, -1, -1, -1, -1] /* 209 14 */, [0, 9, 1, 8, 11, 4, 8, 10, 11, 11, 5, 4, -1, -1, -1, -1] /* 210 12 */, [11, 4, 10, 11, 5, 4, 10, 4, 3, 9, 1, 4, 3, 4, 1, -1] /* 211 7 */, [2, 1, 5, 2, 5, 8, 2, 8, 10, 4, 8, 5, -1, -1, -1, -1] /* 212 11 */, [0, 10, 4, 0, 3, 10, 4, 10, 5, 2, 1, 10, 5, 10, 1, -1] /* 213 7 */, [0, 5, 2, 0, 9, 5, 2, 5, 10, 4, 8, 5, 10, 5, 8, -1] /* 214 7 */, [9, 5, 4, 2, 3, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 215 4 */, [2, 11, 5, 3, 2, 5, 3, 5, 4, 3, 4, 8, -1, -1, -1, -1] /* 216 9 */, [5, 2, 11, 5, 4, 2, 4, 0, 2, -1, -1, -1, -1, -1, -1, -1] /* 217 5 */, [3, 2, 11, 3, 11, 5, 3, 5, 8, 4, 8, 5, 0, 9, 1, -1] /* 218 6 */, [5, 2, 11, 5, 4, 2, 1, 2, 9, 9, 2, 4, -1, -1, -1, -1] /* 219 3 */, [8, 5, 4, 8, 3, 5, 3, 1, 5, -1, -1, -1, -1, -1, -1, -1] /* 220 5 */, [0, 5, 4, 1, 5, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 221 2 */, [8, 5, 4, 8, 3, 5, 9, 5, 0, 0, 5, 3, -1, -1, -1, -1] /* 222 3 */, [9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 223 1 */, [4, 7, 10, 4, 10, 9, 9, 10, 11, -1, -1, -1, -1, -1, -1, -1] /* 224 5 */, [0, 3, 8, 4, 7, 9, 9, 7, 10, 9, 10, 11, -1, -1, -1, -1] /* 225 12 */, [1, 10, 11, 1, 4, 10, 1, 0, 4, 7, 10, 4, -1, -1, -1, -1] /* 226 11 */, [3, 4, 1, 3, 8, 4, 1, 4, 11, 7, 10, 4, 11, 4, 10, -1] /* 227 7 */, [4, 7, 10, 9, 4, 10, 9, 10, 2, 9, 2, 1, -1, -1, -1, -1] /* 228 9 */, [9, 4, 7, 9, 7, 10, 9, 10, 1, 2, 1, 10, 0, 3, 8, -1] /* 229 6 */, [10, 4, 7, 10, 2, 4, 2, 0, 4, -1, -1, -1, -1, -1, -1, -1] /* 230 5 */, [10, 4, 7, 10, 2, 4, 8, 4, 3, 3, 4, 2, -1, -1, -1, -1] /* 231 3 */, [2, 11, 9, 2, 9, 7, 2, 7, 3, 7, 9, 4, -1, -1, -1, -1] /* 232 14 */, [9, 7, 11, 9, 4, 7, 11, 7, 2, 8, 0, 7, 2, 7, 0, -1] /* 233 7 */, [3, 11, 7, 3, 2, 11, 7, 11, 4, 1, 0, 11, 4, 11, 0, -1] /* 234 7 */, [1, 2, 11, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 235 4 */, [4, 1, 9, 4, 7, 1, 7, 3, 1, -1, -1, -1, -1, -1, -1, -1] /* 236 5 */, [4, 1, 9, 4, 7, 1, 0, 1, 8, 8, 1, 7, -1, -1, -1, -1] /* 237 3 */, [4, 3, 0, 7, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 238 2 */, [4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 239 1 */, [9, 8, 11, 11, 8, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 240 8 */, [3, 9, 0, 3, 10, 9, 10, 11, 9, -1, -1, -1, -1, -1, -1, -1] /* 241 5 */, [0, 11, 1, 0, 8, 11, 8, 10, 11, -1, -1, -1, -1, -1, -1, -1] /* 242 5 */, [3, 11, 1, 10, 11, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 243 2 */, [1, 10, 2, 1, 9, 10, 9, 8, 10, -1, -1, -1, -1, -1, -1, -1] /* 244 5 */, [3, 9, 0, 3, 10, 9, 1, 9, 2, 2, 9, 10, -1, -1, -1, -1] /* 245 3 */, [0, 10, 2, 8, 10, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 246 2 */, [3, 10, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 247 1 */, [2, 8, 3, 2, 11, 8, 11, 9, 8, -1, -1, -1, -1, -1, -1, -1] /* 248 5 */, [9, 2, 11, 0, 2, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 249 2 */, [2, 8, 3, 2, 11, 8, 0, 8, 1, 1, 8, 11, -1, -1, -1, -1] /* 250 3 */, [1, 2, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 251 1 */, [1, 8, 3, 9, 8, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 252 2 */, [0, 1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 253 1 */, [0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 254 1 */, [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1] /* 255 0 */];\n\nconst EDGES = [[0, 1], [1, 3], [2, 3], [0, 2], [4, 5], [5, 7], [6, 7], [4, 6], [0, 4], [1, 5], [2, 6], [3, 7]];\nfunction getCase(index) {\n  return MARCHING_CUBE_CASES[index];\n}\n\n// Define the twelve edges of the voxel by the following pairs of vertices\nfunction getEdge(eid) {\n  return EDGES[eid];\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\nvar vtkCaseTable = {\n  getCase,\n  getEdge\n};\n\nexport { vtkCaseTable as default };\n","import { m as macro } from '../../macros2.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport vtkEdgeLocator from '../../Common/DataModel/EdgeLocator.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nimport { l as normalize } from '../../Common/Core/Math/index.js';\nimport vtkCaseTable from './ImageMarchingCubes/caseTable.js';\n\nconst {\n  vtkErrorMacro,\n  vtkDebugMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkImageMarchingCubes methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageMarchingCubes(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageMarchingCubes');\n  const ids = [];\n  const voxelScalars = [];\n  const voxelGradients = [];\n  const voxelPts = [];\n  const edgeLocator = vtkEdgeLocator.newInstance();\n\n  // Retrieve scalars and voxel coordinates. i-j-k is origin of voxel.\n  publicAPI.getVoxelScalars = (i, j, k, slice, dims, origin, spacing, s) => {\n    // First get the indices for the voxel\n    ids[0] = k * slice + j * dims[0] + i; // i, j, k\n    ids[1] = ids[0] + 1; // i+1, j, k\n    ids[2] = ids[0] + dims[0]; // i, j+1, k\n    ids[3] = ids[2] + 1; // i+1, j+1, k\n    ids[4] = ids[0] + slice; // i, j, k+1\n    ids[5] = ids[4] + 1; // i+1, j, k+1\n    ids[6] = ids[4] + dims[0]; // i, j+1, k+1\n    ids[7] = ids[6] + 1; // i+1, j+1, k+1\n\n    // Now retrieve the scalars\n    for (let ii = 0; ii < 8; ++ii) {\n      voxelScalars[ii] = s[ids[ii]];\n    }\n  };\n\n  // Retrieve voxel coordinates. i-j-k is origin of voxel.\n  publicAPI.getVoxelPoints = (i, j, k, origin, spacing) => {\n    // (i,i+1),(j,j+1),(k,k+1) - i varies fastest; then j; then k\n    voxelPts[0] = origin[0] + i * spacing[0]; // 0\n    voxelPts[1] = origin[1] + j * spacing[1];\n    voxelPts[2] = origin[2] + k * spacing[2];\n    voxelPts[3] = voxelPts[0] + spacing[0]; // 1\n    voxelPts[4] = voxelPts[1];\n    voxelPts[5] = voxelPts[2];\n    voxelPts[6] = voxelPts[0]; // 2\n    voxelPts[7] = voxelPts[1] + spacing[1];\n    voxelPts[8] = voxelPts[2];\n    voxelPts[9] = voxelPts[3]; // 3\n    voxelPts[10] = voxelPts[7];\n    voxelPts[11] = voxelPts[2];\n    voxelPts[12] = voxelPts[0]; // 4\n    voxelPts[13] = voxelPts[1];\n    voxelPts[14] = voxelPts[2] + spacing[2];\n    voxelPts[15] = voxelPts[3]; // 5\n    voxelPts[16] = voxelPts[1];\n    voxelPts[17] = voxelPts[14];\n    voxelPts[18] = voxelPts[0]; // 6\n    voxelPts[19] = voxelPts[7];\n    voxelPts[20] = voxelPts[14];\n    voxelPts[21] = voxelPts[3]; // 7\n    voxelPts[22] = voxelPts[7];\n    voxelPts[23] = voxelPts[14];\n  };\n\n  // Compute point gradient at i-j-k location\n  publicAPI.getPointGradient = (i, j, k, dims, slice, spacing, s, g) => {\n    let sp;\n    let sm;\n\n    // x-direction\n    if (i === 0) {\n      sp = s[i + 1 + j * dims[0] + k * slice];\n      sm = s[i + j * dims[0] + k * slice];\n      g[0] = (sm - sp) / spacing[0];\n    } else if (i === dims[0] - 1) {\n      sp = s[i + j * dims[0] + k * slice];\n      sm = s[i - 1 + j * dims[0] + k * slice];\n      g[0] = (sm - sp) / spacing[0];\n    } else {\n      sp = s[i + 1 + j * dims[0] + k * slice];\n      sm = s[i - 1 + j * dims[0] + k * slice];\n      g[0] = 0.5 * (sm - sp) / spacing[0];\n    }\n\n    // y-direction\n    if (j === 0) {\n      sp = s[i + (j + 1) * dims[0] + k * slice];\n      sm = s[i + j * dims[0] + k * slice];\n      g[1] = (sm - sp) / spacing[1];\n    } else if (j === dims[1] - 1) {\n      sp = s[i + j * dims[0] + k * slice];\n      sm = s[i + (j - 1) * dims[0] + k * slice];\n      g[1] = (sm - sp) / spacing[1];\n    } else {\n      sp = s[i + (j + 1) * dims[0] + k * slice];\n      sm = s[i + (j - 1) * dims[0] + k * slice];\n      g[1] = 0.5 * (sm - sp) / spacing[1];\n    }\n\n    // z-direction\n    if (k === 0) {\n      sp = s[i + j * dims[0] + (k + 1) * slice];\n      sm = s[i + j * dims[0] + k * slice];\n      g[2] = (sm - sp) / spacing[2];\n    } else if (k === dims[2] - 1) {\n      sp = s[i + j * dims[0] + k * slice];\n      sm = s[i + j * dims[0] + (k - 1) * slice];\n      g[2] = (sm - sp) / spacing[2];\n    } else {\n      sp = s[i + j * dims[0] + (k + 1) * slice];\n      sm = s[i + j * dims[0] + (k - 1) * slice];\n      g[2] = 0.5 * (sm - sp) / spacing[2];\n    }\n  };\n\n  // Compute voxel gradient values. I-j-k is origin point of voxel.\n  publicAPI.getVoxelGradients = (i, j, k, dims, slice, spacing, scalars) => {\n    const g = [];\n    publicAPI.getPointGradient(i, j, k, dims, slice, spacing, scalars, g);\n    voxelGradients[0] = g[0];\n    voxelGradients[1] = g[1];\n    voxelGradients[2] = g[2];\n    publicAPI.getPointGradient(i + 1, j, k, dims, slice, spacing, scalars, g);\n    voxelGradients[3] = g[0];\n    voxelGradients[4] = g[1];\n    voxelGradients[5] = g[2];\n    publicAPI.getPointGradient(i, j + 1, k, dims, slice, spacing, scalars, g);\n    voxelGradients[6] = g[0];\n    voxelGradients[7] = g[1];\n    voxelGradients[8] = g[2];\n    publicAPI.getPointGradient(i + 1, j + 1, k, dims, slice, spacing, scalars, g);\n    voxelGradients[9] = g[0];\n    voxelGradients[10] = g[1];\n    voxelGradients[11] = g[2];\n    publicAPI.getPointGradient(i, j, k + 1, dims, slice, spacing, scalars, g);\n    voxelGradients[12] = g[0];\n    voxelGradients[13] = g[1];\n    voxelGradients[14] = g[2];\n    publicAPI.getPointGradient(i + 1, j, k + 1, dims, slice, spacing, scalars, g);\n    voxelGradients[15] = g[0];\n    voxelGradients[16] = g[1];\n    voxelGradients[17] = g[2];\n    publicAPI.getPointGradient(i, j + 1, k + 1, dims, slice, spacing, scalars, g);\n    voxelGradients[18] = g[0];\n    voxelGradients[19] = g[1];\n    voxelGradients[20] = g[2];\n    publicAPI.getPointGradient(i + 1, j + 1, k + 1, dims, slice, spacing, scalars, g);\n    voxelGradients[21] = g[0];\n    voxelGradients[22] = g[1];\n    voxelGradients[23] = g[2];\n  };\n  publicAPI.produceTriangles = (cVal, i, j, k, extent, slice, dims, origin, spacing, scalars, points, tris, normals) => {\n    const CASE_MASK = [1, 2, 4, 8, 16, 32, 64, 128];\n    const VERT_MAP = [0, 1, 3, 2, 4, 5, 7, 6];\n    const xyz = [];\n    const n = [];\n    let pId;\n    publicAPI.getVoxelScalars(i, j, k, slice, dims, origin, spacing, scalars);\n    let index = 0;\n    for (let idx = 0; idx < 8; idx++) {\n      if (voxelScalars[VERT_MAP[idx]] >= cVal) {\n        index |= CASE_MASK[idx]; // eslint-disable-line no-bitwise\n      }\n    }\n\n    const voxelTris = vtkCaseTable.getCase(index);\n    if (voxelTris[0] < 0) {\n      return; // don't get the voxel coordinates, nothing to do\n    }\n\n    publicAPI.getVoxelPoints(i + extent[0], j + extent[2], k + extent[4], origin, spacing);\n    if (model.computeNormals) {\n      publicAPI.getVoxelGradients(i, j, k, dims, slice, spacing, scalars);\n    }\n    for (let idx = 0; voxelTris[idx] >= 0; idx += 3) {\n      tris.push(3);\n      for (let eid = 0; eid < 3; eid++) {\n        const edgeVerts = vtkCaseTable.getEdge(voxelTris[idx + eid]);\n        pId = undefined;\n        if (model.mergePoints) {\n          pId = edgeLocator.isInsertedEdge(ids[edgeVerts[0]], ids[edgeVerts[1]])?.value;\n        }\n        if (pId === undefined) {\n          const t = (cVal - voxelScalars[edgeVerts[0]]) / (voxelScalars[edgeVerts[1]] - voxelScalars[edgeVerts[0]]);\n          const x0 = voxelPts.slice(edgeVerts[0] * 3, (edgeVerts[0] + 1) * 3);\n          const x1 = voxelPts.slice(edgeVerts[1] * 3, (edgeVerts[1] + 1) * 3);\n          xyz[0] = x0[0] + t * (x1[0] - x0[0]);\n          xyz[1] = x0[1] + t * (x1[1] - x0[1]);\n          xyz[2] = x0[2] + t * (x1[2] - x0[2]);\n          pId = points.length / 3;\n          points.push(xyz[0], xyz[1], xyz[2]);\n          if (model.computeNormals) {\n            const n0 = voxelGradients.slice(edgeVerts[0] * 3, (edgeVerts[0] + 1) * 3);\n            const n1 = voxelGradients.slice(edgeVerts[1] * 3, (edgeVerts[1] + 1) * 3);\n            n[0] = n0[0] + t * (n1[0] - n0[0]);\n            n[1] = n0[1] + t * (n1[1] - n0[1]);\n            n[2] = n0[2] + t * (n1[2] - n0[2]);\n            normalize(n);\n            normals.push(n[0], n[1], n[2]);\n          }\n          if (model.mergePoints) {\n            edgeLocator.insertEdge(ids[edgeVerts[0]], ids[edgeVerts[1]], pId);\n          }\n        }\n        tris.push(pId);\n      }\n    }\n  };\n  publicAPI.requestData = (inData, outData) => {\n    // implement requestData\n    const input = inData[0];\n    if (!input) {\n      vtkErrorMacro('Invalid or missing input');\n      return;\n    }\n    console.time('mcubes');\n\n    // Retrieve output and volume data\n    const origin = input.getOrigin();\n    const spacing = input.getSpacing();\n    const dims = input.getDimensions();\n    const s = input.getPointData().getScalars().getData();\n\n    // Points - dynamic array\n    const pBuffer = [];\n\n    // Cells - dynamic array\n    const tBuffer = [];\n\n    // Normals\n    const nBuffer = [];\n\n    // Loop over all voxels, determine case and process\n    const extent = input.getExtent();\n    const slice = dims[0] * dims[1];\n    for (let k = 0; k < dims[2] - 1; ++k) {\n      for (let j = 0; j < dims[1] - 1; ++j) {\n        for (let i = 0; i < dims[0] - 1; ++i) {\n          publicAPI.produceTriangles(model.contourValue, i, j, k, extent, slice, dims, origin, spacing, s, pBuffer, tBuffer, nBuffer);\n        }\n      }\n    }\n    edgeLocator.initialize();\n\n    // Update output\n    const polydata = vtkPolyData.newInstance();\n    polydata.getPoints().setData(new Float32Array(pBuffer), 3);\n    polydata.getPolys().setData(new Uint32Array(tBuffer));\n    if (model.computeNormals) {\n      const nData = new Float32Array(nBuffer);\n      const normals = vtkDataArray.newInstance({\n        numberOfComponents: 3,\n        values: nData,\n        name: 'Normals'\n      });\n      polydata.getPointData().setNormals(normals);\n    }\n    outData[0] = polydata;\n    vtkDebugMacro('Produced output');\n    console.timeEnd('mcubes');\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  contourValue: 0,\n  computeNormals: false,\n  mergePoints: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Make this a VTK object\n  macro.obj(publicAPI, model);\n\n  // Also make it an algorithm with one input and one output\n  macro.algo(publicAPI, model, 1, 1);\n  macro.setGet(publicAPI, model, ['contourValue', 'computeNormals', 'mergePoints']);\n\n  // Object specific methods\n  macro.algo(publicAPI, model, 1, 1);\n  vtkImageMarchingCubes(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkImageMarchingCubes');\n\n// ----------------------------------------------------------------------------\n\nvar vtkImageMarchingCubes$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkImageMarchingCubes$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\n\n// prettier-ignore\nconst BOUNDS_MAP = [0, 2, 4,\n// pt 0\n1, 2, 4,\n// pt 1\n0, 3, 4,\n// pt 2\n1, 3, 4,\n// pt 3\n0, 2, 5,\n// pt 4\n1, 2, 5,\n// pt 5\n0, 3, 5,\n// pt 6\n1, 3, 5 // pt 7\n];\n\n// prettier-ignore\nconst LINE_ARRAY = [2, 0, 1, 2, 2, 3, 2, 4, 5, 2, 6, 7, 2, 0, 2, 2, 1, 3, 2, 4, 6, 2, 5, 7, 2, 0, 4, 2, 1, 5, 2, 2, 6, 2, 3, 7];\n\n// ----------------------------------------------------------------------------\n// vtkOutlineFilter methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOutlineFilter(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOutlineFilter');\n  publicAPI.requestData = (inData, outData) => {\n    // implement requestData\n    const input = inData[0];\n    if (!input) {\n      vtkErrorMacro('Invalid or missing input');\n      return;\n    }\n    const bounds = input.getBounds();\n    const output = vtkPolyData.newInstance();\n    output.getPoints().setData(Float32Array.from(BOUNDS_MAP.map(idx => bounds[idx])), 3);\n    output.getLines().setData(Uint16Array.from(LINE_ARRAY));\n    outData[0] = output;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Make this a VTK object\n  macro.obj(publicAPI, model);\n\n  // Also make it an algorithm with one input and one output\n  macro.algo(publicAPI, model, 1, 1);\n\n  // Object specific methods\n  vtkOutlineFilter(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkOutlineFilter');\n\n// ----------------------------------------------------------------------------\n\nvar vtkOutlineFilter$1 = {\n  newInstance,\n  extend,\n  BOUNDS_MAP,\n  LINE_ARRAY\n};\n\nexport { BOUNDS_MAP, LINE_ARRAY, vtkOutlineFilter$1 as default, extend, newInstance };\n","import { vec3 } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport vtkTriangle from '../../Common/DataModel/Triangle.js';\nimport { FormatTypes } from './STLWriter/Constants.js';\n\n// @author: Thomas Beznik <thomas.beznik@relu.eu>, with the help of Julien Finet <julien.finet@kitware.com> (https://github.com/Kitware/vtk-js/issues/1442)\nconst {\n  vtkErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction writeFloatBinary(dataView, offset, float) {\n  dataView.setFloat32(offset, float.toPrecision(6), true);\n  return offset + 4;\n}\nfunction writeVectorBinary(dataView, offset, vector) {\n  let off = writeFloatBinary(dataView, offset, vector[0]);\n  off = writeFloatBinary(dataView, off, vector[1]);\n  return writeFloatBinary(dataView, off, vector[2]);\n}\n\n// ----------------------------------------------------------------------------\n// vtkSTLWriter methods\n// ----------------------------------------------------------------------------\n\nconst binaryWriter = () => {\n  let offset = 0;\n  let dataView = null;\n  return {\n    init: polyData => {\n      const polys = polyData.getPolys().getData();\n      const buffer = new ArrayBuffer(80 + 4 + 50 * polys.length / 4); // buffer for the full file; size = header (80) + num cells (4) +  50 bytes per poly\n      dataView = new DataView(buffer);\n    },\n    writeHeader: polyData => {\n      offset += 80; // Header is empty // TODO: could add date, version, package\n\n      // First need to write the number of cells\n      dataView.setUint32(offset, polyData.getNumberOfCells(), true);\n      offset += 4;\n    },\n    writeTriangle: (v1, v2, v3, dn) => {\n      offset = writeVectorBinary(dataView, offset, dn);\n      offset = writeVectorBinary(dataView, offset, v1);\n      offset = writeVectorBinary(dataView, offset, v2);\n      offset = writeVectorBinary(dataView, offset, v3);\n      offset += 2; // unused 'attribute byte count' is a Uint16\n    },\n\n    writeFooter: polyData => {},\n    getOutputData: () => dataView\n  };\n};\nconst asciiWriter = () => {\n  let file = '';\n  return {\n    init: polyData => {},\n    writeHeader: polyData => {\n      file += 'solid ascii\\n';\n    },\n    writeTriangle: (v1, v2, v3, dn) => {\n      file += ` facet normal ${dn[0].toPrecision(6)} ${dn[1].toPrecision(6)} ${dn[2].toPrecision(6)}\\n`;\n      file += '  outer loop\\n';\n      file += `   vertex ${v1[0].toPrecision(6)} ${v1[1].toPrecision(6)} ${v1[2].toPrecision(6)}\\n`;\n      file += `   vertex ${v2[0].toPrecision(6)} ${v2[1].toPrecision(6)} ${v2[2].toPrecision(6)}\\n`;\n      file += `   vertex ${v3[0].toPrecision(6)} ${v3[1].toPrecision(6)} ${v3[2].toPrecision(6)}\\n`;\n      file += '  endloop\\n';\n      file += ' endfacet\\n';\n    },\n    writeFooter: polyData => {\n      file += 'endsolid\\n';\n    },\n    getOutputData: () => file\n  };\n};\nfunction writeSTL(polyData) {\n  let format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : FormatTypes.BINARY;\n  let transform = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  let writer = null;\n  if (format === FormatTypes.BINARY) {\n    writer = binaryWriter();\n  } else if (format === FormatTypes.ASCII) {\n    writer = asciiWriter();\n  } else {\n    vtkErrorMacro('Invalid format type');\n  }\n  writer.init(polyData);\n  writer.writeHeader(polyData);\n  const polys = polyData.getPolys().getData();\n  const points = polyData.getPoints().getData();\n  const strips = polyData.getStrips() ? polyData.getStrips().getData() : null;\n  const n = [];\n  let v1 = [];\n  let v2 = [];\n  let v3 = [];\n\n  // Strips\n  if (strips && strips.length > 0) {\n    throw new Error('Unsupported strips');\n  }\n\n  // Polys\n  for (let i = 0; i < polys.length;) {\n    const pointNumber = polys[i++];\n    if (pointNumber) {\n      v1 = [points[polys[i] * 3], points[polys[i] * 3 + 1], points[polys[i++] * 3 + 2]];\n      v2 = [points[polys[i] * 3], points[polys[i] * 3 + 1], points[polys[i++] * 3 + 2]];\n      v3 = [points[polys[i] * 3], points[polys[i] * 3 + 1], points[polys[i++] * 3 + 2]];\n      if (transform) {\n        vec3.transformMat4(v1, v1, transform);\n        vec3.transformMat4(v2, v2, transform);\n        vec3.transformMat4(v3, v3, transform);\n      }\n      vtkTriangle.computeNormal(v1, v2, v3, n);\n      writer.writeTriangle(v1, v2, v3, n);\n    }\n  }\n  writer.writeFooter(polyData);\n  return writer.getOutputData();\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nconst STATIC = {\n  writeSTL\n};\n\n// ----------------------------------------------------------------------------\n// vtkSTLWriter methods\n// ----------------------------------------------------------------------------\n\nfunction vtkSTLWriter(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkSTLWriter');\n  publicAPI.requestData = (inData, outData) => {\n    const input = inData[0];\n    if (!input || input.getClassName() !== 'vtkPolyData') {\n      vtkErrorMacro('Invalid or missing input');\n      return;\n    }\n    outData[0] = writeSTL(input, model.format, model.transform);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  format: FormatTypes.BINARY,\n  transform: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Make this a VTK object\n  macro.obj(publicAPI, model);\n\n  // Also make it an algorithm with one input and one output\n  macro.algo(publicAPI, model, 1, 1);\n  macro.setGet(publicAPI, model, ['format', 'transform']);\n\n  // Object specific methods\n  vtkSTLWriter(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkSTLWriter');\n\n// ----------------------------------------------------------------------------\n\nvar vtkSTLWriter$1 = {\n  newInstance,\n  extend,\n  ...STATIC\n};\n\nexport { STATIC, vtkSTLWriter$1 as default, extend, newInstance };\n","const FormatTypes = {\n  ASCII: 'ascii',\n  BINARY: 'binary'\n};\nvar Constants = {\n  FormatTypes\n};\n\nexport { FormatTypes, Constants as default };\n","const ImageBorderMode = {\n  CLAMP: 0,\n  REPEAT: 1,\n  MIRROR: 2\n};\nconst InterpolationMode = {\n  NEAREST: 0,\n  LINEAR: 1,\n  CUBIC: 2\n};\nvar Constants = {\n  ImageBorderMode,\n  InterpolationMode\n};\n\nexport { ImageBorderMode, InterpolationMode, Constants as default };\n","import { ImageBorderMode, InterpolationMode } from './Constants.js';\n\nconst vtkInterpolationInfo = {\n  pointer: null,\n  extent: [0, -1, 0, -1, 0, -1],\n  increments: [0, 0, 0],\n  scalarType: null,\n  // dataType\n  dataTypeSize: 1,\n  // BYTES_PER_ELEMENT\n  numberOfComponents: 1,\n  borderMode: ImageBorderMode.CLAMP,\n  interpolationMode: InterpolationMode.LINEAR,\n  extraInfo: null\n};\nconst vtkInterpolationWeights = {\n  ...vtkInterpolationInfo,\n  positions: [0, 0, 0],\n  weights: null,\n  weightExtent: [0, -1, 0, -1, 0, -1],\n  kernelSize: [1, 1, 1],\n  workspace: null,\n  lastY: null,\n  lastZ: null\n};\nfunction vtkInterpolationMathFloor(x) {\n  const integer = Math.floor(x);\n  return {\n    floored: integer,\n    error: x - integer\n  };\n}\nfunction vtkInterpolationMathRound(x) {\n  return Math.round(x);\n}\n\n//----------------------------------------------------------------------------\n// Perform a clamp to limit an index to [b, c] and subtract b.\n\nfunction vtkInterpolationMathClamp(a, b, c) {\n  let clamp = a <= c ? a : c;\n  clamp -= b;\n  clamp = clamp >= 0 ? clamp : 0;\n  return clamp;\n}\n\n//----------------------------------------------------------------------------\n// Perform a wrap to limit an index to [b, c] and subtract b.\n\nfunction vtkInterpolationMathWrap(a, b, c) {\n  const range = c - b + 1;\n  let wrap = a - b;\n  wrap %= range;\n  // required for some % implementations\n  wrap = wrap >= 0 ? wrap : wrap + range;\n  return wrap;\n}\n\n//----------------------------------------------------------------------------\n// Perform a mirror to limit an index to [b, c] and subtract b.\n\nfunction vtkInterpolationMathMirror(a, b, c) {\n  const range = c - b;\n  const ifzero = range === 0 ? 1 : 0;\n  const range2 = 2 * range + ifzero;\n  let mirror = a - b;\n  mirror = mirror >= 0 ? mirror : -mirror;\n  mirror %= range2;\n  mirror = mirror <= range ? mirror : range2 - mirror;\n  return mirror;\n}\nvar InterpolationInfo = {\n  vtkInterpolationInfo,\n  vtkInterpolationWeights,\n  vtkInterpolationMathFloor,\n  vtkInterpolationMathRound,\n  vtkInterpolationMathClamp,\n  vtkInterpolationMathWrap,\n  vtkInterpolationMathMirror\n};\n\nexport { InterpolationInfo as default, vtkInterpolationInfo, vtkInterpolationMathClamp, vtkInterpolationMathFloor, vtkInterpolationMathMirror, vtkInterpolationMathRound, vtkInterpolationMathWrap, vtkInterpolationWeights };\n","import { m as macro } from '../../macros2.js';\nimport Constants from './AbstractImageInterpolator/Constants.js';\nimport { vtkInterpolationInfo } from './AbstractImageInterpolator/InterpolationInfo.js';\n\nconst {\n  ImageBorderMode\n} = Constants;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n// vtkAbstractImageInterpolator methods\n// ----------------------------------------------------------------------------\n\nfunction vtkAbstractImageInterpolator(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkAbstractImageInterpolator');\n  publicAPI.initialize = data => {\n    publicAPI.releaseData();\n    model.scalars = data.getPointData().getScalars();\n    model.spacing = data.getSpacing();\n    model.origin = data.getOrigin();\n    model.extent = data.getExtent();\n    publicAPI.update();\n  };\n  publicAPI.releaseData = () => {\n    model.scalars = null;\n  };\n  publicAPI.update = () => {\n    if (!model.scalars) {\n      model.interpolationInfo.pointer = null;\n      model.interpolationInfo.numberOfComponents = 1;\n      return;\n    }\n    model.interpolationInfo.extent = model.extent.slice();\n    const supportSize = publicAPI.computeSupportSize(null);\n    const kernelSize = Math.max(Math.max(supportSize[0], supportSize[1]), supportSize[2]);\n    const minBound = Number.MIN_SAFE_INTEGER + kernelSize / 2;\n    const maxBound = Number.MAX_SAFE_INTEGER - kernelSize / 2;\n    for (let i = 0; i < 3; ++i) {\n      const newTol = Math.max(0.5 * (model.extent[2 * i] === model.extent[2 * i + 1]), model.tolerance);\n      model.structuredBounds[2 * i] = Math.max(model.extent[2 * i] - newTol, minBound);\n      model.structuredBounds[2 * i + 1] = Math.min(model.extent[2 * i + 1] + newTol, maxBound);\n    }\n    const xdim = model.extent[1] - model.extent[0] + 1;\n    const ydim = model.extent[3] - model.extent[2] + 1;\n    const ncomp = model.scalars.getNumberOfComponents();\n    model.interpolationInfo.increments[0] = ncomp;\n    model.interpolationInfo.increments[1] = model.interpolationInfo.increments[0] * xdim;\n    model.interpolationInfo.increments[2] = model.interpolationInfo.increments[1] * ydim;\n    let component = model.componentOffset;\n    component = component > 0 ? component : 0;\n    component = component < ncomp ? component : ncomp - 1;\n    const dataSize = 1; // scalars.getDataTypeSize()\n    const inPtr = model.scalars.getData();\n    model.interpolationInfo.pointer = inPtr.subarray(component * dataSize);\n    model.interpolationInfo.scalarType = model.scalars.dataType;\n    model.interpolationInfo.dataTypeSize = 1; // model.scalars.getElementComponentSize();\n    model.interpolationInfo.numberOfComponents = publicAPI.computeNumberOfComponents(ncomp);\n    model.interpolationInfo.borderMode = model.borderMode;\n    publicAPI.internalUpdate();\n\n    // TODO get functions\n  };\n\n  publicAPI.internalUpdate = () => {};\n  publicAPI.interpolateXYZ = (x, y, z, component) => {\n    let value = model.outValue;\n    const point = [x, y, z];\n    const p = [(point[0] - model.origin[0]) / model.spacing[0], (point[1] - model.origin[1]) / model.spacing[1], (point[2] - model.origin[2]) / model.spacing[2]];\n    if (publicAPI.checkBoundsIJK(p)) {\n      const iinfo = {\n        ...model.interpolationInfo\n      };\n      const ncomp = iinfo.increments[0] - model.componentOffset;\n      const dataTypeSize = 1; // iinfo.dataTypeSize; // vtkAbstractArray::getDataTypeSize(iinfo.scalarType)\n\n      let c = component > 0 ? component : 0;\n      c = c < ncomp ? c : ncomp - 1;\n      iinfo.pointer = model.interpolationInfo.pointer.subarray(dataTypeSize * c);\n      iinfo.numberOfComponents = 1;\n      const v = [value];\n      publicAPI.interpolatePoint(iinfo, p, v);\n      value = v[0];\n    }\n    return value;\n  };\n  publicAPI.interpolate = (point, value) => {\n    const p = [(point[0] - model.origin[0]) / model.spacing[0], (point[1] - model.origin[1]) / model.spacing[1], (point[2] - model.origin[2]) / model.spacing[2]];\n    if (publicAPI.checkBoundsIJK(p)) {\n      publicAPI.interpolatePoint(model.interpolationInfo, p, value);\n      return true;\n    }\n    for (let i = 0; i < model.interpolationInfo.numberOfComponents; ++i) {\n      value[i] = model.outValue;\n    }\n    return false;\n  };\n  publicAPI.computeNumberOfComponents = inputCount => {\n    const component = Math.min(Math.max(model.componentOffset, 0), inputCount - 1);\n    const count = model.componentCount < inputCount - component ? model.componentCount : inputCount - component;\n    return count > 0 ? count : inputCount - component;\n  };\n  publicAPI.getNumberOfComponents = () => model.interpolationInfo.numberOfComponents;\n  publicAPI.interpolateIJK = (point, value) => {\n    publicAPI.interpolatePoint(model.interpolationInfo, point, value);\n  };\n  publicAPI.checkBoundsIJK = point => !(point[0] < model.structuredBounds[0] || point[0] > model.structuredBounds[1] || point[1] < model.structuredBounds[2] || point[1] > model.structuredBounds[3] || point[2] < model.structuredBounds[4] || point[2] > model.structuredBounds[5]);\n  publicAPI.computeSupportSize = null; // (matrix) => {};\n  publicAPI.isSeparable = null;\n  publicAPI.precomputeWeightsForExtent = (matrix, inExtent, checkExtent) => {};\n  publicAPI.FreePrecomputedWeights = weights => {\n    /*\n    for (let k = 0; k < 3; ++k) {\n      const step = weights.kernelSize[k];\n      // TODO: check if ok\n      weights.positions[k] += step * weights.weightExtent[2 * k];\n      if (weights.weights[k]) {\n        // TODO: check if ok\n        weights.weights[k] += step * weights.weightExtent[2 * k];\n      }\n    }\n     if (weights.workspace) {\n      for (let i = 1; i < weights.kernelSize[1]; ++i) {\n        // TODO\n        ...\n      }\n    }\n    */\n  };\n  publicAPI.interpolatePoint = (interpolationInfo, point, value) => {};\n  publicAPI.interpolateRow = (weights, xIdx, yIdx, zIdx, value, n) => {};\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  outValue: 0,\n  tolerance: Number.EPSILON,\n  componentOffset: 0,\n  componentCount: -1,\n  borderMode: ImageBorderMode.CLAMP,\n  slidingWindow: false,\n  scalars: null,\n  interpolationInfo: {\n    ...vtkInterpolationInfo\n  },\n  interpolationFunc: null,\n  rowInterpolationFunc: null,\n  structuredBounds: [0, -1, 0, -1, 0, -1],\n  spacing: null,\n  origin: null,\n  extent: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['outValue', 'tolerance', 'componentOffset', 'componentCount', 'borderMode', 'slidingWindow']);\n  macro.get(publicAPI, model, ['origin', 'spacing']);\n\n  // Object specific methods\n  vtkAbstractImageInterpolator(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkAbstractImageInterpolator');\n\n// ----------------------------------------------------------------------------\n\nvar vtkAbstractImageInterpolator$1 = {\n  newInstance,\n  extend,\n  ...Constants\n};\n\nexport { vtkAbstractImageInterpolator$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport vtkAbstractImageInterpolator from './AbstractImageInterpolator.js';\nimport { vtkInterpolationMathRound, vtkInterpolationMathClamp, vtkInterpolationMathMirror, vtkInterpolationMathWrap, vtkInterpolationMathFloor, vtkInterpolationWeights } from './AbstractImageInterpolator/InterpolationInfo.js';\nimport { InterpolationMode, ImageBorderMode } from './AbstractImageInterpolator/Constants.js';\n\n// ----------------------------------------------------------------------------\n// vtkImageInterpolator methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageInterpolator(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageInterpolator');\n  publicAPI.computeSupportSize = matrix => {\n    let s = 1;\n    if (model.interpolationMode === InterpolationMode.LINEAR) {\n      s = 2;\n    } else if (model.interpolationMode === InterpolationMode.CUBIC) {\n      s = 4;\n    }\n    const size = [s, s, s];\n    if (matrix == null) {\n      return size;\n    }\n    // TODO CHECK MATRIX\n    if (matrix[12] !== 0 || matrix[13] !== 0 || matrix[14] !== 0 || matrix[15] !== 1) {\n      return size;\n    }\n    for (let i = 0; i < 3; ++i) {\n      let integerRow = true;\n      for (let j = 0; j < 3; ++j) {\n        integerRow = integerRow && Number.isInteger(matrix[4 * i + j]);\n      }\n      if (integerRow) {\n        size[i] = 1;\n      }\n    }\n    return size;\n  };\n  publicAPI.internalUpdate = () => {\n    model.interpolationInfo.interpolationMode = model.interpolationMode;\n  };\n  publicAPI.isSeparable = () => true;\n  publicAPI.interpolateNearest = (interpolationInfo, point, value) => {\n    const inExt = interpolationInfo.extent;\n    const inInc = interpolationInfo.increments;\n    const numscalars = interpolationInfo.numberOfComponents;\n    let inIdX0 = vtkInterpolationMathRound(point[0]);\n    let inIdY0 = vtkInterpolationMathRound(point[1]);\n    let inIdZ0 = vtkInterpolationMathRound(point[2]);\n    switch (interpolationInfo.borderMode) {\n      case ImageBorderMode.REPEAT:\n        inIdX0 = vtkInterpolationMathWrap(inIdX0, inExt[0], inExt[1]);\n        inIdY0 = vtkInterpolationMathWrap(inIdY0, inExt[2], inExt[3]);\n        inIdZ0 = vtkInterpolationMathWrap(inIdZ0, inExt[4], inExt[5]);\n        break;\n      case ImageBorderMode.MIRROR:\n        inIdX0 = vtkInterpolationMathMirror(inIdX0, inExt[0], inExt[1]);\n        inIdY0 = vtkInterpolationMathMirror(inIdY0, inExt[2], inExt[3]);\n        inIdZ0 = vtkInterpolationMathMirror(inIdZ0, inExt[4], inExt[5]);\n        break;\n      default:\n        inIdX0 = vtkInterpolationMathClamp(inIdX0, inExt[0], inExt[1]);\n        inIdY0 = vtkInterpolationMathClamp(inIdY0, inExt[2], inExt[3]);\n        inIdZ0 = vtkInterpolationMathClamp(inIdZ0, inExt[4], inExt[5]);\n        break;\n    }\n    const startId = inIdX0 * inInc[0] + inIdY0 * inInc[1] + inIdZ0 * inInc[2];\n    for (let i = 0; i < numscalars; ++i) {\n      value[i] = interpolationInfo.pointer[startId + i];\n    }\n  };\n  publicAPI.interpolateLinear = (interpolationInfo, point, value) => {\n    const inExt = interpolationInfo.extent;\n    const inInc = interpolationInfo.increments;\n    const numscalars = interpolationInfo.numberOfComponents;\n    const floorX = vtkInterpolationMathFloor(point[0]);\n    const floorY = vtkInterpolationMathFloor(point[1]);\n    const floorZ = vtkInterpolationMathFloor(point[2]);\n    let inIdX0 = floorX.floored;\n    let inIdY0 = floorY.floored;\n    let inIdZ0 = floorZ.floored;\n    const fx = floorX.error;\n    const fy = floorY.error;\n    const fz = floorZ.error;\n    let inIdX1 = inIdX0 + (fx !== 0);\n    let inIdY1 = inIdY0 + (fy !== 0);\n    let inIdZ1 = inIdZ0 + (fz !== 0);\n    switch (interpolationInfo.borderMode) {\n      case ImageBorderMode.REPEAT:\n        inIdX0 = vtkInterpolationMathWrap(inIdX0, inExt[0], inExt[1]);\n        inIdY0 = vtkInterpolationMathWrap(inIdY0, inExt[2], inExt[3]);\n        inIdZ0 = vtkInterpolationMathWrap(inIdZ0, inExt[4], inExt[5]);\n        inIdX1 = vtkInterpolationMathWrap(inIdX1, inExt[0], inExt[1]);\n        inIdY1 = vtkInterpolationMathWrap(inIdY1, inExt[2], inExt[3]);\n        inIdZ1 = vtkInterpolationMathWrap(inIdZ1, inExt[4], inExt[5]);\n        break;\n      case ImageBorderMode.MIRROR:\n        inIdX0 = vtkInterpolationMathMirror(inIdX0, inExt[0], inExt[1]);\n        inIdY0 = vtkInterpolationMathMirror(inIdY0, inExt[2], inExt[3]);\n        inIdZ0 = vtkInterpolationMathMirror(inIdZ0, inExt[4], inExt[5]);\n        inIdX1 = vtkInterpolationMathMirror(inIdX1, inExt[0], inExt[1]);\n        inIdY1 = vtkInterpolationMathMirror(inIdY1, inExt[2], inExt[3]);\n        inIdZ1 = vtkInterpolationMathMirror(inIdZ1, inExt[4], inExt[5]);\n        break;\n      default:\n        inIdX0 = vtkInterpolationMathClamp(inIdX0, inExt[0], inExt[1]);\n        inIdY0 = vtkInterpolationMathClamp(inIdY0, inExt[2], inExt[3]);\n        inIdZ0 = vtkInterpolationMathClamp(inIdZ0, inExt[4], inExt[5]);\n        inIdX1 = vtkInterpolationMathClamp(inIdX1, inExt[0], inExt[1]);\n        inIdY1 = vtkInterpolationMathClamp(inIdY1, inExt[2], inExt[3]);\n        inIdZ1 = vtkInterpolationMathClamp(inIdZ1, inExt[4], inExt[5]);\n        break;\n    }\n    const factX0 = inIdX0 * inInc[0];\n    const factX1 = inIdX1 * inInc[0];\n    const factY0 = inIdY0 * inInc[1];\n    const factY1 = inIdY1 * inInc[1];\n    const factZ0 = inIdZ0 * inInc[2];\n    const factZ1 = inIdZ1 * inInc[2];\n    const i00 = factY0 + factZ0;\n    const i01 = factY0 + factZ1;\n    const i10 = factY1 + factZ0;\n    const i11 = factY1 + factZ1;\n    const rx = 1 - fx;\n    const ry = 1 - fy;\n    const rz = 1 - fz;\n    const ryrz = ry * rz;\n    const fyrz = fy * rz;\n    const ryfz = ry * fz;\n    const fyfz = fy * fz;\n    const inPtr = interpolationInfo.pointer;\n    for (let i = 0; i < numscalars; ++i) {\n      value[i] = rx * (ryrz * inPtr[factX0 + i00 + i * 4] + ryfz * inPtr[factX0 + i01 + i * 4] + fyrz * inPtr[factX0 + i10 + i * 4] + fyfz * inPtr[factX0 + i11 + i * 4]) + fx * (ryrz * inPtr[factX1 + i00 + i * 4] + ryfz * inPtr[factX1 + i01 + i * 4] + fyrz * inPtr[factX1 + i10 + i * 4] + fyfz * inPtr[factX1 + i11 + i * 4]);\n    }\n  };\n  publicAPI.interpolatePoint = (interpolationInfo, point, value) => {\n    switch (model.interpolationMode) {\n      case InterpolationMode.LINEAR:\n        publicAPI.interpolateLinear(interpolationInfo, point, value);\n        break;\n      case InterpolationMode.CUBIC:\n        console.log('CUBIC not implemented');\n        break;\n      case InterpolationMode.NEAREST:\n      default:\n        publicAPI.interpolateNearest(interpolationInfo, point, value);\n        break;\n    }\n  };\n  publicAPI.interpolateRowNearest = (weights, idX, idY, idZ, outPtr, n) => {\n    // TODO check pointers\n    const iX = weights.positions[0].subarray(idX);\n    const iY = weights.positions[1].subarray(idY);\n    const iZ = weights.positions[2].subarray(idZ);\n    const inPtr0 = weights.pointer.subarray(iY[0] + iZ[0]);\n\n    // get the number of components per pixel\n    const numscalars = weights.numberOfComponents;\n\n    // This is a hot loop.\n    for (let i = 0; i < n; ++i) {\n      outPtr.set(inPtr0.subarray(iX[i], numscalars), i * numscalars);\n    }\n  };\n  publicAPI.interpolateRowLinear = (weights, idX, idY, idZ, outPtr, n) => {\n    const stepX = weights.kernelSize[0];\n    const stepY = weights.kernelSize[1];\n    const stepZ = weights.kernelSize[2];\n    const idXtemp = idX * stepX;\n    const idYtemp = idY * stepY;\n    const idZtemp = idZ * stepZ;\n    const fX = weights.weights[0].subarray(idXtemp);\n    const fY = weights.weights[1].subarray(idYtemp);\n    const fZ = weights.weights[2].subarray(idZtemp);\n    const iX = weights.positions[0].subarray(idXtemp);\n    const iY = weights.positions[1].subarray(idYtemp);\n    const iZ = weights.positions[2].subarray(idZtemp);\n    const inPtr = weights.pointer;\n\n    // get the number of components per pixel\n    const numscalars = weights.numberOfComponents;\n\n    // create a 2x2 bilinear kernel in local variables\n    const i00 = iY.subarray(iZ[0]);\n    let i01 = i00;\n    let i10 = i00;\n    let i11 = i00;\n    let ry = 1;\n    let fy = 0;\n    let rz = 1;\n    let fz = 0;\n    if (stepY === 2) {\n      i10 = iY[1].subarray(iZ[0]);\n      i11 = i10;\n      ry = fY[0];\n      fy = fY[1];\n    }\n    if (stepZ === 2) {\n      i01 = iY[0].subarray(iZ[1]);\n      i11 = i01;\n      rz = fZ[0];\n      fz = fZ[1];\n    }\n    if (stepY + stepZ === 4) {\n      i11 = iY[1].subarray(iZ[1]);\n    }\n    const ryrz = ry * rz;\n    const ryfz = ry * fz;\n    const fyrz = fy * rz;\n    const fyfz = fy * fz;\n    if (stepX === 1) {\n      if (fy === 0 && fz === 0) {\n        // no interpolation needed at all\n        for (let i = n; i > 0; --i) {\n          for (let j = 0; j < numscalars; j++) {\n            outPtr[j + n - i] = inPtr[i00 + iX[n - i] + j];\n          }\n        }\n      } else if (fy === 0) {\n        // only need linear z interpolation\n        for (let i = n; i > 0; --i) {\n          for (let j = 0; j < numscalars; j++) {\n            outPtr[j + n - i] = rz * inPtr[iX[n - i] + i00 + j * 4] + fz * inPtr[iX[n - i] + i01 + j * 4];\n          }\n        }\n      } else {\n        // interpolate in y and z but not in x\n        for (let i = n; i > 0; --i) {\n          for (let j = 0; j < numscalars; j++) {\n            outPtr[j + n - i] = ryrz * inPtr[iX[n - i] + i00 + j * 4] + ryfz * inPtr[iX[n - i] + i01 + j * 4] + fyrz * inPtr[iX[n - i] + i10 + j * 4] + fyfz * inPtr[iX[n - i] + i11 + j * 4];\n          }\n        }\n      }\n    } else if (fz === 0) {\n      let x = 0;\n      // bilinear interpolation in x,y\n      for (let i = n; i > 0; --i) {\n        const rx = fX[0 + 2 * x];\n        const fx = fX[1 + 2 * x];\n        const t0 = iX[0 + 2 * x];\n        const t1 = iX[1 + 2 * x];\n        for (let j = 0; j < numscalars; j++) {\n          outPtr[j + n - i] = rx * (ry * inPtr[t0 + i00 + j * 4] + fy * inPtr[t0 + i10 + j * 4]) + fx * (ry * inPtr[t1 + i00 + j * 4] + fy * inPtr[t1 + i10 + j * 4]);\n        }\n        x++;\n      }\n    } else {\n      let x = 0;\n      // do full trilinear interpolation\n      for (let i = n; i > 0; --i) {\n        const rx = fX[0 + 2 * x];\n        const fx = fX[1 + 2 * x];\n        const t0 = iX[0 + 2 * x];\n        const t1 = iX[1 + 2 * x];\n        for (let j = 0; j < numscalars; j++) {\n          outPtr[j] = rx * (ryrz * inPtr[t0 + i00 + j * 4] + ryfz * inPtr[t0 + i01 + j * 4] + fyrz * inPtr[t0 + i10 + j * 4] + fyfz * inPtr[t0 + i11 + j * 4]) + fx * (ryrz * inPtr[t1 + i00 + j * 4] + ryfz * inPtr[t1 + i01 + j * 4] + fyrz * inPtr[t1 + i10 + j * 4] + fyfz * inPtr[t1 + i11 + j * 4]);\n        }\n        x++;\n      }\n    }\n  };\n  publicAPI.interpolateRow = (weights, xIdx, yIdx, zIdx, value, n) => {\n    switch (model.interpolationMode) {\n      case InterpolationMode.LINEAR:\n        publicAPI.interpolateRowLinear(weights, xIdx, yIdx, zIdx, value, n);\n        break;\n      case InterpolationMode.CUBIC:\n        console.log('CUBIC not implemented');\n        break;\n      case InterpolationMode.NEAREST:\n      default:\n        publicAPI.interpolateRowNearest(weights, xIdx, yIdx, zIdx, value, n);\n        break;\n    }\n  };\n  publicAPI.vtkTricubicInterpWeights = f => {\n    const half = 0.5;\n\n    // cubic interpolation\n    const fm1 = f - 1;\n    const fd2 = f * half;\n    const ft3 = f * 3;\n    return [-fd2 * fm1 * fm1, ((ft3 - 2) * fd2 - 1) * fm1, -((ft3 - 4) * f - 1) * fd2, f * fd2 * fm1];\n  };\n  publicAPI.precomputeWeightsForExtent = (matrix, outExt, clipExt) => {\n    const weights = {\n      ...vtkInterpolationWeights.newInstance(),\n      ...model.interpolationInfo\n    };\n    weights.weightType = 'Float32Array';\n    const interpMode = weights.interpolationMode;\n    let validClip = true;\n    for (let j = 0; j < 3; ++j) {\n      // set k to the row for which the element in column j is nonzero\n      let k;\n      for (k = 0; k < 3; ++k) {\n        if (matrix[4 * j + k] !== 0) {\n          break;\n        }\n      }\n\n      // get the extents\n      clipExt[2 * j] = outExt[2 * j];\n      clipExt[2 * j + 1] = outExt[2 * j + 1];\n      const minExt = weights.extent[2 * k];\n      const maxExt = weights.extent[2 * k + 1];\n      const minBounds = model.structuredBounds[2 * k];\n      const maxBounds = model.structuredBounds[2 * k + 1];\n\n      // the kernel size should not exceed the input dimension\n      let step = 1;\n      step = interpMode < InterpolationMode.LINEAR ? step : 2;\n      step = interpMode < InterpolationMode.CUBIC ? step : 4;\n      const inCount = maxExt - minExt + 1;\n      step = step < inCount ? step : inCount;\n\n      // if output pixels lie exactly on top of the input pixels\n      if (Number.isInteger(matrix[4 * j + k]) && Number.isInteger(matrix[4 * k + k])) {\n        step = 1;\n      }\n      const size = step * (outExt[2 * j + 1] - outExt[2 * j] + 1);\n      // TODO: check pointers\n      const positions = new Int16Array(size);\n      // positions -= step*outExt[2 * j];\n      const startPositions = step * outExt[2 * j];\n      let constants = null;\n      if (interpMode !== InterpolationMode.NEAREST) {\n        constants = new Int16Array(size);\n        // constants -= step * outExt[2 * j];\n      }\n\n      weights.kernelSize[j] = step;\n      weights.weightExtent[2 * j] = outExt[2 * j];\n      weights.weightExtent[2 * j + 1] = outExt[2 * j + 1];\n      weights.positions[j] = positions; // TODO: check pointers\n      weights.weights[j] = constants; // TODO: check pointers\n\n      let region = 0;\n      for (let i = outExt[2 * j]; i <= outExt[2 * j + 1]; ++i) {\n        const point = matrix[4 * 3 + k] + i * matrix[4 * j + k];\n        let lcount = step;\n        let inId0 = 0;\n        let f = 0;\n        if (interpMode === InterpolationMode.NEAREST) {\n          inId0 = Math.round(point);\n        } else {\n          const res = vtkInterpolationMathFloor(point);\n          inId0 = res.integer;\n          f = res.error;\n          if (interpMode === InterpolationMode.CUBIC && step !== 1) {\n            inId0--;\n            lcount = 4;\n          }\n        }\n        const inId = [0, 0, 0, 0];\n        let l = 0;\n        switch (weights.borderMode) {\n          case ImageBorderMode.REPEAT:\n            do {\n              inId[l] = vtkInterpolationMathWrap(inId0, minExt, maxExt);\n              inId0++;\n            } while (++l < lcount);\n            break;\n          case ImageBorderMode.MIRROR:\n            do {\n              inId[l] = vtkInterpolationMathMirror(inId0, minExt, maxExt);\n              inId0++;\n            } while (++l < lcount);\n            break;\n          default:\n            do {\n              inId[l] = vtkInterpolationMathClamp(inId0, minExt, maxExt);\n              inId0++;\n            } while (++l < lcount);\n            break;\n        }\n\n        // compute the weights and offsets\n        const inInc = weights.increments[k];\n        positions[step * i - startPositions] = inId[0] * inInc;\n        if (interpMode !== InterpolationMode.NEAREST) {\n          constants[step * i - startPositions] = 1;\n        }\n        if (step > 1) {\n          if (interpMode === InterpolationMode.LINEAR) {\n            positions[step * i + 1 - startPositions] = inId[1] * inInc;\n            constants[step * i - startPositions] = 1.0 - f;\n            constants[step * i + 1 - startPositions] = f;\n          } else if (interpMode === InterpolationMode.CUBIC) {\n            const g = publicAPI.vtkTricubicInterpWeights(f);\n            if (step === 4) {\n              for (let ll = 0; ll < 4; ll++) {\n                positions[step * i + ll - startPositions] = inId[ll] * inInc;\n                constants[step * i + ll - startPositions] = g[ll];\n              }\n            } else {\n              // it gets tricky if there are fewer than 4 slices\n              const gg = [0, 0, 0, 0];\n              for (let ll = 0; ll < 4; ll++) {\n                const rIdx = inId[ll] - minExt;\n                gg[rIdx] += g[ll];\n              }\n              for (let jj = 0; jj < step; jj++) {\n                positions[step * i + jj - startPositions] = minExt + jj;\n                constants[step * i + jj - startPositions] = gg[jj];\n              }\n            }\n          }\n        }\n        if (point >= minBounds && point <= maxBounds) {\n          if (region === 0) {\n            // entering the input extent\n            region = 1;\n            clipExt[2 * j] = i;\n          }\n        } else if (region === 1) {\n          // leaving the input extent\n          region = 2;\n          clipExt[2 * j + 1] = i - 1;\n        }\n      }\n      if (region === 0 || clipExt[2 * j] > clipExt[2 * j + 1]) {\n        // never entered input extent!\n        validClip = false;\n      }\n    }\n    if (!validClip) {\n      // output extent doesn't itersect input extent\n      for (let j = 0; j < 3; j++) {\n        clipExt[2 * j] = outExt[2 * j];\n        clipExt[2 * j + 1] = outExt[2 * j] - 1;\n      }\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  interpolationMode: InterpolationMode.NEAREST\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkAbstractImageInterpolator.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['interpolationMode']);\n\n  // Object specific methods\n  vtkImageInterpolator(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkImageInterpolator');\n\n// ----------------------------------------------------------------------------\n\nvar vtkImageInterpolator$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkImageInterpolator$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n// vtkImagePointDataIterator methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImagePointDataIterator(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImagePointDataIterator');\n  publicAPI.initialize = (image, inExtent, stencil, algorithm) => {\n    const dataExtent = image.getExtent();\n    let extent = inExtent;\n    if (extent == null) {\n      extent = dataExtent;\n    }\n    let emptyExtent = false;\n    for (let i = 0; i < 6; i += 2) {\n      model.extent[i] = Math.max(extent[i], dataExtent[i]);\n      model.extent[i + 1] = Math.min(extent[i + 1], dataExtent[i + 1]);\n      if (model.extent[i] > model.extent[i + 1]) {\n        emptyExtent = true;\n      }\n    }\n    model.rowIncrement = dataExtent[1] - dataExtent[0] + 1;\n    model.sliceIncrement = model.rowIncrement * (dataExtent[3] - dataExtent[2] + 1);\n    let rowSpan;\n    let sliceSpan;\n    let volumeSpan;\n    if (!emptyExtent) {\n      // Compute the span of the image region to be covered.\n      rowSpan = model.extent[1] - model.extent[0] + 1;\n      sliceSpan = model.extent[3] - model.extent[2] + 1;\n      volumeSpan = model.extent[5] - model.extent[4] + 1;\n      model.id = model.extent[0] - dataExtent[0] + (model.extent[2] - dataExtent[2]) * model.rowIncrement + (model.extent[4] - dataExtent[4]) * model.sliceIncrement;\n\n      // Compute the end increments (continuous increments).\n      model.rowEndIncrement = model.rowIncrement - rowSpan;\n      model.sliceEndIncrement = model.rowEndIncrement + model.sliceIncrement - model.rowIncrement * sliceSpan;\n    } else {\n      // Extent is empty, isAtEnd() will immediately return \"true\"\n      rowSpan = 0;\n      sliceSpan = 0;\n      volumeSpan = 0;\n      model.id = 0;\n      model.rowEndIncrement = 0;\n      model.sliceEndIncrement = 0;\n      for (let i = 0; i < 6; i += 2) {\n        model.extent[i] = dataExtent[i];\n        model.extent[i + 1] = dataExtent[i] - 1;\n      }\n    }\n\n    // Get the end pointers for row, slice, and volume.\n    model.spanEnd = model.id + rowSpan;\n    model.rowEnd = model.id + rowSpan;\n    model.sliceEnd = model.id + (model.rowIncrement * sliceSpan - model.rowEndIncrement);\n    model.end = model.id + (model.sliceIncrement * volumeSpan - model.sliceEndIncrement);\n\n    // For keeping track of the current x,y,z index.\n    model.index[0] = model.extent[0];\n    model.index[1] = model.extent[2];\n    model.index[2] = model.extent[4];\n\n    // For resetting the Y index after each slice.\n    model.startY = model.index[1];\n\n    // Code for when a stencil is provided.\n    if (stencil) {\n      model.hasStencil = true;\n      model.inStencil = false;\n      model.spanIndex = 0;\n      const stencilExtent = stencil.getExtent();\n\n      // The stencil has a YZ array of span lists, we need increments\n      // to get to the next Z position in the YZ array.\n      model.spanSliceIncrement = 0;\n      model.spanSliceEndIncrement = 0;\n      if (stencilExtent[3] >= stencilExtent[2] && stencilExtent[5] >= stencilExtent[4]) {\n        model.spanSliceIncrement = stencilExtent[3] - stencilExtent[2] + 1;\n        const botOffset = model.extent[2] - stencilExtent[2];\n        if (botOffset >= 0) {\n          model.spanSliceEndIncrement += botOffset;\n        }\n        const topOffset = stencilExtent[3] - model.extent[3];\n        if (topOffset >= 0) {\n          model.spanSliceEndIncrement += topOffset;\n        }\n      }\n\n      // Find the offset to the start position within the YZ array.\n      let startOffset = 0;\n      const yOffset = model.extent[2] - stencilExtent[2];\n      if (yOffset < 0) {\n        model.extent[2] = stencilExtent[2];\n        // starting before start of stencil: subtract the increment that\n        // will be added in NextSpan() upon entry into stencil extent\n        startOffset -= 1;\n      } else {\n        // starting partway into the stencil, so add an offset\n        startOffset += yOffset;\n      }\n      if (stencilExtent[3] <= model.extent[3]) {\n        model.extent[3] = stencilExtent[3];\n      }\n      const zOffset = model.extent[4] - stencilExtent[4];\n      if (zOffset < 0) {\n        model.extent[4] = stencilExtent[4];\n        // starting before start of stencil: subtract the increment that\n        // will be added in NextSpan() upon entry into stencil extent\n        if (yOffset >= 0) {\n          startOffset -= 1 + model.spanSliceEndIncrement;\n        }\n      } else {\n        // starting partway into the stencil, so add an offset\n        startOffset += zOffset * model.spanSliceIncrement;\n      }\n      if (stencilExtent[5] <= model.extent[5]) {\n        model.extent[5] = stencilExtent[5];\n      }\n      if (model.extent[2] <= model.extent[3] && model.extent[4] <= model.extent[5]) {\n        model.spanCountPointer = stencil.extentListLengths.subarray(startOffset);\n        model.spanListPointer = stencil.extentLists.subarray(startOffset);\n\n        // Get the current position within the span list for the current row\n        if (yOffset >= 0 && zOffset >= 0) {\n          // If starting within stencil extent, check stencil immediately\n          model.inStencil = true;\n          model.setSpanState(model.extent[0]);\n        }\n      } else {\n        model.spanCountPointer = null;\n        model.spanListPointer = null;\n        model.inStencil = false;\n      }\n    } else {\n      model.hasStencil = false;\n      model.inStencil = true;\n      model.spanSliceEndIncrement = 0;\n      model.spanSliceIncrement = 0;\n      model.spanIndex = 0;\n      model.spanCountPointer = null;\n      model.spanListPointer = null;\n    }\n    if (algorithm) {\n      model.algorithm = algorithm;\n      const maxCount = sliceSpan * volumeSpan;\n      model.target = maxCount / 50 + 1;\n      model.count = model.target * 50 - maxCount / model.target * model.target + 1;\n    } else {\n      model.algorithm = null;\n      model.target = 0;\n      model.count = 0;\n    }\n  };\n  publicAPI.setSpanState = idX => {\n    // Find the span that includes idX\n    let inStencil = false;\n    const spans = model.spanListPointer;\n    const n = model.spanCountPointer[0];\n    let i;\n    for (i = 0; i < n; ++i) {\n      if (spans[i] > idX) {\n        break;\n      }\n      inStencil = !inStencil;\n    }\n\n    // Set the primary span state variables\n    model.spanIndex = i;\n    model.inStencil = inStencil;\n\n    // Clamp the span end to MaxX+1\n    let endIdX = model.extent[1] + 1;\n    if (i < n && spans[i] <= model.extent[1]) {\n      endIdX = spans[i];\n    }\n\n    // Compute the pointers for idX and endIdX\n    const rowStart = model.rowEnd - (model.rowIncrement - model.rowEndIncrement);\n    model.id = rowStart + (idX - model.extent[0]);\n    model.spanEnd = rowStart + (endIdX - model.extent[0]);\n  };\n  publicAPI.nextSpan = () => {\n    if (model.spanEnd === model.rowEnd) {\n      let spanIncr = 1;\n      if (model.spanEnd !== model.sliceEnd) {\n        // Move to the next row\n        model.id = model.rowEnd + model.rowEndIncrement;\n        model.rowEnd += model.rowIncrement;\n        model.spanEnd = model.rowEnd;\n        model.index[1]++;\n      } else if (model.spanEnd !== model.end) {\n        // Move to the next slice\n        model.id = model.sliceEnd + model.sliceEndIncrement;\n        model.sliceEnd += model.sliceIncrement;\n        model.rowEnd = model.id + (model.rowIncrement - model.rowEndIncrement);\n        model.spanEnd = model.rowEnd;\n        model.index[1] = model.startY;\n        model.index[2]++;\n        spanIncr += model.spanSliceEndIncrement;\n      } else {\n        // reached End\n        model.id = model.end;\n        return;\n      }\n\n      // Start of next row\n      model.index[0] = model.extent[0];\n      if (model.hasStencil) {\n        if (model.index[1] >= model.extent[2] && model.index[1] <= model.extent[3] && model.index[2] >= model.extent[4] && model.index[2] <= model.extent[5]) {\n          model.spanCountPointer = model.spanCountPointer.subarray(spanIncr);\n          model.spanListPointer = model.spanListPointer.subarray(spanIncr);\n          publicAPI.setSpanState(model.extent[0]);\n        } else {\n          model.inStencil = false;\n        }\n      }\n      if (model.algorithm) {\n        publicAPI.reportProgress();\n      }\n    } else {\n      // Move to the next span in the current row\n      model.id = model.spanEnd;\n      const spanCount = model.spanCountPointer[0];\n      let endIdX = model.extent[1] + 1;\n      model.index[0] = endIdX;\n      if (model.spanIndex < spanCount) {\n        const tmpIdX = model.spanListPointer[model.spanIndex];\n        if (tmpIdX < endIdX) {\n          model.index[0] = tmpIdX;\n        }\n      }\n\n      // Get the index to the start of the span after the next\n      model.spanIndex++;\n      if (model.spanIndex < spanCount) {\n        const tmpIdX = model.spanListPointer[model.spanIndex];\n        if (tmpIdX < endIdX) {\n          endIdX = tmpIdX;\n        }\n      }\n\n      // Compute the end of the span\n      model.spanEnd = model.rowEnd - (model.rowIncrement - model.rowEndIncrement) + (endIdX - model.extent[0]);\n\n      // Flip the state\n      model.inStencil = !model.inStencil;\n    }\n  };\n  publicAPI.isAtEnd = () => model.id === model.end;\n  publicAPI.isInStencil = () => model.inStencil;\n  publicAPI.spanEndId = () => model.spanEnd;\n  publicAPI.reportProgress = () => {};\n  publicAPI.getArray = (array, i) => array.getData().subarray(i * array.getNumberOfComponents());\n  publicAPI.getScalars = function (image) {\n    let i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return publicAPI.getArray(image.getPointData().getScalars(), i);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  spanState: 0,\n  extent: [0, -1, 0, -1, 0, -1],\n  end: 0,\n  spanEnd: 0,\n  rowEnd: 0,\n  sliceEnd: 0,\n  rowIncrement: 0,\n  rowEndIncrement: 0,\n  sliceIncrement: 0,\n  sliceEndIncrement: 0,\n  id: 0,\n  index: [0, 0, 0],\n  startY: 0,\n  hasStencil: false,\n  inStencil: true,\n  spanIndex: 0,\n  spanSliceIncrement: 0,\n  spanSliceEndIncrement: 0,\n  spanCountPointer: null,\n  spanListPointer: null,\n  algorithm: null,\n  target: 0,\n  count: 0\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['id', 'index']);\n\n  // Object specific methods\n  vtkImagePointDataIterator(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkImagePointDataIterator');\n\n// ----------------------------------------------------------------------------\n\nvar vtkImagePointDataIterator$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkImagePointDataIterator$1 as default, extend, newInstance };\n","const SlabMode = {\n  MIN: 0,\n  MAX: 1,\n  MEAN: 2,\n  SUM: 3\n};\nvar Constants = {\n  SlabMode\n};\n\nexport { SlabMode, Constants as default };\n","import { mat4, vec4 } from 'gl-matrix';\nimport { m as macro, v as vtkWarningMacro } from '../../macros2.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport { f as vtkMath } from '../../Common/Core/Math/index.js';\nimport vtkMatrixBuilder from '../../Common/Core/MatrixBuilder.js';\nimport { VtkDataTypes } from '../../Common/Core/DataArray/Constants.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\nimport vtkImageData from '../../Common/DataModel/ImageData.js';\nimport vtkImageInterpolator from './ImageInterpolator.js';\nimport vtkImagePointDataIterator from './ImagePointDataIterator.js';\nimport { InterpolationMode, ImageBorderMode } from './AbstractImageInterpolator/Constants.js';\nimport { vtkInterpolationMathClamp, vtkInterpolationMathFloor, vtkInterpolationMathRound } from './AbstractImageInterpolator/InterpolationInfo.js';\nimport Constants from './ImageReslice/Constants.js';\n\nconst {\n  SlabMode\n} = Constants;\nconst {\n  vtkErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkImageReslice methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageReslice(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageReslice');\n  const superClass = {\n    ...publicAPI\n  };\n  const indexMatrix = mat4.identity(new Float64Array(16));\n  let optimizedTransform = null;\n  function getImageResliceSlabTrap(tmpPtr, inComponents, sampleCount, f) {\n    const n = sampleCount - 1;\n    for (let i = 0; i < inComponents; i += 1) {\n      let result = tmpPtr[i] * 0.5;\n      for (let j = 1; j < n; j += 1) {\n        result += tmpPtr[i + j * inComponents];\n      }\n      result += tmpPtr[i + n * inComponents] * 0.5;\n      tmpPtr[i] = result * f;\n    }\n  }\n  function getImageResliceSlabSum(tmpPtr, inComponents, sampleCount, f) {\n    for (let i = 0; i < inComponents; i += 1) {\n      let result = tmpPtr[i];\n      for (let j = 1; j < sampleCount; j += 1) {\n        result += tmpPtr[i + j * inComponents];\n      }\n      tmpPtr[i] = result * f;\n    }\n  }\n  function getImageResliceCompositeMinValue(tmpPtr, inComponents, sampleCount) {\n    for (let i = 0; i < inComponents; i += 1) {\n      let result = tmpPtr[i];\n      for (let j = 1; j < sampleCount; j += 1) {\n        result = Math.min(result, tmpPtr[i + j * inComponents]);\n      }\n      tmpPtr[i] = result;\n    }\n  }\n  function getImageResliceCompositeMaxValue(tmpPtr, inComponents, sampleCount) {\n    for (let i = 0; i < inComponents; i += 1) {\n      let result = tmpPtr[i];\n      for (let j = 1; j < sampleCount; j += 1) {\n        result = Math.max(result, tmpPtr[i + j * inComponents]);\n      }\n      tmpPtr[i] = result;\n    }\n  }\n  function getImageResliceCompositeMeanValue(tmpPtr, inComponents, sampleCount) {\n    const f = 1.0 / sampleCount;\n    getImageResliceSlabSum(tmpPtr, inComponents, sampleCount, f);\n  }\n  function getImageResliceCompositeMeanTrap(tmpPtr, inComponents, sampleCount) {\n    const f = 1.0 / (sampleCount - 1);\n    getImageResliceSlabTrap(tmpPtr, inComponents, sampleCount, f);\n  }\n  function getImageResliceCompositeSumValue(tmpPtr, inComponents, sampleCount) {\n    const f = 1.0;\n    getImageResliceSlabSum(tmpPtr, inComponents, sampleCount, f);\n  }\n  function getImageResliceCompositeSumTrap(tmpPtr, inComponents, sampleCount) {\n    const f = 1.0;\n    getImageResliceSlabTrap(tmpPtr, inComponents, sampleCount, f);\n  }\n  publicAPI.getMTime = () => {\n    let mTime = superClass.getMTime();\n    if (model.resliceTransform) {\n      mTime = Math.max(mTime, model.resliceTransform.getMTime());\n    }\n    return mTime;\n  };\n  publicAPI.setResliceAxes = resliceAxes => {\n    if (!model.resliceAxes) {\n      model.resliceAxes = mat4.identity(new Float64Array(16));\n    }\n    if (!mat4.exactEquals(model.resliceAxes, resliceAxes)) {\n      mat4.copy(model.resliceAxes, resliceAxes);\n      publicAPI.modified();\n      return true;\n    }\n    return null;\n  };\n  publicAPI.requestData = (inData, outData) => {\n    // implement requestData\n    const input = inData[0];\n    if (!input) {\n      vtkErrorMacro('Invalid or missing input');\n      return;\n    }\n\n    // console.time('reslice');\n\n    // Retrieve output and volume data\n    const origin = input.getOrigin();\n    const inSpacing = input.getSpacing();\n    const dims = input.getDimensions();\n    const inScalars = input.getPointData().getScalars();\n    const inWholeExt = [0, dims[0] - 1, 0, dims[1] - 1, 0, dims[2] - 1];\n    const outOrigin = [0, 0, 0];\n    const outSpacing = [1, 1, 1];\n    const outWholeExt = [0, 0, 0, 0, 0, 0];\n    const outDims = [0, 0, 0];\n    const matrix = mat4.identity(new Float64Array(16));\n    if (model.resliceAxes) {\n      mat4.multiply(matrix, matrix, model.resliceAxes);\n    }\n    const imatrix = new Float64Array(16);\n    mat4.invert(imatrix, matrix);\n    const inCenter = [origin[0] + 0.5 * (inWholeExt[0] + inWholeExt[1]) * inSpacing[0], origin[1] + 0.5 * (inWholeExt[2] + inWholeExt[3]) * inSpacing[1], origin[2] + 0.5 * (inWholeExt[4] + inWholeExt[5]) * inSpacing[2]];\n    let maxBounds = null;\n    if (model.autoCropOutput) {\n      maxBounds = publicAPI.getAutoCroppedOutputBounds(input);\n    }\n    for (let i = 0; i < 3; i++) {\n      let s = 0; // default output spacing\n      let d = 0; // default linear dimension\n      let e = 0; // default extent start\n      let c = 0; // transformed center-of-volume\n\n      if (model.transformInputSampling) {\n        let r = 0.0;\n        for (let j = 0; j < 3; j++) {\n          c += imatrix[4 * j + i] * (inCenter[j] - matrix[4 * 3 + j]);\n          const tmp = matrix[4 * i + j] * matrix[4 * i + j];\n          s += tmp * Math.abs(inSpacing[j]);\n          d += tmp * (inWholeExt[2 * j + 1] - inWholeExt[2 * j]) * Math.abs(inSpacing[j]);\n          e += tmp * inWholeExt[2 * j];\n          r += tmp;\n        }\n        s /= r;\n        d /= r * Math.sqrt(r);\n        e /= r;\n      } else {\n        c = inCenter[i];\n        s = inSpacing[i];\n        d = (inWholeExt[2 * i + 1] - inWholeExt[2 * i]) * s;\n        e = inWholeExt[2 * i];\n      }\n      if (model.outputSpacing == null) {\n        outSpacing[i] = s;\n      } else {\n        outSpacing[i] = model.outputSpacing[i];\n      }\n      if (i >= model.outputDimensionality) {\n        outWholeExt[2 * i] = 0;\n        outWholeExt[2 * i + 1] = 0;\n      } else if (model.outputExtent == null) {\n        if (model.autoCropOutput) {\n          d = maxBounds[2 * i + 1] - maxBounds[2 * i];\n        }\n        outWholeExt[2 * i] = Math.round(e);\n        outWholeExt[2 * i + 1] = Math.round(outWholeExt[2 * i] + Math.abs(d / outSpacing[i]));\n      } else {\n        outWholeExt[2 * i] = model.outputExtent[2 * i];\n        outWholeExt[2 * i + 1] = model.outputExtent[2 * i + 1];\n      }\n      if (i >= model.outputDimensionality) {\n        outOrigin[i] = 0;\n      } else if (model.outputOrigin == null) {\n        if (model.autoCropOutput) {\n          // set origin so edge of extent is edge of bounds\n          outOrigin[i] = maxBounds[2 * i] - outWholeExt[2 * i] * outSpacing[i];\n        } else {\n          // center new bounds over center of input bounds\n          outOrigin[i] = c - 0.5 * (outWholeExt[2 * i] + outWholeExt[2 * i + 1]) * outSpacing[i];\n        }\n      } else {\n        outOrigin[i] = model.outputOrigin[i];\n      }\n      outDims[i] = outWholeExt[2 * i + 1] - outWholeExt[2 * i] + 1;\n    }\n    let dataType = inScalars.getDataType();\n    if (model.outputScalarType) {\n      dataType = model.outputScalarType;\n    }\n    const numComponents = input.getPointData().getScalars().getNumberOfComponents(); // or s.numberOfComponents;\n\n    const outScalarsData = macro.newTypedArray(dataType, outDims[0] * outDims[1] * outDims[2] * numComponents);\n    const outScalars = vtkDataArray.newInstance({\n      name: 'Scalars',\n      values: outScalarsData,\n      numberOfComponents: numComponents\n    });\n\n    // Update output\n    const output = vtkImageData.newInstance();\n    output.setDimensions(outDims);\n    output.setOrigin(outOrigin);\n    output.setSpacing(outSpacing);\n    if (model.outputDirection) {\n      output.setDirection(model.outputDirection);\n    }\n    output.getPointData().setScalars(outScalars);\n    publicAPI.getIndexMatrix(input, output);\n    let interpolationMode = model.interpolationMode;\n    model.usePermuteExecute = false;\n    if (model.optimization) {\n      if (optimizedTransform == null && model.slabSliceSpacingFraction === 1.0 && model.interpolator.isSeparable() && publicAPI.isPermutationMatrix(indexMatrix)) {\n        model.usePermuteExecute = true;\n        if (publicAPI.canUseNearestNeighbor(indexMatrix, outWholeExt)) {\n          interpolationMode = InterpolationMode.NEAREST;\n        }\n      }\n    }\n    model.interpolator.setInterpolationMode(interpolationMode);\n    let borderMode = ImageBorderMode.CLAMP;\n    borderMode = model.wrap ? ImageBorderMode.REPEAT : borderMode;\n    borderMode = model.mirror ? ImageBorderMode.MIRROR : borderMode;\n    model.interpolator.setBorderMode(borderMode);\n    const mintol = 7.62939453125e-6;\n    const maxtol = 2.0 * 2147483647;\n    let tol = 0.5 * model.border;\n    tol = borderMode === ImageBorderMode.CLAMP ? tol : maxtol;\n    tol = tol > mintol ? tol : mintol;\n    model.interpolator.setTolerance(tol);\n    model.interpolator.initialize(input);\n    publicAPI.vtkImageResliceExecute(input, output);\n    model.interpolator.releaseData();\n    outData[0] = output;\n\n    // console.timeEnd('reslice');\n  };\n\n  publicAPI.vtkImageResliceExecute = (input, output) => {\n    // const outDims = output.getDimensions();\n    const inScalars = input.getPointData().getScalars();\n    const outScalars = output.getPointData().getScalars();\n    let outPtr = outScalars.getData();\n    const outExt = output.getExtent();\n    const newmat = indexMatrix;\n\n    // multiple samples for thick slabs\n    const nsamples = Math.max(model.slabNumberOfSlices, 1);\n\n    // spacing between slab samples (as a fraction of slice spacing).\n    const slabSampleSpacing = model.slabSliceSpacingFraction;\n\n    // check for perspective transformation\n    const perspective = publicAPI.isPerspectiveMatrix(newmat);\n\n    // extra scalar info for nearest-neighbor optimization\n    let inPtr = inScalars.getData();\n    const inputScalarSize = 1; // inScalars.getElementComponentSize(); // inScalars.getDataTypeSize();\n    const inputScalarType = inScalars.getDataType();\n    const inComponents = inScalars.getNumberOfComponents(); // interpolator.GetNumberOfComponents();\n    const componentOffset = model.interpolator.getComponentOffset();\n    const borderMode = model.interpolator.getBorderMode();\n    const inDims = input.getDimensions();\n    const inExt = [0, inDims[0] - 1, 0, inDims[1] - 1, 0, inDims[2] - 1]; // interpolator->GetExtent();\n    const inInc = [0, 0, 0];\n    inInc[0] = inScalars.getNumberOfComponents();\n    inInc[1] = inInc[0] * inDims[0];\n    inInc[2] = inInc[1] * inDims[1];\n    const fullSize = inDims[0] * inDims[1] * inDims[2];\n    if (componentOffset > 0 && componentOffset + inComponents < inInc[0]) {\n      inPtr = inPtr.subarray(inputScalarSize * componentOffset);\n    }\n    let interpolationMode = InterpolationMode.NEAREST;\n    if (model.interpolator.isA('vtkImageInterpolator')) {\n      interpolationMode = model.interpolator.getInterpolationMode();\n    }\n    const convertScalars = null;\n    const rescaleScalars = model.scalarShift !== 0.0 || model.scalarScale !== 1.0;\n\n    // is nearest neighbor optimization possible?\n    const optimizeNearest = interpolationMode === InterpolationMode.NEAREST && borderMode === ImageBorderMode.CLAMP && !(optimizedTransform != null || perspective || convertScalars != null || rescaleScalars) && inputScalarType === outScalars.getDataType() && fullSize === inScalars.getNumberOfTuples() && model.border === true && nsamples <= 1;\n\n    // get pixel information\n    const scalarType = outScalars.getDataType();\n    const scalarSize = 1; // outScalars.getElementComponentSize() // outScalars.scalarSize;\n    const outComponents = outScalars.getNumberOfComponents();\n\n    // break matrix into a set of axes plus an origin\n    // (this allows us to calculate the transform Incrementally)\n    const xAxis = [0, 0, 0, 0];\n    const yAxis = [0, 0, 0, 0];\n    const zAxis = [0, 0, 0, 0];\n    const origin = [0, 0, 0, 0];\n    for (let i = 0; i < 4; ++i) {\n      xAxis[i] = newmat[4 * 0 + i];\n      yAxis[i] = newmat[4 * 1 + i];\n      zAxis[i] = newmat[4 * 2 + i];\n      origin[i] = newmat[4 * 3 + i];\n    }\n\n    // allocate an output row of type double\n    let floatPtr = null;\n    if (!optimizeNearest) {\n      floatPtr = new Float64Array(inComponents * (outExt[1] - outExt[0] + nsamples));\n    }\n    const background = macro.newTypedArray(inputScalarType, model.backgroundColor);\n\n    // set color for area outside of input volume extent\n    // void *background;\n    // vtkAllocBackgroundPixel(&background,\n    //    self->GetBackgroundColor(), scalarType, scalarSize, outComponents);\n\n    // get various helper functions\n    const forceClamping = interpolationMode > InterpolationMode.LINEAR || nsamples > 1 && model.slabMode === SlabMode.SUM;\n    const convertpixels = publicAPI.getConversionFunc(inputScalarType, scalarType, model.scalarShift, model.scalarScale, forceClamping);\n    const setpixels = publicAPI.getSetPixelsFunc(scalarType, scalarSize, outComponents, outPtr);\n    const composite = publicAPI.getCompositeFunc(model.slabMode, model.slabTrapezoidIntegration);\n\n    // create some variables for when we march through the data\n    let idY = outExt[2] - 1;\n    let idZ = outExt[4] - 1;\n    const inPoint0 = [0.0, 0.0, 0.0, 0.0];\n    const inPoint1 = [0.0, 0.0, 0.0, 0.0];\n\n    // create an iterator to march through the data\n    const iter = vtkImagePointDataIterator.newInstance();\n    iter.initialize(output, outExt, model.stencil, null);\n    const outPtr0 = iter.getScalars(output, 0);\n    let outPtrIndex = 0;\n    const outTmp = macro.newTypedArray(scalarType, vtkBoundingBox.getDiagonalLength(outExt) * outComponents * 2);\n    const interpolatedPtr = new Float64Array(inComponents * nsamples);\n    const interpolatedPoint = new Float64Array(inComponents);\n    for (; !iter.isAtEnd(); iter.nextSpan()) {\n      const span = iter.spanEndId() - iter.getId();\n      outPtrIndex = iter.getId() * scalarSize * outComponents;\n      if (!iter.isInStencil()) {\n        // clear any regions that are outside the stencil\n        const n = setpixels(outTmp, background, outComponents, span);\n        for (let i = 0; i < n; ++i) {\n          outPtr0[outPtrIndex++] = outTmp[i];\n        }\n      } else {\n        // get output index, and compute position in input image\n        const outIndex = iter.getIndex();\n\n        // if Z index increased, then advance position along Z axis\n        if (outIndex[2] > idZ) {\n          idZ = outIndex[2];\n          inPoint0[0] = origin[0] + idZ * zAxis[0];\n          inPoint0[1] = origin[1] + idZ * zAxis[1];\n          inPoint0[2] = origin[2] + idZ * zAxis[2];\n          inPoint0[3] = origin[3] + idZ * zAxis[3];\n          idY = outExt[2] - 1;\n        }\n\n        // if Y index increased, then advance position along Y axis\n        if (outIndex[1] > idY) {\n          idY = outIndex[1];\n          inPoint1[0] = inPoint0[0] + idY * yAxis[0];\n          inPoint1[1] = inPoint0[1] + idY * yAxis[1];\n          inPoint1[2] = inPoint0[2] + idY * yAxis[2];\n          inPoint1[3] = inPoint0[3] + idY * yAxis[3];\n        }\n\n        // march through one row of the output image\n        const idXmin = outIndex[0];\n        const idXmax = idXmin + span - 1;\n        if (!optimizeNearest) {\n          let wasInBounds = 1;\n          let isInBounds = 1;\n          let startIdX = idXmin;\n          let idX = idXmin;\n          const tmpPtr = floatPtr;\n          let pixelIndex = 0;\n          while (startIdX <= idXmax) {\n            for (; idX <= idXmax && isInBounds === wasInBounds; idX++) {\n              const inPoint2 = [inPoint1[0] + idX * xAxis[0], inPoint1[1] + idX * xAxis[1], inPoint1[2] + idX * xAxis[2], inPoint1[3] + idX * xAxis[3]];\n              const inPoint3 = [0, 0, 0, 0];\n              let inPoint = inPoint2;\n              isInBounds = false;\n              let interpolatedPtrIndex = 0;\n              for (let sample = 0; sample < nsamples; ++sample) {\n                if (nsamples > 1) {\n                  let s = sample - 0.5 * (nsamples - 1);\n                  s *= slabSampleSpacing;\n                  inPoint3[0] = inPoint2[0] + s * zAxis[0];\n                  inPoint3[1] = inPoint2[1] + s * zAxis[1];\n                  inPoint3[2] = inPoint2[2] + s * zAxis[2];\n                  inPoint3[3] = inPoint2[3] + s * zAxis[3];\n                  inPoint = inPoint3;\n                }\n                if (perspective) {\n                  // only do perspective if necessary\n                  const f = 1 / inPoint[3];\n                  inPoint[0] *= f;\n                  inPoint[1] *= f;\n                  inPoint[2] *= f;\n                }\n                if (optimizedTransform !== null) {\n                  // get the input origin and spacing for conversion purposes\n                  const inOrigin = model.interpolator.getOrigin();\n                  const inSpacing = model.interpolator.getSpacing();\n                  const inInvSpacing = [1.0 / inSpacing[0], 1.0 / inSpacing[1], 1.0 / inSpacing[2]];\n\n                  // apply the AbstractTransform if there is one\n                  // TBD: handle inDirection\n                  publicAPI.applyTransform(optimizedTransform, inPoint, inOrigin, inInvSpacing);\n                }\n                if (model.interpolator.checkBoundsIJK(inPoint)) {\n                  // do the interpolation\n                  isInBounds = 1;\n                  model.interpolator.interpolateIJK(inPoint, interpolatedPoint);\n                  for (let i = 0; i < inComponents; ++i) {\n                    interpolatedPtr[interpolatedPtrIndex++] = interpolatedPoint[i];\n                  }\n                }\n              }\n              if (interpolatedPtrIndex > inComponents) {\n                composite(interpolatedPtr, inComponents, interpolatedPtrIndex / inComponents);\n              }\n              for (let i = 0; i < inComponents; ++i) {\n                tmpPtr[pixelIndex++] = interpolatedPtr[i];\n              }\n\n              // set \"was in\" to \"is in\" if first pixel\n              wasInBounds = idX > idXmin ? wasInBounds : isInBounds;\n            }\n\n            // write a segment to the output\n            const endIdX = idX - 1 - (isInBounds !== wasInBounds);\n            const numpixels = endIdX - startIdX + 1;\n            let n = 0;\n            if (wasInBounds) {\n              if (rescaleScalars) {\n                publicAPI.rescaleScalars(floatPtr, inComponents, idXmax - idXmin + 1, model.scalarShift, model.scalarScale);\n              }\n              {\n                n = convertpixels(outTmp, floatPtr.subarray(startIdX * inComponents), outComponents, numpixels);\n              }\n            } else {\n              n = setpixels(outTmp, background, outComponents, numpixels);\n            }\n            for (let i = 0; i < n; ++i) {\n              outPtr0[outPtrIndex++] = outTmp[i];\n            }\n            startIdX += numpixels;\n            wasInBounds = isInBounds;\n          }\n        } else {\n          // optimize for nearest-neighbor interpolation\n          const inPtrTmp0 = inPtr;\n          const outPtrTmp = outPtr;\n          const inIncX = inInc[0] * inputScalarSize;\n          const inIncY = inInc[1] * inputScalarSize;\n          const inIncZ = inInc[2] * inputScalarSize;\n          const inExtX = inExt[1] - inExt[0] + 1;\n          const inExtY = inExt[3] - inExt[2] + 1;\n          const inExtZ = inExt[5] - inExt[4] + 1;\n          let startIdX = idXmin;\n          let endIdX = idXmin - 1;\n          let isInBounds = false;\n          const bytesPerPixel = inputScalarSize * inComponents;\n          for (let iidX = idXmin; iidX <= idXmax; iidX++) {\n            const inPoint = [inPoint1[0] + iidX * xAxis[0], inPoint1[1] + iidX * xAxis[1], inPoint1[2] + iidX * xAxis[2]];\n            const inIdX = vtkInterpolationMathRound(inPoint[0]) - inExt[0];\n            const inIdY = vtkInterpolationMathRound(inPoint[1]) - inExt[2];\n            const inIdZ = vtkInterpolationMathRound(inPoint[2]) - inExt[4];\n            if (inIdX >= 0 && inIdX < inExtX && inIdY >= 0 && inIdY < inExtY && inIdZ >= 0 && inIdZ < inExtZ) {\n              if (!isInBounds) {\n                // clear leading out-of-bounds pixels\n                startIdX = iidX;\n                isInBounds = true;\n                const n = setpixels(outTmp, background, outComponents, startIdX - idXmin);\n                for (let i = 0; i < n; ++i) {\n                  outPtr0[outPtrIndex++] = outTmp[i];\n                }\n              }\n              // set the final index that was within input bounds\n              endIdX = iidX;\n\n              // perform nearest-neighbor interpolation via pixel copy\n              let offset = inIdX * inIncX + inIdY * inIncY + inIdZ * inIncZ;\n\n              // when memcpy is used with a constant size, the compiler will\n              // optimize away the function call and use the minimum number\n              // of instructions necessary to perform the copy\n              switch (bytesPerPixel) {\n                case 1:\n                  outPtr0[outPtrIndex++] = inPtrTmp0[offset];\n                  break;\n                case 2:\n                case 3:\n                case 4:\n                case 8:\n                case 12:\n                case 16:\n                  for (let i = 0; i < bytesPerPixel; ++i) {\n                    outPtr0[outPtrIndex++] = inPtrTmp0[offset + i];\n                  }\n                  break;\n                default:\n                  {\n                    // TODO: check bytes\n                    let oc = 0;\n                    do {\n                      outPtr0[outPtrIndex++] = inPtrTmp0[offset++];\n                    } while (++oc !== bytesPerPixel);\n                    break;\n                  }\n              }\n            } else if (isInBounds) {\n              // leaving input bounds\n              break;\n            }\n          }\n\n          // clear trailing out-of-bounds pixels\n          outPtr = outPtrTmp;\n          const n = setpixels(outTmp, background, outComponents, idXmax - endIdX);\n          for (let i = 0; i < n; ++i) {\n            outPtr0[outPtrIndex++] = outTmp[i];\n          }\n        }\n      }\n    }\n  };\n  /**\n   * The transform matrix supplied by the user converts output coordinates\n   * to input coordinates.\n   * To speed up the pixel lookup, the following function provides a\n   * matrix which converts output pixel indices to input pixel indices.\n   * This will also concatenate the ResliceAxes and the ResliceTransform\n   * if possible (if the ResliceTransform is a 4x4 matrix transform).\n   * If it does, this->OptimizedTransform will be set to nullptr, otherwise\n   * this->OptimizedTransform will be equal to this->ResliceTransform.\n   * @param {vtkPolyData} input\n   * @param {vtkPolyData} output\n   * @returns\n   */\n  publicAPI.getIndexMatrix = (input, output) => {\n    const transform = mat4.identity(new Float64Array(16));\n    optimizedTransform = null;\n    if (model.resliceAxes) {\n      mat4.copy(transform, model.resliceAxes);\n    }\n    if (model.resliceTransform) {\n      if (model.resliceTransform.isA('vtkHomogeneousTransform')) {\n        mat4.multiply(transform, model.resliceTransform.getMatrix(), transform);\n      } else {\n        // TODO\n        vtkWarningMacro('Non homogeneous transform have not yet been ported');\n      }\n    }\n\n    // the outMatrix takes OutputData indices to OutputData coordinates,\n    const outMatrix = output.getIndexToWorld();\n    mat4.multiply(transform, transform, outMatrix);\n\n    // the inMatrix takes InputData coordinates to InputData indices\n    // the optimizedTransform requires data coords, not index coords, as its input\n    if (optimizedTransform == null) {\n      const inMatrix = input.getWorldToIndex();\n      mat4.multiply(transform, inMatrix, transform);\n    }\n    mat4.copy(indexMatrix, transform);\n    return indexMatrix;\n  };\n  publicAPI.getAutoCroppedOutputBounds = input => {\n    const inOrigin = input.getOrigin();\n    const inSpacing = input.getSpacing();\n    const inDirection = input.getDirection();\n    const dims = input.getDimensions();\n    const inWholeExt = [0, dims[0] - 1, 0, dims[1] - 1, 0, dims[2] - 1];\n    const matrix = new Float64Array(16);\n    if (model.resliceAxes) {\n      mat4.invert(matrix, model.resliceAxes);\n    } else {\n      mat4.identity(matrix);\n    }\n    let transform = null;\n    if (model.resliceTransform) {\n      transform = model.resliceTransform.getInverse();\n    }\n    let imageTransform = null;\n    if (!vtkMath.isIdentity3x3(inDirection)) {\n      imageTransform = vtkMatrixBuilder.buildFromRadian().translate(inOrigin[0], inOrigin[1], inOrigin[2]).multiply3x3(inDirection).translate(-inOrigin[0], -inOrigin[1], -inOrigin[2]).invert().getMatrix();\n    }\n    const bounds = [Number.MAX_VALUE, -Number.MAX_VALUE, Number.MAX_VALUE, -Number.MAX_VALUE, Number.MAX_VALUE, -Number.MAX_VALUE];\n    const point = [0, 0, 0, 0];\n    for (let i = 0; i < 8; ++i) {\n      point[0] = inOrigin[0] + inWholeExt[i % 2] * inSpacing[0];\n      point[1] = inOrigin[1] + inWholeExt[2 + Math.floor(i / 2) % 2] * inSpacing[1];\n      point[2] = inOrigin[2] + inWholeExt[4 + Math.floor(i / 4) % 2] * inSpacing[2];\n      point[3] = 1.0;\n      if (imageTransform) {\n        vec4.transformMat4(point, point, imageTransform);\n      }\n      if (model.resliceTransform) {\n        transform.transformPoint(point, point);\n      }\n      vec4.transformMat4(point, point, matrix);\n      const f = 1.0 / point[3];\n      point[0] *= f;\n      point[1] *= f;\n      point[2] *= f;\n      for (let j = 0; j < 3; ++j) {\n        if (point[j] > bounds[2 * j + 1]) {\n          bounds[2 * j + 1] = point[j];\n        }\n        if (point[j] < bounds[2 * j]) {\n          bounds[2 * j] = point[j];\n        }\n      }\n    }\n    return bounds;\n  };\n  publicAPI.getDataTypeMinMax = dataType => {\n    switch (dataType) {\n      case 'Int8Array':\n        return {\n          min: -128,\n          max: 127\n        };\n      case 'Int16Array':\n        return {\n          min: -32768,\n          max: 32767\n        };\n      case 'Uint16Array':\n        return {\n          min: 0,\n          max: 65535\n        };\n      case 'Int32Array':\n        return {\n          min: -2147483648,\n          max: 2147483647\n        };\n      case 'Uint32Array':\n        return {\n          min: 0,\n          max: 4294967295\n        };\n      case 'Float32Array':\n        return {\n          min: -1.2e38,\n          max: 1.2e38\n        };\n      case 'Float64Array':\n        return {\n          min: -1.2e38,\n          max: 1.2e38\n        };\n      case 'Uint8Array':\n      case 'Uint8ClampedArray':\n      default:\n        return {\n          min: 0,\n          max: 255\n        };\n    }\n  };\n  publicAPI.clamp = (outPtr, inPtr, numscalars, n, min, max) => {\n    const count = n * numscalars;\n    for (let i = 0; i < count; ++i) {\n      outPtr[i] = vtkInterpolationMathClamp(inPtr[i], min, max);\n    }\n    return count;\n  };\n  publicAPI.convert = (outPtr, inPtr, numscalars, n) => {\n    const count = n * numscalars;\n    for (let i = 0; i < count; ++i) {\n      outPtr[i] = Math.round(inPtr[i]);\n    }\n    return count;\n  };\n  publicAPI.getConversionFunc = (inputType, dataType, scalarShift, scalarScale, forceClamping) => {\n    let useClamping = forceClamping;\n    if (dataType !== VtkDataTypes.FLOAT && dataType !== VtkDataTypes.DOUBLE && !forceClamping) {\n      const inMinMax = publicAPI.getDataTypeMinMax(inputType);\n      let checkMin = (inMinMax.min + scalarShift) * scalarScale;\n      let checkMax = (inMinMax.max + scalarShift) * scalarScale;\n      const outMinMax = publicAPI.getDataTypeMinMax(dataType);\n      const outputMin = outMinMax.min;\n      const outputMax = outMinMax.max;\n      if (checkMin > checkMax) {\n        const tmp = checkMax;\n        checkMax = checkMin;\n        checkMin = tmp;\n      }\n      useClamping = checkMin < outputMin || checkMax > outputMax;\n    }\n    if (useClamping && dataType !== VtkDataTypes.FLOAT && dataType !== VtkDataTypes.DOUBLE) {\n      const minMax = publicAPI.getDataTypeMinMax(dataType);\n      const clamp = (outPtr, inPtr, numscalars, n) => publicAPI.clamp(outPtr, inPtr, numscalars, n, minMax.min, minMax.max);\n      return clamp;\n    }\n    return publicAPI.convert;\n  };\n  publicAPI.set = (outPtr, inPtr, numscalars, n) => {\n    const count = numscalars * n;\n    for (let i = 0; i < n; ++i) {\n      outPtr[i] = inPtr[i];\n    }\n    return count;\n  };\n  publicAPI.set1 = (outPtr, inPtr, numscalars, n) => {\n    outPtr.fill(inPtr[0], 0, n);\n    return n;\n  };\n  publicAPI.getSetPixelsFunc = (dataType, dataSize, numscalars, dataPtr) => numscalars === 1 ? publicAPI.set1 : publicAPI.set;\n  publicAPI.getCompositeFunc = (slabMode, slabTrapezoidIntegration) => {\n    let composite = null;\n    // eslint-disable-next-line default-case\n    switch (slabMode) {\n      case SlabMode.MIN:\n        composite = getImageResliceCompositeMinValue;\n        break;\n      case SlabMode.MAX:\n        composite = getImageResliceCompositeMaxValue;\n        break;\n      case SlabMode.MEAN:\n        if (slabTrapezoidIntegration) {\n          composite = getImageResliceCompositeMeanTrap;\n        } else {\n          composite = getImageResliceCompositeMeanValue;\n        }\n        break;\n      case SlabMode.SUM:\n        if (slabTrapezoidIntegration) {\n          composite = getImageResliceCompositeSumTrap;\n        } else {\n          composite = getImageResliceCompositeSumValue;\n        }\n        break;\n    }\n    return composite;\n  };\n  publicAPI.applyTransform = (newTrans, inPoint, inOrigin, inInvSpacing) => {\n    inPoint[3] = 1;\n    vec4.transformMat4(inPoint, inPoint, newTrans);\n    inPoint[0] -= inOrigin[0];\n    inPoint[1] -= inOrigin[1];\n    inPoint[2] -= inOrigin[2];\n    inPoint[0] *= inInvSpacing[0];\n    inPoint[1] *= inInvSpacing[1];\n    inPoint[2] *= inInvSpacing[2];\n  };\n  publicAPI.rescaleScalars = (floatData, components, n, scalarShift, scalarScale) => {\n    const m = n * components;\n    for (let i = 0; i < m; ++i) {\n      floatData[i] = (floatData[i] + scalarShift) * scalarScale;\n    }\n  };\n  publicAPI.isPermutationMatrix = matrix => {\n    for (let i = 0; i < 3; i++) {\n      if (matrix[4 * i + 3] !== 0) {\n        return false;\n      }\n    }\n    if (matrix[4 * 3 + 3] !== 1) {\n      return false;\n    }\n    for (let j = 0; j < 3; j++) {\n      let k = 0;\n      for (let i = 0; i < 3; i++) {\n        if (matrix[4 * j + i] !== 0) {\n          k++;\n        }\n      }\n      if (k !== 1) {\n        return 0;\n      }\n    }\n    return 1;\n  };\n\n  // TODO: to move in vtkMath and add tolerance\n  publicAPI.isIdentityMatrix = matrix => {\n    for (let i = 0; i < 4; ++i) {\n      for (let j = 0; j < 4; ++j) {\n        if ((i === j ? 1.0 : 0.0) !== matrix[4 * j + i]) {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n  publicAPI.isPerspectiveMatrix = matrix => matrix[4 * 0 + 3] !== 0 || matrix[4 * 1 + 3] !== 0 || matrix[4 * 2 + 3] !== 0 || matrix[4 * 3 + 3] !== 1;\n  publicAPI.canUseNearestNeighbor = (matrix, outExt) => {\n    // loop through dimensions\n    for (let i = 0; i < 3; i++) {\n      let j;\n      for (j = 0; j < 3; j++) {\n        if (matrix[4 * j + i] !== 0) {\n          break;\n        }\n      }\n      if (j >= 3) {\n        return 0;\n      }\n      let x = matrix[4 * j + i];\n      let y = matrix[4 * 3 + i];\n      if (outExt[2 * j] === outExt[2 * j + 1]) {\n        y += x * outExt[2 * i];\n        x = 0;\n      }\n      const fx = vtkInterpolationMathFloor(x).error;\n      const fy = vtkInterpolationMathFloor(y).error;\n      if (fx !== 0 || fy !== 0) {\n        return 0;\n      }\n    }\n    return 1;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  transformInputSampling: true,\n  autoCropOutput: false,\n  outputDimensionality: 3,\n  outputSpacing: null,\n  // automatically computed if null\n  outputOrigin: null,\n  // automatically computed if null\n  outputDirection: null,\n  // identity if null\n  outputExtent: null,\n  // automatically computed if null\n  outputScalarType: null,\n  wrap: false,\n  // don't wrap\n  mirror: false,\n  // don't mirror\n  border: true,\n  // apply a border\n  interpolationMode: InterpolationMode.NEAREST,\n  // only NEAREST supported so far\n  slabMode: SlabMode.MIN,\n  slabTrapezoidIntegration: false,\n  slabNumberOfSlices: 1,\n  slabSliceSpacingFraction: 1,\n  optimization: false,\n  // not supported yet\n  scalarShift: 0,\n  // for rescaling the data\n  scalarScale: 1,\n  backgroundColor: [0, 0, 0, 0],\n  resliceAxes: null,\n  // resliceTransform: null,\n  interpolator: vtkImageInterpolator.newInstance(),\n  usePermuteExecute: false // no supported yet\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Make this a VTK object\n  macro.obj(publicAPI, model);\n\n  // Also make it an algorithm with one input and one output\n  macro.algo(publicAPI, model, 1, 1);\n  macro.setGet(publicAPI, model, ['outputDimensionality', 'outputScalarType', 'scalarShift', 'scalarScale', 'transformInputSampling', 'autoCropOutput', 'wrap', 'mirror', 'border', 'interpolationMode', 'resliceTransform', 'slabMode', 'slabTrapezoidIntegration', 'slabNumberOfSlices', 'slabSliceSpacingFraction']);\n  macro.setGetArray(publicAPI, model, ['outputOrigin', 'outputSpacing'], 3);\n  macro.setGetArray(publicAPI, model, ['outputExtent'], 6);\n  macro.setGetArray(publicAPI, model, ['outputDirection'], 9);\n  macro.setGetArray(publicAPI, model, ['backgroundColor'], 4);\n  macro.get(publicAPI, model, ['resliceAxes']);\n\n  // Object specific methods\n  macro.algo(publicAPI, model, 1, 1);\n  vtkImageReslice(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkImageReslice');\n\n// ----------------------------------------------------------------------------\n\nvar vtkImageReslice$1 = {\n  newInstance,\n  extend,\n  ...Constants\n};\n\nexport { vtkImageReslice$1 as default, extend, newInstance };\n","Object.defineProperty(exports, '__esModule', { value: true });\n\nvar React = require('react');\n\nfunction _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n        Object.keys(e).forEach(function (k) {\n            if (k !== 'default') {\n                var d = Object.getOwnPropertyDescriptor(e, k);\n                Object.defineProperty(n, k, d.get ? d : {\n                    enumerable: true,\n                    get: function () { return e[k]; }\n                });\n            }\n        });\n    }\n    n[\"default\"] = e;\n    return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar ProgressBar = function (_a) {\r\n    var _b = _a.bgColor, bgColor = _b === void 0 ? \"#6a1b9a\" : _b, _c = _a.height, height = _c === void 0 ? \"20px\" : _c, _d = _a.width, width = _d === void 0 ? \"100%\" : _d, _e = _a.borderRadius, borderRadius = _e === void 0 ? \"50px\" : _e, _f = _a.labelAlignment, labelAlignment = _f === void 0 ? \"right\" : _f, _g = _a.baseBgColor, baseBgColor = _g === void 0 ? \"#e0e0de\" : _g, _h = _a.labelColor, labelColor = _h === void 0 ? \"#fff\" : _h, _j = _a.labelSize, labelSize = _j === void 0 ? \"15px\" : _j, _k = _a.isLabelVisible, isLabelVisible = _k === void 0 ? true : _k, _l = _a.dir, dir = _l === void 0 ? \"ltr\" : _l, _m = _a.ariaValuemin, ariaValuemin = _m === void 0 ? 0 : _m, _o = _a.ariaValuemax, ariaValuemax = _o === void 0 ? 100 : _o, _p = _a.ariaValuetext, ariaValuetext = _p === void 0 ? null : _p, _q = _a.maxCompleted, maxCompleted = _q === void 0 ? 100 : _q, _r = _a.animateOnRender, animateOnRender = _r === void 0 ? false : _r, _s = _a.initCompletedOnAnimation, initCompletedOnAnimation = _s === void 0 ? 0 : _s, completed = _a.completed, margin = _a.margin, padding = _a.padding, customLabelStyles = _a.customLabelStyles, transitionDuration = _a.transitionDuration, transitionTimingFunction = _a.transitionTimingFunction, className = _a.className, customLabel = _a.customLabel, barContainerClassName = _a.barContainerClassName, completedClassName = _a.completedClassName, labelClassName = _a.labelClassName;\r\n    var getAlignment = function (alignmentOption) {\r\n        if (alignmentOption === \"left\") {\r\n            return \"flex-start\";\r\n        }\r\n        else if (alignmentOption === \"center\") {\r\n            return \"center\";\r\n        }\r\n        else if (alignmentOption === \"right\") {\r\n            return \"flex-end\";\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    var alignment = getAlignment(labelAlignment);\r\n    var initCompletedOnAnimationStr = typeof initCompletedOnAnimation === \"number\"\r\n        ? \"\".concat(initCompletedOnAnimation, \"%\")\r\n        : initCompletedOnAnimation;\r\n    var getFillerWidth = function (maxCompletedValue, completedValue) {\r\n        if (maxCompletedValue) {\r\n            var ratio = Number(completedValue) / maxCompletedValue;\r\n            return ratio > 1 ? \"100%\" : \"\".concat(ratio * 100, \"%\");\r\n        }\r\n        return initCompletedOnAnimationStr;\r\n    };\r\n    var fillerWidth = getFillerWidth(maxCompleted, completed);\r\n    var _t = React__namespace.useState(initCompletedOnAnimationStr), initWidth = _t[0], setInitWidth = _t[1];\r\n    var containerStyles = {\r\n        height: height,\r\n        background: baseBgColor,\r\n        borderRadius: borderRadius,\r\n        padding: padding,\r\n        width: width,\r\n        margin: margin,\r\n        overflow: \"hidden\",\r\n    };\r\n    var fillerStyles = {\r\n        height: height,\r\n        width: animateOnRender ? initWidth : fillerWidth,\r\n        background: bgColor,\r\n        transition: \"width \".concat(transitionDuration || \"1s\", \" \").concat(transitionTimingFunction || \"ease-in-out\"),\r\n        borderRadius: \"inherit\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: labelAlignment !== \"outside\" && alignment ? alignment : \"normal\",\r\n    };\r\n    var labelStyles = __assign({ padding: labelAlignment === \"outside\" ? \"0 0 0 5px\" : \"5px\", color: labelColor, fontWeight: \"bold\", fontSize: labelSize, display: !isLabelVisible ? \"none\" : \"initial\" }, customLabelStyles);\r\n    var outsideStyles = {\r\n        display: labelAlignment === \"outside\" ? \"flex\" : \"initial\",\r\n        alignItems: labelAlignment === \"outside\" ? \"center\" : \"initial\",\r\n    };\r\n    var completedStr = typeof completed === \"number\" ? \"\".concat(completed, \"%\") : \"\".concat(completed);\r\n    var labelStr = customLabel ? customLabel : completedStr;\r\n    React__namespace.useEffect(function () {\r\n        if (animateOnRender) {\r\n            requestAnimationFrame(function () { return setInitWidth(fillerWidth); });\r\n        }\r\n    }, [fillerWidth, animateOnRender]);\r\n    return (React__namespace.createElement(\"div\", { style: className ? undefined : outsideStyles, className: className, dir: dir, role: \"progressbar\", \"aria-valuenow\": parseFloat(labelStr), \"aria-valuemin\": ariaValuemin, \"aria-valuemax\": ariaValuemax, \"aria-valuetext\": \"\".concat(ariaValuetext === null ? labelStr : ariaValuetext) },\r\n        React__namespace.createElement(\"div\", { style: barContainerClassName ? undefined : containerStyles, className: barContainerClassName },\r\n            React__namespace.createElement(\"div\", { style: completedClassName ? undefined : fillerStyles, className: completedClassName }, labelAlignment !== \"outside\" && (React__namespace.createElement(\"span\", { style: labelClassName ? undefined : labelStyles, className: labelClassName }, labelStr)))),\r\n        labelAlignment === \"outside\" && (React__namespace.createElement(\"span\", { style: labelClassName ? undefined : labelStyles, className: labelClassName }, labelStr))));\r\n};\n\nexports[\"default\"] = ProgressBar;\n//# sourceMappingURL=index.js.map\n","\"use strict\"\n\nfunction iota(n) {\n  var result = new Array(n)\n  for(var i=0; i<n; ++i) {\n    result[i] = i\n  }\n  return result\n}\n\nmodule.exports = iota","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","var iota = require(\"iota-array\")\nvar isBuffer = require(\"is-buffer\")\n\nvar hasTypedArrays  = ((typeof Float64Array) !== \"undefined\")\n\nfunction compare1st(a, b) {\n  return a[0] - b[0]\n}\n\nfunction order() {\n  var stride = this.stride\n  var terms = new Array(stride.length)\n  var i\n  for(i=0; i<terms.length; ++i) {\n    terms[i] = [Math.abs(stride[i]), i]\n  }\n  terms.sort(compare1st)\n  var result = new Array(terms.length)\n  for(i=0; i<result.length; ++i) {\n    result[i] = terms[i][1]\n  }\n  return result\n}\n\nfunction compileConstructor(dtype, dimension) {\n  var className = [\"View\", dimension, \"d\", dtype].join(\"\")\n  if(dimension < 0) {\n    className = \"View_Nil\" + dtype\n  }\n  var useGetters = (dtype === \"generic\")\n\n  if(dimension === -1) {\n    //Special case for trivial arrays\n    var code =\n      \"function \"+className+\"(a){this.data=a;};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return -1};\\\nproto.size=0;\\\nproto.dimension=-1;\\\nproto.shape=proto.stride=proto.order=[];\\\nproto.lo=proto.hi=proto.transpose=proto.step=\\\nfunction(){return new \"+className+\"(this.data);};\\\nproto.get=proto.set=function(){};\\\nproto.pick=function(){return null};\\\nreturn function construct_\"+className+\"(a){return new \"+className+\"(a);}\"\n    var procedure = new Function(code)\n    return procedure()\n  } else if(dimension === 0) {\n    //Special case for 0d arrays\n    var code =\n      \"function \"+className+\"(a,d) {\\\nthis.data = a;\\\nthis.offset = d\\\n};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return this.offset};\\\nproto.dimension=0;\\\nproto.size=1;\\\nproto.shape=\\\nproto.stride=\\\nproto.order=[];\\\nproto.lo=\\\nproto.hi=\\\nproto.transpose=\\\nproto.step=function \"+className+\"_copy() {\\\nreturn new \"+className+\"(this.data,this.offset)\\\n};\\\nproto.pick=function \"+className+\"_pick(){\\\nreturn TrivialArray(this.data);\\\n};\\\nproto.valueOf=proto.get=function \"+className+\"_get(){\\\nreturn \"+(useGetters ? \"this.data.get(this.offset)\" : \"this.data[this.offset]\")+\n\"};\\\nproto.set=function \"+className+\"_set(v){\\\nreturn \"+(useGetters ? \"this.data.set(this.offset,v)\" : \"this.data[this.offset]=v\")+\"\\\n};\\\nreturn function construct_\"+className+\"(a,b,c,d){return new \"+className+\"(a,d)}\"\n    var procedure = new Function(\"TrivialArray\", code)\n    return procedure(CACHED_CONSTRUCTORS[dtype][0])\n  }\n\n  var code = [\"'use strict'\"]\n\n  //Create constructor for view\n  var indices = iota(dimension)\n  var args = indices.map(function(i) { return \"i\"+i })\n  var index_str = \"this.offset+\" + indices.map(function(i) {\n        return \"this.stride[\" + i + \"]*i\" + i\n      }).join(\"+\")\n  var shapeArg = indices.map(function(i) {\n      return \"b\"+i\n    }).join(\",\")\n  var strideArg = indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")\n  code.push(\n    \"function \"+className+\"(a,\" + shapeArg + \",\" + strideArg + \",d){this.data=a\",\n      \"this.shape=[\" + shapeArg + \"]\",\n      \"this.stride=[\" + strideArg + \"]\",\n      \"this.offset=d|0}\",\n    \"var proto=\"+className+\".prototype\",\n    \"proto.dtype='\"+dtype+\"'\",\n    \"proto.dimension=\"+dimension)\n\n  //view.size:\n  code.push(\"Object.defineProperty(proto,'size',{get:function \"+className+\"_size(){\\\nreturn \"+indices.map(function(i) { return \"this.shape[\"+i+\"]\" }).join(\"*\"),\n\"}})\")\n\n  //view.order:\n  if(dimension === 1) {\n    code.push(\"proto.order=[0]\")\n  } else {\n    code.push(\"Object.defineProperty(proto,'order',{get:\")\n    if(dimension < 4) {\n      code.push(\"function \"+className+\"_order(){\")\n      if(dimension === 2) {\n        code.push(\"return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})\")\n      } else if(dimension === 3) {\n        code.push(\n\"var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);\\\nif(s0>s1){\\\nif(s1>s2){\\\nreturn [2,1,0];\\\n}else if(s0>s2){\\\nreturn [1,2,0];\\\n}else{\\\nreturn [1,0,2];\\\n}\\\n}else if(s0>s2){\\\nreturn [2,0,1];\\\n}else if(s2>s1){\\\nreturn [0,1,2];\\\n}else{\\\nreturn [0,2,1];\\\n}}})\")\n      }\n    } else {\n      code.push(\"ORDER})\")\n    }\n  }\n\n  //view.set(i0, ..., v):\n  code.push(\n\"proto.set=function \"+className+\"_set(\"+args.join(\",\")+\",v){\")\n  if(useGetters) {\n    code.push(\"return this.data.set(\"+index_str+\",v)}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]=v}\")\n  }\n\n  //view.get(i0, ...):\n  code.push(\"proto.get=function \"+className+\"_get(\"+args.join(\",\")+\"){\")\n  if(useGetters) {\n    code.push(\"return this.data.get(\"+index_str+\")}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]}\")\n  }\n\n  //view.index:\n  code.push(\n    \"proto.index=function \"+className+\"_index(\", args.join(), \"){return \"+index_str+\"}\")\n\n  //view.hi():\n  code.push(\"proto.hi=function \"+className+\"_hi(\"+args.join(\",\")+\"){return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return [\"(typeof i\",i,\"!=='number'||i\",i,\"<0)?this.shape[\", i, \"]:i\", i,\"|0\"].join(\"\")\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"this.stride[\"+i + \"]\"\n    }).join(\",\")+\",this.offset)}\")\n\n  //view.lo():\n  var a_vars = indices.map(function(i) { return \"a\"+i+\"=this.shape[\"+i+\"]\" })\n  var c_vars = indices.map(function(i) { return \"c\"+i+\"=this.stride[\"+i+\"]\" })\n  code.push(\"proto.lo=function \"+className+\"_lo(\"+args.join(\",\")+\"){var b=this.offset,d=0,\"+a_vars.join(\",\")+\",\"+c_vars.join(\",\"))\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){\\\nd=i\"+i+\"|0;\\\nb+=c\"+i+\"*d;\\\na\"+i+\"-=d}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\"+i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")+\",b)}\")\n\n  //view.step():\n  code.push(\"proto.step=function \"+className+\"_step(\"+args.join(\",\")+\"){var \"+\n    indices.map(function(i) {\n      return \"a\"+i+\"=this.shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\"+i+\"=this.stride[\"+i+\"]\"\n    }).join(\",\")+\",c=this.offset,d=0,ceil=Math.ceil\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'){\\\nd=i\"+i+\"|0;\\\nif(d<0){\\\nc+=b\"+i+\"*(a\"+i+\"-1);\\\na\"+i+\"=ceil(-a\"+i+\"/d)\\\n}else{\\\na\"+i+\"=ceil(a\"+i+\"/d)\\\n}\\\nb\"+i+\"*=d\\\n}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\" + i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\" + i\n    }).join(\",\")+\",c)}\")\n\n  //view.transpose():\n  var tShape = new Array(dimension)\n  var tStride = new Array(dimension)\n  for(var i=0; i<dimension; ++i) {\n    tShape[i] = \"a[i\"+i+\"]\"\n    tStride[i] = \"b[i\"+i+\"]\"\n  }\n  code.push(\"proto.transpose=function \"+className+\"_transpose(\"+args+\"){\"+\n    args.map(function(n,idx) { return n + \"=(\" + n + \"===undefined?\" + idx + \":\" + n + \"|0)\"}).join(\";\"),\n    \"var a=this.shape,b=this.stride;return new \"+className+\"(this.data,\"+tShape.join(\",\")+\",\"+tStride.join(\",\")+\",this.offset)}\")\n\n  //view.pick():\n  code.push(\"proto.pick=function \"+className+\"_pick(\"+args+\"){var a=[],b=[],c=this.offset\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){c=(c+this.stride[\"+i+\"]*i\"+i+\")|0}else{a.push(this.shape[\"+i+\"]);b.push(this.stride[\"+i+\"])}\")\n  }\n  code.push(\"var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}\")\n\n  //Add return statement\n  code.push(\"return function construct_\"+className+\"(data,shape,stride,offset){return new \"+className+\"(data,\"+\n    indices.map(function(i) {\n      return \"shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"stride[\"+i+\"]\"\n    }).join(\",\")+\",offset)}\")\n\n  //Compile procedure\n  var procedure = new Function(\"CTOR_LIST\", \"ORDER\", code.join(\"\\n\"))\n  return procedure(CACHED_CONSTRUCTORS[dtype], order)\n}\n\nfunction arrayDType(data) {\n  if(isBuffer(data)) {\n    return \"buffer\"\n  }\n  if(hasTypedArrays) {\n    switch(Object.prototype.toString.call(data)) {\n      case \"[object Float64Array]\":\n        return \"float64\"\n      case \"[object Float32Array]\":\n        return \"float32\"\n      case \"[object Int8Array]\":\n        return \"int8\"\n      case \"[object Int16Array]\":\n        return \"int16\"\n      case \"[object Int32Array]\":\n        return \"int32\"\n      case \"[object Uint8Array]\":\n        return \"uint8\"\n      case \"[object Uint16Array]\":\n        return \"uint16\"\n      case \"[object Uint32Array]\":\n        return \"uint32\"\n      case \"[object Uint8ClampedArray]\":\n        return \"uint8_clamped\"\n      case \"[object BigInt64Array]\":\n        return \"bigint64\"\n      case \"[object BigUint64Array]\":\n        return \"biguint64\"\n    }\n  }\n  if(Array.isArray(data)) {\n    return \"array\"\n  }\n  return \"generic\"\n}\n\nvar CACHED_CONSTRUCTORS = {\n  \"float32\":[],\n  \"float64\":[],\n  \"int8\":[],\n  \"int16\":[],\n  \"int32\":[],\n  \"uint8\":[],\n  \"uint16\":[],\n  \"uint32\":[],\n  \"array\":[],\n  \"uint8_clamped\":[],\n  \"bigint64\": [],\n  \"biguint64\": [],\n  \"buffer\":[],\n  \"generic\":[]\n}\n\n;(function() {\n  for(var id in CACHED_CONSTRUCTORS) {\n    CACHED_CONSTRUCTORS[id].push(compileConstructor(id, -1))\n  }\n});\n\nfunction wrappedNDArrayCtor(data, shape, stride, offset) {\n  if(data === undefined) {\n    var ctor = CACHED_CONSTRUCTORS.array[0]\n    return ctor([])\n  } else if(typeof data === \"number\") {\n    data = [data]\n  }\n  if(shape === undefined) {\n    shape = [ data.length ]\n  }\n  var d = shape.length\n  if(stride === undefined) {\n    stride = new Array(d)\n    for(var i=d-1, sz=1; i>=0; --i) {\n      stride[i] = sz\n      sz *= shape[i]\n    }\n  }\n  if(offset === undefined) {\n    offset = 0\n    for(var i=0; i<d; ++i) {\n      if(stride[i] < 0) {\n        offset -= (shape[i]-1)*stride[i]\n      }\n    }\n  }\n  var dtype = arrayDType(data)\n  var ctor_list = CACHED_CONSTRUCTORS[dtype]\n  while(ctor_list.length <= d+1) {\n    ctor_list.push(compileConstructor(dtype, ctor_list.length-1))\n  }\n  var ctor = ctor_list[d+1]\n  return ctor(data, shape, stride, offset)\n}\n\nmodule.exports = wrappedNDArrayCtor\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\n\n// Animation frame based implementation of setTimeout.\n// Inspired by Joe Lambert, https://gist.github.com/joelambert/1002116#file-requesttimeout-js\nvar hasNativePerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';\nvar now = hasNativePerformanceNow ? function () {\n  return performance.now();\n} : function () {\n  return Date.now();\n};\nfunction cancelTimeout(timeoutID) {\n  cancelAnimationFrame(timeoutID.id);\n}\nfunction requestTimeout(callback, delay) {\n  var start = now();\n\n  function tick() {\n    if (now() - start >= delay) {\n      callback.call(null);\n    } else {\n      timeoutID.id = requestAnimationFrame(tick);\n    }\n  }\n\n  var timeoutID = {\n    id: requestAnimationFrame(tick)\n  };\n  return timeoutID;\n}\n\nvar size = -1; // This utility copied from \"dom-helpers\" package.\n\nfunction getScrollbarSize(recalculate) {\n  if (recalculate === void 0) {\n    recalculate = false;\n  }\n\n  if (size === -1 || recalculate) {\n    var div = document.createElement('div');\n    var style = div.style;\n    style.width = '50px';\n    style.height = '50px';\n    style.overflow = 'scroll';\n    document.body.appendChild(div);\n    size = div.offsetWidth - div.clientWidth;\n    document.body.removeChild(div);\n  }\n\n  return size;\n}\nvar cachedRTLResult = null; // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n// Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).\n// Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.\n// The safest way to check this is to intentionally set a negative offset,\n// and then verify that the subsequent \"scroll\" event matches the negative offset.\n// If it does not match, then we can assume a non-standard RTL scroll implementation.\n\nfunction getRTLOffsetType(recalculate) {\n  if (recalculate === void 0) {\n    recalculate = false;\n  }\n\n  if (cachedRTLResult === null || recalculate) {\n    var outerDiv = document.createElement('div');\n    var outerStyle = outerDiv.style;\n    outerStyle.width = '50px';\n    outerStyle.height = '50px';\n    outerStyle.overflow = 'scroll';\n    outerStyle.direction = 'rtl';\n    var innerDiv = document.createElement('div');\n    var innerStyle = innerDiv.style;\n    innerStyle.width = '100px';\n    innerStyle.height = '100px';\n    outerDiv.appendChild(innerDiv);\n    document.body.appendChild(outerDiv);\n\n    if (outerDiv.scrollLeft > 0) {\n      cachedRTLResult = 'positive-descending';\n    } else {\n      outerDiv.scrollLeft = 1;\n\n      if (outerDiv.scrollLeft === 0) {\n        cachedRTLResult = 'negative';\n      } else {\n        cachedRTLResult = 'positive-ascending';\n      }\n    }\n\n    document.body.removeChild(outerDiv);\n    return cachedRTLResult;\n  }\n\n  return cachedRTLResult;\n}\n\nvar IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\n\nvar defaultItemKey = function defaultItemKey(_ref) {\n  var columnIndex = _ref.columnIndex,\n      data = _ref.data,\n      rowIndex = _ref.rowIndex;\n  return rowIndex + \":\" + columnIndex;\n}; // In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\n\n\nvar devWarningsOverscanCount = null;\nvar devWarningsOverscanRowsColumnsCount = null;\nvar devWarningsTagName = null;\n\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsOverscanCount = /*#__PURE__*/new WeakSet();\n    devWarningsOverscanRowsColumnsCount = /*#__PURE__*/new WeakSet();\n    devWarningsTagName = /*#__PURE__*/new WeakSet();\n  }\n}\n\nfunction createGridComponent(_ref2) {\n  var _class;\n\n  var getColumnOffset = _ref2.getColumnOffset,\n      getColumnStartIndexForOffset = _ref2.getColumnStartIndexForOffset,\n      getColumnStopIndexForStartIndex = _ref2.getColumnStopIndexForStartIndex,\n      getColumnWidth = _ref2.getColumnWidth,\n      getEstimatedTotalHeight = _ref2.getEstimatedTotalHeight,\n      getEstimatedTotalWidth = _ref2.getEstimatedTotalWidth,\n      getOffsetForColumnAndAlignment = _ref2.getOffsetForColumnAndAlignment,\n      getOffsetForRowAndAlignment = _ref2.getOffsetForRowAndAlignment,\n      getRowHeight = _ref2.getRowHeight,\n      getRowOffset = _ref2.getRowOffset,\n      getRowStartIndexForOffset = _ref2.getRowStartIndexForOffset,\n      getRowStopIndexForStartIndex = _ref2.getRowStopIndexForStartIndex,\n      initInstanceProps = _ref2.initInstanceProps,\n      shouldResetStyleCacheOnItemSizeChange = _ref2.shouldResetStyleCacheOnItemSizeChange,\n      validateProps = _ref2.validateProps;\n  return _class = /*#__PURE__*/function (_PureComponent) {\n    _inheritsLoose(Grid, _PureComponent);\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    function Grid(props) {\n      var _this;\n\n      _this = _PureComponent.call(this, props) || this;\n      _this._instanceProps = initInstanceProps(_this.props, _assertThisInitialized(_this));\n      _this._resetIsScrollingTimeoutId = null;\n      _this._outerRef = void 0;\n      _this.state = {\n        instance: _assertThisInitialized(_this),\n        isScrolling: false,\n        horizontalScrollDirection: 'forward',\n        scrollLeft: typeof _this.props.initialScrollLeft === 'number' ? _this.props.initialScrollLeft : 0,\n        scrollTop: typeof _this.props.initialScrollTop === 'number' ? _this.props.initialScrollTop : 0,\n        scrollUpdateWasRequested: false,\n        verticalScrollDirection: 'forward'\n      };\n      _this._callOnItemsRendered = void 0;\n      _this._callOnItemsRendered = memoizeOne(function (overscanColumnStartIndex, overscanColumnStopIndex, overscanRowStartIndex, overscanRowStopIndex, visibleColumnStartIndex, visibleColumnStopIndex, visibleRowStartIndex, visibleRowStopIndex) {\n        return _this.props.onItemsRendered({\n          overscanColumnStartIndex: overscanColumnStartIndex,\n          overscanColumnStopIndex: overscanColumnStopIndex,\n          overscanRowStartIndex: overscanRowStartIndex,\n          overscanRowStopIndex: overscanRowStopIndex,\n          visibleColumnStartIndex: visibleColumnStartIndex,\n          visibleColumnStopIndex: visibleColumnStopIndex,\n          visibleRowStartIndex: visibleRowStartIndex,\n          visibleRowStopIndex: visibleRowStopIndex\n        });\n      });\n      _this._callOnScroll = void 0;\n      _this._callOnScroll = memoizeOne(function (scrollLeft, scrollTop, horizontalScrollDirection, verticalScrollDirection, scrollUpdateWasRequested) {\n        return _this.props.onScroll({\n          horizontalScrollDirection: horizontalScrollDirection,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          verticalScrollDirection: verticalScrollDirection,\n          scrollUpdateWasRequested: scrollUpdateWasRequested\n        });\n      });\n      _this._getItemStyle = void 0;\n\n      _this._getItemStyle = function (rowIndex, columnIndex) {\n        var _this$props = _this.props,\n            columnWidth = _this$props.columnWidth,\n            direction = _this$props.direction,\n            rowHeight = _this$props.rowHeight;\n\n        var itemStyleCache = _this._getItemStyleCache(shouldResetStyleCacheOnItemSizeChange && columnWidth, shouldResetStyleCacheOnItemSizeChange && direction, shouldResetStyleCacheOnItemSizeChange && rowHeight);\n\n        var key = rowIndex + \":\" + columnIndex;\n        var style;\n\n        if (itemStyleCache.hasOwnProperty(key)) {\n          style = itemStyleCache[key];\n        } else {\n          var _offset = getColumnOffset(_this.props, columnIndex, _this._instanceProps);\n\n          var isRtl = direction === 'rtl';\n          itemStyleCache[key] = style = {\n            position: 'absolute',\n            left: isRtl ? undefined : _offset,\n            right: isRtl ? _offset : undefined,\n            top: getRowOffset(_this.props, rowIndex, _this._instanceProps),\n            height: getRowHeight(_this.props, rowIndex, _this._instanceProps),\n            width: getColumnWidth(_this.props, columnIndex, _this._instanceProps)\n          };\n        }\n\n        return style;\n      };\n\n      _this._getItemStyleCache = void 0;\n      _this._getItemStyleCache = memoizeOne(function (_, __, ___) {\n        return {};\n      });\n\n      _this._onScroll = function (event) {\n        var _event$currentTarget = event.currentTarget,\n            clientHeight = _event$currentTarget.clientHeight,\n            clientWidth = _event$currentTarget.clientWidth,\n            scrollLeft = _event$currentTarget.scrollLeft,\n            scrollTop = _event$currentTarget.scrollTop,\n            scrollHeight = _event$currentTarget.scrollHeight,\n            scrollWidth = _event$currentTarget.scrollWidth;\n\n        _this.setState(function (prevState) {\n          if (prevState.scrollLeft === scrollLeft && prevState.scrollTop === scrollTop) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          }\n\n          var direction = _this.props.direction; // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n          // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n          // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n          // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n\n          var calculatedScrollLeft = scrollLeft;\n\n          if (direction === 'rtl') {\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                calculatedScrollLeft = -scrollLeft;\n                break;\n\n              case 'positive-descending':\n                calculatedScrollLeft = scrollWidth - clientWidth - scrollLeft;\n                break;\n            }\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n\n          calculatedScrollLeft = Math.max(0, Math.min(calculatedScrollLeft, scrollWidth - clientWidth));\n          var calculatedScrollTop = Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight));\n          return {\n            isScrolling: true,\n            horizontalScrollDirection: prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n            scrollLeft: calculatedScrollLeft,\n            scrollTop: calculatedScrollTop,\n            verticalScrollDirection: prevState.scrollTop < scrollTop ? 'forward' : 'backward',\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n\n      _this._outerRefSetter = function (ref) {\n        var outerRef = _this.props.outerRef;\n        _this._outerRef = ref;\n\n        if (typeof outerRef === 'function') {\n          outerRef(ref);\n        } else if (outerRef != null && typeof outerRef === 'object' && outerRef.hasOwnProperty('current')) {\n          outerRef.current = ref;\n        }\n      };\n\n      _this._resetIsScrollingDebounced = function () {\n        if (_this._resetIsScrollingTimeoutId !== null) {\n          cancelTimeout(_this._resetIsScrollingTimeoutId);\n        }\n\n        _this._resetIsScrollingTimeoutId = requestTimeout(_this._resetIsScrolling, IS_SCROLLING_DEBOUNCE_INTERVAL);\n      };\n\n      _this._resetIsScrolling = function () {\n        _this._resetIsScrollingTimeoutId = null;\n\n        _this.setState({\n          isScrolling: false\n        }, function () {\n          // Clear style cache after state update has been committed.\n          // This way we don't break pure sCU for items that don't use isScrolling param.\n          _this._getItemStyleCache(-1);\n        });\n      };\n\n      return _this;\n    }\n\n    Grid.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    };\n\n    var _proto = Grid.prototype;\n\n    _proto.scrollTo = function scrollTo(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n\n      if (scrollLeft !== undefined) {\n        scrollLeft = Math.max(0, scrollLeft);\n      }\n\n      if (scrollTop !== undefined) {\n        scrollTop = Math.max(0, scrollTop);\n      }\n\n      this.setState(function (prevState) {\n        if (scrollLeft === undefined) {\n          scrollLeft = prevState.scrollLeft;\n        }\n\n        if (scrollTop === undefined) {\n          scrollTop = prevState.scrollTop;\n        }\n\n        if (prevState.scrollLeft === scrollLeft && prevState.scrollTop === scrollTop) {\n          return null;\n        }\n\n        return {\n          horizontalScrollDirection: prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          scrollUpdateWasRequested: true,\n          verticalScrollDirection: prevState.scrollTop < scrollTop ? 'forward' : 'backward'\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _proto.scrollToItem = function scrollToItem(_ref4) {\n      var _ref4$align = _ref4.align,\n          align = _ref4$align === void 0 ? 'auto' : _ref4$align,\n          columnIndex = _ref4.columnIndex,\n          rowIndex = _ref4.rowIndex;\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          height = _this$props2.height,\n          rowCount = _this$props2.rowCount,\n          width = _this$props2.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n      var scrollbarSize = getScrollbarSize();\n\n      if (columnIndex !== undefined) {\n        columnIndex = Math.max(0, Math.min(columnIndex, columnCount - 1));\n      }\n\n      if (rowIndex !== undefined) {\n        rowIndex = Math.max(0, Math.min(rowIndex, rowCount - 1));\n      }\n\n      var estimatedTotalHeight = getEstimatedTotalHeight(this.props, this._instanceProps);\n      var estimatedTotalWidth = getEstimatedTotalWidth(this.props, this._instanceProps); // The scrollbar size should be considered when scrolling an item into view,\n      // to ensure it's fully visible.\n      // But we only need to account for its size when it's actually visible.\n\n      var horizontalScrollbarSize = estimatedTotalWidth > width ? scrollbarSize : 0;\n      var verticalScrollbarSize = estimatedTotalHeight > height ? scrollbarSize : 0;\n      this.scrollTo({\n        scrollLeft: columnIndex !== undefined ? getOffsetForColumnAndAlignment(this.props, columnIndex, align, scrollLeft, this._instanceProps, verticalScrollbarSize) : scrollLeft,\n        scrollTop: rowIndex !== undefined ? getOffsetForRowAndAlignment(this.props, rowIndex, align, scrollTop, this._instanceProps, horizontalScrollbarSize) : scrollTop\n      });\n    };\n\n    _proto.componentDidMount = function componentDidMount() {\n      var _this$props3 = this.props,\n          initialScrollLeft = _this$props3.initialScrollLeft,\n          initialScrollTop = _this$props3.initialScrollTop;\n\n      if (this._outerRef != null) {\n        var outerRef = this._outerRef;\n\n        if (typeof initialScrollLeft === 'number') {\n          outerRef.scrollLeft = initialScrollLeft;\n        }\n\n        if (typeof initialScrollTop === 'number') {\n          outerRef.scrollTop = initialScrollTop;\n        }\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate() {\n      var direction = this.props.direction;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollTop = _this$state2.scrollTop,\n          scrollUpdateWasRequested = _this$state2.scrollUpdateWasRequested;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n        // So we need to determine which browser behavior we're dealing with, and mimic it.\n        var outerRef = this._outerRef;\n\n        if (direction === 'rtl') {\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              outerRef.scrollLeft = -scrollLeft;\n              break;\n\n            case 'positive-ascending':\n              outerRef.scrollLeft = scrollLeft;\n              break;\n\n            default:\n              var clientWidth = outerRef.clientWidth,\n                  scrollWidth = outerRef.scrollWidth;\n              outerRef.scrollLeft = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        } else {\n          outerRef.scrollLeft = Math.max(0, scrollLeft);\n        }\n\n        outerRef.scrollTop = Math.max(0, scrollTop);\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    };\n\n    _proto.render = function render() {\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          className = _this$props4.className,\n          columnCount = _this$props4.columnCount,\n          direction = _this$props4.direction,\n          height = _this$props4.height,\n          innerRef = _this$props4.innerRef,\n          innerElementType = _this$props4.innerElementType,\n          innerTagName = _this$props4.innerTagName,\n          itemData = _this$props4.itemData,\n          _this$props4$itemKey = _this$props4.itemKey,\n          itemKey = _this$props4$itemKey === void 0 ? defaultItemKey : _this$props4$itemKey,\n          outerElementType = _this$props4.outerElementType,\n          outerTagName = _this$props4.outerTagName,\n          rowCount = _this$props4.rowCount,\n          style = _this$props4.style,\n          useIsScrolling = _this$props4.useIsScrolling,\n          width = _this$props4.width;\n      var isScrolling = this.state.isScrolling;\n\n      var _this$_getHorizontalR = this._getHorizontalRangeToRender(),\n          columnStartIndex = _this$_getHorizontalR[0],\n          columnStopIndex = _this$_getHorizontalR[1];\n\n      var _this$_getVerticalRan = this._getVerticalRangeToRender(),\n          rowStartIndex = _this$_getVerticalRan[0],\n          rowStopIndex = _this$_getVerticalRan[1];\n\n      var items = [];\n\n      if (columnCount > 0 && rowCount) {\n        for (var _rowIndex = rowStartIndex; _rowIndex <= rowStopIndex; _rowIndex++) {\n          for (var _columnIndex = columnStartIndex; _columnIndex <= columnStopIndex; _columnIndex++) {\n            items.push(createElement(children, {\n              columnIndex: _columnIndex,\n              data: itemData,\n              isScrolling: useIsScrolling ? isScrolling : undefined,\n              key: itemKey({\n                columnIndex: _columnIndex,\n                data: itemData,\n                rowIndex: _rowIndex\n              }),\n              rowIndex: _rowIndex,\n              style: this._getItemStyle(_rowIndex, _columnIndex)\n            }));\n          }\n        }\n      } // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n\n\n      var estimatedTotalHeight = getEstimatedTotalHeight(this.props, this._instanceProps);\n      var estimatedTotalWidth = getEstimatedTotalWidth(this.props, this._instanceProps);\n      return createElement(outerElementType || outerTagName || 'div', {\n        className: className,\n        onScroll: this._onScroll,\n        ref: this._outerRefSetter,\n        style: _extends({\n          position: 'relative',\n          height: height,\n          width: width,\n          overflow: 'auto',\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform',\n          direction: direction\n        }, style)\n      }, createElement(innerElementType || innerTagName || 'div', {\n        children: items,\n        ref: innerRef,\n        style: {\n          height: estimatedTotalHeight,\n          pointerEvents: isScrolling ? 'none' : undefined,\n          width: estimatedTotalWidth\n        }\n      }));\n    };\n\n    _proto._callPropsCallbacks = function _callPropsCallbacks() {\n      var _this$props5 = this.props,\n          columnCount = _this$props5.columnCount,\n          onItemsRendered = _this$props5.onItemsRendered,\n          onScroll = _this$props5.onScroll,\n          rowCount = _this$props5.rowCount;\n\n      if (typeof onItemsRendered === 'function') {\n        if (columnCount > 0 && rowCount > 0) {\n          var _this$_getHorizontalR2 = this._getHorizontalRangeToRender(),\n              _overscanColumnStartIndex = _this$_getHorizontalR2[0],\n              _overscanColumnStopIndex = _this$_getHorizontalR2[1],\n              _visibleColumnStartIndex = _this$_getHorizontalR2[2],\n              _visibleColumnStopIndex = _this$_getHorizontalR2[3];\n\n          var _this$_getVerticalRan2 = this._getVerticalRangeToRender(),\n              _overscanRowStartIndex = _this$_getVerticalRan2[0],\n              _overscanRowStopIndex = _this$_getVerticalRan2[1],\n              _visibleRowStartIndex = _this$_getVerticalRan2[2],\n              _visibleRowStopIndex = _this$_getVerticalRan2[3];\n\n          this._callOnItemsRendered(_overscanColumnStartIndex, _overscanColumnStopIndex, _overscanRowStartIndex, _overscanRowStopIndex, _visibleColumnStartIndex, _visibleColumnStopIndex, _visibleRowStartIndex, _visibleRowStopIndex);\n        }\n      }\n\n      if (typeof onScroll === 'function') {\n        var _this$state3 = this.state,\n            _horizontalScrollDirection = _this$state3.horizontalScrollDirection,\n            _scrollLeft = _this$state3.scrollLeft,\n            _scrollTop = _this$state3.scrollTop,\n            _scrollUpdateWasRequested = _this$state3.scrollUpdateWasRequested,\n            _verticalScrollDirection = _this$state3.verticalScrollDirection;\n\n        this._callOnScroll(_scrollLeft, _scrollTop, _horizontalScrollDirection, _verticalScrollDirection, _scrollUpdateWasRequested);\n      }\n    } // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    ;\n\n    _proto._getHorizontalRangeToRender = function _getHorizontalRangeToRender() {\n      var _this$props6 = this.props,\n          columnCount = _this$props6.columnCount,\n          overscanColumnCount = _this$props6.overscanColumnCount,\n          overscanColumnsCount = _this$props6.overscanColumnsCount,\n          overscanCount = _this$props6.overscanCount,\n          rowCount = _this$props6.rowCount;\n      var _this$state4 = this.state,\n          horizontalScrollDirection = _this$state4.horizontalScrollDirection,\n          isScrolling = _this$state4.isScrolling,\n          scrollLeft = _this$state4.scrollLeft;\n      var overscanCountResolved = overscanColumnCount || overscanColumnsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      var startIndex = getColumnStartIndexForOffset(this.props, scrollLeft, this._instanceProps);\n      var stopIndex = getColumnStopIndexForStartIndex(this.props, startIndex, scrollLeft, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || horizontalScrollDirection === 'backward' ? Math.max(1, overscanCountResolved) : 1;\n      var overscanForward = !isScrolling || horizontalScrollDirection === 'forward' ? Math.max(1, overscanCountResolved) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(columnCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n\n    _proto._getVerticalRangeToRender = function _getVerticalRangeToRender() {\n      var _this$props7 = this.props,\n          columnCount = _this$props7.columnCount,\n          overscanCount = _this$props7.overscanCount,\n          overscanRowCount = _this$props7.overscanRowCount,\n          overscanRowsCount = _this$props7.overscanRowsCount,\n          rowCount = _this$props7.rowCount;\n      var _this$state5 = this.state,\n          isScrolling = _this$state5.isScrolling,\n          verticalScrollDirection = _this$state5.verticalScrollDirection,\n          scrollTop = _this$state5.scrollTop;\n      var overscanCountResolved = overscanRowCount || overscanRowsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      var startIndex = getRowStartIndexForOffset(this.props, scrollTop, this._instanceProps);\n      var stopIndex = getRowStopIndexForStartIndex(this.props, startIndex, scrollTop, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || verticalScrollDirection === 'backward' ? Math.max(1, overscanCountResolved) : 1;\n      var overscanForward = !isScrolling || verticalScrollDirection === 'forward' ? Math.max(1, overscanCountResolved) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(rowCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n\n    return Grid;\n  }(PureComponent), _class.defaultProps = {\n    direction: 'ltr',\n    itemData: undefined,\n    useIsScrolling: false\n  }, _class;\n}\n\nvar validateSharedProps = function validateSharedProps(_ref5, _ref6) {\n  var children = _ref5.children,\n      direction = _ref5.direction,\n      height = _ref5.height,\n      innerTagName = _ref5.innerTagName,\n      outerTagName = _ref5.outerTagName,\n      overscanColumnsCount = _ref5.overscanColumnsCount,\n      overscanCount = _ref5.overscanCount,\n      overscanRowsCount = _ref5.overscanRowsCount,\n      width = _ref5.width;\n  var instance = _ref6.instance;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof overscanCount === 'number') {\n      if (devWarningsOverscanCount && !devWarningsOverscanCount.has(instance)) {\n        devWarningsOverscanCount.add(instance);\n        console.warn('The overscanCount prop has been deprecated. ' + 'Please use the overscanColumnCount and overscanRowCount props instead.');\n      }\n    }\n\n    if (typeof overscanColumnsCount === 'number' || typeof overscanRowsCount === 'number') {\n      if (devWarningsOverscanRowsColumnsCount && !devWarningsOverscanRowsColumnsCount.has(instance)) {\n        devWarningsOverscanRowsColumnsCount.add(instance);\n        console.warn('The overscanColumnsCount and overscanRowsCount props have been deprecated. ' + 'Please use the overscanColumnCount and overscanRowCount props instead.');\n      }\n    }\n\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\n        devWarningsTagName.add(instance);\n        console.warn('The innerTagName and outerTagName props have been deprecated. ' + 'Please use the innerElementType and outerElementType props instead.');\n      }\n    }\n\n    if (children == null) {\n      throw Error('An invalid \"children\" prop has been specified. ' + 'Value should be a React component. ' + (\"\\\"\" + (children === null ? 'null' : typeof children) + \"\\\" was specified.\"));\n    }\n\n    switch (direction) {\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n\n      default:\n        throw Error('An invalid \"direction\" prop has been specified. ' + 'Value should be either \"ltr\" or \"rtl\". ' + (\"\\\"\" + direction + \"\\\" was specified.\"));\n    }\n\n    if (typeof width !== 'number') {\n      throw Error('An invalid \"width\" prop has been specified. ' + 'Grids must specify a number for width. ' + (\"\\\"\" + (width === null ? 'null' : typeof width) + \"\\\" was specified.\"));\n    }\n\n    if (typeof height !== 'number') {\n      throw Error('An invalid \"height\" prop has been specified. ' + 'Grids must specify a number for height. ' + (\"\\\"\" + (height === null ? 'null' : typeof height) + \"\\\" was specified.\"));\n    }\n  }\n};\n\nvar DEFAULT_ESTIMATED_ITEM_SIZE = 50;\n\nvar getEstimatedTotalHeight = function getEstimatedTotalHeight(_ref, _ref2) {\n  var rowCount = _ref.rowCount;\n  var rowMetadataMap = _ref2.rowMetadataMap,\n      estimatedRowHeight = _ref2.estimatedRowHeight,\n      lastMeasuredRowIndex = _ref2.lastMeasuredRowIndex;\n  var totalSizeOfMeasuredRows = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredRowIndex >= rowCount) {\n    lastMeasuredRowIndex = rowCount - 1;\n  }\n\n  if (lastMeasuredRowIndex >= 0) {\n    var itemMetadata = rowMetadataMap[lastMeasuredRowIndex];\n    totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;\n  }\n\n  var numUnmeasuredItems = rowCount - lastMeasuredRowIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedRowHeight;\n  return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;\n};\n\nvar getEstimatedTotalWidth = function getEstimatedTotalWidth(_ref3, _ref4) {\n  var columnCount = _ref3.columnCount;\n  var columnMetadataMap = _ref4.columnMetadataMap,\n      estimatedColumnWidth = _ref4.estimatedColumnWidth,\n      lastMeasuredColumnIndex = _ref4.lastMeasuredColumnIndex;\n  var totalSizeOfMeasuredRows = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredColumnIndex >= columnCount) {\n    lastMeasuredColumnIndex = columnCount - 1;\n  }\n\n  if (lastMeasuredColumnIndex >= 0) {\n    var itemMetadata = columnMetadataMap[lastMeasuredColumnIndex];\n    totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;\n  }\n\n  var numUnmeasuredItems = columnCount - lastMeasuredColumnIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedColumnWidth;\n  return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;\n};\n\nvar getItemMetadata = function getItemMetadata(itemType, props, index, instanceProps) {\n  var itemMetadataMap, itemSize, lastMeasuredIndex;\n\n  if (itemType === 'column') {\n    itemMetadataMap = instanceProps.columnMetadataMap;\n    itemSize = props.columnWidth;\n    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;\n  } else {\n    itemMetadataMap = instanceProps.rowMetadataMap;\n    itemSize = props.rowHeight;\n    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;\n  }\n\n  if (index > lastMeasuredIndex) {\n    var offset = 0;\n\n    if (lastMeasuredIndex >= 0) {\n      var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (var i = lastMeasuredIndex + 1; i <= index; i++) {\n      var size = itemSize(i);\n      itemMetadataMap[i] = {\n        offset: offset,\n        size: size\n      };\n      offset += size;\n    }\n\n    if (itemType === 'column') {\n      instanceProps.lastMeasuredColumnIndex = index;\n    } else {\n      instanceProps.lastMeasuredRowIndex = index;\n    }\n  }\n\n  return itemMetadataMap[index];\n};\n\nvar findNearestItem = function findNearestItem(itemType, props, instanceProps, offset) {\n  var itemMetadataMap, lastMeasuredIndex;\n\n  if (itemType === 'column') {\n    itemMetadataMap = instanceProps.columnMetadataMap;\n    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;\n  } else {\n    itemMetadataMap = instanceProps.rowMetadataMap;\n    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;\n  }\n\n  var lastMeasuredItemOffset = lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch(itemType, props, instanceProps, lastMeasuredIndex, 0, offset);\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch(itemType, props, instanceProps, Math.max(0, lastMeasuredIndex), offset);\n  }\n};\n\nvar findNearestItemBinarySearch = function findNearestItemBinarySearch(itemType, props, instanceProps, high, low, offset) {\n  while (low <= high) {\n    var middle = low + Math.floor((high - low) / 2);\n    var currentOffset = getItemMetadata(itemType, props, middle, instanceProps).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nvar findNearestItemExponentialSearch = function findNearestItemExponentialSearch(itemType, props, instanceProps, index, offset) {\n  var itemCount = itemType === 'column' ? props.columnCount : props.rowCount;\n  var interval = 1;\n\n  while (index < itemCount && getItemMetadata(itemType, props, index, instanceProps).offset < offset) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch(itemType, props, instanceProps, Math.min(index, itemCount - 1), Math.floor(index / 2), offset);\n};\n\nvar getOffsetForIndexAndAlignment = function getOffsetForIndexAndAlignment(itemType, props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n  var size = itemType === 'column' ? props.width : props.height;\n  var itemMetadata = getItemMetadata(itemType, props, index, instanceProps); // Get estimated total size after ItemMetadata is computed,\n  // To ensure it reflects actual measurements instead of just estimates.\n\n  var estimatedTotalSize = itemType === 'column' ? getEstimatedTotalWidth(props, instanceProps) : getEstimatedTotalHeight(props, instanceProps);\n  var maxOffset = Math.max(0, Math.min(estimatedTotalSize - size, itemMetadata.offset));\n  var minOffset = Math.max(0, itemMetadata.offset - size + scrollbarSize + itemMetadata.size);\n\n  if (align === 'smart') {\n    if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n      align = 'auto';\n    } else {\n      align = 'center';\n    }\n  }\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n    case 'auto':\n    default:\n      if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n        return scrollOffset;\n      } else if (minOffset > maxOffset) {\n        // Because we only take into account the scrollbar size when calculating minOffset\n        // this value can be larger than maxOffset when at the end of the list\n        return minOffset;\n      } else if (scrollOffset < minOffset) {\n        return minOffset;\n      } else {\n        return maxOffset;\n      }\n\n  }\n};\n\nvar VariableSizeGrid = /*#__PURE__*/createGridComponent({\n  getColumnOffset: function getColumnOffset(props, index, instanceProps) {\n    return getItemMetadata('column', props, index, instanceProps).offset;\n  },\n  getColumnStartIndexForOffset: function getColumnStartIndexForOffset(props, scrollLeft, instanceProps) {\n    return findNearestItem('column', props, instanceProps, scrollLeft);\n  },\n  getColumnStopIndexForStartIndex: function getColumnStopIndexForStartIndex(props, startIndex, scrollLeft, instanceProps) {\n    var columnCount = props.columnCount,\n        width = props.width;\n    var itemMetadata = getItemMetadata('column', props, startIndex, instanceProps);\n    var maxOffset = scrollLeft + width;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n\n    while (stopIndex < columnCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata('column', props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n  getColumnWidth: function getColumnWidth(props, index, instanceProps) {\n    return instanceProps.columnMetadataMap[index].size;\n  },\n  getEstimatedTotalHeight: getEstimatedTotalHeight,\n  getEstimatedTotalWidth: getEstimatedTotalWidth,\n  getOffsetForColumnAndAlignment: function getOffsetForColumnAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    return getOffsetForIndexAndAlignment('column', props, index, align, scrollOffset, instanceProps, scrollbarSize);\n  },\n  getOffsetForRowAndAlignment: function getOffsetForRowAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    return getOffsetForIndexAndAlignment('row', props, index, align, scrollOffset, instanceProps, scrollbarSize);\n  },\n  getRowOffset: function getRowOffset(props, index, instanceProps) {\n    return getItemMetadata('row', props, index, instanceProps).offset;\n  },\n  getRowHeight: function getRowHeight(props, index, instanceProps) {\n    return instanceProps.rowMetadataMap[index].size;\n  },\n  getRowStartIndexForOffset: function getRowStartIndexForOffset(props, scrollTop, instanceProps) {\n    return findNearestItem('row', props, instanceProps, scrollTop);\n  },\n  getRowStopIndexForStartIndex: function getRowStopIndexForStartIndex(props, startIndex, scrollTop, instanceProps) {\n    var rowCount = props.rowCount,\n        height = props.height;\n    var itemMetadata = getItemMetadata('row', props, startIndex, instanceProps);\n    var maxOffset = scrollTop + height;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n\n    while (stopIndex < rowCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata('row', props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n  initInstanceProps: function initInstanceProps(props, instance) {\n    var _ref5 = props,\n        estimatedColumnWidth = _ref5.estimatedColumnWidth,\n        estimatedRowHeight = _ref5.estimatedRowHeight;\n    var instanceProps = {\n      columnMetadataMap: {},\n      estimatedColumnWidth: estimatedColumnWidth || DEFAULT_ESTIMATED_ITEM_SIZE,\n      estimatedRowHeight: estimatedRowHeight || DEFAULT_ESTIMATED_ITEM_SIZE,\n      lastMeasuredColumnIndex: -1,\n      lastMeasuredRowIndex: -1,\n      rowMetadataMap: {}\n    };\n\n    instance.resetAfterColumnIndex = function (columnIndex, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n\n      instance.resetAfterIndices({\n        columnIndex: columnIndex,\n        shouldForceUpdate: shouldForceUpdate\n      });\n    };\n\n    instance.resetAfterRowIndex = function (rowIndex, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n\n      instance.resetAfterIndices({\n        rowIndex: rowIndex,\n        shouldForceUpdate: shouldForceUpdate\n      });\n    };\n\n    instance.resetAfterIndices = function (_ref6) {\n      var columnIndex = _ref6.columnIndex,\n          rowIndex = _ref6.rowIndex,\n          _ref6$shouldForceUpda = _ref6.shouldForceUpdate,\n          shouldForceUpdate = _ref6$shouldForceUpda === void 0 ? true : _ref6$shouldForceUpda;\n\n      if (typeof columnIndex === 'number') {\n        instanceProps.lastMeasuredColumnIndex = Math.min(instanceProps.lastMeasuredColumnIndex, columnIndex - 1);\n      }\n\n      if (typeof rowIndex === 'number') {\n        instanceProps.lastMeasuredRowIndex = Math.min(instanceProps.lastMeasuredRowIndex, rowIndex - 1);\n      } // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n\n\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n  shouldResetStyleCacheOnItemSizeChange: false,\n  validateProps: function validateProps(_ref7) {\n    var columnWidth = _ref7.columnWidth,\n        rowHeight = _ref7.rowHeight;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof columnWidth !== 'function') {\n        throw Error('An invalid \"columnWidth\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (columnWidth === null ? 'null' : typeof columnWidth) + \"\\\" was specified.\"));\n      } else if (typeof rowHeight !== 'function') {\n        throw Error('An invalid \"rowHeight\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (rowHeight === null ? 'null' : typeof rowHeight) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\nvar IS_SCROLLING_DEBOUNCE_INTERVAL$1 = 150;\n\nvar defaultItemKey$1 = function defaultItemKey(index, data) {\n  return index;\n}; // In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\n\n\nvar devWarningsDirection = null;\nvar devWarningsTagName$1 = null;\n\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsDirection = /*#__PURE__*/new WeakSet();\n    devWarningsTagName$1 = /*#__PURE__*/new WeakSet();\n  }\n}\n\nfunction createListComponent(_ref) {\n  var _class;\n\n  var getItemOffset = _ref.getItemOffset,\n      getEstimatedTotalSize = _ref.getEstimatedTotalSize,\n      getItemSize = _ref.getItemSize,\n      getOffsetForIndexAndAlignment = _ref.getOffsetForIndexAndAlignment,\n      getStartIndexForOffset = _ref.getStartIndexForOffset,\n      getStopIndexForStartIndex = _ref.getStopIndexForStartIndex,\n      initInstanceProps = _ref.initInstanceProps,\n      shouldResetStyleCacheOnItemSizeChange = _ref.shouldResetStyleCacheOnItemSizeChange,\n      validateProps = _ref.validateProps;\n  return _class = /*#__PURE__*/function (_PureComponent) {\n    _inheritsLoose(List, _PureComponent);\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    function List(props) {\n      var _this;\n\n      _this = _PureComponent.call(this, props) || this;\n      _this._instanceProps = initInstanceProps(_this.props, _assertThisInitialized(_this));\n      _this._outerRef = void 0;\n      _this._resetIsScrollingTimeoutId = null;\n      _this.state = {\n        instance: _assertThisInitialized(_this),\n        isScrolling: false,\n        scrollDirection: 'forward',\n        scrollOffset: typeof _this.props.initialScrollOffset === 'number' ? _this.props.initialScrollOffset : 0,\n        scrollUpdateWasRequested: false\n      };\n      _this._callOnItemsRendered = void 0;\n      _this._callOnItemsRendered = memoizeOne(function (overscanStartIndex, overscanStopIndex, visibleStartIndex, visibleStopIndex) {\n        return _this.props.onItemsRendered({\n          overscanStartIndex: overscanStartIndex,\n          overscanStopIndex: overscanStopIndex,\n          visibleStartIndex: visibleStartIndex,\n          visibleStopIndex: visibleStopIndex\n        });\n      });\n      _this._callOnScroll = void 0;\n      _this._callOnScroll = memoizeOne(function (scrollDirection, scrollOffset, scrollUpdateWasRequested) {\n        return _this.props.onScroll({\n          scrollDirection: scrollDirection,\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: scrollUpdateWasRequested\n        });\n      });\n      _this._getItemStyle = void 0;\n\n      _this._getItemStyle = function (index) {\n        var _this$props = _this.props,\n            direction = _this$props.direction,\n            itemSize = _this$props.itemSize,\n            layout = _this$props.layout;\n\n        var itemStyleCache = _this._getItemStyleCache(shouldResetStyleCacheOnItemSizeChange && itemSize, shouldResetStyleCacheOnItemSizeChange && layout, shouldResetStyleCacheOnItemSizeChange && direction);\n\n        var style;\n\n        if (itemStyleCache.hasOwnProperty(index)) {\n          style = itemStyleCache[index];\n        } else {\n          var _offset = getItemOffset(_this.props, index, _this._instanceProps);\n\n          var size = getItemSize(_this.props, index, _this._instanceProps); // TODO Deprecate direction \"horizontal\"\n\n          var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n          var isRtl = direction === 'rtl';\n          var offsetHorizontal = isHorizontal ? _offset : 0;\n          itemStyleCache[index] = style = {\n            position: 'absolute',\n            left: isRtl ? undefined : offsetHorizontal,\n            right: isRtl ? offsetHorizontal : undefined,\n            top: !isHorizontal ? _offset : 0,\n            height: !isHorizontal ? size : '100%',\n            width: isHorizontal ? size : '100%'\n          };\n        }\n\n        return style;\n      };\n\n      _this._getItemStyleCache = void 0;\n      _this._getItemStyleCache = memoizeOne(function (_, __, ___) {\n        return {};\n      });\n\n      _this._onScrollHorizontal = function (event) {\n        var _event$currentTarget = event.currentTarget,\n            clientWidth = _event$currentTarget.clientWidth,\n            scrollLeft = _event$currentTarget.scrollLeft,\n            scrollWidth = _event$currentTarget.scrollWidth;\n\n        _this.setState(function (prevState) {\n          if (prevState.scrollOffset === scrollLeft) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          }\n\n          var direction = _this.props.direction;\n          var scrollOffset = scrollLeft;\n\n          if (direction === 'rtl') {\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n            // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n            // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                scrollOffset = -scrollLeft;\n                break;\n\n              case 'positive-descending':\n                scrollOffset = scrollWidth - clientWidth - scrollLeft;\n                break;\n            }\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n\n          scrollOffset = Math.max(0, Math.min(scrollOffset, scrollWidth - clientWidth));\n          return {\n            isScrolling: true,\n            scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n            scrollOffset: scrollOffset,\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n\n      _this._onScrollVertical = function (event) {\n        var _event$currentTarget2 = event.currentTarget,\n            clientHeight = _event$currentTarget2.clientHeight,\n            scrollHeight = _event$currentTarget2.scrollHeight,\n            scrollTop = _event$currentTarget2.scrollTop;\n\n        _this.setState(function (prevState) {\n          if (prevState.scrollOffset === scrollTop) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n\n          var scrollOffset = Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight));\n          return {\n            isScrolling: true,\n            scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n            scrollOffset: scrollOffset,\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n\n      _this._outerRefSetter = function (ref) {\n        var outerRef = _this.props.outerRef;\n        _this._outerRef = ref;\n\n        if (typeof outerRef === 'function') {\n          outerRef(ref);\n        } else if (outerRef != null && typeof outerRef === 'object' && outerRef.hasOwnProperty('current')) {\n          outerRef.current = ref;\n        }\n      };\n\n      _this._resetIsScrollingDebounced = function () {\n        if (_this._resetIsScrollingTimeoutId !== null) {\n          cancelTimeout(_this._resetIsScrollingTimeoutId);\n        }\n\n        _this._resetIsScrollingTimeoutId = requestTimeout(_this._resetIsScrolling, IS_SCROLLING_DEBOUNCE_INTERVAL$1);\n      };\n\n      _this._resetIsScrolling = function () {\n        _this._resetIsScrollingTimeoutId = null;\n\n        _this.setState({\n          isScrolling: false\n        }, function () {\n          // Clear style cache after state update has been committed.\n          // This way we don't break pure sCU for items that don't use isScrolling param.\n          _this._getItemStyleCache(-1, null);\n        });\n      };\n\n      return _this;\n    }\n\n    List.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n      validateSharedProps$1(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    };\n\n    var _proto = List.prototype;\n\n    _proto.scrollTo = function scrollTo(scrollOffset) {\n      scrollOffset = Math.max(0, scrollOffset);\n      this.setState(function (prevState) {\n        if (prevState.scrollOffset === scrollOffset) {\n          return null;\n        }\n\n        return {\n          scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: true\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _proto.scrollToItem = function scrollToItem(index, align) {\n      if (align === void 0) {\n        align = 'auto';\n      }\n\n      var _this$props2 = this.props,\n          itemCount = _this$props2.itemCount,\n          layout = _this$props2.layout;\n      var scrollOffset = this.state.scrollOffset;\n      index = Math.max(0, Math.min(index, itemCount - 1)); // The scrollbar size should be considered when scrolling an item into view, to ensure it's fully visible.\n      // But we only need to account for its size when it's actually visible.\n      // This is an edge case for lists; normally they only scroll in the dominant direction.\n\n      var scrollbarSize = 0;\n\n      if (this._outerRef) {\n        var outerRef = this._outerRef;\n\n        if (layout === 'vertical') {\n          scrollbarSize = outerRef.scrollWidth > outerRef.clientWidth ? getScrollbarSize() : 0;\n        } else {\n          scrollbarSize = outerRef.scrollHeight > outerRef.clientHeight ? getScrollbarSize() : 0;\n        }\n      }\n\n      this.scrollTo(getOffsetForIndexAndAlignment(this.props, index, align, scrollOffset, this._instanceProps, scrollbarSize));\n    };\n\n    _proto.componentDidMount = function componentDidMount() {\n      var _this$props3 = this.props,\n          direction = _this$props3.direction,\n          initialScrollOffset = _this$props3.initialScrollOffset,\n          layout = _this$props3.layout;\n\n      if (typeof initialScrollOffset === 'number' && this._outerRef != null) {\n        var outerRef = this._outerRef; // TODO Deprecate direction \"horizontal\"\n\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          outerRef.scrollLeft = initialScrollOffset;\n        } else {\n          outerRef.scrollTop = initialScrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate() {\n      var _this$props4 = this.props,\n          direction = _this$props4.direction,\n          layout = _this$props4.layout;\n      var _this$state = this.state,\n          scrollOffset = _this$state.scrollOffset,\n          scrollUpdateWasRequested = _this$state.scrollUpdateWasRequested;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        var outerRef = this._outerRef; // TODO Deprecate direction \"horizontal\"\n\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          if (direction === 'rtl') {\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n            // So we need to determine which browser behavior we're dealing with, and mimic it.\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                outerRef.scrollLeft = -scrollOffset;\n                break;\n\n              case 'positive-ascending':\n                outerRef.scrollLeft = scrollOffset;\n                break;\n\n              default:\n                var clientWidth = outerRef.clientWidth,\n                    scrollWidth = outerRef.scrollWidth;\n                outerRef.scrollLeft = scrollWidth - clientWidth - scrollOffset;\n                break;\n            }\n          } else {\n            outerRef.scrollLeft = scrollOffset;\n          }\n        } else {\n          outerRef.scrollTop = scrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    };\n\n    _proto.render = function render() {\n      var _this$props5 = this.props,\n          children = _this$props5.children,\n          className = _this$props5.className,\n          direction = _this$props5.direction,\n          height = _this$props5.height,\n          innerRef = _this$props5.innerRef,\n          innerElementType = _this$props5.innerElementType,\n          innerTagName = _this$props5.innerTagName,\n          itemCount = _this$props5.itemCount,\n          itemData = _this$props5.itemData,\n          _this$props5$itemKey = _this$props5.itemKey,\n          itemKey = _this$props5$itemKey === void 0 ? defaultItemKey$1 : _this$props5$itemKey,\n          layout = _this$props5.layout,\n          outerElementType = _this$props5.outerElementType,\n          outerTagName = _this$props5.outerTagName,\n          style = _this$props5.style,\n          useIsScrolling = _this$props5.useIsScrolling,\n          width = _this$props5.width;\n      var isScrolling = this.state.isScrolling; // TODO Deprecate direction \"horizontal\"\n\n      var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n      var onScroll = isHorizontal ? this._onScrollHorizontal : this._onScrollVertical;\n\n      var _this$_getRangeToRend = this._getRangeToRender(),\n          startIndex = _this$_getRangeToRend[0],\n          stopIndex = _this$_getRangeToRend[1];\n\n      var items = [];\n\n      if (itemCount > 0) {\n        for (var _index = startIndex; _index <= stopIndex; _index++) {\n          items.push(createElement(children, {\n            data: itemData,\n            key: itemKey(_index, itemData),\n            index: _index,\n            isScrolling: useIsScrolling ? isScrolling : undefined,\n            style: this._getItemStyle(_index)\n          }));\n        }\n      } // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n\n\n      var estimatedTotalSize = getEstimatedTotalSize(this.props, this._instanceProps);\n      return createElement(outerElementType || outerTagName || 'div', {\n        className: className,\n        onScroll: onScroll,\n        ref: this._outerRefSetter,\n        style: _extends({\n          position: 'relative',\n          height: height,\n          width: width,\n          overflow: 'auto',\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform',\n          direction: direction\n        }, style)\n      }, createElement(innerElementType || innerTagName || 'div', {\n        children: items,\n        ref: innerRef,\n        style: {\n          height: isHorizontal ? '100%' : estimatedTotalSize,\n          pointerEvents: isScrolling ? 'none' : undefined,\n          width: isHorizontal ? estimatedTotalSize : '100%'\n        }\n      }));\n    };\n\n    _proto._callPropsCallbacks = function _callPropsCallbacks() {\n      if (typeof this.props.onItemsRendered === 'function') {\n        var itemCount = this.props.itemCount;\n\n        if (itemCount > 0) {\n          var _this$_getRangeToRend2 = this._getRangeToRender(),\n              _overscanStartIndex = _this$_getRangeToRend2[0],\n              _overscanStopIndex = _this$_getRangeToRend2[1],\n              _visibleStartIndex = _this$_getRangeToRend2[2],\n              _visibleStopIndex = _this$_getRangeToRend2[3];\n\n          this._callOnItemsRendered(_overscanStartIndex, _overscanStopIndex, _visibleStartIndex, _visibleStopIndex);\n        }\n      }\n\n      if (typeof this.props.onScroll === 'function') {\n        var _this$state2 = this.state,\n            _scrollDirection = _this$state2.scrollDirection,\n            _scrollOffset = _this$state2.scrollOffset,\n            _scrollUpdateWasRequested = _this$state2.scrollUpdateWasRequested;\n\n        this._callOnScroll(_scrollDirection, _scrollOffset, _scrollUpdateWasRequested);\n      }\n    } // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    ;\n\n    _proto._getRangeToRender = function _getRangeToRender() {\n      var _this$props6 = this.props,\n          itemCount = _this$props6.itemCount,\n          overscanCount = _this$props6.overscanCount;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollDirection = _this$state3.scrollDirection,\n          scrollOffset = _this$state3.scrollOffset;\n\n      if (itemCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      var startIndex = getStartIndexForOffset(this.props, scrollOffset, this._instanceProps);\n      var stopIndex = getStopIndexForStartIndex(this.props, startIndex, scrollOffset, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || scrollDirection === 'backward' ? Math.max(1, overscanCount) : 1;\n      var overscanForward = !isScrolling || scrollDirection === 'forward' ? Math.max(1, overscanCount) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(itemCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n\n    return List;\n  }(PureComponent), _class.defaultProps = {\n    direction: 'ltr',\n    itemData: undefined,\n    layout: 'vertical',\n    overscanCount: 2,\n    useIsScrolling: false\n  }, _class;\n} // NOTE: I considered further wrapping individual items with a pure ListItem component.\n// This would avoid ever calling the render function for the same index more than once,\n// But it would also add the overhead of a lot of components/fibers.\n// I assume people already do this (render function returning a class component),\n// So my doing it would just unnecessarily double the wrappers.\n\nvar validateSharedProps$1 = function validateSharedProps(_ref2, _ref3) {\n  var children = _ref2.children,\n      direction = _ref2.direction,\n      height = _ref2.height,\n      layout = _ref2.layout,\n      innerTagName = _ref2.innerTagName,\n      outerTagName = _ref2.outerTagName,\n      width = _ref2.width;\n  var instance = _ref3.instance;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName$1 && !devWarningsTagName$1.has(instance)) {\n        devWarningsTagName$1.add(instance);\n        console.warn('The innerTagName and outerTagName props have been deprecated. ' + 'Please use the innerElementType and outerElementType props instead.');\n      }\n    } // TODO Deprecate direction \"horizontal\"\n\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n\n    switch (direction) {\n      case 'horizontal':\n      case 'vertical':\n        if (devWarningsDirection && !devWarningsDirection.has(instance)) {\n          devWarningsDirection.add(instance);\n          console.warn('The direction prop should be either \"ltr\" (default) or \"rtl\". ' + 'Please use the layout prop to specify \"vertical\" (default) or \"horizontal\" orientation.');\n        }\n\n        break;\n\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n\n      default:\n        throw Error('An invalid \"direction\" prop has been specified. ' + 'Value should be either \"ltr\" or \"rtl\". ' + (\"\\\"\" + direction + \"\\\" was specified.\"));\n    }\n\n    switch (layout) {\n      case 'horizontal':\n      case 'vertical':\n        // Valid values\n        break;\n\n      default:\n        throw Error('An invalid \"layout\" prop has been specified. ' + 'Value should be either \"horizontal\" or \"vertical\". ' + (\"\\\"\" + layout + \"\\\" was specified.\"));\n    }\n\n    if (children == null) {\n      throw Error('An invalid \"children\" prop has been specified. ' + 'Value should be a React component. ' + (\"\\\"\" + (children === null ? 'null' : typeof children) + \"\\\" was specified.\"));\n    }\n\n    if (isHorizontal && typeof width !== 'number') {\n      throw Error('An invalid \"width\" prop has been specified. ' + 'Horizontal lists must specify a number for width. ' + (\"\\\"\" + (width === null ? 'null' : typeof width) + \"\\\" was specified.\"));\n    } else if (!isHorizontal && typeof height !== 'number') {\n      throw Error('An invalid \"height\" prop has been specified. ' + 'Vertical lists must specify a number for height. ' + (\"\\\"\" + (height === null ? 'null' : typeof height) + \"\\\" was specified.\"));\n    }\n  }\n};\n\nvar DEFAULT_ESTIMATED_ITEM_SIZE$1 = 50;\n\nvar getItemMetadata$1 = function getItemMetadata(props, index, instanceProps) {\n  var _ref = props,\n      itemSize = _ref.itemSize;\n  var itemMetadataMap = instanceProps.itemMetadataMap,\n      lastMeasuredIndex = instanceProps.lastMeasuredIndex;\n\n  if (index > lastMeasuredIndex) {\n    var offset = 0;\n\n    if (lastMeasuredIndex >= 0) {\n      var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (var i = lastMeasuredIndex + 1; i <= index; i++) {\n      var size = itemSize(i);\n      itemMetadataMap[i] = {\n        offset: offset,\n        size: size\n      };\n      offset += size;\n    }\n\n    instanceProps.lastMeasuredIndex = index;\n  }\n\n  return itemMetadataMap[index];\n};\n\nvar findNearestItem$1 = function findNearestItem(props, instanceProps, offset) {\n  var itemMetadataMap = instanceProps.itemMetadataMap,\n      lastMeasuredIndex = instanceProps.lastMeasuredIndex;\n  var lastMeasuredItemOffset = lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch$1(props, instanceProps, lastMeasuredIndex, 0, offset);\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch$1(props, instanceProps, Math.max(0, lastMeasuredIndex), offset);\n  }\n};\n\nvar findNearestItemBinarySearch$1 = function findNearestItemBinarySearch(props, instanceProps, high, low, offset) {\n  while (low <= high) {\n    var middle = low + Math.floor((high - low) / 2);\n    var currentOffset = getItemMetadata$1(props, middle, instanceProps).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nvar findNearestItemExponentialSearch$1 = function findNearestItemExponentialSearch(props, instanceProps, index, offset) {\n  var itemCount = props.itemCount;\n  var interval = 1;\n\n  while (index < itemCount && getItemMetadata$1(props, index, instanceProps).offset < offset) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch$1(props, instanceProps, Math.min(index, itemCount - 1), Math.floor(index / 2), offset);\n};\n\nvar getEstimatedTotalSize = function getEstimatedTotalSize(_ref2, _ref3) {\n  var itemCount = _ref2.itemCount;\n  var itemMetadataMap = _ref3.itemMetadataMap,\n      estimatedItemSize = _ref3.estimatedItemSize,\n      lastMeasuredIndex = _ref3.lastMeasuredIndex;\n  var totalSizeOfMeasuredItems = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredIndex >= itemCount) {\n    lastMeasuredIndex = itemCount - 1;\n  }\n\n  if (lastMeasuredIndex >= 0) {\n    var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n    totalSizeOfMeasuredItems = itemMetadata.offset + itemMetadata.size;\n  }\n\n  var numUnmeasuredItems = itemCount - lastMeasuredIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedItemSize;\n  return totalSizeOfMeasuredItems + totalSizeOfUnmeasuredItems;\n};\n\nvar VariableSizeList = /*#__PURE__*/createListComponent({\n  getItemOffset: function getItemOffset(props, index, instanceProps) {\n    return getItemMetadata$1(props, index, instanceProps).offset;\n  },\n  getItemSize: function getItemSize(props, index, instanceProps) {\n    return instanceProps.itemMetadataMap[index].size;\n  },\n  getEstimatedTotalSize: getEstimatedTotalSize,\n  getOffsetForIndexAndAlignment: function getOffsetForIndexAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    var direction = props.direction,\n        height = props.height,\n        layout = props.layout,\n        width = props.width; // TODO Deprecate direction \"horizontal\"\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var itemMetadata = getItemMetadata$1(props, index, instanceProps); // Get estimated total size after ItemMetadata is computed,\n    // To ensure it reflects actual measurements instead of just estimates.\n\n    var estimatedTotalSize = getEstimatedTotalSize(props, instanceProps);\n    var maxOffset = Math.max(0, Math.min(estimatedTotalSize - size, itemMetadata.offset));\n    var minOffset = Math.max(0, itemMetadata.offset - size + itemMetadata.size + scrollbarSize);\n\n    if (align === 'smart') {\n      if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        return Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getStartIndexForOffset: function getStartIndexForOffset(props, offset, instanceProps) {\n    return findNearestItem$1(props, instanceProps, offset);\n  },\n  getStopIndexForStartIndex: function getStopIndexForStartIndex(props, startIndex, scrollOffset, instanceProps) {\n    var direction = props.direction,\n        height = props.height,\n        itemCount = props.itemCount,\n        layout = props.layout,\n        width = props.width; // TODO Deprecate direction \"horizontal\"\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var itemMetadata = getItemMetadata$1(props, startIndex, instanceProps);\n    var maxOffset = scrollOffset + size;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n\n    while (stopIndex < itemCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata$1(props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n  initInstanceProps: function initInstanceProps(props, instance) {\n    var _ref4 = props,\n        estimatedItemSize = _ref4.estimatedItemSize;\n    var instanceProps = {\n      itemMetadataMap: {},\n      estimatedItemSize: estimatedItemSize || DEFAULT_ESTIMATED_ITEM_SIZE$1,\n      lastMeasuredIndex: -1\n    };\n\n    instance.resetAfterIndex = function (index, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n\n      instanceProps.lastMeasuredIndex = Math.min(instanceProps.lastMeasuredIndex, index - 1); // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n  shouldResetStyleCacheOnItemSizeChange: false,\n  validateProps: function validateProps(_ref5) {\n    var itemSize = _ref5.itemSize;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'function') {\n        throw Error('An invalid \"itemSize\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (itemSize === null ? 'null' : typeof itemSize) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\nvar FixedSizeGrid = /*#__PURE__*/createGridComponent({\n  getColumnOffset: function getColumnOffset(_ref, index) {\n    var columnWidth = _ref.columnWidth;\n    return index * columnWidth;\n  },\n  getColumnWidth: function getColumnWidth(_ref2, index) {\n    var columnWidth = _ref2.columnWidth;\n    return columnWidth;\n  },\n  getRowOffset: function getRowOffset(_ref3, index) {\n    var rowHeight = _ref3.rowHeight;\n    return index * rowHeight;\n  },\n  getRowHeight: function getRowHeight(_ref4, index) {\n    var rowHeight = _ref4.rowHeight;\n    return rowHeight;\n  },\n  getEstimatedTotalHeight: function getEstimatedTotalHeight(_ref5) {\n    var rowCount = _ref5.rowCount,\n        rowHeight = _ref5.rowHeight;\n    return rowHeight * rowCount;\n  },\n  getEstimatedTotalWidth: function getEstimatedTotalWidth(_ref6) {\n    var columnCount = _ref6.columnCount,\n        columnWidth = _ref6.columnWidth;\n    return columnWidth * columnCount;\n  },\n  getOffsetForColumnAndAlignment: function getOffsetForColumnAndAlignment(_ref7, columnIndex, align, scrollLeft, instanceProps, scrollbarSize) {\n    var columnCount = _ref7.columnCount,\n        columnWidth = _ref7.columnWidth,\n        width = _ref7.width;\n    var lastColumnOffset = Math.max(0, columnCount * columnWidth - width);\n    var maxOffset = Math.min(lastColumnOffset, columnIndex * columnWidth);\n    var minOffset = Math.max(0, columnIndex * columnWidth - width + scrollbarSize + columnWidth);\n\n    if (align === 'smart') {\n      if (scrollLeft >= minOffset - width && scrollLeft <= maxOffset + width) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n        if (middleOffset < Math.ceil(width / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastColumnOffset + Math.floor(width / 2)) {\n          return lastColumnOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n\n      case 'auto':\n      default:\n        if (scrollLeft >= minOffset && scrollLeft <= maxOffset) {\n          return scrollLeft;\n        } else if (minOffset > maxOffset) {\n          // Because we only take into account the scrollbar size when calculating minOffset\n          // this value can be larger than maxOffset when at the end of the list\n          return minOffset;\n        } else if (scrollLeft < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getOffsetForRowAndAlignment: function getOffsetForRowAndAlignment(_ref8, rowIndex, align, scrollTop, instanceProps, scrollbarSize) {\n    var rowHeight = _ref8.rowHeight,\n        height = _ref8.height,\n        rowCount = _ref8.rowCount;\n    var lastRowOffset = Math.max(0, rowCount * rowHeight - height);\n    var maxOffset = Math.min(lastRowOffset, rowIndex * rowHeight);\n    var minOffset = Math.max(0, rowIndex * rowHeight - height + scrollbarSize + rowHeight);\n\n    if (align === 'smart') {\n      if (scrollTop >= minOffset - height && scrollTop <= maxOffset + height) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n        if (middleOffset < Math.ceil(height / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastRowOffset + Math.floor(height / 2)) {\n          return lastRowOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n\n      case 'auto':\n      default:\n        if (scrollTop >= minOffset && scrollTop <= maxOffset) {\n          return scrollTop;\n        } else if (minOffset > maxOffset) {\n          // Because we only take into account the scrollbar size when calculating minOffset\n          // this value can be larger than maxOffset when at the end of the list\n          return minOffset;\n        } else if (scrollTop < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getColumnStartIndexForOffset: function getColumnStartIndexForOffset(_ref9, scrollLeft) {\n    var columnWidth = _ref9.columnWidth,\n        columnCount = _ref9.columnCount;\n    return Math.max(0, Math.min(columnCount - 1, Math.floor(scrollLeft / columnWidth)));\n  },\n  getColumnStopIndexForStartIndex: function getColumnStopIndexForStartIndex(_ref10, startIndex, scrollLeft) {\n    var columnWidth = _ref10.columnWidth,\n        columnCount = _ref10.columnCount,\n        width = _ref10.width;\n    var left = startIndex * columnWidth;\n    var numVisibleColumns = Math.ceil((width + scrollLeft - left) / columnWidth);\n    return Math.max(0, Math.min(columnCount - 1, startIndex + numVisibleColumns - 1 // -1 is because stop index is inclusive\n    ));\n  },\n  getRowStartIndexForOffset: function getRowStartIndexForOffset(_ref11, scrollTop) {\n    var rowHeight = _ref11.rowHeight,\n        rowCount = _ref11.rowCount;\n    return Math.max(0, Math.min(rowCount - 1, Math.floor(scrollTop / rowHeight)));\n  },\n  getRowStopIndexForStartIndex: function getRowStopIndexForStartIndex(_ref12, startIndex, scrollTop) {\n    var rowHeight = _ref12.rowHeight,\n        rowCount = _ref12.rowCount,\n        height = _ref12.height;\n    var top = startIndex * rowHeight;\n    var numVisibleRows = Math.ceil((height + scrollTop - top) / rowHeight);\n    return Math.max(0, Math.min(rowCount - 1, startIndex + numVisibleRows - 1 // -1 is because stop index is inclusive\n    ));\n  },\n  initInstanceProps: function initInstanceProps(props) {// Noop\n  },\n  shouldResetStyleCacheOnItemSizeChange: true,\n  validateProps: function validateProps(_ref13) {\n    var columnWidth = _ref13.columnWidth,\n        rowHeight = _ref13.rowHeight;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof columnWidth !== 'number') {\n        throw Error('An invalid \"columnWidth\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (columnWidth === null ? 'null' : typeof columnWidth) + \"\\\" was specified.\"));\n      }\n\n      if (typeof rowHeight !== 'number') {\n        throw Error('An invalid \"rowHeight\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (rowHeight === null ? 'null' : typeof rowHeight) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\nvar FixedSizeList = /*#__PURE__*/createListComponent({\n  getItemOffset: function getItemOffset(_ref, index) {\n    var itemSize = _ref.itemSize;\n    return index * itemSize;\n  },\n  getItemSize: function getItemSize(_ref2, index) {\n    var itemSize = _ref2.itemSize;\n    return itemSize;\n  },\n  getEstimatedTotalSize: function getEstimatedTotalSize(_ref3) {\n    var itemCount = _ref3.itemCount,\n        itemSize = _ref3.itemSize;\n    return itemSize * itemCount;\n  },\n  getOffsetForIndexAndAlignment: function getOffsetForIndexAndAlignment(_ref4, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    var direction = _ref4.direction,\n        height = _ref4.height,\n        itemCount = _ref4.itemCount,\n        itemSize = _ref4.itemSize,\n        layout = _ref4.layout,\n        width = _ref4.width;\n    // TODO Deprecate direction \"horizontal\"\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var lastItemOffset = Math.max(0, itemCount * itemSize - size);\n    var maxOffset = Math.min(lastItemOffset, index * itemSize);\n    var minOffset = Math.max(0, index * itemSize - size + itemSize + scrollbarSize);\n\n    if (align === 'smart') {\n      if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        {\n          // \"Centered\" offset is usually the average of the min and max.\n          // But near the edges of the list, this doesn't hold true.\n          var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n          if (middleOffset < Math.ceil(size / 2)) {\n            return 0; // near the beginning\n          } else if (middleOffset > lastItemOffset + Math.floor(size / 2)) {\n            return lastItemOffset; // near the end\n          } else {\n            return middleOffset;\n          }\n        }\n\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getStartIndexForOffset: function getStartIndexForOffset(_ref5, offset) {\n    var itemCount = _ref5.itemCount,\n        itemSize = _ref5.itemSize;\n    return Math.max(0, Math.min(itemCount - 1, Math.floor(offset / itemSize)));\n  },\n  getStopIndexForStartIndex: function getStopIndexForStartIndex(_ref6, startIndex, scrollOffset) {\n    var direction = _ref6.direction,\n        height = _ref6.height,\n        itemCount = _ref6.itemCount,\n        itemSize = _ref6.itemSize,\n        layout = _ref6.layout,\n        width = _ref6.width;\n    // TODO Deprecate direction \"horizontal\"\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var offset = startIndex * itemSize;\n    var size = isHorizontal ? width : height;\n    var numVisibleItems = Math.ceil((size + scrollOffset - offset) / itemSize);\n    return Math.max(0, Math.min(itemCount - 1, startIndex + numVisibleItems - 1 // -1 is because stop index is inclusive\n    ));\n  },\n  initInstanceProps: function initInstanceProps(props) {// Noop\n  },\n  shouldResetStyleCacheOnItemSizeChange: true,\n  validateProps: function validateProps(_ref7) {\n    var itemSize = _ref7.itemSize;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'number') {\n        throw Error('An invalid \"itemSize\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (itemSize === null ? 'null' : typeof itemSize) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\n// Pulled from react-compat\n// https://github.com/developit/preact-compat/blob/7c5de00e7c85e2ffd011bf3af02899b63f699d3a/src/index.js#L349\nfunction shallowDiffers(prev, next) {\n  for (var attribute in prev) {\n    if (!(attribute in next)) {\n      return true;\n    }\n  }\n\n  for (var _attribute in next) {\n    if (prev[_attribute] !== next[_attribute]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar _excluded = [\"style\"],\n    _excluded2 = [\"style\"];\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-api.html#reactmemo\n\nfunction areEqual(prevProps, nextProps) {\n  var prevStyle = prevProps.style,\n      prevRest = _objectWithoutPropertiesLoose(prevProps, _excluded);\n\n  var nextStyle = nextProps.style,\n      nextRest = _objectWithoutPropertiesLoose(nextProps, _excluded2);\n\n  return !shallowDiffers(prevStyle, nextStyle) && !shallowDiffers(prevRest, nextRest);\n}\n\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-component.html#shouldcomponentupdate\n\nfunction shouldComponentUpdate(nextProps, nextState) {\n  return !areEqual(this.props, nextProps) || shallowDiffers(this.state, nextState);\n}\n\nexport { FixedSizeGrid, FixedSizeList, VariableSizeGrid, VariableSizeList, areEqual, shouldComponentUpdate };\n//# sourceMappingURL=index.esm.js.map\n","\"use strict\";\n\nmodule.exports = {\n  /**\r\n   * Euclidean distance\r\n   */\n  eudist: function eudist(v1, v2) {\n    var len = v1.length;\n    var sum = 0;\n\n    for (var i = 0; i < len; i++) {\n      var d = (v1[i] || 0) - (v2[i] || 0);\n      sum += d * d;\n    } // Square root not really needed\n\n\n    return sum;\n  },\n  mandist: function mandist(v1, v2) {\n    var len = v1.length;\n    var sum = 0,\n        d = 0;\n\n    for (var i = 0; i < len; i++) {\n      d = (v1[i] || 0) - (v2[i] || 0);\n      sum += d >= 0 ? d : -d;\n    }\n\n    return sum;\n  },\n\n  /**\r\n   * Unidimensional distance\r\n   */\n  dist: function dist(v1, v2, sqrt) {\n    var d = Math.abs(v1 - v2);\n    return sqrt ? d : d * d;\n  }\n};\n//# sourceMappingURL=distance.js.map\n","\"use strict\";\n\nvar Distance = require(\"./distance.js\"),\n    eudist = Distance.eudist,\n    dist = Distance.dist;\n\nmodule.exports = {\n  kmrand: function kmrand(data, k) {\n    var map = {},\n        ks = [],\n        t = k << 2;\n    var len = data.length;\n    var multi = data[0].length > 0;\n\n    while (ks.length < k && t-- > 0) {\n      var d = data[Math.floor(Math.random() * len)];\n      var key = multi ? d.join(\"_\") : \"\".concat(d);\n\n      if (!map[key]) {\n        map[key] = true;\n        ks.push(d);\n      }\n    }\n\n    if (ks.length < k) throw new Error(\"Error initializating clusters\");else return ks;\n  },\n\n  /**\r\n   * K-means++ initial centroid selection\r\n   */\n  kmpp: function kmpp(data, k, fndist) {\n    var distance = fndist || (data[0].length ? eudist : dist);\n    var ks = [],\n        len = data.length;\n    var multi = data[0].length > 0;\n    var map = {}; // First random centroid\n\n    var c = data[Math.floor(Math.random() * len)];\n    var key = multi ? c.join(\"_\") : \"\".concat(c);\n    ks.push(c);\n    map[key] = true; // Retrieve next centroids\n\n    while (ks.length < k) {\n      // Min Distances between current centroids and data points\n      var dists = [],\n          lk = ks.length;\n      var dsum = 0,\n          prs = [];\n\n      for (var i = 0; i < len; i++) {\n        var min = Infinity;\n\n        for (var j = 0; j < lk; j++) {\n          var _dist = distance(data[i], ks[j]);\n\n          if (_dist <= min) min = _dist;\n        }\n\n        dists[i] = min;\n      } // Sum all min distances\n\n\n      for (var _i = 0; _i < len; _i++) {\n        dsum += dists[_i];\n      } // Probabilities and cummulative prob (cumsum)\n\n\n      for (var _i2 = 0; _i2 < len; _i2++) {\n        prs[_i2] = {\n          i: _i2,\n          v: data[_i2],\n          pr: dists[_i2] / dsum,\n          cs: 0\n        };\n      } // Sort Probabilities\n\n\n      prs.sort(function (a, b) {\n        return a.pr - b.pr;\n      }); // Cummulative Probabilities\n\n      prs[0].cs = prs[0].pr;\n\n      for (var _i3 = 1; _i3 < len; _i3++) {\n        prs[_i3].cs = prs[_i3 - 1].cs + prs[_i3].pr;\n      } // Randomize\n\n\n      var rnd = Math.random(); // Gets only the items whose cumsum >= rnd\n\n      var idx = 0;\n\n      while (idx < len - 1 && prs[idx++].cs < rnd) {\n        ;\n      }\n\n      ks.push(prs[idx - 1].v);\n      /*\r\n      let done = false;\r\n      while(!done) {\r\n      \t// this is our new centroid\r\n      \tc = prs[idx-1].v\r\n      \tkey = multi? c.join(\"_\") : `${c}`;\r\n      \tif(!map[key]) {\r\n      \t\tmap[key] = true;\r\n      \t\tks.push(c);\r\n      \t\tdone = true;\r\n      \t}\r\n      \telse {\r\n      \t\tidx++;\r\n      \t}\r\n      }\r\n      */\n    }\n\n    return ks;\n  }\n};\n//# sourceMappingURL=kinit.js.map\n","\"use strict\";\n\n/*jshint esversion: 6 */\nvar Distance = require(\"./distance.js\"),\n    ClusterInit = require(\"./kinit.js\"),\n    eudist = Distance.eudist,\n    mandist = Distance.mandist,\n    absdist = Distance.dist,\n    kmrand = ClusterInit.kmrand,\n    kmpp = ClusterInit.kmpp;\n\nvar MAX = 10000;\n/**\r\n * Inits an array with values\r\n */\n\nfunction init(len, val, v) {\n  v = v || [];\n\n  for (var i = 0; i < len; i++) {\n    v[i] = val;\n  }\n\n  return v;\n}\n\nfunction test(point, fndist) {\n  var multi = Array.isArray(point),\n      ks = this.centroids,\n      k = ks.length; // For each value in data, find the nearest centroid\n\n  var min = Infinity,\n      idx = 0;\n\n  for (var j = 0; j < k; j++) {\n    // Custom, Multidimensional or unidimensional\n    var dist = fndist ? fndist(point, ks[j]) : multi ? eudist(point, ks[j]) : Math.abs(point - ks[j]);\n\n    if (dist <= min) {\n      min = dist;\n      idx = j;\n    }\n  }\n\n  return {\n    idx: idx,\n    centroid: ks[idx]\n  };\n}\n\nfunction skmeans(data, k, initial, maxit, fndist) {\n  var ks = [],\n      old = [],\n      idxs = [],\n      dist = [];\n  var conv = false,\n      it = maxit || MAX;\n  var len = data.length,\n      vlen = data[0].length,\n      multi = vlen > 0;\n  var count = [];\n\n  if (!initial) {\n    var _idxs = {},\n        z = 0;\n\n    while (ks.length < k) {\n      var idx = Math.floor(Math.random() * len);\n\n      if (!_idxs[idx]) {\n        _idxs[idx] = true;\n        ks[z++] = data[idx];\n      }\n    }\n  } else if (initial == \"kmrand\") {\n    ks = kmrand(data, k);\n  } else if (initial == \"kmpp\") {\n    ks = kmpp(data, k, fndist);\n  } else {\n    ks = initial;\n  }\n\n  do {\n    // Reset k count\n    init(k, 0, count); // For each value in data, find the nearest centroid\n\n    for (var i = 0; i < len; i++) {\n      var min = Infinity,\n          _idx = 0;\n\n      for (var j = 0; j < k; j++) {\n        // Custom, Multidimensional or unidimensional\n        var dist = fndist ? fndist(data[i], ks[j]) : multi ? eudist(data[i], ks[j]) : Math.abs(data[i] - ks[j]);\n\n        if (dist <= min) {\n          min = dist;\n          _idx = j;\n        }\n      }\n\n      idxs[i] = _idx; // Index of the selected centroid for that value\n\n      count[_idx]++; // Number of values for this centroid\n    } // Recalculate centroids\n\n\n    var sum = [],\n        old = [],\n        dif = 0;\n\n    if (multi) {\n      for (var _j = 0; _j < k; _j++) {\n        sum[_j] = init(vlen, 0, sum[_j]);\n        old[_j] = ks[_j];\n      }\n    } else {\n      for (var _j2 = 0; _j2 < k; _j2++) {\n        sum[_j2] = 0;\n        old[_j2] = ks[_j2];\n      }\n    } // If multidimensional\n\n\n    if (multi) {\n      for (var _j3 = 0; _j3 < k; _j3++) {\n        ks[_j3] = [];\n      } // Sum values and count for each centroid\n\n\n      for (var _i = 0; _i < len; _i++) {\n        var _idx2 = idxs[_i],\n            // Centroid for that item\n        vsum = sum[_idx2],\n            // Sum values for this centroid\n        vect = data[_i]; // Current vector\n        // Accumulate value on the centroid for current vector\n\n        for (var h = 0; h < vlen; h++) {\n          vsum[h] += vect[h];\n        }\n      } // Calculate the average for each centroid\n\n\n      conv = true;\n\n      for (var _j4 = 0; _j4 < k; _j4++) {\n        var ksj = ks[_j4],\n            // Current centroid\n        sumj = sum[_j4],\n            // Accumulated centroid values\n        oldj = old[_j4],\n            // Old centroid value\n        cj = count[_j4]; // Number of elements for this centroid\n        // New average\n\n        for (var _h = 0; _h < vlen; _h++) {\n          ksj[_h] = sumj[_h] / cj || 0; // New centroid\n        } // Find if centroids have moved\n\n\n        if (conv) {\n          for (var _h2 = 0; _h2 < vlen; _h2++) {\n            if (oldj[_h2] != ksj[_h2]) {\n              conv = false;\n              break;\n            }\n          }\n        }\n      }\n    } // If unidimensional\n    else {\n        // Sum values and count for each centroid\n        for (var _i2 = 0; _i2 < len; _i2++) {\n          var _idx3 = idxs[_i2];\n          sum[_idx3] += data[_i2];\n        } // Calculate the average for each centroid\n\n\n        for (var _j5 = 0; _j5 < k; _j5++) {\n          ks[_j5] = sum[_j5] / count[_j5] || 0; // New centroid\n        } // Find if centroids have moved\n\n\n        conv = true;\n\n        for (var _j6 = 0; _j6 < k; _j6++) {\n          if (old[_j6] != ks[_j6]) {\n            conv = false;\n            break;\n          }\n        }\n      }\n\n    conv = conv || --it <= 0;\n  } while (!conv);\n\n  return {\n    it: (maxit || MAX) - it,\n    k: k,\n    idxs: idxs,\n    centroids: ks,\n    test: test\n  };\n}\n\nmodule.exports = skmeans;\n//# sourceMappingURL=main.js.map\n","\"use strict\"\n\nvar ndarray = require(\"ndarray\")\n\nfunction dtypeToType(dtype) {\n  switch(dtype) {\n    case 'uint8':\n      return Uint8Array;\n    case 'uint16':\n      return Uint16Array;\n    case 'uint32':\n      return Uint32Array;\n    case 'int8':\n      return Int8Array;\n    case 'int16':\n      return Int16Array;\n    case 'int32':\n      return Int32Array;\n    case 'float':\n    case 'float32':\n      return Float32Array;\n    case 'double':\n    case 'float64':\n      return Float64Array;\n    case 'uint8_clamped':\n      return Uint8ClampedArray;\n    case 'generic':\n    case 'buffer':\n    case 'data':\n    case 'dataview':\n      return ArrayBuffer;\n    case 'array':\n      return Array;\n  }\n}\n\nmodule.exports = function zeros(shape, dtype) {\n  dtype = dtype || 'float64';\n  var sz = 1;\n  for(var i=0; i<shape.length; ++i) {\n    sz *= shape[i];\n  }\n  return ndarray(new (dtypeToType(dtype))(sz), shape);\n}\n"],"names":["FullDateInterface","constructor","date","this","fullDate","getTimeInSec","dateString","substring","timeString","yyyy","parseInt","mm","length","undefined","dd","isNaN","Error","dateJS","Date","HH","MM","SS","fractionalStr","FFFFFF","Math","pow","timeInSec","getTime","getTimeInMicroSec","combineDateTime","time","hours","padStart","minutes","seconds","month","day","fractionalSeconds","padEnd","year","parseDA","d","m","y","daysInMonth","parseTM","hh","ss","ffffff","dateTimeToFullDateInterface","dateTime","calculateDecayCorrection","instances","RadionuclideTotalDose","RadionuclideHalfLife","RadiopharmaceuticalStartDateTime","RadiopharmaceuticalStartTime","SeriesDate","scanTimes","SeriesTime","GEPrivatePostInjectionDateTime","results","Array","seriesDateTime","earliestAcquisitionDateTime","timeError","forEach","instance","AcquisitionDate","AcquisitionTime","acquisitionDateTime","fill","calculateScanTimes","startTime","input","calculateStartTime","map","_","index","decayTimeInSec","deepEquals","a","b","isArray","every","val","calculateSUVScalingFactors","CorrectedImage","Units","PhilipsPETPrivateGroup","PatientWeight","PatientSex","PatientSize","includes","DecayCorrection","decayCorrectionArray","weightInGrams","value","hasValidSUVScaleFactor","_instance$PhilipsPETP","_instance$PhilipsPETP2","_instance$PhilipsPETP3","SUVScaleFactor","hasValidActivityConcentrationScaleFactor","_instance$PhilipsPETP4","_instance$PhilipsPETP5","_instance$PhilipsPETP6","ActivityConcentrationScaleFactor","JSON","stringify","suvbsaFactor","suvlbmFactor","suvlbmJenmaFactor","console","warn","inputs","calculateSUVbsaScalingFactor","suvlbmInputs","LBM","weightSizeFactor","calculateSUVlbmScalingFactor","bodyMassIndex","calculateSUVlbmJanmahasatianScalingFactor","result","factors","suvbw","suvbsa","suvlbm","suvlbmJanma","vtkErrorMacro","DEFAULT_VALUES","extend","publicAPI","model","initialValues","arguments","Object","assign","obj","algo","setGetArray","classHierarchy","push","reset","data","getInputData","setCroppingPlanes","getExtent","requestData","inData","outData","scalars","getPointData","getScalars","extent","cropped","croppingPlanes","e","i","max","round","min","slice","sameAsInput","shallowCopy","numberOfComponents","getNumberOfComponents","componentSize","scalarsData","getData","dims","getDimensions","jStride","kStride","beginOffset","stripSize","croppedArray","k","j","begin","end","subarray","set","outImage","origin","getOrigin","direction","getDirection","spacing","getSpacing","croppedScalars","name","getName","values","setScalars","isResetAvailable","find","v","abs","Number","EPSILON","vtkImageCropFilter","vtkImageCropFilter$1","newInstance","EdgeLocator","oriented","edgeMap","Map","initialize","clear","computeEdgeKey","pointId0","pointId1","insertUniqueEdge","newEdgeValue","key","node","get","edgeId","size","insertEdge","isInsertedEdge","getEdgePointIds","n","sqrt","vtkEdgeLocator","MARCHING_CUBE_CASES","EDGES","vtkCaseTable","getCase","getEdge","eid","vtkDebugMacro","contourValue","computeNormals","mergePoints","setGet","ids","voxelScalars","voxelGradients","voxelPts","edgeLocator","getVoxelScalars","s","ii","getVoxelPoints","getPointGradient","g","sp","sm","getVoxelGradients","produceTriangles","cVal","points","tris","normals","CASE_MASK","VERT_MAP","xyz","pId","idx","voxelTris","edgeVerts","t","x0","x1","n0","n1","pBuffer","tBuffer","nBuffer","polydata","getPoints","setData","Float32Array","getPolys","Uint32Array","nData","setNormals","timeEnd","vtkImageMarchingCubes","vtkImageMarchingCubes$1","BOUNDS_MAP","LINE_ARRAY","bounds","getBounds","output","from","getLines","Uint16Array","vtkOutlineFilter","vtkOutlineFilter$1","writeFloatBinary","dataView","offset","float","setFloat32","toPrecision","writeVectorBinary","vector","off","binaryWriter","init","polyData","polys","buffer","ArrayBuffer","DataView","writeHeader","setUint32","getNumberOfCells","writeTriangle","v1","v2","v3","dn","writeFooter","getOutputData","asciiWriter","file","writeSTL","format","BINARY","transform","writer","ASCII","strips","getStrips","computeNormal","STATIC","getClassName","vtkSTLWriter","vtkSTLWriter$1","FormatTypes","ImageBorderMode","CLAMP","REPEAT","MIRROR","InterpolationMode","NEAREST","LINEAR","CUBIC","vtkInterpolationInfo","pointer","increments","scalarType","dataTypeSize","borderMode","interpolationMode","extraInfo","vtkInterpolationWeights","positions","weights","weightExtent","kernelSize","workspace","lastY","lastZ","vtkInterpolationMathFloor","x","integer","floor","floored","error","vtkInterpolationMathRound","vtkInterpolationMathClamp","c","clamp","vtkInterpolationMathWrap","range","wrap","vtkInterpolationMathMirror","range2","mirror","outValue","tolerance","componentOffset","componentCount","slidingWindow","interpolationInfo","interpolationFunc","rowInterpolationFunc","structuredBounds","releaseData","update","supportSize","computeSupportSize","minBound","MIN_SAFE_INTEGER","maxBound","MAX_SAFE_INTEGER","newTol","xdim","ydim","ncomp","component","inPtr","dataType","computeNumberOfComponents","internalUpdate","interpolateXYZ","z","point","p","checkBoundsIJK","iinfo","interpolatePoint","interpolate","inputCount","count","interpolateIJK","isSeparable","precomputeWeightsForExtent","matrix","inExtent","checkExtent","FreePrecomputedWeights","interpolateRow","xIdx","yIdx","zIdx","vtkAbstractImageInterpolator","vtkAbstractImageInterpolator$1","integerRow","isInteger","interpolateNearest","inExt","inInc","numscalars","inIdX0","inIdY0","inIdZ0","startId","interpolateLinear","floorX","floorY","floorZ","fx","fy","fz","inIdX1","inIdY1","inIdZ1","factX0","factX1","factY0","factY1","factZ0","factZ1","i00","i01","i10","i11","rx","ry","rz","ryrz","fyrz","ryfz","fyfz","log","interpolateRowNearest","idX","idY","idZ","outPtr","iX","iY","iZ","inPtr0","interpolateRowLinear","stepX","stepY","stepZ","idXtemp","idYtemp","idZtemp","fX","fY","fZ","t0","t1","vtkTricubicInterpWeights","f","fm1","fd2","ft3","outExt","clipExt","weightType","interpMode","validClip","minExt","maxExt","minBounds","maxBounds","step","inCount","Int16Array","startPositions","constants","region","lcount","inId0","res","inId","l","ll","gg","jj","vtkImageInterpolator","vtkImageInterpolator$1","spanState","spanEnd","rowEnd","sliceEnd","rowIncrement","rowEndIncrement","sliceIncrement","sliceEndIncrement","id","startY","hasStencil","inStencil","spanIndex","spanSliceIncrement","spanSliceEndIncrement","spanCountPointer","spanListPointer","algorithm","target","image","stencil","dataExtent","rowSpan","sliceSpan","volumeSpan","emptyExtent","stencilExtent","botOffset","topOffset","startOffset","yOffset","zOffset","extentListLengths","extentLists","setSpanState","maxCount","spans","endIdX","rowStart","nextSpan","spanIncr","reportProgress","spanCount","tmpIdX","isAtEnd","isInStencil","spanEndId","getArray","array","vtkImagePointDataIterator","vtkImagePointDataIterator$1","SlabMode","MIN","MAX","MEAN","SUM","transformInputSampling","autoCropOutput","outputDimensionality","outputSpacing","outputOrigin","outputDirection","outputExtent","outputScalarType","border","slabMode","slabTrapezoidIntegration","slabNumberOfSlices","slabSliceSpacingFraction","optimization","scalarShift","scalarScale","backgroundColor","resliceAxes","interpolator","usePermuteExecute","superClass","indexMatrix","Float64Array","optimizedTransform","getImageResliceSlabTrap","tmpPtr","inComponents","sampleCount","getImageResliceSlabSum","getImageResliceCompositeMinValue","getImageResliceCompositeMaxValue","getImageResliceCompositeMeanValue","getImageResliceCompositeMeanTrap","getImageResliceCompositeSumValue","getImageResliceCompositeSumTrap","getMTime","mTime","resliceTransform","setResliceAxes","modified","inSpacing","inScalars","inWholeExt","outOrigin","outSpacing","outWholeExt","outDims","imatrix","inCenter","getAutoCroppedOutputBounds","r","tmp","getDataType","numComponents","outScalarsData","newTypedArray","outScalars","setDimensions","setOrigin","setSpacing","setDirection","getIndexMatrix","isPermutationMatrix","canUseNearestNeighbor","setInterpolationMode","setBorderMode","mintol","tol","setTolerance","vtkImageResliceExecute","newmat","nsamples","slabSampleSpacing","perspective","isPerspectiveMatrix","inputScalarType","getComponentOffset","getBorderMode","inDims","fullSize","isA","getInterpolationMode","rescaleScalars","optimizeNearest","getNumberOfTuples","outComponents","xAxis","yAxis","zAxis","floatPtr","background","forceClamping","convertpixels","getConversionFunc","setpixels","getSetPixelsFunc","composite","getCompositeFunc","inPoint0","inPoint1","iter","outPtr0","outPtrIndex","outTmp","interpolatedPtr","interpolatedPoint","span","getId","outIndex","getIndex","idXmin","idXmax","inPtrTmp0","outPtrTmp","inIncX","inIncY","inIncZ","inExtX","inExtY","inExtZ","startIdX","isInBounds","bytesPerPixel","iidX","inPoint","inIdX","inIdY","inIdZ","oc","wasInBounds","pixelIndex","inPoint2","inPoint3","interpolatedPtrIndex","sample","inOrigin","inInvSpacing","applyTransform","numpixels","getMatrix","outMatrix","getIndexToWorld","inMatrix","getWorldToIndex","inDirection","getInverse","imageTransform","isIdentity3x3","buildFromRadian","translate","multiply3x3","invert","MAX_VALUE","transformPoint","getDataTypeMinMax","convert","inputType","useClamping","FLOAT","DOUBLE","inMinMax","checkMin","checkMax","outMinMax","outputMin","outputMax","minMax","set1","dataSize","dataPtr","newTrans","floatData","components","isIdentityMatrix","vtkImageReslice","vtkImageReslice$1","_interopNamespace","__esModule","create","keys","getOwnPropertyDescriptor","defineProperty","enumerable","freeze","React__namespace","__assign","prototype","hasOwnProperty","call","apply","exports","_a","alignmentOption","_b","bgColor","_c","height","_d","width","_e","borderRadius","_f","labelAlignment","_g","baseBgColor","_h","labelColor","_j","labelSize","_k","isLabelVisible","_l","dir","_m","ariaValuemin","_o","ariaValuemax","_p","ariaValuetext","_q","maxCompleted","_r","animateOnRender","_s","initCompletedOnAnimation","completed","margin","padding","customLabelStyles","transitionDuration","transitionTimingFunction","className","customLabel","barContainerClassName","completedClassName","labelClassName","alignment","initCompletedOnAnimationStr","concat","fillerWidth","maxCompletedValue","completedValue","ratio","getFillerWidth","_t","useState","initWidth","setInitWidth","containerStyles","overflow","fillerStyles","transition","display","alignItems","justifyContent","labelStyles","color","fontWeight","fontSize","outsideStyles","completedStr","labelStr","useEffect","requestAnimationFrame","createElement","style","role","parseFloat","module","isBuffer","iota","hasTypedArrays","compare1st","order","stride","terms","sort","compileConstructor","dtype","dimension","join","useGetters","code","Function","procedure","CACHED_CONSTRUCTORS","indices","args","index_str","shapeArg","strideArg","a_vars","c_vars","tShape","tStride","shape","ctor","sz","toString","arrayDType","ctor_list","now","performance","cancelTimeout","timeoutID","cancelAnimationFrame","requestTimeout","callback","delay","start","tick","getScrollbarSize","recalculate","div","document","body","appendChild","offsetWidth","clientWidth","removeChild","cachedRTLResult","getRTLOffsetType","outerDiv","outerStyle","innerDiv","innerStyle","scrollLeft","defaultItemKey$1","createListComponent","_ref","_class","getItemOffset","getEstimatedTotalSize","getItemSize","getOffsetForIndexAndAlignment","getStartIndexForOffset","getStopIndexForStartIndex","initInstanceProps","shouldResetStyleCacheOnItemSizeChange","validateProps","_PureComponent","List","props","_this","_instanceProps","_outerRef","_resetIsScrollingTimeoutId","state","isScrolling","scrollDirection","scrollOffset","initialScrollOffset","scrollUpdateWasRequested","_callOnItemsRendered","overscanStartIndex","overscanStopIndex","visibleStartIndex","visibleStopIndex","onItemsRendered","_callOnScroll","onScroll","_getItemStyle","_this$props","itemSize","layout","itemStyleCache","_getItemStyleCache","_offset","isHorizontal","isRtl","offsetHorizontal","position","left","right","top","__","___","_onScrollHorizontal","event","_event$currentTarget","currentTarget","scrollWidth","setState","prevState","_resetIsScrollingDebounced","_onScrollVertical","_event$currentTarget2","clientHeight","scrollHeight","scrollTop","_outerRefSetter","ref","outerRef","current","_resetIsScrolling","getDerivedStateFromProps","nextProps","validateSharedProps$1","_proto","scrollTo","scrollToItem","align","_this$props2","itemCount","scrollbarSize","componentDidMount","_this$props3","_callPropsCallbacks","componentDidUpdate","_this$props4","_this$state","componentWillUnmount","render","_this$props5","children","innerRef","innerElementType","innerTagName","itemData","_this$props5$itemKey","itemKey","outerElementType","outerTagName","useIsScrolling","_this$_getRangeToRend","_getRangeToRender","startIndex","stopIndex","items","_index","estimatedTotalSize","WebkitOverflowScrolling","willChange","pointerEvents","_this$_getRangeToRend2","_overscanStartIndex","_overscanStopIndex","_visibleStartIndex","_visibleStopIndex","_this$state2","_scrollDirection","_scrollOffset","_scrollUpdateWasRequested","_this$props6","overscanCount","_this$state3","overscanBackward","overscanForward","PureComponent","defaultProps","_ref2","_ref3","getItemMetadata$1","instanceProps","itemMetadataMap","lastMeasuredIndex","itemMetadata","findNearestItemBinarySearch$1","high","low","middle","currentOffset","findNearestItemExponentialSearch$1","interval","estimatedItemSize","totalSizeOfMeasuredItems","VariableSizeList","maxOffset","minOffset","findNearestItem$1","resetAfterIndex","shouldForceUpdate","forceUpdate","_ref5","eudist","len","sum","mandist","dist","Distance","kmrand","ks","multi","random","kmpp","fndist","distance","dists","lk","dsum","prs","Infinity","_dist","_i","_i2","pr","cs","_i3","rnd","ClusterInit","test","centroids","centroid","initial","maxit","old","idxs","conv","it","vlen","_idxs","_idx","_j2","_j3","vsum","vect","h","_j4","ksj","sumj","oldj","cj","_h2","_j5","_j6","ndarray","Uint8Array","Int8Array","Int32Array","Uint8ClampedArray"],"sourceRoot":""}