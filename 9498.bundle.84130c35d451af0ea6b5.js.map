{"version":3,"file":"9498.bundle.84130c35d451af0ea6b5.js","mappings":"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","sources":["webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/VideoViewport.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/addImageSlicesToViewports.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/addVolumesToViewports.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/colors/colormap.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/drawImageSync.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/calculateTransform.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/canvasToPixel.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/correctShift.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/getDefaultViewport.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/getImageFitScale.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/getImageSize.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/getTransform.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/pixelToCanvas.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/resetCamera.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/resize.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/fitToWindow.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/createVolumeActor.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/setDefaultVolumeVOI.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/vtkClasses/vtkSharedVolumeMapper.js","webpack:///../../../node_modules/@cornerstonejs/core/src/Settings.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/cache/cache.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/constants/epsilon.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/constants/rendering.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/enums/RequestType.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/enums/ViewportStatus.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/enums/BlendModes.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/enums/GeometryType.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/enums/DynamicOperatorType.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/enums/CalibrationTypes.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/getEnabledElement.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/loaders/imageLoader.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/loaders/volumeLoader.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/requestPool/imageLoadPoolManager.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/requestPool/requestPoolManager.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/utilities/cacheUtils.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/utilities/colormap.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/utilities/createLinearRGBTransferFunction.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/utilities/getImageSliceDataForVolumeViewport.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/utilities/transferFunctionUtils.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/utilities/transformWorldToIndex.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/utilities/triggerEvent.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/webWorkerManager/webWorkerManager.js","webpack:///../../../node_modules/@cornerstonejs/tools/src/cursors/SVGCursorDescriptor.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/drawingSvg/getSvgDrawingHelper.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/drawingSvg/draw.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/enums/ToolModes.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/store/ToolGroupManager/ToolGroup.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/store/ToolGroupManager/createToolGroup.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/store/ToolGroupManager/destroy.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/store/ToolGroupManager/destroyToolGroup.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/store/ToolGroupManager/getAllToolGroups.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/store/ToolGroupManager/getToolGroup.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/store/ToolGroupManager/getToolGroupsWithToolName.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/tools/annotation/BidirectionalTool.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/tools/annotation/PlanarFreehandROITool.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/tools/displayTools/SegmentationDisplayTool.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/tools/segmentation/RectangleROIThresholdTool.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/tools/segmentation/RectangleROIStartEndThresholdTool.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/index.ts","webpack:///../../../node_modules/@kitware/vtk.js/Common/DataModel/PiecewiseFunction.js","webpack:///../../../node_modules/@kitware/vtk.js/Rendering/Core/Camera.js","webpack:///../../../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction.js","webpack:///../../../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps.js","webpack:///../../../node_modules/@kitware/vtk.js/Rendering/Core/ImageMapper.js","webpack:///../../../node_modules/@kitware/vtk.js/Rendering/Core/ImageSlice.js","webpack:///../../../node_modules/@kitware/vtk.js/Rendering/Core/Volume.js","webpack:///../../../node_modules/lodash.get/index.js","webpack:///../../../node_modules/comlink/dist/esm/comlink.mjs","webpack:///../../../node_modules/d3-array/src/bisector.js"],"sourcesContent":["import { vec3 } from 'gl-matrix';\nimport {\n  Events as EVENTS,\n  VideoEnums as VideoViewportEnum,\n  MetadataModules,\n} from '../enums';\nimport type {\n  IVideoViewport,\n  VideoViewportProperties,\n  Point3,\n  Point2,\n  ICamera,\n  InternalVideoCamera,\n  VideoViewportInput,\n  VOIRange,\n  ICanvasActor,\n  IImage,\n  ViewReferenceSpecifier,\n  ViewReference,\n  ReferenceCompatibleOptions,\n  ImageSetOptions,\n} from '../types';\nimport * as metaData from '../metaData';\nimport { Transform } from './helpers/cpuFallback/rendering/transform';\nimport { triggerEvent } from '../utilities';\nimport Viewport from './Viewport';\nimport { getOrCreateCanvas } from './helpers';\nimport CanvasActor from './CanvasActor';\nimport cache from '../cache';\n\n/**\n * A data type for the scalar data for video data.\n */\nexport type CanvasScalarData = Uint8ClampedArray & {\n  frameNumber?: number;\n  getRange?: () => [number, number];\n};\n\n/**\n * An object representing a single stack viewport, which is a camera\n * looking into an internal scene, and an associated target output `canvas`.\n */\nclass VideoViewport extends Viewport implements IVideoViewport {\n  public static frameRangeExtractor = /(\\/frames\\/|[&?]frameNumber=)([^/&?]*)/i;\n\n  public modality;\n  // Viewport Data\n  protected imageId: string;\n  readonly uid;\n  readonly renderingEngineId: string;\n  readonly canvasContext: CanvasRenderingContext2D;\n  private videoElement?: HTMLVideoElement;\n  private videoWidth = 0;\n  private videoHeight = 0;\n\n  private loop = true;\n  private mute = true;\n  private isPlaying = false;\n  private scrollSpeed = 1;\n  private playbackRate = 1;\n  private scalarData: CanvasScalarData;\n\n  /**\n   * This is used to pause initially so that we get at least one render to allow\n   * navigating frames.  Otherwise the viewport is blank initially until the user\n   * hits play manually.\n   */\n  private initialRender: () => void;\n\n  /**\n   * The range is the set of frames to play\n   */\n  private frameRange: [number, number] = [0, 0];\n\n  protected metadata;\n\n  /**\n   * The fps, frames per second is used to calculate time/frame mapping values.\n   * It is provided by the CINE Module in the metadata, defaulting to 30 if not\n   * provided.\n   */\n  private fps = 30;\n\n  /** The number of frames in the video */\n  private numberOfFrames: number;\n\n  private videoCamera: InternalVideoCamera = {\n    panWorld: [0, 0],\n    parallelScale: 1,\n  };\n\n  /**\n   * feFilter is an inline string value for the CSS filter on the video\n   * CSS filters can reference SVG filters, so for the typical use case here\n   * the CSS filter is actually an link link to a SVG filter.\n   */\n  private feFilter: string;\n\n  /**\n   * An average white point value, used to color balance the image so that\n   * the given white is mapped to [255,255,255] via multiplication per channel.\n   */\n  private averageWhite: [number, number, number];\n\n  /**\n   * The VOI Range is used to apply contrast/brightness adjustments to the image.\n   */\n  private voiRange: VOIRange = {\n    lower: 0,\n    upper: 255,\n  };\n\n  constructor(props: VideoViewportInput) {\n    super({\n      ...props,\n      canvas: props.canvas || getOrCreateCanvas(props.element),\n    });\n    this.canvasContext = this.canvas.getContext('2d');\n    this.renderingEngineId = props.renderingEngineId;\n\n    this.element.setAttribute('data-viewport-uid', this.id);\n    this.element.setAttribute(\n      'data-rendering-engine-uid',\n      this.renderingEngineId\n    );\n\n    this.videoElement = document.createElement('video');\n    this.videoElement.muted = this.mute;\n    this.videoElement.loop = this.loop;\n    this.videoElement.autoplay = true;\n    this.videoElement.crossOrigin = 'anonymous';\n\n    this.addEventListeners();\n    this.resize();\n  }\n\n  public static get useCustomRenderingPipeline() {\n    return true;\n  }\n\n  private addEventListeners() {\n    this.canvas.addEventListener(\n      EVENTS.ELEMENT_DISABLED,\n      this.elementDisabledHandler\n    );\n  }\n\n  private removeEventListeners() {\n    this.canvas.removeEventListener(\n      EVENTS.ELEMENT_DISABLED,\n      this.elementDisabledHandler\n    );\n  }\n\n  private elementDisabledHandler() {\n    this.removeEventListeners();\n    this.videoElement.remove();\n  }\n\n  public getImageDataMetadata(image: IImage | string) {\n    const imageId = typeof image === 'string' ? image : image.imageId;\n    const imagePlaneModule = metaData.get(MetadataModules.IMAGE_PLANE, imageId);\n\n    let rowCosines = <Point3>imagePlaneModule.rowCosines;\n    let columnCosines = <Point3>imagePlaneModule.columnCosines;\n\n    // if null or undefined\n    if (rowCosines == null || columnCosines == null) {\n      rowCosines = <Point3>[1, 0, 0];\n      columnCosines = <Point3>[0, 1, 0];\n    }\n\n    const rowCosineVec = vec3.fromValues(\n      rowCosines[0],\n      rowCosines[1],\n      rowCosines[2]\n    );\n    const colCosineVec = vec3.fromValues(\n      columnCosines[0],\n      columnCosines[1],\n      columnCosines[2]\n    );\n\n    const { rows, columns } = imagePlaneModule;\n    const scanAxisNormal = vec3.create();\n    vec3.cross(scanAxisNormal, rowCosineVec, colCosineVec);\n\n    let origin = imagePlaneModule.imagePositionPatient;\n    // if null or undefined\n    if (origin == null) {\n      origin = [0, 0, 0];\n    }\n\n    const xSpacing = imagePlaneModule.columnPixelSpacing || 1;\n    const ySpacing = imagePlaneModule.rowPixelSpacing || 1;\n    const xVoxels = imagePlaneModule.columns;\n    const yVoxels = imagePlaneModule.rows;\n\n    const zSpacing = 1;\n    const zVoxels = 1;\n\n    this.hasPixelSpacing = !!imagePlaneModule.columnPixelSpacing;\n    return {\n      bitsAllocated: 8,\n      numComps: 3,\n      origin,\n      rows,\n      columns,\n      direction: [...rowCosineVec, ...colCosineVec, ...scanAxisNormal],\n      dimensions: [xVoxels, yVoxels, zVoxels],\n      spacing: [xSpacing, ySpacing, zSpacing],\n      hasPixelSpacing: this.hasPixelSpacing,\n      numVoxels: xVoxels * yVoxels * zVoxels,\n      imagePlaneModule,\n    };\n  }\n\n  /**\n   * This is a wrapper for setVideo to allow generic behaviour\n   *\n   * @param _groupId - the id for the overall set of image ids.  Unused for video viewport.\n   * @param imageIds - a singleton list containing the imageId of a video.\n   */\n  public setDataIds(imageIds: string[], options?: ImageSetOptions) {\n    this.setVideo(\n      imageIds[0],\n      (options?.viewReference?.sliceIndex as number) || 1\n    );\n  }\n\n  /**\n   * Sets the video image id to show and hte frame number.\n   * Requirements are to have the imageUrlModule in the metadata\n   * with the rendered endpoint being the raw video in video/mp4 format.\n   */\n  public setVideo(imageId: string, frameNumber?: number): Promise<unknown> {\n    this.imageId = Array.isArray(imageId) ? imageId[0] : imageId;\n    const imageUrlModule = metaData.get(MetadataModules.IMAGE_URL, imageId);\n    if (!imageUrlModule?.rendered) {\n      throw new Error(\n        `Video Image ID ${imageId} does not have a rendered video view`\n      );\n    }\n    const { rendered } = imageUrlModule;\n    const generalSeries = metaData.get(MetadataModules.GENERAL_SERIES, imageId);\n    this.modality = generalSeries?.Modality;\n    this.metadata = this.getImageDataMetadata(imageId);\n    let { cineRate, numberOfFrames } = metaData.get(\n      MetadataModules.CINE,\n      imageId\n    );\n    this.numberOfFrames = numberOfFrames;\n\n    return this.setVideoURL(rendered).then(() => {\n      if (!numberOfFrames || numberOfFrames === 1) {\n        numberOfFrames = Math.round(\n          this.videoElement.duration * (cineRate || 30)\n        );\n      }\n      if (!cineRate) {\n        cineRate = Math.round(numberOfFrames / this.videoElement.duration);\n      }\n      this.fps = cineRate;\n      this.numberOfFrames = numberOfFrames;\n      // 1 based range setting\n      this.setFrameRange([1, numberOfFrames]);\n      // The initial render allows us to set the frame position - rendering needs\n      // to start already playing\n      this.initialRender = () => {\n        this.initialRender = null;\n        this.pause();\n        this.setFrameNumber(frameNumber || 1);\n      };\n\n      // This is ugly, but without it, the video often fails to render initially\n      // so having a play, followed by a pause fixes things.\n      // 25 ms is a tested value that seems to work to prevent exceptions\n      return new Promise((resolve) => {\n        window.setTimeout(() => {\n          this.setFrameNumber(frameNumber || 1);\n          resolve(this);\n        }, 25);\n      });\n    });\n  }\n\n  public async setVideoURL(videoURL: string) {\n    return new Promise((resolve) => {\n      this.videoElement.src = videoURL;\n      this.videoElement.preload = 'auto';\n\n      const loadedMetadataEventHandler = () => {\n        this.videoWidth = this.videoElement.videoWidth;\n        this.videoHeight = this.videoElement.videoHeight;\n        this.videoElement.removeEventListener(\n          'loadedmetadata',\n          loadedMetadataEventHandler\n        );\n\n        this.refreshRenderValues();\n\n        resolve(true);\n      };\n\n      this.videoElement.addEventListener(\n        'loadedmetadata',\n        loadedMetadataEventHandler\n      );\n    });\n  }\n\n  /**\n   * Gets all the image ids associated with this video element.  This will\n   * have # of frames elements.\n   */\n  public getImageIds(): string[] {\n    const imageIds = new Array<string>(this.numberOfFrames);\n    const baseImageId = this.imageId.replace(/[0-9]+$/, '');\n    for (let i = 0; i < this.numberOfFrames; i++) {\n      imageIds[i] = `${baseImageId}${i + 1}`;\n    }\n    return imageIds;\n  }\n\n  public togglePlayPause(): boolean {\n    if (this.isPlaying) {\n      this.pause();\n      return false;\n    } else {\n      this.play();\n      return true;\n    }\n  }\n\n  public async play() {\n    try {\n      if (!this.isPlaying) {\n        // Play returns a promise that is true when playing completes.\n        await this.videoElement.play();\n        this.isPlaying = true;\n        this.renderWhilstPlaying();\n      }\n    } catch (e) {\n      // No-op, an exception sometimes gets thrown on the initial play, not\n      // quite sure why.  Catching it prevents displaying an error\n    }\n  }\n\n  public async pause() {\n    try {\n      await this.videoElement.pause();\n      this.isPlaying = false;\n    } catch (e) {\n      // No-op - sometimes this happens on startup\n    }\n  }\n\n  public async scroll(delta = 1) {\n    await this.pause();\n\n    const videoElement = this.videoElement;\n    const renderFrame = this.renderFrame;\n\n    const currentTime = videoElement.currentTime;\n    const newTime = currentTime + (delta * this.scrollSpeed) / this.fps;\n\n    videoElement.currentTime = newTime;\n\n    // Need to wait for seek update\n    const seekEventListener = (evt) => {\n      renderFrame();\n\n      videoElement.removeEventListener('seeked', seekEventListener);\n    };\n\n    videoElement.addEventListener('seeked', seekEventListener);\n  }\n\n  public async start() {\n    const videoElement = this.videoElement;\n    const renderFrame = this.renderFrame;\n\n    videoElement.currentTime = 0;\n\n    if (videoElement.paused) {\n      // Need to wait for seek update\n      const seekEventListener = (evt) => {\n        renderFrame();\n\n        videoElement.removeEventListener('seeked', seekEventListener);\n      };\n\n      videoElement.addEventListener('seeked', seekEventListener);\n    }\n  }\n\n  public async end() {\n    const videoElement = this.videoElement;\n    const renderFrame = this.renderFrame;\n\n    videoElement.currentTime = videoElement.duration;\n\n    if (videoElement.paused) {\n      // Need to wait for seek update\n      const seekEventListener = (evt) => {\n        renderFrame();\n\n        videoElement.removeEventListener('seeked', seekEventListener);\n      };\n\n      videoElement.addEventListener('seeked', seekEventListener);\n    }\n  }\n\n  public async setTime(timeInSeconds: number) {\n    const videoElement = this.videoElement;\n    const renderFrame = this.renderFrame;\n\n    videoElement.currentTime = timeInSeconds;\n\n    if (videoElement.paused) {\n      // Need to wait for seek update\n      const seekEventListener = (evt) => {\n        renderFrame();\n\n        videoElement.removeEventListener('seeked', seekEventListener);\n      };\n\n      videoElement.addEventListener('seeked', seekEventListener);\n    }\n  }\n\n  // Sets the frame number - note according to DICOM, this is 1 based\n  public async setFrameNumber(frame: number) {\n    this.setTime((frame - 1) / this.fps);\n  }\n\n  /**\n   * Sets the playback frame range.  The video will play over the given set\n   * of frames (assuming it is playing).\n   * @param frameRange - the minimum to maximum (inclusive) frames to play over\n   * @returns\n   */\n  public setFrameRange(frameRange: number[]) {\n    if (!frameRange) {\n      this.frameRange = [1, this.numberOfFrames];\n      return;\n    }\n    if (frameRange.length !== 2 || frameRange[0] === frameRange[1]) {\n      return;\n    }\n    this.frameRange = [frameRange[0], frameRange[1]];\n  }\n\n  public getFrameRange(): [number, number] {\n    return this.frameRange;\n  }\n\n  public setProperties(props: VideoViewportProperties) {\n    if (props.loop !== undefined) {\n      this.videoElement.loop = props.loop;\n    }\n\n    if (props.muted !== undefined) {\n      this.videoElement.muted = props.muted;\n    }\n\n    if (props.playbackRate !== undefined) {\n      this.setPlaybackRate(props.playbackRate);\n    }\n\n    if (props.scrollSpeed !== undefined) {\n      this.setScrollSpeed(props.scrollSpeed);\n    }\n\n    if (props.voiRange) {\n      this.setVOI(props.voiRange);\n    }\n  }\n\n  public setPlaybackRate(rate = 1) {\n    this.playbackRate = rate;\n    // Minimum playback speed in chrome is 0.0625 compared to normal\n    if (rate < 0.0625) {\n      this.pause();\n      return;\n    }\n    if (!this.videoElement) {\n      return;\n    }\n    this.videoElement.playbackRate = rate;\n    this.play();\n  }\n\n  public setScrollSpeed(\n    scrollSpeed = 1,\n    unit = VideoViewportEnum.SpeedUnit.FRAME\n  ) {\n    this.scrollSpeed =\n      unit === VideoViewportEnum.SpeedUnit.SECOND\n        ? scrollSpeed * this.fps\n        : scrollSpeed;\n  }\n\n  public getProperties = (): VideoViewportProperties => {\n    return {\n      loop: this.videoElement.loop,\n      muted: this.videoElement.muted,\n      playbackRate: this.playbackRate,\n      scrollSpeed: this.scrollSpeed,\n      voiRange: { ...this.voiRange },\n    };\n  };\n\n  public resetProperties() {\n    this.setProperties({\n      loop: false,\n      muted: true,\n    });\n  }\n\n  protected getScalarData(): CanvasScalarData {\n    if (this.scalarData?.frameNumber === this.getFrameNumber()) {\n      return this.scalarData;\n    }\n    const canvas = document.createElement('canvas');\n    canvas.width = this.videoWidth;\n    canvas.height = this.videoHeight;\n    const context = canvas.getContext('2d');\n    context.drawImage(this.videoElement, 0, 0);\n    const canvasData = context.getImageData(\n      0,\n      0,\n      this.videoWidth,\n      this.videoHeight\n    );\n    const scalarData = canvasData.data as CanvasScalarData;\n    scalarData.getRange = () => [0, 255];\n    scalarData.frameNumber = this.getFrameNumber();\n    this.scalarData = scalarData;\n    return scalarData;\n  }\n\n  public getImageData() {\n    const { metadata } = this;\n\n    const spacing = metadata.spacing;\n\n    const imageData = {\n      dimensions: metadata.dimensions,\n      spacing,\n      origin: metadata.origin,\n      direction: metadata.direction,\n      metadata: { Modality: this.modality },\n      getScalarData: () => this.getScalarData(),\n      imageData: {\n        getDirection: () => metadata.direction,\n        getDimensions: () => metadata.dimensions,\n        getRange: () => [0, 255],\n        getScalarData: () => this.getScalarData(),\n        getSpacing: () => metadata.spacing,\n        worldToIndex: (point: Point3) => {\n          const canvasPoint = this.worldToCanvas(point);\n          const pixelCoord = this.canvasToIndex(canvasPoint);\n          return [pixelCoord[0], pixelCoord[1], 0];\n        },\n        indexToWorld: (point: Point2, destPoint?: Point3) => {\n          const canvasPoint = this.indexToCanvas([point[0], point[1]]);\n          return this.canvasToWorld(canvasPoint, destPoint);\n        },\n      },\n      hasPixelSpacing: this.hasPixelSpacing,\n      calibration: this.calibration,\n      preScale: {\n        scaled: false,\n      },\n    };\n    Object.defineProperty(imageData, 'scalarData', {\n      get: () => this.getScalarData(),\n      enumerable: true,\n    });\n    return imageData;\n  }\n\n  /**\n   * Checks to see if the imageURI is currently being displayed.  The imageURI\n   * may contain frame numbers according to the DICOM standard format, which\n   * will be stripped to compare the base image URI, and then the values used\n   * to check if that frame is currently being displayed.\n   *\n   * The DICOM standard allows for comma separated values as well, however,\n   * this is not supported here, with only a single range or single value\n   * being tested.\n   *\n   * For a single value, the time range +/- 5 frames is permitted to allow\n   * the detection to actually succeed when nearby without requiring an exact\n   * time frame to be matched.\n   *\n   * @param imageURI - containing frame number or range.\n   * @returns\n   */\n  public hasImageURI(imageURI: string): boolean {\n    // TODO - move annotationFrameRange into core so it can be used here.\n    const framesMatch = imageURI.match(VideoViewport.frameRangeExtractor);\n    const testURI = framesMatch\n      ? imageURI.substring(0, framesMatch.index)\n      : imageURI;\n    return this.imageId.indexOf(testURI) !== -1;\n  }\n\n  public setVOI(voiRange: VOIRange): void {\n    this.voiRange = voiRange;\n    this.setColorTransform();\n  }\n\n  public setWindowLevel(windowWidth = 256, windowCenter = 128) {\n    const lower = windowCenter - windowWidth / 2;\n    const upper = windowCenter + windowWidth / 2 - 1;\n    this.setVOI({ lower, upper });\n    this.setColorTransform();\n  }\n\n  public setAverageWhite(averageWhite: [number, number, number]) {\n    this.averageWhite = averageWhite;\n    this.setColorTransform();\n  }\n\n  protected setColorTransform() {\n    if (!this.voiRange && !this.averageWhite) {\n      this.feFilter = null;\n      return;\n    }\n    const white = this.averageWhite || [255, 255, 255];\n    const maxWhite = Math.max(...white);\n    const scaleWhite = white.map((c) => maxWhite / c);\n    const { lower = 0, upper = 255 } = this.voiRange || {};\n    const wlScale = (upper - lower + 1) / 255;\n    const wlDelta = lower / 255;\n    this.feFilter = `url('data:image/svg+xml,\\\n      <svg xmlns=\"http://www.w3.org/2000/svg\">\\\n        <filter id=\"colour\" color-interpolation-filters=\"linearRGB\">\\\n        <feColorMatrix type=\"matrix\" \\\n        values=\"\\\n          ${scaleWhite[0] * wlScale} 0 0 0 ${wlDelta} \\\n          0 ${scaleWhite[1] * wlScale} 0 0 ${wlDelta} \\\n          0 0 ${scaleWhite[2] * wlScale} 0 ${wlDelta} \\\n          0 0 0 1 0\" />\\\n        </filter>\\\n      </svg>#colour')`;\n\n    this.canvas.style.filter = this.feFilter;\n  }\n\n  public setCamera(camera: ICamera): void {\n    const { parallelScale, focalPoint } = camera;\n\n    // NOTE: the parallel scale should be done first\n    // because it affects the focal point later\n    if (parallelScale) {\n      this.videoCamera.parallelScale =\n        this.element.clientHeight / 2 / parallelScale;\n    }\n\n    if (focalPoint !== undefined) {\n      const focalPointCanvas = this.worldToCanvas(focalPoint);\n      const canvasCenter: Point2 = [\n        this.element.clientWidth / 2,\n        this.element.clientHeight / 2,\n      ];\n\n      const panWorldDelta: Point2 = [\n        (focalPointCanvas[0] - canvasCenter[0]) /\n          this.videoCamera.parallelScale,\n        (focalPointCanvas[1] - canvasCenter[1]) /\n          this.videoCamera.parallelScale,\n      ];\n\n      this.videoCamera.panWorld = [\n        this.videoCamera.panWorld[0] - panWorldDelta[0],\n        this.videoCamera.panWorld[1] - panWorldDelta[1],\n      ];\n    }\n\n    this.canvasContext.fillStyle = 'rgba(0,0,0,1)';\n    this.canvasContext.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n    if (this.isPlaying === false) {\n      this.renderFrame();\n    }\n  }\n\n  /**\n   * This function returns the imageID associated with either the current\n   * frame being displayed, or the range of frames being played.  This may not\n   * correspond to any particular imageId that has imageId metadata, as the\n   * format is one of:\n   * `<DICOMweb URI>/frames/<Start Frame>(-<End Frame>)?`\n   * or\n   * `<Other URI>[?&]frameNumber=<Start Frame>(-<EndFrame>)?`\n   * for a URL parameter.\n   *\n   * @returns an imageID for video\n   */\n  public getCurrentImageId() {\n    const current = this.imageId.replace(\n      '/frames/1',\n      this.isPlaying\n        ? `/frames/${this.frameRange[0]}-${this.frameRange[1]}`\n        : `/frames/${this.getFrameNumber()}`\n    );\n    return current;\n  }\n\n  /**\n   *  Gets a target id that can be used to specify how to show this\n   */\n  public getReferenceId(specifier: ViewReferenceSpecifier = {}): string {\n    const { sliceIndex: sliceIndex } = specifier;\n    if (sliceIndex === undefined) {\n      return `videoId:${this.getCurrentImageId()}`;\n    }\n    if (Array.isArray(sliceIndex)) {\n      // Just remove the 1 from the end of the base URL - TODO, handle other types\n      return `videoId:${this.imageId.substring(0, this.imageId.length - 1)}${\n        sliceIndex[0] + 1\n      }-${sliceIndex[1] + 1}`;\n    }\n    const baseTarget = this.imageId.replace(\n      '/frames/1',\n      `/frames/${1 + sliceIndex}`\n    );\n    return `videoId:${baseTarget}`;\n  }\n\n  /**\n   * Figure out if a given view can be shown in the current viewport.\n   */\n  public isReferenceViewable(\n    viewRef: ViewReference,\n    options: ReferenceCompatibleOptions = {}\n  ): boolean {\n    let { imageURI } = options;\n    const { referencedImageId, sliceIndex: sliceIndex } = viewRef;\n    if (!super.isReferenceViewable(viewRef)) {\n      return false;\n    }\n\n    const imageId = this.getCurrentImageId();\n    if (!imageURI) {\n      // Remove the dataLoader scheme and frame number\n      // TODO - handle more imageURI types.\n      const colonIndex = imageId.indexOf(':');\n      imageURI = imageId.substring(colonIndex + 1, imageId.length - 1);\n    }\n\n    if (options.withNavigation) {\n      return true;\n    }\n    const currentIndex = this.getSliceIndex();\n    if (Array.isArray(sliceIndex)) {\n      return currentIndex >= sliceIndex[0] && currentIndex <= sliceIndex[1];\n    }\n    if (sliceIndex !== undefined) {\n      return currentIndex === sliceIndex;\n    }\n    if (!referencedImageId) {\n      return false;\n    }\n    const match = referencedImageId.match(VideoViewport.frameRangeExtractor);\n    if (!match || !match[2]) {\n      return true;\n    }\n    const range = match[2].split('-').map((it) => Number(it));\n    const frame = currentIndex + 1;\n    return range[0] <= frame && frame <= (range[1] ?? range[0]);\n  }\n\n  /**\n   * Gets a view target that species what type of view is required to show\n   * the current view, or the one specified in the forTarget modifiers.\n   */\n  public getViewReference(\n    viewRefSpecifier?: ViewReferenceSpecifier\n  ): ViewReference {\n    let sliceIndex = viewRefSpecifier?.sliceIndex;\n    if (!sliceIndex) {\n      sliceIndex = this.isPlaying\n        ? [this.frameRange[0] - 1, this.frameRange[1] - 1]\n        : this.getCurrentImageIdIndex();\n    }\n    return {\n      ...super.getViewReference(viewRefSpecifier),\n      referencedImageId: this.getReferenceId(viewRefSpecifier),\n      sliceIndex: sliceIndex,\n    };\n  }\n\n  /**\n   * Gets the 1 based frame number (ala DICOM value), eg `1+ currentImageIdIndex`\n   */\n  public getFrameNumber() {\n    // Need to round this as the fps/time isn't exact\n    return 1 + this.getCurrentImageIdIndex();\n  }\n\n  public getCurrentImageIdIndex() {\n    return Math.round(this.videoElement.currentTime * this.fps);\n  }\n\n  public getSliceIndex() {\n    return this.getCurrentImageIdIndex();\n  }\n\n  public getCamera(): ICamera {\n    const { parallelScale } = this.videoCamera;\n\n    const canvasCenter: Point2 = [\n      this.element.clientWidth / 2,\n      this.element.clientHeight / 2,\n    ];\n\n    // All other viewports have the focal point in canvas coordinates in the center\n    // of the canvas, so to make tools work the same, we need to do the same here\n    // and convert to the world coordinate system since focal point is in world coordinates.\n    const canvasCenterWorld = this.canvasToWorld(canvasCenter);\n\n    return {\n      parallelProjection: true,\n      focalPoint: canvasCenterWorld,\n      position: [0, 0, 0],\n      viewUp: [0, -1, 0],\n      parallelScale: this.element.clientHeight / 2 / parallelScale, // Reverse zoom direction back\n      viewPlaneNormal: [0, 0, 1],\n    };\n  }\n\n  public resetCamera = (): boolean => {\n    this.refreshRenderValues();\n\n    this.canvasContext.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n    if (this.isPlaying === false) {\n      // If its not replaying, just re-render the frame on move.\n      this.renderFrame();\n    }\n    return true;\n  };\n\n  public getNumberOfSlices = (): number => {\n    const computedSlices = Math.round(\n      (this.videoElement.duration * this.fps) / this.scrollSpeed\n    );\n    return isNaN(computedSlices) ? this.numberOfFrames : computedSlices;\n  };\n\n  public getFrameOfReferenceUID = (): string => {\n    // The video itself is the frame of reference.\n    return this.videoElement.src;\n  };\n\n  public resize = (): void => {\n    const canvas = this.canvas;\n    const { clientWidth, clientHeight } = canvas;\n\n    // Set the canvas to be same resolution as the client.\n    if (canvas.width !== clientWidth || canvas.height !== clientHeight) {\n      canvas.width = clientWidth;\n      canvas.height = clientHeight;\n    }\n\n    this.refreshRenderValues();\n\n    if (this.isPlaying === false) {\n      // If its not playing, just re-render on resize.\n      this.renderFrame();\n    }\n  };\n\n  /**\n   * Converts a VideoViewport canvas coordinate to a video coordinate.\n   *\n   * @param canvasPos - to convert to world\n   * @returns World position\n   */\n  public canvasToWorld = (\n    canvasPos: Point2,\n    destPos: Point3 = [0, 0, 0]\n  ): Point3 => {\n    const pan: Point2 = this.videoCamera.panWorld; // In world coordinates\n    const worldToCanvasRatio: number = this.getWorldToCanvasRatio();\n\n    const panOffsetCanvas: Point2 = [\n      pan[0] * worldToCanvasRatio,\n      pan[1] * worldToCanvasRatio,\n    ];\n\n    const subCanvasPos: Point2 = [\n      canvasPos[0] - panOffsetCanvas[0],\n      canvasPos[1] - panOffsetCanvas[1],\n    ];\n\n    // Replace the x,y values only in place in the world position\n    // as the z is unchanging for video display\n    destPos.splice(\n      0,\n      2,\n      subCanvasPos[0] / worldToCanvasRatio,\n      subCanvasPos[1] / worldToCanvasRatio\n    );\n    return destPos;\n  };\n\n  /**\n   * Converts `[x, y, 0]` world video coordinate to canvas CSS coordinates.\n   *\n   * @param  worldPos - world coord to convert to canvas\n   * @returns Canvas position\n   */\n  public worldToCanvas = (worldPos: Point3): Point2 => {\n    const pan: Point2 = this.videoCamera.panWorld;\n    const worldToCanvasRatio: number = this.getWorldToCanvasRatio();\n\n    const canvasPos: Point2 = [\n      (worldPos[0] + pan[0]) * worldToCanvasRatio,\n      (worldPos[1] + pan[1]) * worldToCanvasRatio,\n    ];\n\n    return canvasPos;\n  };\n\n  public getPan(): Point2 {\n    const panWorld = this.videoCamera.panWorld;\n    return [panWorld[0], panWorld[1]];\n  }\n\n  public getRotation = () => 0;\n\n  /**\n   * Uses the transform to convert canvas coordinates into index coordinates.\n   */\n  protected canvasToIndex = (canvasPos: Point2): Point2 => {\n    const transform = this.getTransform();\n    transform.invert();\n\n    return transform.transformPoint(\n      <Point2>canvasPos.map((it) => it * devicePixelRatio)\n    );\n  };\n\n  protected indexToCanvas = (indexPos: Point2): Point2 => {\n    const transform = this.getTransform();\n    return <Point2>(\n      transform.transformPoint(indexPos).map((it) => it / devicePixelRatio)\n    );\n  };\n\n  /**\n   * Sets  initial video camera to center the image area.  The values\n   * are set in canvas CSS pixel units and NOT in canvas index units.\n   */\n  private refreshRenderValues() {\n    // this means that each unit (pixel) in the world (video) would be\n    // represented by n pixels in the canvas, measured in css pixels\n    let worldToCanvasRatio = this.canvas.offsetWidth / this.videoWidth;\n\n    if (this.videoHeight * worldToCanvasRatio > this.canvas.height) {\n      // If by fitting the width, we exceed the height of the viewport, then we need to decrease the\n      // size of the viewport further by considering its verticality.\n      worldToCanvasRatio = this.canvas.offsetHeight / this.videoHeight;\n    }\n\n    // Set the width as big as possible, this is the portion of the canvas\n    // that the video will occupy.\n    const drawWidth = Math.floor(this.videoWidth * worldToCanvasRatio);\n    const drawHeight = Math.floor(this.videoHeight * worldToCanvasRatio);\n\n    // calculate x and y offset in order to center the image\n    const xOffsetCanvas = (this.canvas.offsetWidth - drawWidth) / 2;\n    const yOffsetCanvas = (this.canvas.offsetHeight - drawHeight) / 2;\n\n    const xOffsetWorld = xOffsetCanvas / worldToCanvasRatio;\n    const yOffsetWorld = yOffsetCanvas / worldToCanvasRatio;\n\n    this.videoCamera.panWorld = [xOffsetWorld, yOffsetWorld];\n    this.videoCamera.parallelScale = worldToCanvasRatio;\n  }\n\n  private getWorldToCanvasRatio() {\n    return this.videoCamera.parallelScale;\n  }\n\n  private getCanvasToWorldRatio() {\n    return 1.0 / this.videoCamera.parallelScale;\n  }\n\n  public customRenderViewportToCanvas = () => {\n    this.renderFrame();\n  };\n\n  /**\n   * Creates a transform from video index coordinates to canvas coordinates.\n   */\n  protected getTransform() {\n    const panWorld: Point2 = this.videoCamera.panWorld;\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    const worldToCanvasRatio: number = this.getWorldToCanvasRatio();\n    const canvasToWorldRatio: number = this.getCanvasToWorldRatio();\n    const halfCanvas = [\n      this.canvas.offsetWidth / 2,\n      this.canvas.offsetHeight / 2,\n    ];\n    const halfCanvasWorldCoordinates = [\n      halfCanvas[0] * canvasToWorldRatio,\n      halfCanvas[1] * canvasToWorldRatio,\n    ];\n    const transform = new Transform();\n\n    // Start by converting into canvas index coordinates FROM canvas css pixel coordinates\n    transform.scale(devicePixelRatio, devicePixelRatio);\n\n    // Translate to the center of the canvas (move origin of the transform\n    // to the center of the canvas)\n    transform.translate(halfCanvas[0], halfCanvas[1]);\n\n    // Scale\n    transform.scale(worldToCanvasRatio, worldToCanvasRatio);\n\n    // Apply the translation\n    transform.translate(panWorld[0], panWorld[1]);\n\n    // Translate back\n    transform.translate(\n      -halfCanvasWorldCoordinates[0],\n      -halfCanvasWorldCoordinates[1]\n    );\n    return transform;\n  }\n\n  /**\n   * Nothing to do for the clipping planes for video as they don't exist.\n   */\n  public updateCameraClippingPlanesAndRange() {\n    // No-op\n  }\n\n  public addImages(stackInputs: Array<any>) {\n    const actors = this.getActors();\n    stackInputs.forEach((stackInput) => {\n      const image = cache.getImage(stackInput.imageId);\n\n      const imageActor = this.createActorMapper(image);\n      if (imageActor) {\n        actors.push({ uid: stackInput.actorUID, actor: imageActor });\n        if (stackInput.callback) {\n          stackInput.callback({ imageActor, imageId: stackInput.imageId });\n        }\n      }\n    });\n    this.setActors(actors);\n  }\n\n  protected createActorMapper(image) {\n    return new CanvasActor(this, image);\n  }\n\n  /**\n   * Renders the video frame to the viewport.\n   */\n  private renderFrame = () => {\n    const transform = this.getTransform();\n    const transformationMatrix: number[] = transform.getMatrix();\n\n    const ctx = this.canvasContext;\n\n    ctx.resetTransform();\n\n    // Need to correct the transform for device pixel ratio scaling.\n    ctx.transform(\n      transformationMatrix[0],\n      transformationMatrix[1],\n      transformationMatrix[2],\n      transformationMatrix[3],\n      transformationMatrix[4],\n      transformationMatrix[5]\n    );\n\n    ctx.drawImage(\n      this.videoElement,\n      0,\n      0,\n      this.videoWidth || 1024,\n      this.videoHeight || 1024\n    );\n\n    for (const actor of this.getActors()) {\n      (actor.actor as ICanvasActor).render(this, this.canvasContext);\n    }\n    this.canvasContext.resetTransform();\n\n    // This is stack new image to agree with stack/non-volume viewports\n    triggerEvent(this.element, EVENTS.STACK_NEW_IMAGE, {\n      element: this.element,\n      viewportId: this.id,\n      viewport: this,\n      renderingEngineId: this.renderingEngineId,\n      time: this.videoElement.currentTime,\n      duration: this.videoElement.duration,\n    });\n    triggerEvent(this.element, EVENTS.IMAGE_RENDERED, {\n      element: this.element,\n      viewportId: this.id,\n      viewport: this,\n      renderingEngineId: this.renderingEngineId,\n      time: this.videoElement.currentTime,\n      duration: this.videoElement.duration,\n    });\n\n    this.initialRender?.();\n\n    const frame = this.getFrameNumber();\n    if (this.isPlaying) {\n      if (frame < this.frameRange[0]) {\n        this.setFrameNumber(this.frameRange[0]);\n      } else if (frame > this.frameRange[1]) {\n        if (this.loop) {\n          this.setFrameNumber(this.frameRange[0]);\n        } else {\n          this.pause();\n        }\n      }\n    }\n  };\n\n  private renderWhilstPlaying = () => {\n    this.renderFrame();\n\n    //wait approximately 16ms and run again\n    if (this.isPlaying) {\n      requestAnimationFrame(this.renderWhilstPlaying);\n    }\n  };\n}\n\nexport default VideoViewport;\n","import type {\n  IStackViewport,\n  IStackInput,\n  IRenderingEngine,\n} from '../../types';\n\n/**\n * For each provided viewport it adds a volume to the viewport using the\n * provided renderingEngine\n *\n *\n * @param renderingEngine - The rendering engine to use to get viewports from\n * @param volumeInputs - Array of volume inputs including volumeId. Other properties\n * such as visibility, callback, blendMode, slabThickness are optional\n * @param viewportIds - Array of viewport IDs to add the volume to\n * @param immediateRender - If true, the volumes will be rendered immediately\n * @returns A promise that resolves when all volumes have been added\n */\nasync function addImageSlicesToViewports(\n  renderingEngine: IRenderingEngine,\n  stackInputs: Array<IStackInput>,\n  viewportIds: Array<string>\n): Promise<void> {\n  // Check if all viewports are volumeViewports\n  for (const viewportId of viewportIds) {\n    const viewport = renderingEngine.getViewport(viewportId);\n\n    if (!viewport) {\n      throw new Error(`Viewport with Id ${viewportId} does not exist`);\n    }\n\n    // if not instance of BaseVolumeViewport, throw\n    if (!(viewport as IStackViewport).addImages) {\n      console.warn(\n        `Viewport with Id ${viewportId} does not have addImages. Cannot add image segmentation to this viewport.`\n      );\n\n      return;\n    }\n  }\n\n  const addStackPromises = viewportIds.map(async (viewportId) => {\n    const viewport = renderingEngine.getViewport(viewportId) as IStackViewport;\n\n    return viewport.addImages(stackInputs);\n  });\n\n  await Promise.all(addStackPromises);\n}\n\nexport default addImageSlicesToViewports;\n","import BaseVolumeViewport from '../BaseVolumeViewport';\nimport type {\n  IVolumeViewport,\n  IVolumeInput,\n  IRenderingEngine,\n} from '../../types';\n\n/**\n * For each provided viewport it adds a volume to the viewport using the\n * provided renderingEngine\n *\n *\n * @param renderingEngine - The rendering engine to use to get viewports from\n * @param volumeInputs - Array of volume inputs including volumeId. Other properties\n * such as visibility, callback, blendMode, slabThickness are optional\n * @param viewportIds - Array of viewport IDs to add the volume to\n * @param immediateRender - If true, the volumes will be rendered immediately\n * @returns A promise that resolves when all volumes have been added\n */\nasync function addVolumesToViewports(\n  renderingEngine: IRenderingEngine,\n  volumeInputs: Array<IVolumeInput>,\n  viewportIds: Array<string>,\n  immediateRender = false,\n  suppressEvents = false\n): Promise<void> {\n  // Check if all viewports are volumeViewports\n  for (const viewportId of viewportIds) {\n    const viewport = renderingEngine.getViewport(viewportId);\n\n    if (!viewport) {\n      throw new Error(`Viewport with Id ${viewportId} does not exist`);\n    }\n\n    // if not instance of BaseVolumeViewport, throw\n    if (!(viewport instanceof BaseVolumeViewport)) {\n      console.warn(\n        `Viewport with Id ${viewportId} is not a BaseVolumeViewport. Cannot add volume to this viewport.`\n      );\n\n      return;\n    }\n  }\n\n  const addVolumePromises = viewportIds.map(async (viewportId) => {\n    const viewport = renderingEngine.getViewport(viewportId) as IVolumeViewport;\n\n    await viewport.addVolumes(volumeInputs, immediateRender, suppressEvents);\n  });\n\n  await Promise.all(addVolumePromises);\n  return;\n}\n\nexport default addVolumesToViewports;\n","import LookupTable from './lookupTable';\nimport CPU_COLORMAPS from '../../../../constants/cpuColormaps';\nimport {\n  CPUFallbackColormap,\n  CPUFallbackColormapData,\n  Point4,\n} from '../../../../types';\n\nconst COLOR_TRANSPARENT: Point4 = [0, 0, 0, 0];\n\n/**\n *  Generate linearly spaced vectors\n *  http://cens.ioc.ee/local/man/matlab/techdoc/ref/linspace.html\n * @param {Number} a A number representing the first vector\n * @param {Number} b A number representing the second vector\n * @param {Number} n The number of linear spaced vectors to generate\n * @returns {Array} An array of points representing linear spaced vectors.\n * @memberof Colors\n */\nfunction linspace(a: number, b: number, n: number): number[] {\n  n = n === null ? 100 : n;\n\n  const increment = (b - a) / (n - 1);\n  const vector = [];\n\n  while (n-- > 0) {\n    vector.push(a);\n    a += increment;\n  }\n\n  // Make sure the last item will always be \"b\" because most of the\n  // Time we'll get numbers like 1.0000000000000002 instead of 1.\n  vector[vector.length - 1] = b;\n\n  return vector;\n}\n\n/**\n * Returns the \"rank/index\" of the element in a sorted array if found or the highest index if not. Uses (binary search)\n * @param {Array} array A sorted array to search in\n * @param {any} elem the element in the array to search for\n * @returns {number} The rank/index of the element in the given array\n * @memberof Colors\n */\nfunction getRank(array, elem) {\n  let left = 0;\n  let right = array.length - 1;\n\n  while (left <= right) {\n    const mid = left + Math.floor((right - left) / 2);\n    const midElem = array[mid];\n\n    if (midElem === elem) {\n      return mid;\n    } else if (elem < midElem) {\n      right = mid - 1;\n    } else {\n      left = mid + 1;\n    }\n  }\n\n  return left;\n}\n\n/**\n * Find the indices into a sorted array a such that, if the corresponding elements\n * In v were inserted before the indices, the order of a would be preserved.\n *  http://lagrange.univ-lyon1.fr/docs/numpy/1.11.0/reference/generated/numpy.searchsorted.html\n * @param {Array} inputArray The array where the values will be inserted\n * @param {Array} values An array of the values to be inserted into the inputArray\n * @returns {Array} The indices where elements should be inserted to maintain order.\n * @memberof Colors\n */\nfunction searchSorted(inputArray, values) {\n  let i;\n  const indexes = [];\n  const len = values.length;\n\n  inputArray.sort(function (a, b) {\n    return a - b;\n  });\n\n  for (i = 0; i < len; i++) {\n    indexes[i] = getRank(inputArray, values[i]);\n  }\n\n  return indexes;\n}\n\n/**\n * Creates an *N* -element 1-d lookup table\n * @param {Number} N The number of elements in the result lookup table\n * @param {Array} data represented by a list of x,y0,y1 mapping correspondences. Each element in this\n * List represents how a value between 0 and 1 (inclusive) represented by x is mapped to\n * A corresponding value between 0 and 1 (inclusive). The two values of y are to allow for\n * Discontinuous mapping functions (say as might be found in a sawtooth) where y0 represents\n * The value of y for values of x <= to that given, and y1 is the value to be used for x >\n * Than that given). The list must start with x=0, end with x=1, and all values of x must be\n * In increasing order. Values between the given mapping points are determined by simple linear\n * Interpolation.\n * @param {any} gamma value denotes a \"gamma curve\" value which adjusts the brightness\n * at the bottom and top of the map.\n * @returns {any[]} an array \"result\" where result[x*(N-1)] gives the closest value for\n * Values of x between 0 and 1.\n * @memberof Colors\n */\nfunction makeMappingArray(N, data, gamma) {\n  let i;\n  const x = [];\n  const y0 = [];\n  const y1 = [];\n  const lut = [];\n\n  gamma = gamma === null ? 1 : gamma;\n\n  for (i = 0; i < data.length; i++) {\n    const element = data[i];\n\n    x.push((N - 1) * element[0]);\n    y0.push(element[1]);\n    y1.push(element[1]);\n  }\n\n  const xLinSpace = linspace(0, 1, N);\n\n  for (i = 0; i < N; i++) {\n    xLinSpace[i] = (N - 1) * Math.pow(xLinSpace[i], gamma);\n  }\n\n  const xLinSpaceIndexes = searchSorted(x, xLinSpace);\n\n  for (i = 1; i < N - 1; i++) {\n    const index = xLinSpaceIndexes[i];\n    const colorPercent =\n      (xLinSpace[i] - x[index - 1]) / (x[index] - x[index - 1]);\n    const colorDelta = y0[index] - y1[index - 1];\n\n    lut[i] = colorPercent * colorDelta + y1[index - 1];\n  }\n\n  lut[0] = y1[0];\n  lut[N - 1] = y0[data.length - 1];\n\n  return lut;\n}\n\n/**\n * Creates a Colormap based on lookup tables using linear segments.\n * @param {{red:Array, green:Array, blue:Array}} segmentedData An object with a red, green and blue entries.\n * Each entry should be a list of x, y0, y1 tuples, forming rows in a table.\n * @param {Number} N The number of elements in the result Colormap\n * @param {any} gamma value denotes a \"gamma curve\" value which adjusts the brightness\n * at the bottom and top of the Colormap.\n * @returns {Array} The created Colormap object\n * @description The lookup table is generated using linear interpolation for each\n *  Primary color, with the 0-1 domain divided into any number of\n * Segments.\n * https://github.com/stefanv/matplotlib/blob/3f1a23755e86fef97d51e30e106195f34425c9e3/lib/matplotlib/colors.py#L663\n * @memberof Colors\n */\nfunction createLinearSegmentedColormap(segmentedData, N, gamma) {\n  let i;\n  const lut = [];\n\n  N = N === null ? 256 : N;\n  gamma = gamma === null ? 1 : gamma;\n\n  const redLut = makeMappingArray(N, segmentedData.red, gamma);\n  const greenLut = makeMappingArray(N, segmentedData.green, gamma);\n  const blueLut = makeMappingArray(N, segmentedData.blue, gamma);\n\n  for (i = 0; i < N; i++) {\n    const red = Math.round(redLut[i] * 255);\n    const green = Math.round(greenLut[i] * 255);\n    const blue = Math.round(blueLut[i] * 255);\n    const rgba = [red, green, blue, 255];\n\n    lut.push(rgba);\n  }\n\n  return lut;\n}\n\n/**\n * Return all available colormaps (id and name)\n * @returns {Array<{id,key}>} An array of colormaps with an object containing the \"id\" and display \"name\"\n * @memberof Colors\n */\nexport function getColormapsList() {\n  const colormaps = [];\n  const keys = Object.keys(CPU_COLORMAPS);\n\n  keys.forEach(function (key) {\n    if (CPU_COLORMAPS.hasOwnProperty(key)) {\n      const colormap = CPU_COLORMAPS[key];\n\n      colormaps.push({\n        id: key,\n        name: colormap.name,\n      });\n    }\n  });\n\n  colormaps.sort(function (a, b) {\n    const aName = a.name.toLowerCase();\n    const bName = b.name.toLowerCase();\n\n    if (aName === bName) {\n      return 0;\n    }\n\n    return aName < bName ? -1 : 1;\n  });\n\n  return colormaps;\n}\n\n/**\n * Return a colorMap object with the provided id and colormapData\n * if the Id matches existent colorMap objects (check colormapsData) the colormapData is ignored.\n * if the colormapData is not empty, the colorMap will be added to the colormapsData list. Otherwise, an empty colorMap object is returned.\n * @param {string} id The ID of the colormap\n * @param {Object} colormapData - An object that can contain a name, numColors, gama, segmentedData and/or colors\n * @returns {*} The Colormap Object\n * @memberof Colors\n */\nexport function getColormap(\n  id: string,\n  colormapData?: CPUFallbackColormapData\n): CPUFallbackColormap {\n  let colormap = CPU_COLORMAPS[id];\n\n  if (!colormap) {\n    colormap = CPU_COLORMAPS[id] = colormapData || {\n      name: '',\n      colors: [],\n    };\n  }\n\n  if (!colormap.colors && colormap.segmentedData) {\n    colormap.colors = createLinearSegmentedColormap(\n      colormap.segmentedData,\n      colormap.numColors,\n      colormap.gamma\n    );\n  }\n\n  const cpuFallbackColormap: CPUFallbackColormap = {\n    getId() {\n      return id;\n    },\n\n    getColorSchemeName() {\n      return colormap.name;\n    },\n\n    setColorSchemeName(name) {\n      colormap.name = name;\n    },\n\n    getNumberOfColors() {\n      return colormap.colors.length;\n    },\n\n    setNumberOfColors(numColors) {\n      while (colormap.colors.length < numColors) {\n        colormap.colors.push(COLOR_TRANSPARENT);\n      }\n\n      colormap.colors.length = numColors;\n    },\n\n    getColor(index) {\n      if (this.isValidIndex(index)) {\n        return colormap.colors[index];\n      }\n\n      return COLOR_TRANSPARENT;\n    },\n\n    getColorRepeating(index) {\n      const numColors = colormap.colors.length;\n\n      index = numColors ? index % numColors : 0;\n\n      return this.getColor(index);\n    },\n\n    setColor(index, rgba) {\n      if (this.isValidIndex(index)) {\n        colormap.colors[index] = rgba;\n      }\n    },\n\n    addColor(rgba) {\n      colormap.colors.push(rgba);\n    },\n\n    insertColor(index, rgba) {\n      if (this.isValidIndex(index)) {\n        colormap.colors.splice(index, 1, rgba);\n      }\n    },\n\n    removeColor(index) {\n      if (this.isValidIndex(index)) {\n        colormap.colors.splice(index, 1);\n      }\n    },\n\n    clearColors() {\n      colormap.colors = [];\n    },\n\n    buildLookupTable(lut) {\n      if (!lut) {\n        return;\n      }\n\n      const numColors = colormap.colors.length;\n\n      lut.setNumberOfTableValues(numColors);\n\n      for (let i = 0; i < numColors; i++) {\n        lut.setTableValue(i, colormap.colors[i]);\n      }\n    },\n\n    createLookupTable() {\n      const lut = new LookupTable();\n\n      this.buildLookupTable(lut);\n\n      return lut;\n    },\n\n    isValidIndex(index) {\n      return index >= 0 && index < colormap.colors.length;\n    },\n  };\n\n  return cpuFallbackColormap;\n}\n","import now from './rendering/now';\nimport { renderColorImage } from './rendering/renderColorImage';\nimport { renderGrayscaleImage } from './rendering/renderGrayscaleImage';\nimport { renderPseudoColorImage } from './rendering/renderPseudoColorImage';\nimport { CPUFallbackEnabledElement } from '../../../types';\n\n/**\n * Draw an image to a given enabled element synchronously\n *\n * @param enabledElement - An enabled element to draw into\n * @param invalidated - true if pixel data has been invalidated and cached rendering should not be used\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  invalidated: boolean\n): void {\n  const image = enabledElement.image;\n\n  // Check if enabledElement can be redrawn\n  if (!enabledElement.canvas || !enabledElement.image) {\n    return;\n  }\n\n  // Start measuring the time needed to draw the image.\n  const start = now();\n\n  image.stats = {\n    lastGetPixelDataTime: -1.0,\n    lastStoredPixelDataToCanvasImageDataTime: -1.0,\n    lastPutImageDataTime: -1.0,\n    lastRenderTime: -1.0,\n    lastLutGenerateTime: -1.0,\n  };\n\n  if (image) {\n    let render = image.render;\n\n    if (!render) {\n      if (enabledElement.viewport.colormap) {\n        render = renderPseudoColorImage;\n      } else if (image.color) {\n        render = renderColorImage;\n      } else {\n        render = renderGrayscaleImage;\n      }\n    }\n\n    render(enabledElement, invalidated);\n  }\n\n  // Calculate how long it took to draw the image/layers\n  const renderTimeInMs = now() - start;\n\n  image.stats.lastRenderTime = renderTimeInMs;\n\n  enabledElement.invalid = false;\n  enabledElement.needsRedraw = false;\n}\n","import { Transform } from './transform';\nimport {\n  CPUFallbackEnabledElement,\n  CPUFallbackTransform,\n} from '../../../../types';\n\n/**\n * Calculate the transform for a Cornerstone enabled element\n *\n * @param enabledElement - The Cornerstone Enabled Element\n * @param scale - The viewport scale\n * @returns The current transform\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  scale?: number\n): CPUFallbackTransform {\n  const transform = new Transform();\n\n  if (!enabledElement.viewport.displayedArea) {\n    return transform;\n  }\n\n  // Move to center of canvas\n  transform.translate(\n    enabledElement.canvas.width / 2,\n    enabledElement.canvas.height / 2\n  );\n\n  // Apply the rotation before scaling for non square pixels\n  const angle = enabledElement.viewport.rotation;\n\n  if (angle !== 0) {\n    transform.rotate((angle * Math.PI) / 180);\n  }\n\n  // Apply the scale\n  let widthScale = enabledElement.viewport.scale;\n  let heightScale = enabledElement.viewport.scale;\n\n  const width =\n    enabledElement.viewport.displayedArea.brhc.x -\n    (enabledElement.viewport.displayedArea.tlhc.x - 1);\n  const height =\n    enabledElement.viewport.displayedArea.brhc.y -\n    (enabledElement.viewport.displayedArea.tlhc.y - 1);\n\n  if (enabledElement.viewport.displayedArea.presentationSizeMode === 'NONE') {\n    if (\n      enabledElement.image.rowPixelSpacing <\n      enabledElement.image.columnPixelSpacing\n    ) {\n      widthScale *=\n        enabledElement.image.columnPixelSpacing /\n        enabledElement.image.rowPixelSpacing;\n    } else if (\n      enabledElement.image.columnPixelSpacing <\n      enabledElement.image.rowPixelSpacing\n    ) {\n      heightScale *=\n        enabledElement.image.rowPixelSpacing /\n        enabledElement.image.columnPixelSpacing;\n    }\n  } else {\n    // These should be good for \"TRUE SIZE\" and \"MAGNIFY\"\n    widthScale = enabledElement.viewport.displayedArea.columnPixelSpacing;\n    heightScale = enabledElement.viewport.displayedArea.rowPixelSpacing;\n\n    if (\n      enabledElement.viewport.displayedArea.presentationSizeMode ===\n      'SCALE TO FIT'\n    ) {\n      // Fit TRUE IMAGE image (width/height) to window\n      const verticalScale =\n        enabledElement.canvas.height / (height * heightScale);\n      const horizontalScale =\n        enabledElement.canvas.width / (width * widthScale);\n\n      // Apply new scale\n      widthScale = heightScale = Math.min(horizontalScale, verticalScale);\n\n      if (\n        enabledElement.viewport.displayedArea.rowPixelSpacing <\n        enabledElement.viewport.displayedArea.columnPixelSpacing\n      ) {\n        widthScale *=\n          enabledElement.viewport.displayedArea.columnPixelSpacing /\n          enabledElement.viewport.displayedArea.rowPixelSpacing;\n      } else if (\n        enabledElement.viewport.displayedArea.columnPixelSpacing <\n        enabledElement.viewport.displayedArea.rowPixelSpacing\n      ) {\n        heightScale *=\n          enabledElement.viewport.displayedArea.rowPixelSpacing /\n          enabledElement.viewport.displayedArea.columnPixelSpacing;\n      }\n    }\n  }\n\n  transform.scale(widthScale, heightScale);\n\n  // Unrotate to so we can translate unrotated\n  if (angle !== 0) {\n    transform.rotate((-angle * Math.PI) / 180);\n  }\n\n  // Apply the pan offset\n  transform.translate(\n    enabledElement.viewport.translation.x,\n    enabledElement.viewport.translation.y\n  );\n\n  // Rotate again so we can apply general scale\n  if (angle !== 0) {\n    transform.rotate((angle * Math.PI) / 180);\n  }\n\n  if (scale !== undefined) {\n    // Apply the font scale\n    transform.scale(scale, scale);\n  }\n\n  // Apply Flip if required\n  if (enabledElement.viewport.hflip) {\n    transform.scale(-1, 1);\n  }\n\n  if (enabledElement.viewport.vflip) {\n    transform.scale(1, -1);\n  }\n\n  // Move back from center of image\n  transform.translate(-width / 2, -height / 2);\n\n  return transform;\n}\n","import getTransform from './getTransform';\n\nimport { Point2, CPUFallbackEnabledElement } from '../../../../types';\n\n/**\n * Converts a point in the canvas coordinate system to the pixel coordinate system\n * system.  This can be used to reset tools' image coordinates after modifications\n * have been made in canvas space (e.g. moving a tool by a few cm, independent of\n * image resolution).\n *\n * @param element - The Cornerstone element within which the input point lies\n * @param pt - The input point in the canvas coordinate system\n *\n * @returns The transformed point in the pixel coordinate system\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  pt: Point2\n): Point2 {\n  const transform = getTransform(enabledElement);\n\n  transform.invert();\n\n  return transform.transformPoint(pt);\n}\n","import { CPUFallbackViewport, Point2 } from '../../../../types';\n\ntype Shift = {\n  x: number;\n  y: number;\n};\n/**\n * Corrects the shift by accounting for viewport rotation and flips.\n *\n * @param shift - The shift to correct.\n * @param viewportOrientation - Object containing information on the viewport orientation.\n */\nexport default function (\n  shift: Shift,\n  viewportOrientation: CPUFallbackViewport\n): Shift {\n  const { hflip, vflip, rotation } = viewportOrientation;\n\n  // Apply Flips\n  shift.x *= hflip ? -1 : 1;\n  shift.y *= vflip ? -1 : 1;\n\n  // Apply rotations\n  if (rotation !== 0) {\n    const angle = (rotation * Math.PI) / 180;\n\n    const cosA = Math.cos(angle);\n    const sinA = Math.sin(angle);\n\n    const newX = shift.x * cosA - shift.y * sinA;\n    const newY = shift.x * sinA + shift.y * cosA;\n\n    shift.x = newX;\n    shift.y = newY;\n  }\n\n  return shift;\n}\n","import createViewport from './createViewport';\nimport getImageFitScale from './getImageFitScale';\nimport {\n  IImage,\n  CPUFallbackColormap,\n  CPUFallbackViewport,\n} from '../../../../types';\n\n/**\n * Creates a new viewport object containing default values for the image and canvas\n *\n * @param canvas - A Canvas DOM element\n * @param image - A Cornerstone Image Object\n * @returns viewport - object\n */\nexport default function (\n  canvas: HTMLCanvasElement,\n  image: IImage,\n  modality?: string,\n  colormap?: CPUFallbackColormap\n): CPUFallbackViewport {\n  if (canvas === undefined) {\n    throw new Error(\n      'getDefaultViewport: parameter canvas must not be undefined'\n    );\n  }\n\n  if (image === undefined) {\n    return createViewport();\n  }\n\n  // Fit image to window\n  const scale = getImageFitScale(canvas, image, 0).scaleFactor;\n\n  let voi;\n\n  if (modality === 'PT' && image.isPreScaled) {\n    voi = {\n      windowWidth: 5,\n      windowCenter: 2.5,\n    };\n  } else if (\n    image.windowWidth !== undefined &&\n    image.windowCenter !== undefined\n  ) {\n    voi = {\n      windowWidth: Array.isArray(image.windowWidth)\n        ? image.windowWidth[0]\n        : image.windowWidth,\n      windowCenter: Array.isArray(image.windowCenter)\n        ? image.windowCenter[0]\n        : image.windowCenter,\n    };\n  }\n\n  return {\n    scale,\n    translation: {\n      x: 0,\n      y: 0,\n    },\n    voi,\n    invert: image.invert,\n    pixelReplication: false,\n    rotation: 0,\n    hflip: false,\n    vflip: false,\n    modalityLUT: image.modalityLUT,\n    modality,\n    voiLUT: image.voiLUT,\n    colormap: colormap !== undefined ? colormap : image.colormap,\n    displayedArea: {\n      tlhc: {\n        x: 1,\n        y: 1,\n      },\n      brhc: {\n        x: image.columns,\n        y: image.rows,\n      },\n      rowPixelSpacing:\n        image.rowPixelSpacing === undefined ? 1 : image.rowPixelSpacing,\n      columnPixelSpacing:\n        image.columnPixelSpacing === undefined ? 1 : image.columnPixelSpacing,\n      presentationSizeMode: 'NONE',\n    },\n  };\n}\n","import { validateParameterUndefinedOrNull } from './validator';\nimport getImageSize from './getImageSize';\nimport { IImage } from '../../../../types';\n\n/**\n * Calculates the horizontal, vertical and minimum scale factor for an image\n   @param canvas - The window size where the image is displayed. This can be any HTML element or structure with a width, height fields (e.g. canvas).\n * @param image - The cornerstone image object\n * @param rotation - The rotation angle of the image.\n * @returns The calculated horizontal, vertical and minimum scale factor\n */\nexport default function (\n  canvas: HTMLCanvasElement,\n  image: IImage,\n  rotation: number | null = null\n): {\n  verticalScale: number;\n  horizontalScale: number;\n  scaleFactor: number;\n} {\n  validateParameterUndefinedOrNull(\n    canvas,\n    'getImageScale: parameter canvas must not be undefined'\n  );\n  validateParameterUndefinedOrNull(\n    image,\n    'getImageScale: parameter image must not be undefined'\n  );\n\n  const imageSize = getImageSize(image, rotation);\n  const rowPixelSpacing = image.rowPixelSpacing || 1;\n  const columnPixelSpacing = image.columnPixelSpacing || 1;\n  let verticalRatio = 1;\n  let horizontalRatio = 1;\n\n  if (rowPixelSpacing < columnPixelSpacing) {\n    horizontalRatio = columnPixelSpacing / rowPixelSpacing;\n  } else {\n    // even if they are equal we want to calculate this ratio (the ration might be 0.5)\n    verticalRatio = rowPixelSpacing / columnPixelSpacing;\n  }\n\n  const verticalScale = canvas.height / imageSize.height / verticalRatio;\n  const horizontalScale = canvas.width / imageSize.width / horizontalRatio;\n\n  // Fit image to window\n  return {\n    verticalScale,\n    horizontalScale,\n    scaleFactor: Math.min(horizontalScale, verticalScale),\n  };\n}\n","import { validateParameterUndefinedOrNull } from './validator';\nimport { IImage } from '../../../../types';\n\n/**\n * Check if the angle is rotated\n * @param {Number} rotation the rotation angle\n * @returns {Boolean} true if the angle is rotated; Otherwise, false.\n * @memberof Internal\n */\nfunction isRotated(rotation?: number | null): boolean {\n  return !(\n    rotation === null ||\n    rotation === undefined ||\n    rotation === 0 ||\n    rotation === 180\n  );\n}\n\n/**\n * Retrieves the current image dimensions given an enabled element\n *\n * @param {any} image The Cornerstone image.\n * @param {Number} rotation Optional. The rotation angle of the image.\n * @return {{width:Number, height:Number}} The Image dimensions\n * @memberof Internal\n */\nexport default function (\n  image: IImage,\n  rotation = null\n): { height: number; width: number } {\n  validateParameterUndefinedOrNull(\n    image,\n    'getImageSize: parameter image must not be undefined'\n  );\n  validateParameterUndefinedOrNull(\n    image.width,\n    'getImageSize: parameter image must have width'\n  );\n  validateParameterUndefinedOrNull(\n    image.height,\n    'getImageSize: parameter image must have height'\n  );\n\n  if (isRotated(rotation)) {\n    return {\n      height: image.width,\n      width: image.height,\n    };\n  }\n\n  return {\n    width: image.width,\n    height: image.height,\n  };\n}\n","import calculateTransform from './calculateTransform';\nimport {\n  CPUFallbackEnabledElement,\n  CPUFallbackTransform,\n} from '../../../../types';\n\nexport default function (\n  enabledElement: CPUFallbackEnabledElement\n): CPUFallbackTransform {\n  // Todo: for some reason using the cached transfer after the first call\n  // does not give correct transform.\n  // if (enabledElement.transform) {\n  //   return enabledElement.transform;\n  // }\n\n  return calculateTransform(enabledElement);\n}\n","import getTransform from './getTransform';\nimport { CPUFallbackEnabledElement, Point2 } from '../../../../types';\n\n/**\n * Converts a point in the pixel coordinate system to the canvas coordinate system\n * system.  This can be used to render using canvas context without having the weird\n * side effects that come from scaling and non square pixels\n *\n * @param {HTMLDivElement} element An HTML Element enabled for Cornerstone\n * @param {{x: Number, y: Number}} pt The transformed point in the pixel coordinate system\n *\n * @returns {{x: Number, y: Number}} The input point in the canvas coordinate system\n * @memberof PixelCoordinateSystem\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  pt: Point2\n): Point2 {\n  const transform = getTransform(enabledElement);\n\n  return transform.transformPoint(pt);\n}\n","import getImageFitScale from './getImageFitScale';\nimport { CPUFallbackEnabledElement } from '../../../../types';\n\n/**\n * Resets the camera to the default position. which would be the center of the image.\n * with no translation, no flipping, no zoom and proper scale.\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  resetPan = true,\n  resetZoom = true\n): void {\n  const { canvas, image, viewport } = enabledElement;\n  const scale = getImageFitScale(canvas, image, 0).scaleFactor;\n\n  viewport.vflip = false;\n  viewport.hflip = false;\n\n  if (resetPan) {\n    viewport.translation.x = 0;\n    viewport.translation.y = 0;\n  }\n\n  if (resetZoom) {\n    viewport.displayedArea.tlhc.x = 1;\n    viewport.displayedArea.tlhc.y = 1;\n    viewport.displayedArea.brhc.x = image.columns;\n    viewport.displayedArea.brhc.y = image.rows;\n\n    viewport.scale = scale;\n  }\n}\n","import fitToWindow from './fitToWindow';\nimport getImageSize from './getImageSize';\nimport { CPUFallbackEnabledElement } from '../../../../types';\n\n/**\n * This module is responsible for enabling an element to display images with cornerstone\n *\n * @param {HTMLDivElement} element The DOM element enabled for Cornerstone\n * @param {HTMLDivElement} canvas The Canvas DOM element within the DOM element enabled for Cornerstone\n * @returns {void}\n */\nfunction setCanvasSize(enabledElement: CPUFallbackEnabledElement) {\n  const { canvas } = enabledElement;\n  const { clientWidth, clientHeight } = canvas;\n\n  // Set the canvas to be same resolution as the client.\n  if (canvas.width !== clientWidth || canvas.height !== clientHeight) {\n    canvas.width = clientWidth;\n    canvas.height = clientHeight;\n  }\n}\n\n/**\n * Checks if the image of a given enabled element fitted the window\n * before the resize\n *\n * @param {EnabledElement} enabledElement The Cornerstone Enabled Element\n * @param {number} oldCanvasWidth The width of the canvas before the resize\n * @param {number} oldCanvasHeight The height of the canvas before the resize\n * @return {Boolean} true if it fitted the windows, false otherwise\n */\nfunction wasFitToWindow(\n  enabledElement: CPUFallbackEnabledElement,\n  oldCanvasWidth: number,\n  oldCanvasHeight: number\n): boolean {\n  const scale = enabledElement.viewport.scale;\n  const imageSize = getImageSize(\n    enabledElement.image,\n    enabledElement.viewport.rotation\n  );\n  const imageWidth = Math.round(imageSize.width * scale);\n  const imageHeight = Math.round(imageSize.height * scale);\n  const x = enabledElement.viewport.translation.x;\n  const y = enabledElement.viewport.translation.y;\n\n  return (\n    (imageWidth === oldCanvasWidth && imageHeight <= oldCanvasHeight) ||\n    (imageWidth <= oldCanvasWidth &&\n      imageHeight === oldCanvasHeight &&\n      x === 0 &&\n      y === 0)\n  );\n}\n\n/**\n * Rescale the image relative to the changed size of the canvas\n *\n * @param {EnabledElement} enabledElement The Cornerstone Enabled Element\n * @param {number} oldCanvasWidth The width of the canvas before the resize\n * @param {number} oldCanvasHeight The height of the canvas before the resize\n * @return {void}\n */\nfunction relativeRescale(\n  enabledElement: CPUFallbackEnabledElement,\n  oldCanvasWidth: number,\n  oldCanvasHeight: number\n): void {\n  const scale = enabledElement.viewport.scale;\n  const canvasWidth = enabledElement.canvas.width;\n  const canvasHeight = enabledElement.canvas.height;\n  const relWidthChange = canvasWidth / oldCanvasWidth;\n  const relHeightChange = canvasHeight / oldCanvasHeight;\n  const relChange = Math.sqrt(relWidthChange * relHeightChange);\n\n  enabledElement.viewport.scale = relChange * scale;\n}\n\n/**\n * Resizes an enabled element and optionally fits the image to window\n *\n * @param {HTMLDivElement} element The DOM element enabled for Cornerstone\n * @param {Boolean} forceFitToWindow true to to force a refit, false to rescale accordingly\n * @returns {void}\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  forceFitToWindow = false\n): void {\n  const oldCanvasWidth = enabledElement.canvas.width;\n  const oldCanvasHeight = enabledElement.canvas.height;\n\n  setCanvasSize(enabledElement);\n\n  if (enabledElement.image === undefined) {\n    return;\n  }\n\n  if (\n    forceFitToWindow ||\n    wasFitToWindow(enabledElement, oldCanvasWidth, oldCanvasHeight)\n  ) {\n    // Fit the image to the window again if it fitted before the resize\n    fitToWindow(enabledElement);\n  } else {\n    // Adapt the scale of a zoomed or panned image relative to the size change\n    relativeRescale(enabledElement, oldCanvasWidth, oldCanvasHeight);\n  }\n}\n","import getImageFitScale from './getImageFitScale';\nimport { CPUFallbackEnabledElement } from '../../../../types';\n\n/**\n * Adjusts an image's scale and translation so the image is centered and all pixels\n * in the image are viewable.\n *\n * @param element - The Cornerstone element to update\n */\nexport default function (enabledElement: CPUFallbackEnabledElement): void {\n  const { image } = enabledElement;\n\n  // The new scale is the minimum of the horizontal and vertical scale values\n  enabledElement.viewport.scale = getImageFitScale(\n    enabledElement.canvas,\n    image,\n    enabledElement.viewport.rotation\n  ).scaleFactor;\n\n  enabledElement.viewport.translation.x = 0;\n  enabledElement.viewport.translation.y = 0;\n}\n","import vtkVolume from '@kitware/vtk.js/Rendering/Core/Volume';\n\nimport { VolumeActor } from './../../types/IActor';\nimport { VoiModifiedEventDetail } from './../../types/EventTypes';\nimport { loadVolume } from '../../loaders/volumeLoader';\nimport createVolumeMapper from './createVolumeMapper';\nimport BlendModes from '../../enums/BlendModes';\nimport { triggerEvent } from '../../utilities';\nimport { Events } from '../../enums';\nimport setDefaultVolumeVOI from './setDefaultVolumeVOI';\n\ninterface createVolumeActorInterface {\n  volumeId: string;\n  callback?: ({\n    volumeActor,\n    volumeId,\n  }: {\n    volumeActor: VolumeActor;\n    volumeId: string;\n  }) => void;\n  blendMode?: BlendModes;\n}\n\n/**\n * Given a volumeId, it creates a vtk volume actor and returns it. If\n * callback is provided, it will be called with the volume actor and the\n * volumeId. If blendMode is provided, it will be set on the volume actor.\n *\n * @param props - createVolumeActorInterface\n * @returns A promise that resolves to a VolumeActor.\n */\nasync function createVolumeActor(\n  props: createVolumeActorInterface,\n  element: HTMLDivElement,\n  viewportId: string,\n  suppressEvents = false,\n  useNativeDataType = false\n): Promise<VolumeActor> {\n  const { volumeId, callback, blendMode } = props;\n\n  const imageVolume = await loadVolume(volumeId);\n\n  if (!imageVolume) {\n    throw new Error(\n      `imageVolume with id: ${imageVolume.volumeId} does not exist`\n    );\n  }\n\n  const { imageData, vtkOpenGLTexture } = imageVolume;\n\n  const volumeMapper = createVolumeMapper(imageData, vtkOpenGLTexture);\n\n  if (blendMode) {\n    volumeMapper.setBlendMode(blendMode);\n  }\n\n  const volumeActor = vtkVolume.newInstance();\n  volumeActor.setMapper(volumeMapper);\n\n  const numberOfComponents = imageData\n    .getPointData()\n    .getScalars()\n    .getNumberOfComponents();\n\n  if (numberOfComponents === 3) {\n    volumeActor.getProperty().setIndependentComponents(false);\n  }\n\n  await setDefaultVolumeVOI(volumeActor, imageVolume, useNativeDataType);\n\n  if (callback) {\n    callback({ volumeActor, volumeId });\n  }\n\n  if (!suppressEvents) {\n    triggerVOIModified(element, viewportId, volumeActor, volumeId);\n  }\n\n  return volumeActor;\n}\n\nfunction triggerVOIModified(\n  element: HTMLDivElement,\n  viewportId: string,\n  volumeActor: VolumeActor,\n  volumeId: string\n) {\n  const voiRange = volumeActor\n    .getProperty()\n    .getRGBTransferFunction(0)\n    .getRange();\n\n  const voiModifiedEventDetail: VoiModifiedEventDetail = {\n    viewportId,\n    range: {\n      lower: voiRange[0],\n      upper: voiRange[1],\n    },\n    volumeId,\n  };\n\n  triggerEvent(element, Events.VOI_MODIFIED, voiModifiedEventDetail);\n}\n\nexport default createVolumeActor;\n","import {\n  VolumeActor,\n  IImageVolume,\n  VOIRange,\n  ScalingParameters,\n} from '../../types';\nimport { loadAndCacheImage } from '../../loaders/imageLoader';\nimport * as metaData from '../../metaData';\nimport { getMinMax, windowLevel } from '../../utilities';\nimport { RequestType } from '../../enums';\nimport cache from '../../cache';\n\nconst PRIORITY = 0;\nconst REQUEST_TYPE = RequestType.Prefetch;\n\n/**\n * It sets the default window level of an image volume based on the VOI.\n * It first look for the VOI in the metadata and if it is not found, it\n * loads the middle slice image (middle imageId) and based on its min\n * and max pixel values, it calculates the VOI.\n * Finally it sets the VOI on the volumeActor transferFunction\n * @param volumeActor - The volume actor\n * @param imageVolume - The image volume that we want to set the VOI for.\n * @param useNativeDataType -  The image data type is native or Float32Array\n */\nasync function setDefaultVolumeVOI(\n  volumeActor: VolumeActor,\n  imageVolume: IImageVolume,\n  useNativeDataType: boolean\n): Promise<void> {\n  let voi = getVOIFromMetadata(imageVolume);\n\n  if (!voi && imageVolume?.imageIds?.length) {\n    voi = await getVOIFromMinMax(imageVolume, useNativeDataType);\n    voi = handlePreScaledVolume(imageVolume, voi);\n  }\n  // if (!voi || voi.lower === undefined || voi.upper === undefined) {\n  //   throw new Error(\n  //     'Could not get VOI from metadata, nor from the min max of the image middle slice'\n  //   );\n  // }\n  if (\n    (voi?.lower === 0 && voi?.upper === 0) ||\n    voi?.lower === undefined ||\n    voi?.upper === undefined\n  ) {\n    return;\n  }\n\n  volumeActor\n    .getProperty()\n    .getRGBTransferFunction(0)\n    .setMappingRange(voi.lower, voi.upper);\n}\n\nfunction handlePreScaledVolume(imageVolume: IImageVolume, voi: VOIRange) {\n  const imageIds = imageVolume.imageIds;\n  const imageIdIndex = Math.floor(imageIds.length / 2);\n  const imageId = imageIds[imageIdIndex];\n\n  const generalSeriesModule =\n    metaData.get('generalSeriesModule', imageId) || {};\n\n  /**\n   * If the volume is prescaled and the modality is PT Sometimes you get super high\n   * values at the peak and it skews the min/max so nothing useful is displayed\n   * Therefore, we follow the majority of other viewers and we set the min/max\n   * for the scaled PT to be 0, 5\n   */\n  if (_isCurrentImagePTPrescaled(generalSeriesModule.modality, imageVolume)) {\n    return {\n      lower: 0,\n      upper: 5,\n    };\n  }\n\n  return voi;\n}\n\n/**\n * Get the VOI from the metadata of the middle slice of the image volume or the metadata of the image volume\n * It checks the metadata for the VOI and if it is not found, it returns null\n *\n * @param imageVolume - The image volume that we want to get the VOI from.\n * @returns VOIRange with lower and upper values\n */\nfunction getVOIFromMetadata(imageVolume: IImageVolume): VOIRange {\n  const { imageIds, metadata } = imageVolume;\n  let voi;\n  if (imageIds.length) {\n    const imageIdIndex = Math.floor(imageIds.length / 2);\n    const imageId = imageIds[imageIdIndex];\n    const voiLutModule = metaData.get('voiLutModule', imageId);\n    if (voiLutModule && voiLutModule.windowWidth && voiLutModule.windowCenter) {\n      const { windowWidth, windowCenter } = voiLutModule;\n      voi = {\n        windowWidth: Array.isArray(windowWidth) ? windowWidth[0] : windowWidth,\n        windowCenter: Array.isArray(windowCenter)\n          ? windowCenter[0]\n          : windowCenter,\n      };\n    }\n  } else {\n    voi = metadata?.voiLut?.[0];\n  }\n  if (voi) {\n    const { lower, upper } = windowLevel.toLowHighRange(\n      Number(voi.windowWidth),\n      Number(voi.windowCenter)\n    );\n    return {\n      lower,\n      upper,\n    };\n  }\n}\n\n/**\n * It loads the middle slice image (middle imageId) and based on its min\n * and max pixel values, it calculates the VOI.\n *\n * @param imageVolume - The image volume that we want to get the VOI from.\n * @param useNativeDataType -  The image data type is native or Float32Array\n * @returns The VOIRange with lower and upper values\n */\nasync function getVOIFromMinMax(\n  imageVolume: IImageVolume,\n  useNativeDataType: boolean\n): Promise<VOIRange> {\n  const { imageIds } = imageVolume;\n  const scalarData = imageVolume.getScalarData();\n\n  // Get the middle image from the list of imageIds\n  const imageIdIndex = Math.floor(imageIds.length / 2);\n  const imageId = imageVolume.imageIds[imageIdIndex];\n  const generalSeriesModule =\n    metaData.get('generalSeriesModule', imageId) || {};\n  const { modality } = generalSeriesModule;\n  const modalityLutModule = metaData.get('modalityLutModule', imageId) || {};\n\n  const numImages = imageIds.length;\n  const bytesPerImage = scalarData.byteLength / numImages;\n  const voxelsPerImage = scalarData.length / numImages;\n  const bytePerPixel = scalarData.BYTES_PER_ELEMENT;\n\n  const scalingParameters: ScalingParameters = {\n    rescaleSlope: modalityLutModule.rescaleSlope,\n    rescaleIntercept: modalityLutModule.rescaleIntercept,\n    modality,\n  };\n\n  let scalingParametersToUse;\n  if (modality === 'PT') {\n    const suvFactor = metaData.get('scalingModule', imageId);\n\n    if (suvFactor) {\n      scalingParametersToUse = {\n        ...scalingParameters,\n        suvbw: suvFactor.suvbw,\n      };\n    }\n  }\n\n  const byteOffset = imageIdIndex * bytesPerImage;\n\n  const options = {\n    targetBuffer: {\n      type: useNativeDataType ? undefined : 'Float32Array',\n    },\n    priority: PRIORITY,\n    requestType: REQUEST_TYPE,\n    useNativeDataType,\n    preScale: {\n      enabled: true,\n      scalingParameters: scalingParametersToUse,\n    },\n  };\n\n  // Loading the middle slice image for a volume has two scenarios, the first one is that\n  // uses the same volumeLoader which might not resolve to an image (since for performance\n  // reasons volumes' pixelData is set via offset and length on the volume arrayBuffer\n  // when each slice is loaded). The second scenario is that the image might not reach\n  // to the volumeLoader, and an already cached image (with Image object) is used\n  // instead. For the first scenario, we use the arrayBuffer of the volume to get the correct\n  // slice for the imageScalarData, and for the second scenario we use the getPixelData\n  // on the Cornerstone IImage object to get the pixel data.\n  // Note: we don't want to use the derived or generated images for setting the\n  // default VOI, because they are not the original. This is ugly but don't\n  // know how to do it better.\n  let image = cache.getImage(imageId);\n\n  if (!imageVolume.referencedImageIds?.length) {\n    // we should ignore the cache here,\n    // since we want to load the image from with the most\n    // recent prescale settings\n    image = await loadAndCacheImage(imageId, { ...options, ignoreCache: true });\n  }\n\n  const imageScalarData = image\n    ? image.getPixelData()\n    : _getImageScalarDataFromImageVolume(\n        imageVolume,\n        byteOffset,\n        bytePerPixel,\n        voxelsPerImage\n      );\n\n  // Get the min and max pixel values of the middle slice\n  const { min, max } = getMinMax(imageScalarData);\n\n  return {\n    lower: min,\n    upper: max,\n  };\n}\n\nfunction _getImageScalarDataFromImageVolume(\n  imageVolume,\n  byteOffset,\n  bytePerPixel,\n  voxelsPerImage\n) {\n  const { scalarData } = imageVolume;\n  const { buffer } = scalarData;\n  if (scalarData.BYTES_PER_ELEMENT !== bytePerPixel) {\n    byteOffset *= scalarData.BYTES_PER_ELEMENT / bytePerPixel;\n  }\n\n  const TypedArray = scalarData.constructor;\n  const imageScalarData = new TypedArray(voxelsPerImage);\n\n  const volumeBufferView = new TypedArray(buffer, byteOffset, voxelsPerImage);\n\n  imageScalarData.set(volumeBufferView);\n\n  return imageScalarData;\n}\n\nfunction _isCurrentImagePTPrescaled(modality, imageVolume) {\n  if (modality !== 'PT' || !imageVolume.isPreScaled) {\n    return false;\n  }\n\n  if (!imageVolume.scaling?.PT.suvbw) {\n    return false;\n  }\n\n  return true;\n}\n\nexport default setDefaultVolumeVOI;\n","import macro from '@kitware/vtk.js/macros';\nimport vtkVolumeMapper from '@kitware/vtk.js/Rendering/Core/VolumeMapper';\n\n/**\n * vtkSharedVolumeMapper - A derived class of the core vtkVolumeMapper class\n * the scalar texture in as an argument. This is so we can share the same texture\n * memory across different mappers/actors, so we don't duplicate memory usage.\n *\n *\n *\n * @param {*} publicAPI The public API to extend\n * @param {*} model The private model to extend.\n * @hidden\n */\nfunction vtkSharedVolumeMapper(publicAPI, model) {\n  model.classHierarchy.push('vtkSharedVolumeMapper');\n\n  const superDelete = publicAPI.delete;\n  publicAPI.delete = () => {\n    model.scalarTexture = null;\n    superDelete();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  scalarTexture: null,\n};\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  vtkVolumeMapper.extend(publicAPI, model, initialValues);\n\n  macro.setGet(publicAPI, model, ['scalarTexture']);\n\n  // Object methods\n  vtkSharedVolumeMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkSharedVolumeMapper');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","/*\n * Constants\n */\n\nconst DEFAULT_SETTINGS = Symbol('DefaultSettings');\nconst RUNTIME_SETTINGS = Symbol('RuntimeSettings');\nconst OBJECT_SETTINGS_MAP = Symbol('ObjectSettingsMap');\nconst DICTIONARY = Symbol('Dictionary');\n\n/**\n * Settings\n */\nexport default class Settings {\n  constructor(base?: Settings) {\n    const dictionary = Object.create(\n      (base instanceof Settings && DICTIONARY in base\n        ? base[DICTIONARY]\n        : null) as object\n    );\n    Object.seal(\n      Object.defineProperty(this, DICTIONARY, {\n        value: dictionary,\n      })\n    );\n  }\n\n  set(key: string, value: unknown): boolean {\n    return set(this[DICTIONARY], key, value, null);\n  }\n\n  get(key: string): unknown {\n    return get(this[DICTIONARY], key);\n  }\n\n  /**\n   * Unset a specific key or a set of keys within a namespace when the key ends with a dot (ASCII #46).\n   * If the key is \".\", all keys will be removed and this command works as a reset.\n   * @param key - name The key to be unset or a namespace.\n   * @returns boolean\n   */\n  unset(key: string): boolean {\n    return unset(this[DICTIONARY], key + '');\n  }\n\n  forEach(callback: (key: string, value: unknown) => void): void {\n    iterate(this[DICTIONARY], callback);\n  }\n\n  extend(): Settings {\n    return new Settings(this);\n  }\n\n  /**\n   * Recursively import all properties from the given plain JavaScript object.\n   * This method has the opposite effect of the `dump` method.\n   * @param root - The root object whose properties will\n   * be imported.\n   */\n  import(root: Record<string, unknown>): void {\n    if (isPlainObject(root)) {\n      Object.keys(root).forEach((key) => {\n        set(this[DICTIONARY], key, root[key], null);\n      });\n    }\n  }\n\n  /**\n   * Build a JSON representation of the current internal state of this settings\n   * object. The returned object can be safely passed to `JSON.stringify`\n   * function.\n   * @returns The JSON representation of the current\n   * state of this settings instance\n   */\n  dump(): Record<string, unknown> {\n    const context = {};\n    iterate(this[DICTIONARY], (key, value) => {\n      if (typeof value !== 'undefined') {\n        deepSet(context, key, value);\n      }\n    });\n    return context;\n  }\n\n  static assert(subject: Settings): Settings {\n    return subject instanceof Settings\n      ? subject\n      : Settings.getRuntimeSettings();\n  }\n\n  static getDefaultSettings(subfield = null): Settings | any {\n    let defaultSettings = Settings[DEFAULT_SETTINGS];\n    if (!(defaultSettings instanceof Settings)) {\n      defaultSettings = new Settings();\n      Settings[DEFAULT_SETTINGS] = defaultSettings;\n    }\n\n    // Given subfield of 'segmentation' it will return all settings\n    // that starts with segmentation.*\n    if (subfield) {\n      const settingObj = {};\n      defaultSettings.forEach((name: string) => {\n        if (name.startsWith(subfield)) {\n          const setting = name.split(`${subfield}.`)[1];\n          settingObj[setting] = defaultSettings.get(name);\n        }\n      });\n      return settingObj;\n    }\n\n    return defaultSettings;\n  }\n\n  static getRuntimeSettings(): Settings {\n    let runtimeSettings = Settings[RUNTIME_SETTINGS];\n    if (!(runtimeSettings instanceof Settings)) {\n      runtimeSettings = new Settings(Settings.getDefaultSettings());\n      Settings[RUNTIME_SETTINGS] = runtimeSettings;\n    }\n    return runtimeSettings;\n  }\n\n  static getObjectSettings(subject: unknown, from?: unknown): Settings {\n    let settings = null;\n    if (subject instanceof Settings) {\n      settings = subject;\n    } else if (typeof subject === 'object' && subject !== null) {\n      let objectSettingsMap = Settings[OBJECT_SETTINGS_MAP];\n      if (!(objectSettingsMap instanceof WeakMap)) {\n        objectSettingsMap = new WeakMap();\n        Settings[OBJECT_SETTINGS_MAP] = objectSettingsMap;\n      }\n      settings = objectSettingsMap.get(subject);\n      if (!(settings instanceof Settings)) {\n        settings = new Settings(\n          Settings.assert(Settings.getObjectSettings(from))\n        );\n        objectSettingsMap.set(subject, settings);\n      }\n    }\n    return settings;\n  }\n\n  static extendRuntimeSettings(): Settings {\n    return Settings.getRuntimeSettings().extend();\n  }\n}\n\n/*\n * Local Helpers\n */\n\nfunction unset(dictionary: Record<string, unknown>, name: string): boolean {\n  if (name.endsWith('.')) {\n    let deleteCount = 0;\n    const namespace = name;\n    const base = namespace.slice(0, -1);\n    const deleteAll = base.length === 0;\n    for (const key in dictionary) {\n      if (\n        Object.prototype.hasOwnProperty.call(dictionary, key) &&\n        (deleteAll || key.startsWith(namespace) || key === base)\n      ) {\n        delete dictionary[key];\n        ++deleteCount;\n      }\n    }\n    return deleteCount > 0;\n  }\n  return delete dictionary[name];\n}\n\nfunction iterate(\n  dictionary: Record<string, unknown>,\n  callback: (key: string, value: unknown) => void\n): void {\n  for (const key in dictionary) {\n    callback(key, dictionary[key]);\n  }\n}\n\nfunction setAll(\n  dictionary: Record<string, unknown>,\n  prefix: string,\n  record: Record<string, unknown>,\n  references: WeakSet<Record<string, unknown>>\n): boolean {\n  let failCount: number;\n  if (references.has(record)) {\n    return set(dictionary, prefix, null, references);\n  }\n  references.add(record);\n  failCount = 0;\n  for (const field in record) {\n    if (Object.prototype.hasOwnProperty.call(record, field)) {\n      const key = field.length === 0 ? prefix : `${prefix}.${field}`;\n      if (!set(dictionary, key, record[field], references)) {\n        ++failCount;\n      }\n    }\n  }\n  references.delete(record);\n  return failCount === 0;\n}\n\n/**\n * Set the key-value pair on a given dictionary. If the given value is a\n * plain javascript object, every property of that object will also be set.\n * @param dictionary {Record<string, unknown>} The target dictionary\n * @param key {string} The given key\n * @param value {unknown} The given value\n * @param references {WeakSet<Record<string, unknown>>} references is a WeakSet\n *  instance used to keep track of which objects have already been iterated\n *  through preventing thus possible stack overflows caused by cyclic references\n * @returns {boolean} Returns true if every given key-value pair has been\n * successfully set\n */\nfunction set(\n  dictionary: Record<string, unknown>,\n  key: string,\n  value: unknown,\n  references: WeakSet<Record<string, unknown>>\n): boolean {\n  if (isValidKey(key)) {\n    if (isPlainObject(value)) {\n      return setAll(\n        dictionary,\n        key,\n        value as Record<string, unknown>,\n        references instanceof WeakSet ? references : new WeakSet()\n      );\n    }\n    dictionary[key] = value;\n    return true;\n  }\n  return false;\n}\n\nfunction get(dictionary: Record<string, unknown>, key: string): unknown {\n  return dictionary[key];\n}\n\n/**\n * Make sure the -provided key correctly formatted.\n * e.g.:\n *  \"my.cool.property\" (valid)\n *  \"my.cool.property.\" (invalid)\n *  \".my.cool.property\" (invalid)\n *  \"my.cool..property\" (invalid)\n * @param key {string} The property name to be used as key within the internal\n *  dictionary\n * @returns {boolean} True on success, false otherwise\n */\nfunction isValidKey(key: string): boolean {\n  let last: number, current: number, previous: number;\n  if (typeof key !== 'string' || (last = key.length - 1) < 0) {\n    return false;\n  }\n  previous = -1;\n  while ((current = key.indexOf('.', previous + 1)) >= 0) {\n    if (current - previous < 2 || current === last) {\n      return false;\n    }\n    previous = current;\n  }\n  return true;\n}\n\nfunction isPlainObject(subject: unknown) {\n  if (typeof subject === 'object' && subject !== null) {\n    const prototype = Object.getPrototypeOf(subject);\n    if (prototype === Object.prototype || prototype === null) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction deepSet(context, key, value) {\n  const separator = key.indexOf('.');\n  if (separator >= 0) {\n    const subKey = key.slice(0, separator);\n    let subContext = context[subKey];\n    if (typeof subContext !== 'object' || subContext === null) {\n      const subContextValue = subContext;\n      subContext = {};\n      if (typeof subContextValue !== 'undefined') {\n        subContext[''] = subContextValue;\n      }\n      context[subKey] = subContext;\n    }\n    deepSet(subContext, key.slice(separator + 1, key.length), value);\n  } else {\n    context[key] = value;\n  }\n}\n\n/**\n * Initial Settings for the repository\n */\nSettings.getDefaultSettings().set('useCursors', true);\n","import {\n  ICache,\n  IImage,\n  IGeometry,\n  IImageLoadObject,\n  IVolumeLoadObject,\n  IGeometryLoadObject,\n  ICachedImage,\n  ICachedVolume,\n  ICachedGeometry,\n  EventTypes,\n  IImageVolume,\n} from '../types';\nimport { triggerEvent, imageIdToURI } from '../utilities';\nimport eventTarget from '../eventTarget';\nimport Events from '../enums/Events';\nimport { ImageVolume } from './classes/ImageVolume';\n\nconst ONE_GB = 1073741824;\n\n/**\n * Stores images, volumes and geometry.\n * There are two sizes - the max cache size, that controls the overal maximum\n * size, and the instance size, which controls how big any single object can\n * be.  Defaults are 3 GB and 2 GB - 8 bytes (just enough to allow allocating it\n * without crashing).\n * The 3 gb is tuned to the chromium garbage collection cycle to allow image volumes\n * to be used/discarded.\n */\nclass Cache implements ICache {\n  // used to store image data (2d)\n  private readonly _imageCache = new Map<string, ICachedImage>(); // volatile space\n  // used to store volume data (3d)\n  private readonly _volumeCache = new Map<string, ICachedVolume>(); // non-volatile space\n  // Todo: contour for now, but will be used for surface, etc.\n  private readonly _geometryCache: Map<string, ICachedGeometry>;\n\n  private _imageCacheSize = 0;\n  private _volumeCacheSize = 0;\n  private _maxCacheSize = 3 * ONE_GB;\n  private _maxInstanceSize = 4 * ONE_GB - 8;\n\n  constructor() {\n    // used to store object data (contour, surface, etc.)\n    this._geometryCache = new Map();\n  }\n\n  /**\n   * Set the maximum cache Size\n   *\n   * Maximum cache size should be set before adding the data.  If set after,\n   * and it is smaller than the current size, will cause issues.\n   *\n   * @param newMaxCacheSize -  new maximum cache size\n   *\n   */\n  public setMaxCacheSize = (newMaxCacheSize: number): void => {\n    if (!newMaxCacheSize || typeof newMaxCacheSize !== 'number') {\n      const errorMessage = `New max cacheSize ${this._maxCacheSize} should be defined and should be a number.`;\n      throw new Error(errorMessage);\n    }\n\n    this._maxCacheSize = newMaxCacheSize;\n  };\n\n  /**\n   * Checks if there is enough space in the cache for requested byte size\n   *\n   * It returns false, if the sum of volatile (image) cache and unallocated cache\n   * is less than the requested byteLength\n   *\n   * @param byteLength - byte length of requested byte size\n   *\n   * @returns - boolean indicating if there is enough space in the cache\n   */\n  public isCacheable = (byteLength: number): boolean => {\n    if (byteLength > this._maxInstanceSize) {\n      return false;\n    }\n    const unallocatedSpace = this.getBytesAvailable();\n    const imageCacheSize = this._imageCacheSize;\n    const availableSpace = unallocatedSpace + imageCacheSize;\n\n    return availableSpace > byteLength;\n  };\n\n  /**\n   * Returns maximum CacheSize allowed\n   *\n   * @returns maximum allowed cache size\n   */\n  public getMaxCacheSize = (): number => this._maxCacheSize;\n\n  /**\n   * Returns maximum size of a single instance (volume or single image)\n   *\n   * @returns maximum instance size\n   */\n  public getMaxInstanceSize = (): number => this._maxInstanceSize;\n\n  /**\n   * Returns current size of the cache\n   *\n   * @returns current size of the cache\n   */\n  public getCacheSize = (): number =>\n    this._imageCacheSize + this._volumeCacheSize;\n\n  /**\n   * Returns the unallocated size of the cache\n   *\n   */\n  public getBytesAvailable(): number {\n    return this.getMaxCacheSize() - this.getCacheSize();\n  }\n\n  /**\n   * Deletes the imageId from the image cache\n   *\n   * @param imageId - imageId\n   *\n   */\n  private _decacheImage = (imageId: string) => {\n    const { imageLoadObject } = this._imageCache.get(imageId);\n\n    // Cancel any in-progress loading\n    if (imageLoadObject.cancelFn) {\n      imageLoadObject.cancelFn();\n    }\n\n    if (imageLoadObject.decache) {\n      imageLoadObject.decache();\n    }\n\n    this._imageCache.delete(imageId);\n  };\n\n  /**\n   * Deletes the volumeId from the volume cache\n   *\n   * @param volumeId - volumeId\n   *\n   */\n  private _decacheVolume = (volumeId: string) => {\n    const cachedVolume = this._volumeCache.get(volumeId);\n    const { volumeLoadObject, volume } = cachedVolume;\n\n    if (volume.cancelLoading) {\n      volume.cancelLoading();\n    }\n\n    if (volume.imageData) {\n      volume.imageData.delete();\n    }\n\n    // if we had views for the images of the volume, we need to restore them\n    // to avoid memory leaks\n    this._restoreImagesFromBuffer(volume);\n\n    if (volumeLoadObject.cancelFn) {\n      // Cancel any in-progress loading\n      volumeLoadObject.cancelFn();\n    }\n\n    if (volumeLoadObject.decache) {\n      volumeLoadObject.decache();\n    }\n\n    this._volumeCache.delete(volumeId);\n  };\n\n  /**\n   * Deletes all the images and volumes in the cache\n   *\n   * Relevant events are fired for each decached image (IMAGE_CACHE_IMAGE_REMOVED) and\n   * the decached volume (VOLUME_CACHE_VOLUME_REMOVED).\n   *\n   * @fires Events.IMAGE_CACHE_IMAGE_REMOVED\n   * @fires Events.VOLUME_CACHE_VOLUME_REMOVED\n   *\n   */\n  public purgeCache = (): void => {\n    const imageIterator = this._imageCache.keys();\n\n    /* eslint-disable no-constant-condition */\n    while (true) {\n      const { value: imageId, done } = imageIterator.next();\n\n      if (done) {\n        break;\n      }\n\n      this.removeImageLoadObject(imageId);\n\n      triggerEvent(eventTarget, Events.IMAGE_CACHE_IMAGE_REMOVED, { imageId });\n    }\n\n    this.purgeVolumeCache();\n  };\n\n  /**\n   * Deletes all the volumes in the cache\n   */\n  public purgeVolumeCache = (): void => {\n    const volumeIterator = this._volumeCache.keys();\n\n    /* eslint-disable no-constant-condition */\n    while (true) {\n      const { value: volumeId, done } = volumeIterator.next();\n\n      if (done) {\n        break;\n      }\n\n      this.removeVolumeLoadObject(volumeId);\n\n      triggerEvent(eventTarget, Events.VOLUME_CACHE_VOLUME_REMOVED, {\n        volumeId,\n      });\n    }\n  };\n\n  /**\n   * Purges the cache if necessary based on the requested number of bytes\n   *\n   * 1) it sorts the volatile (image) cache based on the most recent used images\n   * and starts purging from the oldest ones.\n   * Note: for a volume, if the volume-related image Ids is provided, it starts\n   * by purging the none-related image Ids (those that are not related to the\n   * current volume)\n   * 2) For a volume, if we purge all images that won't be included in this volume and still\n   * don't have enough unallocated space, purge images that will be included\n   * in this volume until we have enough space. These will need to be\n   * re-fetched, but we must do this not to straddle over the given memory\n   * limit, even for a short time, as this may crash the application.\n   *\n   * @fires Events.IMAGE_CACHE_IMAGE_REMOVED\n   *\n   * @param numBytes - Number of bytes for the image/volume that is\n   * going to be stored inside the cache\n   * @param volumeImageIds - list of imageIds that correspond to the\n   * volume whose numberOfBytes we want to store in the cache.\n   * @returns bytesAvailable or undefined in purging cache\n   * does not successfully make enough space for the requested number of bytes\n   */\n  public decacheIfNecessaryUntilBytesAvailable(\n    numBytes: number,\n    volumeImageIds?: Array<string>\n  ): number | undefined {\n    let bytesAvailable = this.getBytesAvailable();\n\n    // If max cache size has not been exceeded, do nothing\n    if (bytesAvailable >= numBytes) {\n      return bytesAvailable;\n    }\n\n    let cachedImages = Array.from(this._imageCache.values());\n\n    // Cache size has been exceeded, create list of images sorted by timeStamp\n    // So we can purge the least recently used image\n    function compare(a, b) {\n      if (a.timeStamp > b.timeStamp) {\n        return 1;\n      }\n      if (a.timeStamp < b.timeStamp) {\n        return -1;\n      }\n\n      return 0;\n    }\n\n    cachedImages.sort(compare);\n    let cachedImageIds = cachedImages.map((im) => im.imageId);\n\n    let imageIdsToPurge = cachedImageIds;\n\n    // if we are making space for a volume, we start by purging the imageIds\n    // that are not related to the volume\n    if (volumeImageIds) {\n      imageIdsToPurge = cachedImageIds.filter(\n        (id) => !volumeImageIds.includes(id)\n      );\n    }\n\n    // Remove images (that are not related to the volume) from volatile cache\n    // until the requested number of bytes become available\n    for (const imageId of imageIdsToPurge) {\n      this.removeImageLoadObject(imageId);\n\n      triggerEvent(eventTarget, Events.IMAGE_CACHE_IMAGE_REMOVED, { imageId });\n\n      bytesAvailable = this.getBytesAvailable();\n      if (bytesAvailable >= numBytes) {\n        return bytesAvailable;\n      }\n    }\n\n    // Remove the imageIds (both volume related and not related)\n    cachedImages = Array.from(this._imageCache.values());\n    cachedImageIds = cachedImages.map((im) => im.imageId);\n\n    // Remove volume-image Ids from volatile cache until the requested number of bytes\n    // become available\n    for (const imageId of cachedImageIds) {\n      this.removeImageLoadObject(imageId);\n\n      triggerEvent(eventTarget, Events.IMAGE_CACHE_IMAGE_REMOVED, { imageId });\n\n      bytesAvailable = this.getBytesAvailable();\n      if (bytesAvailable >= numBytes) {\n        return bytesAvailable;\n      }\n    }\n\n    // Technically we should not reach here, since isCacheable will throw an\n    // error if unallocated + volatile (image) cache cannot fit the upcoming\n    // number of bytes\n  }\n\n  /**\n   * Puts a new image load object into the cache\n   *\n   * First, it creates a CachedImage object and put it inside the imageCache for\n   * the imageId. After the imageLoadObject promise resolves to an image,\n   * it: 1) adds the image into the correct CachedImage object 2) increments the\n   * cache size, 3) triggers IMAGE_CACHE_IMAGE_ADDED  4) Purge the cache if\n   * necessary -- if the cache size is greater than the maximum cache size, it\n   * iterates over the imageCache and decache them one by one until the cache\n   * size becomes less than the maximum allowed cache size\n   *\n   * @fires Events.IMAGE_CACHE_IMAGE_ADDED\n   * @fires Events.CACHE_SIZE_EXCEEDED if the cache size exceeds the maximum\n   *\n   * @param imageId - ImageId for the image\n   * @param imageLoadObject - The object that is loading or loaded the image\n   */\n  public putImageLoadObject(\n    imageId: string,\n    imageLoadObject: IImageLoadObject\n  ): Promise<any> {\n    if (imageId === undefined) {\n      throw new Error('putImageLoadObject: imageId must not be undefined');\n    }\n\n    if (imageLoadObject.promise === undefined) {\n      throw new Error(\n        'putImageLoadObject: imageLoadObject.promise must not be undefined'\n      );\n    }\n\n    if (this._imageCache.has(imageId)) {\n      throw new Error('putImageLoadObject: imageId already in cache');\n    }\n\n    if (\n      imageLoadObject.cancelFn &&\n      typeof imageLoadObject.cancelFn !== 'function'\n    ) {\n      throw new Error(\n        'putImageLoadObject: imageLoadObject.cancel must be a function'\n      );\n    }\n\n    const cachedImage: ICachedImage = {\n      loaded: false,\n      imageId,\n      sharedCacheKey: undefined, // The sharedCacheKey for this imageId.  undefined by default\n      imageLoadObject,\n      timeStamp: Date.now(),\n      sizeInBytes: 0,\n    };\n\n    this._imageCache.set(imageId, cachedImage);\n\n    return imageLoadObject.promise\n      .then((image: IImage) => {\n        if (!this._imageCache.get(imageId)) {\n          // If the image has been purged before being loaded, we stop here.\n          console.warn(\n            'The image was purged from the cache before it completed loading.'\n          );\n          return;\n        }\n\n        if (\n          image.sizeInBytes === undefined ||\n          Number.isNaN(image.sizeInBytes)\n        ) {\n          throw new Error(\n            'putImageLoadObject: image.sizeInBytes must not be undefined'\n          );\n        }\n        if (image.sizeInBytes.toFixed === undefined) {\n          throw new Error(\n            'putImageLoadObject: image.sizeInBytes is not a number'\n          );\n        }\n\n        // check if there is enough space in unallocated + image Cache\n        if (!this.isCacheable(image.sizeInBytes)) {\n          throw new Error(Events.CACHE_SIZE_EXCEEDED);\n        }\n\n        // if there is, decache if necessary\n        this.decacheIfNecessaryUntilBytesAvailable(image.sizeInBytes);\n\n        cachedImage.loaded = true;\n        cachedImage.image = image;\n        cachedImage.sizeInBytes = image.sizeInBytes;\n        this.incrementImageCacheSize(cachedImage.sizeInBytes);\n        const eventDetails: EventTypes.ImageCacheImageAddedEventDetail = {\n          image: cachedImage,\n        };\n\n        triggerEvent(eventTarget, Events.IMAGE_CACHE_IMAGE_ADDED, eventDetails);\n\n        cachedImage.sharedCacheKey = image.sharedCacheKey;\n      })\n      .catch((error) => {\n        // console.warn(error)\n        this._imageCache.delete(imageId);\n        throw error;\n      });\n  }\n\n  /**\n   * Returns the object that is loading a given imageId\n   *\n   * @param imageId - Image ID\n   * @returns IImageLoadObject\n   */\n  public getImageLoadObject(imageId: string): IImageLoadObject {\n    if (imageId === undefined) {\n      throw new Error('getImageLoadObject: imageId must not be undefined');\n    }\n    const cachedImage = this._imageCache.get(imageId);\n\n    if (cachedImage === undefined) {\n      return;\n    }\n\n    // Bump time stamp for cached image\n    cachedImage.timeStamp = Date.now();\n\n    return cachedImage.imageLoadObject;\n  }\n\n  /**\n   * It checks the imageCache for the provided imageId, and returns true\n   * if the image is loaded, false otherwise. Note, this only checks the imageCache\n   * and does not check the volume cache.\n   * @param imageId - image Id to check\n   * @returns boolean\n   */\n  public isLoaded(imageId: string): boolean {\n    const cachedImage = this._imageCache.get(imageId);\n\n    if (!cachedImage) {\n      return false;\n    }\n\n    return cachedImage.loaded;\n  }\n\n  /**\n   * Returns the volume that contains the requested imageId. It will check the\n   * imageIds inside the volume to find a match.\n   *\n   * @param imageId - ImageId\n   * @returns - Volume object\n   */\n  public getVolumeContainingImageId(imageId: string): {\n    volume: IImageVolume;\n    imageIdIndex: number;\n  } {\n    const volumeIds = Array.from(this._volumeCache.keys());\n    const imageIdToUse = imageIdToURI(imageId);\n\n    for (const volumeId of volumeIds) {\n      const cachedVolume = this._volumeCache.get(volumeId);\n      const { volume } = cachedVolume;\n\n      if (!volume?.imageIds?.length) {\n        return;\n      }\n\n      const imageIdIndex = volume.getImageURIIndex(imageIdToUse);\n\n      if (imageIdIndex > -1) {\n        return { volume, imageIdIndex };\n      }\n    }\n  }\n\n  /**\n   * Returns the cached image from the imageCache for the requested imageId.\n   * It first strips the imageId to remove the data loading scheme.\n   *\n   * @param imageId - Image ID\n   * @returns cached image\n   */\n  public getCachedImageBasedOnImageURI(\n    imageId: string\n  ): ICachedImage | undefined {\n    const imageURIToUse = imageIdToURI(imageId);\n\n    const cachedImageIds = Array.from(this._imageCache.keys());\n    const foundImageId = cachedImageIds.find((imageId) => {\n      return imageIdToURI(imageId) === imageURIToUse;\n    });\n\n    if (!foundImageId) {\n      return;\n    }\n\n    return this._imageCache.get(foundImageId);\n  }\n  /**\n   * Puts a new image load object into the cache\n   *\n   * First, it creates a CachedVolume object and put it inside the volumeCache for\n   * the volumeId. After the volumeLoadObject promise resolves to a volume,\n   * it: 1) adds the volume into the correct CachedVolume object inside volumeCache\n   * 2) increments the cache size, 3) triggers VOLUME_CACHE_VOLUME_ADDED  4) Purge\n   * the cache if necessary -- if the cache size is greater than the maximum cache size, it\n   * iterates over the imageCache (not volumeCache) and decache them one by one\n   * until the cache size becomes less than the maximum allowed cache size\n   *\n   * @fires Events.VOLUME_CACHE_VOLUME_ADDED\n   *\n   * @param volumeId - volumeId of the volume\n   * @param volumeLoadObject - The object that is loading or loaded the volume\n   */\n  public putVolumeLoadObject(\n    volumeId: string,\n    volumeLoadObject: IVolumeLoadObject\n  ): Promise<any> {\n    if (volumeId === undefined) {\n      throw new Error('putVolumeLoadObject: volumeId must not be undefined');\n    }\n    if (volumeLoadObject.promise === undefined) {\n      throw new Error(\n        'putVolumeLoadObject: volumeLoadObject.promise must not be undefined'\n      );\n    }\n    if (this._volumeCache.has(volumeId)) {\n      throw new Error(\n        `putVolumeLoadObject: volumeId:${volumeId} already in cache`\n      );\n    }\n    if (\n      volumeLoadObject.cancelFn &&\n      typeof volumeLoadObject.cancelFn !== 'function'\n    ) {\n      throw new Error(\n        'putVolumeLoadObject: volumeLoadObject.cancel must be a function'\n      );\n    }\n\n    // todo: @Erik there are two loaded flags, one inside cachedVolume and the other\n    // inside the volume.loadStatus.loaded, the actual all pixelData loaded is the\n    // loadStatus one. This causes confusion\n    const cachedVolume: ICachedVolume = {\n      loaded: false,\n      volumeId,\n      volumeLoadObject,\n      timeStamp: Date.now(),\n      sizeInBytes: 0,\n    };\n\n    this._volumeCache.set(volumeId, cachedVolume);\n\n    return volumeLoadObject.promise\n      .then((volume: IImageVolume) => {\n        if (!this._volumeCache.get(volumeId)) {\n          // If the image has been purged before being loaded, we stop here.\n          console.warn(\n            'The image was purged from the cache before it completed loading.'\n          );\n          return;\n        }\n\n        if (Number.isNaN(volume.sizeInBytes)) {\n          throw new Error(\n            'putVolumeLoadObject: volume.sizeInBytes must not be undefined'\n          );\n        }\n        if (volume.sizeInBytes.toFixed === undefined) {\n          throw new Error(\n            'putVolumeLoadObject: volume.sizeInBytes is not a number'\n          );\n        }\n\n        // this.isCacheable is called at the volume loader, before requesting\n        // the images of the volume\n\n        this.decacheIfNecessaryUntilBytesAvailable(\n          volume.sizeInBytes,\n          // @ts-ignore: // todo ImageVolume does not have imageIds\n          volume.imageIds\n        );\n\n        // cachedVolume.loaded = true\n        cachedVolume.volume = volume;\n        cachedVolume.sizeInBytes = volume.sizeInBytes;\n        this.incrementVolumeCacheSize(cachedVolume.sizeInBytes);\n\n        const eventDetails: EventTypes.VolumeCacheVolumeAddedEventDetail = {\n          volume: cachedVolume,\n        };\n\n        triggerEvent(\n          eventTarget,\n          Events.VOLUME_CACHE_VOLUME_ADDED,\n          eventDetails\n        );\n      })\n      .catch((error) => {\n        this._volumeCache.delete(volumeId);\n        throw error;\n      });\n  }\n\n  /**\n   * Returns the object that is loading a given volumeId\n   *\n   * @param volumeId - Volume ID\n   * @returns IVolumeLoadObject\n   */\n  public getVolumeLoadObject = (volumeId: string): IVolumeLoadObject => {\n    if (volumeId === undefined) {\n      throw new Error('getVolumeLoadObject: volumeId must not be undefined');\n    }\n    const cachedVolume = this._volumeCache.get(volumeId);\n\n    if (cachedVolume === undefined) {\n      return;\n    }\n\n    // Bump time stamp for cached volume (not used for anything for now)\n    cachedVolume.timeStamp = Date.now();\n\n    return cachedVolume.volumeLoadObject;\n  };\n\n  public getGeometry = (geometryId: string): IGeometry => {\n    if (geometryId == null) {\n      throw new Error('getGeometry: geometryId must not be undefined');\n    }\n\n    const cachedGeometry = this._geometryCache.get(geometryId);\n\n    if (cachedGeometry === undefined) {\n      return;\n    }\n\n    // Bump time stamp for cached geometry (not used for anything for now)\n    cachedGeometry.timeStamp = Date.now();\n\n    return cachedGeometry.geometry;\n  };\n\n  /**\n   * Returns the image associated with the imageId\n   *\n   * @param imageId - image ID\n   * @returns Image\n   */\n  public getImage = (imageId: string): IImage => {\n    if (imageId === undefined) {\n      throw new Error('getImage: imageId must not be undefined');\n    }\n    const cachedImage = this._imageCache.get(imageId);\n\n    if (cachedImage === undefined) {\n      return;\n    }\n\n    // Bump time stamp for cached volume (not used for anything for now)\n    cachedImage.timeStamp = Date.now();\n\n    return cachedImage.image;\n  };\n\n  /**\n   * Returns the volume associated with the volumeId\n   *\n   * @param volumeId - Volume ID\n   * @returns Volume\n   */\n  public getVolume = (volumeId: string): IImageVolume => {\n    if (volumeId === undefined) {\n      throw new Error('getVolume: volumeId must not be undefined');\n    }\n    const cachedVolume = this._volumeCache.get(volumeId);\n\n    if (cachedVolume === undefined) {\n      return;\n    }\n\n    // Bump time stamp for cached volume (not used for anything for now)\n    cachedVolume.timeStamp = Date.now();\n\n    return cachedVolume.volume;\n  };\n\n  /**\n   * Retrieves an array of image volumes from the cache.\n   * @returns An array of image volumes.\n   */\n  public getVolumes = (): Array<IImageVolume> => {\n    const cachedVolumes = Array.from(this._volumeCache.values());\n\n    return cachedVolumes.map((cachedVolume) => cachedVolume.volume);\n  };\n\n  /**\n   * Filters the cached volumes by the specified reference volume ID.\n   * @param volumeId - The ID of the reference volume.\n   * @returns An array of image volumes that have the specified reference volume ID.\n   */\n  public filterVolumesByReferenceId = (\n    volumeId: string\n  ): Array<IImageVolume> => {\n    const cachedVolumes = this.getVolumes();\n\n    return cachedVolumes.filter((volume) => {\n      return volume.referencedVolumeId === volumeId;\n    });\n  };\n\n  /**\n   * Removes the image loader associated with a given Id from the cache\n   *\n   * It increases the cache size after removing the image.\n   *\n   * @fires Events.IMAGE_CACHE_IMAGE_REMOVED\n   *\n   * @param imageId - Image ID\n   */\n  public removeImageLoadObject = (imageId: string): void => {\n    if (imageId === undefined) {\n      throw new Error('removeImageLoadObject: imageId must not be undefined');\n    }\n    const cachedImage = this._imageCache.get(imageId);\n\n    if (cachedImage === undefined) {\n      throw new Error(\n        'removeImageLoadObject: imageId was not present in imageCache'\n      );\n    }\n\n    this.incrementImageCacheSize(-cachedImage.sizeInBytes);\n\n    const eventDetails = {\n      image: cachedImage,\n      imageId,\n    };\n\n    triggerEvent(eventTarget, Events.IMAGE_CACHE_IMAGE_REMOVED, eventDetails);\n    this._decacheImage(imageId);\n  };\n\n  /**\n   * Removes the volume loader associated with a given Id from the cache\n   *\n   * It increases the cache size after removing the image.\n   *\n   * @fires Events.VOLUME_CACHE_VOLUME_REMOVED\n   *\n   * @param imageId - ImageId\n   */\n  public removeVolumeLoadObject = (volumeId: string): void => {\n    if (volumeId === undefined) {\n      throw new Error('removeVolumeLoadObject: volumeId must not be undefined');\n    }\n    const cachedVolume = this._volumeCache.get(volumeId);\n\n    if (cachedVolume === undefined) {\n      throw new Error(\n        'removeVolumeLoadObject: volumeId was not present in volumeCache'\n      );\n    }\n\n    this.incrementVolumeCacheSize(-cachedVolume.sizeInBytes);\n\n    const eventDetails = {\n      volume: cachedVolume,\n      volumeId,\n    };\n\n    triggerEvent(eventTarget, Events.VOLUME_CACHE_VOLUME_REMOVED, eventDetails);\n    this._decacheVolume(volumeId);\n  };\n\n  putGeometryLoadObject = (\n    geometryId: string,\n    geometryLoadObject: IGeometryLoadObject\n  ): Promise<void> => {\n    if (geometryId == undefined) {\n      throw new Error(\n        'putGeometryLoadObject: geometryId must not be undefined'\n      );\n    }\n\n    if (this._geometryCache.has(geometryId)) {\n      throw new Error(\n        'putGeometryLoadObject: geometryId already present in geometryCache'\n      );\n    }\n\n    const cachedGeometry: ICachedGeometry = {\n      geometryId,\n      geometryLoadObject,\n      loaded: false,\n      timeStamp: Date.now(),\n      sizeInBytes: 0,\n    };\n\n    this._geometryCache.set(geometryId, cachedGeometry);\n\n    return geometryLoadObject.promise\n      .then((geometry: IGeometry) => {\n        if (!this._geometryCache.has(geometryId)) {\n          console.warn(\n            'putGeometryLoadObject: geometryId was removed from geometryCache'\n          );\n          return;\n        }\n\n        if (Number.isNaN(geometry.sizeInBytes)) {\n          throw new Error(\n            'putGeometryLoadObject: geometry.sizeInBytes is not a number'\n          );\n        }\n\n        // Todo: fix is cacheable\n\n        cachedGeometry.loaded = true;\n        cachedGeometry.geometry = geometry;\n        cachedGeometry.sizeInBytes = geometry.sizeInBytes;\n\n        // this._incrementGeometryCacheSize(geometry.sizeInBytes);\n\n        const eventDetails = {\n          geometry,\n          geometryId,\n        };\n\n        triggerEvent(\n          eventTarget,\n          Events.GEOMETRY_CACHE_GEOMETRY_ADDED,\n          eventDetails\n        );\n\n        return;\n      })\n      .catch((error) => {\n        this._geometryCache.delete(geometryId);\n        throw error;\n      });\n  };\n\n  /**\n   * Increases the image cache size with the provided increment\n   *\n   * @param increment - bytes length\n   */\n  public incrementImageCacheSize = (increment: number) => {\n    this._imageCacheSize += increment;\n  };\n\n  /**\n   * Increases the cache size with the provided increment\n   *\n   * @param increment - bytes length\n   */\n  public incrementVolumeCacheSize = (increment: number) => {\n    this._volumeCacheSize += increment;\n  };\n\n  /**\n   * Decreases the image cache size with the provided decrement\n   *\n   * @param decrement - bytes length\n   */\n  public decrementImageCacheSize = (decrement: number) => {\n    this._imageCacheSize -= decrement;\n  };\n\n  /**\n   * Decreases the cache size with the provided decrement\n   *\n   * @param decrement - bytes length\n   */\n  public decrementVolumeCacheSize = (decrement: number) => {\n    this._volumeCacheSize -= decrement;\n  };\n\n  /**\n   * This function will restore the images' pixel data from the shared array buffer\n   * back to the individual images when the volume is purged from cache. It ensures\n   * that each image retrieves its correct portion of data from the buffer based on\n   * the previously stored offset and length information.\n   *\n   * @param volumeId - The volumeId whose images need to be restored.\n   */\n  private _restoreImagesFromBuffer(volume: IImageVolume) {\n    if (!(volume instanceof ImageVolume)) {\n      console.warn(\n        'Volume is not an ImageVolume. Cannot restore images from buffer.'\n      );\n      return;\n    }\n\n    // Retrieve the scalar data and the offset map from the volume\n    const scalarData = volume.getScalarData();\n    const imageCacheOffsetMap = volume.imageCacheOffsetMap;\n\n    if (imageCacheOffsetMap.size === 0) {\n      // This happens during testing and isn't an issue\n      // console.warn('No cached images to restore for this volume.');\n      return;\n    }\n\n    // Iterate over each image and restore its pixel data from the shared buffer\n    for (const [imageId, { offset }] of imageCacheOffsetMap) {\n      const image = this.getImage(imageId);\n\n      if (!image) {\n        console.warn(`Image with id ${imageId} not found in cache.`);\n        continue;\n      }\n\n      const viewPixelData = image.getPixelData();\n      const length = viewPixelData.length;\n\n      // Create a new view of the buffer for this specific image\n      // @ts-ignore\n      const pixelData = new viewPixelData.constructor(\n        scalarData.buffer,\n        offset,\n        length\n      );\n\n      // Restore the original getPixelData function and pixelData\n      image.getPixelData = () => pixelData;\n\n      if (image.imageFrame) {\n        image.imageFrame.pixelData = pixelData;\n      }\n\n      delete image.bufferView;\n\n      // Optionally, increment the image cache size again if needed\n      this.incrementImageCacheSize(image.sizeInBytes);\n    }\n\n    console.log(`Images restored from buffer for volume ${volume.volumeId}.`);\n  }\n}\n\n/**\n * This module deals with Caching of images and volumes\n * The cache has two main components: a volatile portion for images and a\n * non-volatile portion for volumes. Individual 2D images are volatile and\n * will be replaced by new images hitting the cache. When you allocate volumes,\n * these are non-volatile and reserve a block of memory from the cache.\n * Volumes must be released manually.\n * We will have a shared block of memory allocated for the entire cache, e.g. 1GB\n * which will be shared for images and volumes.\n *\n * **When a new image is added:**\n * We check if there is enough unallocated + volatile space for the single image\n *\n * if so\n * - We allocate the image in image cache, and if necessary oldest images\n * are decached to match the maximumCacheSize criteria\n * - If a volume contains that imageId, copy it over using TypedArray's set method.\n * If no volumes contain the imageId, the image is fetched by image loaders\n *\n * If not (cache is mostly/completely full with volumes)\n * - throw that the cache does not have enough working space to allocate the image\n *\n *\n * **When a new volume is added:**\n * Check if there is enough unallocated + volatile space to allocate the volume:\n *\n * If so:\n * - Decache oldest images which won't be included in this volume until\n * we have enough free space for the volume\n * - If not enough space from previous space, decache images that will be included\n * in the volume until we have enough free space (These will need to be re-fetched,\n * but we must do this not to straddle over the given memory limit, even for a\n * short time, as this may crash the app)\n * - At this point, if any of the frames (indexed by imageId) are present in the volatile\n * image cache, copy these over to the volume now\n *\n * If not (cache is mostly/completely full with volumes),\n * - throw that the cache does not have enough working space to allocate the volume.\n *\n */\nconst cache = new Cache();\nexport default cache;\nexport { Cache }; // for documentation\n","const EPSILON = 1e-3;\n\nexport default EPSILON;\n","const RENDERING_DEFAULTS = {\n  MINIMUM_SLAB_THICKNESS: 5e-2,\n  MAXIMUM_RAY_DISTANCE: 1e6,\n};\n\nObject.freeze(RENDERING_DEFAULTS);\n\nexport default RENDERING_DEFAULTS;\n","/**\n * Request types for requesting images from the imageLoadPoolManager\n */\nenum RequestType {\n  /** Highest priority for loading*/\n  Interaction = 'interaction',\n  /** Second highest priority for loading*/\n  Thumbnail = 'thumbnail',\n  /** Third highest priority for loading, usually used for image loading in the background*/\n  Prefetch = 'prefetch',\n  /** Lower priority, often used for background computations in the worker */\n  Compute = 'compute',\n}\n\nexport default RequestType;\n","enum ViewportStatus {\n  /** Initial state before any volumes or stacks are available*/\n  NO_DATA = 'noData',\n  /** Stack/volumes are available but are in progress */\n  LOADING = 'loading',\n  /** Ready to be rendered */\n  PRE_RENDER = 'preRender',\n  /** In the midst of a resize */\n  RESIZE = 'resize',\n  /** Rendered image data */\n  RENDERED = 'rendered',\n}\n\nexport default ViewportStatus;\n","import vtkConstants from '@kitware/vtk.js/Rendering/Core/VolumeMapper/Constants';\n\nconst { BlendMode } = vtkConstants;\n\n/**\n * Enums for blendModes for viewport images based on vtk.js\n *\n * It should be noted that if crosshairs are enabled and can modify the slab thickness,\n * then it will not show any difference unless MAXIMUM_INTENSITY_BLEND is set on the viewport\n * as the blend.\n */\nenum BlendModes {\n  /** composite blending - suitable for compositing multiple images */\n  COMPOSITE = BlendMode.COMPOSITE_BLEND,\n  /** maximum intensity projection */\n  MAXIMUM_INTENSITY_BLEND = BlendMode.MAXIMUM_INTENSITY_BLEND,\n  /** minimum intensity projection */\n  MINIMUM_INTENSITY_BLEND = BlendMode.MINIMUM_INTENSITY_BLEND,\n  /** average intensity projection */\n  AVERAGE_INTENSITY_BLEND = BlendMode.AVERAGE_INTENSITY_BLEND,\n}\n\nexport default BlendModes;\n","enum GeometryType {\n  CONTOUR = 'contour',\n  SURFACE = 'Surface',\n}\n\nexport default GeometryType;\n","/**\n * DynamicOperatorType enum for cornerstone-render which defines the operator to use for generateImageFromTimeData.\n * It can be either SUM, AVERAGE or SUBTRACT.\n */\nenum DynamicOperatorType {\n  /** For summing the time frames. */\n  SUM = 'SUM',\n  /** For averaging the time frames. */\n  AVERAGE = 'AVERAGE',\n  /** For subtracting two time frames */\n  SUBTRACT = 'SUBTRACT',\n}\n\nexport default DynamicOperatorType;\n","/**\n * Defines the calibration types available.  These define how the units\n * for measurements are specified.\n */\nexport enum CalibrationTypes {\n  /**\n   * Not applicable means the units are directly defind by the underlying\n   * hardware, such as CT and MR volumetric displays, so no special handling\n   * or notification is required.\n   */\n  NOT_APPLICABLE = '',\n  /**\n   * ERMF is estimated radiographic magnification factor.  This defines how\n   * much the image is magnified at the detector as opposed to the location in\n   * the body of interest.  This occurs because the radiation beam is expanding\n   * and effectively magnifies the image on the detector compared to where the\n   * point of interest in the body is.\n   * This suggests that measurements can be partially trusted, but the user\n   * still needs to be aware that different depths within the body have differing\n   * ERMF values, so precise measurements would still need to be manually calibrated.\n   */\n  ERMF = 'ERMF',\n  /**\n   * User calibration means that the user has provided a custom calibration\n   * specifying how large the image data is.  This type can occur on\n   * volumetric images, eg for scout images that might have invalid spacing\n   * tags.\n   */\n  USER = 'User',\n  /**\n   * A projection calibration means the raw detector size, without any\n   * ERMF applied, meaning that the size in the body cannot be trusted and\n   * that a calibration should be applied.\n   * This is different from Error in that there is simply no magnification\n   * factor applied as opposed to having multiple, inconsistent magnification\n   * factors.\n   */\n  PROJECTION = 'Proj',\n  /**\n   * A region calibration is used for other types of images, typically\n   * ultrasouunds where the distance in the image may mean something other than\n   * physical distance, such as mV or Hz or some other measurement values.\n   */\n  REGION = 'Region',\n  /**\n   * Error is used to define mismatches between various units, such as when\n   * there are two different ERMF values specified.  This is an indication to\n   * NOT trust the measurement values but to manually calibrate.\n   */\n  ERROR = 'Error',\n  /** Uncalibrated image */\n  UNCALIBRATED = 'Uncalibrated',\n}\n\nexport default CalibrationTypes;\n","import getRenderingEngine, {\n  getRenderingEngines,\n} from './RenderingEngine/getRenderingEngine';\nimport { IEnabledElement, IStackViewport, IVolumeViewport } from './types';\n\n/**\n * A convenience method to find an EnabledElement given a reference to its\n * associated element. Commonly used in code that's handling a custom\n * event emitted by this library.\n *\n * @example\n * Using the renderingEngine to find the enabled element:\n * ```javascript\n * const element = getRenderingEngine(renderingEngineId)\n *    .getViewport(viewportId)\n *    .element\n *\n * const enabledElement = getEnabledElement(element)\n * ```\n *\n * @example\n * Using a cornerstone event's \"element\"\n * ```javascript\n * // Our \"cornerstone events\" contain the source element, which is\n * // raised on the viewport's div element\n * const { element } = evt.detail\n * const enabledElement = getEnabledElement(element)\n * ```\n *\n * @param element - a reference to an EnabledElement/Viewport's div element\n * @returns the associated EnabledElement, or undefined if no matching EnabledElement\n * can be found\n */\nexport default function getEnabledElement(\n  element: HTMLDivElement | undefined\n): IEnabledElement | undefined {\n  if (!element) {\n    return;\n  }\n\n  const { viewportUid, renderingEngineUid } = element.dataset;\n\n  return getEnabledElementByIds(viewportUid, renderingEngineUid);\n}\n\n/**\n * Similar to {@link getEnabledElement}, but takes the IDs of the\n * renderingEngine and viewport as parameters to return the associated\n * EnabledElement.\n *\n * @param viewportId - The Id of the viewport\n * @param renderingEngineId - The Id of the rendering engine.\n * @returns The enabled element which is an object that contains the viewport, rendering\n * engine, viewport Id, rendering engine Id, and the Frame of Reference UID.\n */\nexport function getEnabledElementByIds(\n  viewportId: string,\n  renderingEngineId: string\n): IEnabledElement {\n  if (!renderingEngineId || !viewportId) {\n    return;\n  }\n\n  const renderingEngine = getRenderingEngine(renderingEngineId);\n\n  if (!renderingEngine || renderingEngine.hasBeenDestroyed) {\n    return;\n  }\n\n  const viewport = renderingEngine.getViewport(viewportId) as\n    | IStackViewport\n    | IVolumeViewport;\n\n  if (!viewport) {\n    return;\n  }\n\n  const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n\n  return {\n    viewport,\n    renderingEngine,\n    viewportId,\n    renderingEngineId,\n    FrameOfReferenceUID,\n  };\n}\n\n/**\n * Retrieves the enabled element by the specified viewport ID. it searches\n * through all the rendering engines to find the viewport with the specified\n *\n * @param viewportId - The ID of the viewport.\n * @returns The enabled element associated with the specified viewport ID.\n */\nexport function getEnabledElementByViewportId(viewportId: string) {\n  const renderingEngines = getRenderingEngines();\n\n  for (let i = 0; i < renderingEngines.length; i++) {\n    const renderingEngine = renderingEngines[i];\n    const viewport = renderingEngine.getViewport(viewportId);\n\n    if (viewport) {\n      return getEnabledElementByIds(viewportId, renderingEngine.id);\n    }\n  }\n}\n\n/**\n * Get all the enabled elements from all the rendering engines\n * @returns An array of enabled elements.\n */\nexport function getEnabledElements(): IEnabledElement[] {\n  const enabledElements = [];\n\n  const renderingEngines = getRenderingEngines();\n\n  renderingEngines.forEach((renderingEngine) => {\n    const viewports = renderingEngine.getViewports();\n\n    viewports.forEach(({ element }) => {\n      enabledElements.push(getEnabledElement(element));\n    });\n  });\n\n  return enabledElements;\n}\n","import cache from '../cache/cache';\nimport { ImageVolume } from '../cache';\nimport Events from '../enums/Events';\nimport eventTarget from '../eventTarget';\nimport {\n  genericMetadataProvider,\n  getBufferConfiguration,\n  triggerEvent,\n  uuidv4,\n} from '../utilities';\nimport {\n  IImage,\n  ImageLoaderFn,\n  IImageLoadObject,\n  EventTypes,\n  Point2,\n  Point3,\n  Mat3,\n  PixelDataTypedArrayString,\n  PixelDataTypedArray,\n} from '../types';\nimport imageLoadPoolManager from '../requestPool/imageLoadPoolManager';\nimport { metaData } from '../';\n\nexport interface ImageLoaderOptions {\n  priority: number;\n  requestType: string;\n  additionalDetails?: Record<string, unknown>;\n  ignoreCache?: boolean;\n}\n\ninterface DerivedImages {\n  imageIds: Array<string>;\n  promises: Array<Promise<IImage>>;\n}\n\ntype LocalImageOptions = {\n  scalarData?: PixelDataTypedArray;\n  targetBufferType?: PixelDataTypedArrayString;\n  dimensions?: Point2;\n  spacing?: Point3;\n  origin?: Point3;\n  direction?: Mat3;\n  /**\n   * Skip creation of the actual buffer object.\n   * In fact, this creates a very short buffer, as there are lots of places\n   * assuming a buffer exists.\n   * This can be used when there are alternative representations of the image data.\n   */\n  skipCreateBuffer?: boolean;\n  /**\n   * A method to call to update the image object when it gets added to the cache.\n   * This can be used to create alternative representations of the image data,\n   * such as a VoxelManager.\n   */\n  onCacheAdd?: (image: IImage) => void;\n};\n\ntype DerivedImageOptions = LocalImageOptions & {\n  imageId?: string;\n  targetBufferType?: PixelDataTypedArrayString;\n};\n\n/**\n * This module deals with ImageLoaders, loading images and caching images\n */\nconst imageLoaders = {};\nlet unknownImageLoader;\n\n/**\n * Loads an image using a registered Cornerstone Image Loader.\n *\n * The image loader that is used will be\n * determined by the image loader scheme matching against the imageId.\n *\n * @param imageId - A Cornerstone Image Object's imageId\n * @param Options - to be passed to the Image Loader\n *\n * @returns - An Object which can be used to act after an image is loaded or loading fails\n */\nfunction loadImageFromImageLoader(\n  imageId: string,\n  options: ImageLoaderOptions\n): IImageLoadObject {\n  // Extract the image loader scheme: wadors:https://image1 => wadors\n  const colonIndex = imageId.indexOf(':');\n  const scheme = imageId.substring(0, colonIndex);\n  const loader = imageLoaders[scheme];\n  if (loader === undefined || loader === null) {\n    if (unknownImageLoader !== undefined) {\n      return unknownImageLoader(imageId);\n    }\n    throw new Error('loadImageFromImageLoader: no image loader for imageId');\n  }\n  // Load using the registered loader\n  const imageLoadObject = loader(imageId, options);\n  // Broadcast an image loaded event once the image is loaded\n  imageLoadObject.promise.then(\n    function (image) {\n      triggerEvent(eventTarget, Events.IMAGE_LOADED, { image });\n    },\n    function (error) {\n      const errorObject: EventTypes.ImageLoadedFailedEventDetail = {\n        imageId,\n        error,\n      };\n      triggerEvent(eventTarget, Events.IMAGE_LOAD_FAILED, errorObject);\n    }\n  );\n  return imageLoadObject;\n}\n\n/**\n * Gets the imageLoadObject by 1) Looking in to the cache to see if the\n * imageLoadObject has already been cached, 2) Checks inside the volume cache\n * to see if there is a volume that contains the same imageURI for the requested\n * imageID 3) Checks inside the imageCache for similar imageURI that might have\n * been stored as a result of decaching a volume 4) Finally if none were found\n * it request it from the registered imageLoaders.\n *\n * @param imageId - A Cornerstone Image Object's imageId\n * @param options - Options to be passed to the Image Loader\n *\n * @returns An Object which can be used to act after an image is loaded or loading fails\n */\nfunction loadImageFromCacheOrVolume(\n  imageId: string,\n  options: ImageLoaderOptions\n): IImageLoadObject {\n  if (options.ignoreCache) {\n    return loadImageFromImageLoader(imageId, options);\n  }\n\n  // 1. Check inside the image cache for imageId\n  let imageLoadObject = cache.getImageLoadObject(imageId);\n  if (imageLoadObject !== undefined) {\n    return imageLoadObject;\n  }\n  // 2. Check if there exists a volume in the cache containing the imageId,\n  // we copy the pixelData over.\n  const cachedVolumeInfo = cache.getVolumeContainingImageId(imageId);\n  if (cachedVolumeInfo?.volume?.loadStatus?.loaded) {\n    // 2.1 Convert the volume at the specific slice to a cornerstoneImage object.\n    // this will copy the pixel data over.\n    const { volume, imageIdIndex } = cachedVolumeInfo;\n\n    if (volume instanceof ImageVolume) {\n      imageLoadObject = volume.convertToCornerstoneImage(imageId, imageIdIndex);\n    }\n    return imageLoadObject;\n  }\n  // 3. If no volume found, we search inside the imageCache for the imageId\n  // that has the same URI which had been cached if the volume was converted\n  // to an image\n  const cachedImage = cache.getCachedImageBasedOnImageURI(imageId);\n  if (cachedImage) {\n    imageLoadObject = cachedImage.imageLoadObject;\n    return imageLoadObject;\n  }\n  // 4. if not in image cache nor inside the volume cache, we request the\n  // image loaders to load it\n  imageLoadObject = loadImageFromImageLoader(imageId, options);\n\n  return imageLoadObject;\n}\n\n/**\n * Loads an image given an imageId and optional priority and returns a promise\n * which will resolve to the loaded image object or fail if an error occurred.\n * The loaded image is not stored in the cache.\n *\n *\n * @param imageId - A Cornerstone Image Object's imageId\n * @param options - Options to be passed to the Image Loader\n *\n * @returns An Object which can be used to act after an image is loaded or loading fails\n */\nexport function loadImage(\n  imageId: string,\n  options: ImageLoaderOptions = { priority: 0, requestType: 'prefetch' }\n): Promise<IImage> {\n  if (imageId === undefined) {\n    throw new Error('loadImage: parameter imageId must not be undefined');\n  }\n\n  return loadImageFromCacheOrVolume(imageId, options).promise;\n}\n\n/**\n * Loads an image given an imageId and optional priority and returns a promise\n * which will resolve to the loaded image object or fail if an error occurred.\n * The image is stored in the cache.\n *\n * @param imageId -  A Cornerstone Image Object's imageId\n * @param options - Options to be passed to the Image Loader\n *\n * @returns Image Loader Object\n */\nexport function loadAndCacheImage(\n  imageId: string,\n  options: ImageLoaderOptions = { priority: 0, requestType: 'prefetch' }\n): Promise<IImage> {\n  if (imageId === undefined) {\n    throw new Error(\n      'loadAndCacheImage: parameter imageId must not be undefined'\n    );\n  }\n\n  // console.log('LOAD AND CACHE IMAGE', imageId, options)\n  const imageLoadObject = loadImageFromCacheOrVolume(imageId, options);\n  // if(imageId.includes('pngfile')) console.log(`IMAGE LOAD OBJECT ${imageId} :`, imageLoadObject)\n\n  // if not inside cache, store it\n  if (!cache.getImageLoadObject(imageId)) {\n    cache.putImageLoadObject(imageId, imageLoadObject).catch((err) => {\n      console.warn(err);\n    });\n  }\n\n  return imageLoadObject.promise;\n}\n\n/**\n * Load and cache a list of imageIds\n *\n * @param imageIds - list of imageIds\n * @param options - options for loader\n *\n */\nexport function loadAndCacheImages(\n  imageIds: Array<string>,\n  options: ImageLoaderOptions = { priority: 0, requestType: 'prefetch' }\n): Promise<IImage>[] {\n  if (!imageIds || imageIds.length === 0) {\n    throw new Error(\n      'loadAndCacheImages: parameter imageIds must be list of image Ids'\n    );\n  }\n\n  const allPromises = imageIds.map((imageId) => {\n    return loadAndCacheImage(imageId, options);\n  });\n\n  return allPromises;\n}\n\n/**\n * Loads an image given an imageId and optional priority and returns a promise\n * which will resolve to the loaded image object or fail if an error occurred.\n * The image is stored in the cache.\n *\n * @param referencedImageId -  A Cornerstone Image Object's imageId\n * @param options - Options to be passed to the Image Loader\n *\n * @returns Image Loader Object\n */\nexport function createAndCacheDerivedImage(\n  referencedImageId: string,\n  options: DerivedImageOptions = {},\n  preventCache = false\n): Promise<IImage> {\n  if (referencedImageId === undefined) {\n    throw new Error(\n      'createAndCacheDerivedImage: parameter imageId must not be undefined'\n    );\n  }\n\n  if (options.imageId === undefined) {\n    options.imageId = `derived:${uuidv4()}`;\n  }\n\n  const { imageId, skipCreateBuffer, onCacheAdd } = options;\n\n  const imagePlaneModule = metaData.get('imagePlaneModule', referencedImageId);\n\n  const length = imagePlaneModule.rows * imagePlaneModule.columns;\n\n  const { TypedArrayConstructor } = getBufferConfiguration(\n    options.targetBufferType,\n    length\n  );\n\n  // Use a buffer of size 1 for no data\n  const imageScalarData = new TypedArrayConstructor(\n    skipCreateBuffer ? 1 : length\n  );\n  const derivedImageId = imageId;\n\n  ['imagePlaneModule', 'generalSeriesModule'].forEach((type) => {\n    genericMetadataProvider.add(derivedImageId, {\n      type,\n      metadata: metaData.get(type, referencedImageId),\n    });\n  });\n\n  const imagePixelModule = metaData.get('imagePixelModule', referencedImageId);\n  // TODO - add a general way to specify this\n  genericMetadataProvider.add(derivedImageId, {\n    type: 'imagePixelModule',\n    metadata: {\n      ...imagePixelModule,\n      bitsAllocated: 8,\n      bitsStored: 8,\n      highBit: 7,\n      samplesPerPixel: 1,\n      pixelRepresentation: 0,\n    },\n  });\n\n  const localImage = createAndCacheLocalImage(\n    { scalarData: imageScalarData, onCacheAdd, skipCreateBuffer },\n    imageId,\n    true\n  );\n\n  const imageLoadObject = {\n    promise: Promise.resolve(localImage),\n  };\n\n  if (!preventCache) {\n    cache.putImageLoadObject(derivedImageId, imageLoadObject);\n  }\n  return imageLoadObject.promise;\n}\n\n/**\n * Load and cache a list of imageIds\n *\n * @param referencedImageIds - list of imageIds\n * @param options\n * @param options.getDerivedImageId - function to get the derived imageId\n * @param options.targetBufferType - target buffer type\n * @param options.skipBufferCreate - avoid creating the buffer\n */\nexport function createAndCacheDerivedImages(\n  referencedImageIds: Array<string>,\n  options: DerivedImageOptions & {\n    getDerivedImageId?: (referencedImageId: string) => string;\n    targetBufferType?: PixelDataTypedArrayString;\n  } = {}\n): DerivedImages {\n  if (referencedImageIds?.length === 0) {\n    throw new Error(\n      'createAndCacheDerivedImages: parameter imageIds must be list of image Ids'\n    );\n  }\n\n  const derivedImageIds = [];\n  const allPromises = referencedImageIds.map((referencedImageId) => {\n    const newOptions: DerivedImageOptions = {\n      imageId:\n        options.getDerivedImageId?.(referencedImageId) || `derived:${uuidv4()}`,\n      ...options,\n    };\n    derivedImageIds.push(newOptions.imageId);\n    return createAndCacheDerivedImage(referencedImageId, newOptions);\n  });\n\n  return { imageIds: derivedImageIds, promises: allPromises };\n}\n\nexport function createAndCacheLocalImage(\n  options: LocalImageOptions,\n  imageId: string,\n  preventCache = false\n): IImage {\n  const imagePlaneModule = metaData.get('imagePlaneModule', imageId);\n\n  const length = imagePlaneModule.rows * imagePlaneModule.columns;\n\n  const image = {\n    imageId: imageId,\n    intercept: 0,\n    windowCenter: 0,\n    windowWidth: 0,\n    color: false,\n    numComps: 1,\n    slope: 1,\n    minPixelValue: 0,\n    maxPixelValue: 255,\n    voiLUTFunction: undefined,\n    rows: imagePlaneModule.rows,\n    columns: imagePlaneModule.columns,\n    getCanvas: undefined, // todo: which canvas?\n    height: imagePlaneModule.rows,\n    width: imagePlaneModule.columns,\n    rgba: undefined, // todo: how\n    columnPixelSpacing: imagePlaneModule.columnPixelSpacing,\n    rowPixelSpacing: imagePlaneModule.rowPixelSpacing,\n    invert: false,\n  } as IImage;\n\n  if (options.scalarData) {\n    const imageScalarData = options.scalarData;\n\n    if (\n      !(\n        imageScalarData instanceof Uint8Array ||\n        imageScalarData instanceof Float32Array ||\n        imageScalarData instanceof Uint16Array ||\n        imageScalarData instanceof Int16Array\n      )\n    ) {\n      throw new Error(\n        'To use createLocalVolume you should pass scalarData of type Uint8Array, Uint16Array, Int16Array or Float32Array'\n      );\n    }\n\n    image.sizeInBytes = imageScalarData.byteLength;\n    image.getPixelData = () => imageScalarData;\n  } else if (options.skipCreateBuffer !== true) {\n    const { numBytes, TypedArrayConstructor } = getBufferConfiguration(\n      options.targetBufferType,\n      length\n    );\n\n    const imageScalarData = new TypedArrayConstructor(length);\n\n    image.sizeInBytes = numBytes;\n    image.getPixelData = () => imageScalarData;\n  }\n\n  // The onCacheAdd may modify the size in bytes for this image, which is ok,\n  // as this is used after resolution for cache storage.  It may also do\n  // thinks like adding alternative representations such as VoxelManager\n  options.onCacheAdd?.(image);\n\n  const imageLoadObject = {\n    promise: Promise.resolve(image),\n  };\n\n  if (!preventCache) {\n    cache.putImageLoadObject(image.imageId, imageLoadObject);\n  }\n\n  return image;\n}\n\n/**\n * Removes the imageId from the request pool manager and executes the `cancel`\n * function if it exists.\n *\n * @param imageId - A Cornerstone Image Object's imageId\n *\n */\nexport function cancelLoadImage(imageId: string): void {\n  const filterFunction = ({ additionalDetails }) => {\n    if (additionalDetails.imageId) {\n      return additionalDetails.imageId !== imageId;\n    }\n\n    // for volumes\n    return true;\n  };\n\n  // Instruct the request pool manager to filter queued\n  // requests to ensure requests we no longer need are\n  // no longer sent.\n  imageLoadPoolManager.filterRequests(filterFunction);\n\n  // TODO: Cancel decoding and retrieval as well (somehow?)\n\n  // cancel image loading if in progress\n  const imageLoadObject = cache.getImageLoadObject(imageId);\n\n  if (imageLoadObject) {\n    imageLoadObject.cancelFn();\n  }\n}\n\n/**\n * Removes the imageIds from the request pool manager and calls the `cancel`\n * function if it exists.\n *\n * @param imageIds - Array of Cornerstone Image Object's imageIds\n *\n */\nexport function cancelLoadImages(imageIds: Array<string>): void {\n  imageIds.forEach((imageId) => cancelLoadImage(imageId));\n}\n\n/**\n * Removes all the ongoing image loads by calling the `cancel` method on each\n * imageLoadObject. If no `cancel` method is available, it will be ignored.\n *\n */\nexport function cancelLoadAll(): void {\n  const requestPool = imageLoadPoolManager.getRequestPool();\n\n  Object.keys(requestPool).forEach((type: string) => {\n    const requests = requestPool[type];\n\n    Object.keys(requests).forEach((priority) => {\n      const requestDetails = requests[priority].pop();\n      const additionalDetails = requestDetails.additionalDetails as any;\n      const { imageId, volumeId } = additionalDetails;\n\n      let loadObject;\n\n      if (imageId) {\n        loadObject = cache.getImageLoadObject(imageId);\n      } else if (volumeId) {\n        loadObject = cache.getVolumeLoadObject(volumeId);\n      }\n      if (loadObject) {\n        loadObject.cancel();\n      }\n    });\n    // resetting the pool types to be empty\n    imageLoadPoolManager.clearRequestStack(type);\n\n    // TODO: Clear retrieval and decoding queues as well\n  });\n}\n\n/**\n * Registers an imageLoader plugin with cornerstone for the specified scheme\n *\n * @param scheme - The scheme to use for this image loader (e.g. 'dicomweb', 'wadouri', 'http')\n * @param imageLoader - A Cornerstone Image Loader function\n */\nexport function registerImageLoader(\n  scheme: string,\n  imageLoader: ImageLoaderFn\n): void {\n  imageLoaders[scheme] = imageLoader;\n}\n/**\n * Registers a new unknownImageLoader and returns the previous one\n *\n * @param imageLoader - A Cornerstone Image Loader\n *\n * @returns The previous Unknown Image Loader\n */\nexport function registerUnknownImageLoader(\n  imageLoader: ImageLoaderFn\n): ImageLoaderFn {\n  const oldImageLoader = unknownImageLoader;\n  unknownImageLoader = imageLoader;\n  return oldImageLoader;\n}\n/**\n * Removes all registered and unknown image loaders. This should be called\n * when the application is unmounted to prevent memory leaks.\n *\n */\nexport function unregisterAllImageLoaders(): void {\n  Object.keys(imageLoaders).forEach(\n    (imageLoader) => delete imageLoaders[imageLoader]\n  );\n  unknownImageLoader = undefined;\n}\n\n/**\n * Creates and caches derived segmentation images based on the referenced imageIds, this\n * is a helper function, we don't have segmentation concept in the cornerstone core; however,\n * this helper would make it clear that the segmentation images SHOULD be Uint8Array type\n * always until we have a better solution.\n *\n * @param referencedImageIds - An array of referenced image IDs.\n * @param options - The options for creating the derived images (default: { targetBufferType: 'Uint8Array' }).\n * @returns The derived images.\n */\nexport function createAndCacheDerivedSegmentationImages(\n  referencedImageIds: Array<string>,\n  options: DerivedImageOptions = {\n    targetBufferType: 'Uint8Array',\n  }\n): DerivedImages {\n  return createAndCacheDerivedImages(referencedImageIds, options);\n}\n\n/**\n * Creates and caches a derived segmentation image based on the referenced image ID.\n * this is a helper function, we don't have segmentation concept in the cornerstone core; however,\n * this helper would make it clear that the segmentation images SHOULD be Uint8Array type\n * always until we have a better solution.\n *\n * @param referencedImageId The ID of the referenced image.\n * @param options The options for creating the derived image (default: { targetBufferType: 'Uint8Array' }).\n * @returns A promise that resolves to the created derived segmentation image.\n */\nexport function createAndCacheDerivedSegmentationImage(\n  referencedImageId: string,\n  options: DerivedImageOptions = {\n    targetBufferType: 'Uint8Array',\n  }\n): Promise<IImage> {\n  return createAndCacheDerivedImage(referencedImageId, options);\n}\n","import '@kitware/vtk.js/Rendering/Profiles/Volume';\n\nimport vtkImageData from '@kitware/vtk.js/Common/DataModel/ImageData';\nimport type { vtkImageData as vtkImageDataType } from '@kitware/vtk.js/Common/DataModel/ImageData';\nimport vtkDataArray from '@kitware/vtk.js/Common/Core/DataArray';\n\nimport { ImageVolume } from '../cache/classes/ImageVolume';\nimport cache from '../cache/cache';\nimport Events from '../enums/Events';\nimport eventTarget from '../eventTarget';\nimport triggerEvent from '../utilities/triggerEvent';\nimport cloneDeep from 'lodash.clonedeep';\n\nimport {\n  createUint16SharedArray,\n  createUint8SharedArray,\n  createFloat32SharedArray,\n  generateVolumePropsFromImageIds,\n  getBufferConfiguration,\n  uuidv4,\n} from '../utilities';\nimport {\n  Point3,\n  Metadata,\n  EventTypes,\n  Mat3,\n  IImageVolume,\n  VolumeLoaderFn,\n  IDynamicImageVolume,\n  PixelDataTypedArray,\n  IVolumeLoadObject,\n  PixelDataTypedArrayString,\n} from '../types';\nimport { getConfiguration, getShouldUseSharedArrayBuffer } from '../init';\nimport {\n  performCacheOptimizationForVolume,\n  setupCacheOptimizationEventListener,\n} from '../utilities/cacheUtils';\n\ninterface VolumeLoaderOptions {\n  imageIds: Array<string>;\n}\n\ninterface DerivedVolumeOptions {\n  volumeId: string;\n  targetBuffer?: {\n    type: PixelDataTypedArrayString;\n    sharedArrayBuffer?: boolean;\n  };\n}\ninterface LocalVolumeOptions {\n  metadata: Metadata;\n  dimensions: Point3;\n  spacing: Point3;\n  origin: Point3;\n  direction: Mat3;\n  scalarData?: PixelDataTypedArray;\n  imageIds?: Array<string>;\n  referencedImageIds?: Array<string>;\n  referencedVolumeId?: string;\n  targetBuffer?: {\n    type: PixelDataTypedArrayString;\n    sharedArrayBuffer?: boolean;\n  };\n}\n\n/**\n * Adds a single scalar data to a 3D volume\n */\nfunction addScalarDataToImageData(\n  imageData: vtkImageDataType,\n  scalarData: PixelDataTypedArray,\n  dataArrayAttrs\n) {\n  const scalarArray = vtkDataArray.newInstance({\n    name: `Pixels`,\n    values: scalarData,\n    ...dataArrayAttrs,\n  });\n\n  imageData.getPointData().setScalars(scalarArray);\n}\n\n/**\n * Adds multiple scalar data (time points) to a 4D volume\n */\nfunction addScalarDataArraysToImageData(\n  imageData: vtkImageDataType,\n  scalarDataArrays: PixelDataTypedArray[],\n  dataArrayAttrs\n) {\n  scalarDataArrays.forEach((scalarData, i) => {\n    const vtkScalarArray = vtkDataArray.newInstance({\n      name: `timePoint-${i}`,\n      values: scalarData,\n      ...dataArrayAttrs,\n    });\n\n    imageData.getPointData().addArray(vtkScalarArray);\n  });\n\n  // Set the first as active otherwise nothing is displayed on the screen\n  imageData.getPointData().setActiveScalars('timePoint-0');\n}\n\nfunction createInternalVTKRepresentation(\n  volume: IImageVolume\n): vtkImageDataType {\n  const { dimensions, metadata, spacing, direction, origin } = volume;\n  const { PhotometricInterpretation } = metadata;\n\n  let numComponents = 1;\n  if (PhotometricInterpretation === 'RGB') {\n    numComponents = 3;\n  }\n\n  const imageData = vtkImageData.newInstance();\n  const dataArrayAttrs = { numberOfComponents: numComponents };\n\n  imageData.setDimensions(dimensions);\n  imageData.setSpacing(spacing);\n  imageData.setDirection(direction);\n  imageData.setOrigin(origin);\n\n  // Add scalar data to 3D or 4D volume\n  if (volume.isDynamicVolume()) {\n    const scalarDataArrays = (<IDynamicImageVolume>(\n      volume\n    )).getScalarDataArrays();\n\n    addScalarDataArraysToImageData(imageData, scalarDataArrays, dataArrayAttrs);\n  } else {\n    const scalarData = volume.getScalarData();\n\n    addScalarDataToImageData(imageData, scalarData, dataArrayAttrs);\n  }\n\n  return imageData;\n}\n\n/**\n * This module deals with VolumeLoaders and loading volumes\n */\n\nconst volumeLoaders = {};\n\nlet unknownVolumeLoader;\n\n/**\n * Load a volume using a registered Cornerstone Volume Loader.\n *\n * The volume loader that is used will be\n * determined by the volume loader scheme matching against the volumeId.\n *\n * @param volumeId - A Cornerstone Volume Object's volumeId\n * @param options - Options to be passed to the Volume Loader. Options\n * contain the ImageIds that is passed to the loader\n *\n * @returns An Object which can be used to act after a volume is loaded or loading fails\n *\n */\nfunction loadVolumeFromVolumeLoader(\n  volumeId: string,\n  options?: VolumeLoaderOptions\n): IVolumeLoadObject {\n  const colonIndex = volumeId.indexOf(':');\n  const scheme = volumeId.substring(0, colonIndex);\n  let loader = volumeLoaders[scheme];\n\n  if (loader === undefined || loader === null) {\n    if (\n      unknownVolumeLoader == null ||\n      typeof unknownVolumeLoader !== 'function'\n    ) {\n      throw new Error(\n        `No volume loader for scheme ${scheme} has been registered`\n      );\n    }\n\n    loader = unknownVolumeLoader;\n  }\n\n  const volumeLoadObject = loader(volumeId, options);\n\n  setupCacheOptimizationEventListener(volumeId);\n\n  // Broadcast a volume loaded event once the image is loaded\n  volumeLoadObject.promise.then(\n    function (volume) {\n      triggerEvent(eventTarget, Events.VOLUME_LOADED, { volume });\n    },\n    function (error) {\n      const errorObject: EventTypes.VolumeLoadedFailedEventDetail = {\n        volumeId,\n        error,\n      };\n\n      triggerEvent(eventTarget, Events.VOLUME_LOADED_FAILED, errorObject);\n    }\n  );\n\n  return volumeLoadObject;\n}\n\n/**\n * Loads a volume given a volumeId and optional priority and returns a promise which will resolve to\n * the loaded image object or fail if an error occurred.  The loaded image is not stored in the cache.\n *\n * @param volumeId - A Cornerstone Image Object's volumeId\n * @param options - Options to be passed to the Volume Loader\n *\n * @returns An Object which can be used to act after an image is loaded or loading fails\n */\nexport function loadVolume(\n  volumeId: string,\n  options: VolumeLoaderOptions = { imageIds: [] }\n): Promise<IImageVolume> {\n  if (volumeId === undefined) {\n    throw new Error('loadVolume: parameter volumeId must not be undefined');\n  }\n\n  let volumeLoadObject = cache.getVolumeLoadObject(volumeId);\n\n  if (volumeLoadObject !== undefined) {\n    return volumeLoadObject.promise;\n  }\n\n  volumeLoadObject = loadVolumeFromVolumeLoader(volumeId, options);\n\n  return volumeLoadObject.promise.then((volume: IImageVolume) => {\n    volume.imageData = createInternalVTKRepresentation(volume);\n    return volume;\n  });\n}\n\n/**\n * Loads an image given an volumeId and optional priority and returns a promise which will resolve to\n * the loaded image object or fail if an error occurred. The image is stored in the cache.\n *\n * @param volumeId - A Cornerstone Image Object's volumeId\n * @param options - Options to be passed to the Volume Loader\n *\n * @returns Volume Loader Object\n */\nexport async function createAndCacheVolume(\n  volumeId: string,\n  options?: VolumeLoaderOptions\n): Promise<Record<string, any>> {\n  if (volumeId === undefined) {\n    throw new Error(\n      'createAndCacheVolume: parameter volumeId must not be undefined'\n    );\n  }\n\n  let volumeLoadObject = cache.getVolumeLoadObject(volumeId);\n\n  if (volumeLoadObject !== undefined) {\n    return volumeLoadObject.promise;\n  }\n\n  volumeLoadObject = loadVolumeFromVolumeLoader(volumeId, options);\n\n  volumeLoadObject.promise.then((volume: IImageVolume) => {\n    volume.imageData = createInternalVTKRepresentation(volume);\n  });\n\n  cache.putVolumeLoadObject(volumeId, volumeLoadObject).catch((err) => {\n    throw err;\n  });\n\n  return volumeLoadObject.promise;\n}\n\n/**\n * Based on a referencedVolumeId, it will build and cache a new volume. If\n * no scalarData is specified in the options, an empty derived volume will be\n * created that matches the image metadata of the referenceVolume. If scalarData\n * is given, it will be used to generate the intensity values for the derivedVolume.\n * Finally, it will save the volume in the cache.\n * @param referencedVolumeId - the volumeId from which the new volume will get its metadata\n * @param options - DerivedVolumeOptions {uid: derivedVolumeUID, targetBuffer: { type: Float32Array | Uint8Array |\n * Uint16Array | Uint32Array  }, scalarData: if provided}\n *\n * @returns ImageVolume\n */\nexport async function createAndCacheDerivedVolume(\n  referencedVolumeId: string,\n  options: DerivedVolumeOptions\n): Promise<IImageVolume> {\n  const referencedVolume = cache.getVolume(referencedVolumeId);\n  if (!referencedVolume) {\n    throw new Error(\n      `Cannot created derived volume: Referenced volume with id ${referencedVolumeId} does not exist.`\n    );\n  }\n\n  let { volumeId } = options;\n  const { targetBuffer } = options;\n\n  if (volumeId === undefined) {\n    volumeId = uuidv4();\n  }\n\n  const { metadata, dimensions, spacing, origin, direction } = referencedVolume;\n  const scalarData = referencedVolume.getScalarData();\n  const scalarLength = scalarData.length;\n\n  const { volumeScalarData, numBytes } = generateVolumeScalarData(\n    targetBuffer,\n    scalarLength\n  );\n\n  // Todo: handle more than one component for segmentation (RGB)\n  const scalarArray = vtkDataArray.newInstance({\n    name: 'Pixels',\n    numberOfComponents: 1,\n    values: volumeScalarData,\n  });\n\n  const derivedImageData = vtkImageData.newInstance();\n\n  derivedImageData.setDimensions(dimensions);\n  derivedImageData.setSpacing(spacing);\n  derivedImageData.setDirection(direction);\n  derivedImageData.setOrigin(origin);\n  derivedImageData.getPointData().setScalars(scalarArray);\n\n  const derivedVolume = new ImageVolume({\n    volumeId,\n    metadata: cloneDeep(metadata),\n    dimensions: [dimensions[0], dimensions[1], dimensions[2]],\n    spacing,\n    origin,\n    direction,\n    imageData: derivedImageData,\n    scalarData: volumeScalarData,\n    sizeInBytes: numBytes,\n    imageIds: [],\n    referencedVolumeId,\n  });\n\n  const volumeLoadObject = {\n    promise: Promise.resolve(derivedVolume),\n  };\n\n  await cache.putVolumeLoadObject(volumeId, volumeLoadObject);\n\n  return derivedVolume;\n}\n\n/**\n * Creates and cache a volume based on a set of provided properties including\n * dimensions, spacing, origin, direction, metadata, scalarData. It should be noted that\n * scalarData should be provided for this function to work. If a volume with the same\n * Id exists in the cache it returns it immediately.\n * @param options -  { scalarData, metadata, dimensions, spacing, origin, direction }\n * @param volumeId - Id of the generated volume\n *\n * @returns ImageVolume\n */\nexport function createLocalVolume(\n  options: LocalVolumeOptions,\n  volumeId: string,\n  preventCache = false\n): IImageVolume {\n  const { metadata, dimensions, spacing, origin, direction, targetBuffer } =\n    options;\n\n  let { scalarData } = options;\n\n  // Define the valid data types for scalarData\n  const validDataTypes = [\n    'Uint8Array',\n    'Float32Array',\n    'Uint16Array',\n    'Int16Array',\n  ];\n\n  const scalarLength = dimensions[0] * dimensions[1] * dimensions[2];\n\n  // Check if scalarData is provided and is of a valid type\n  if (!scalarData || !validDataTypes.includes(scalarData.constructor.name)) {\n    // Check if targetBuffer is provided and has a valid type\n    if (!targetBuffer?.type || !validDataTypes.includes(targetBuffer.type)) {\n      throw new Error(\n        'createLocalVolume: parameter scalarData must be provided and must be either Uint8Array, Float32Array, Uint16Array or Int16Array'\n      );\n    }\n\n    // Generate volume scalar data if scalarData is not provided or invalid\n    ({ volumeScalarData: scalarData } = generateVolumeScalarData(\n      targetBuffer,\n      scalarLength\n    ));\n  }\n\n  // Todo: handle default values for spacing, origin, direction if not provided\n  if (volumeId === undefined) {\n    volumeId = uuidv4();\n  }\n\n  const cachedVolume = cache.getVolume(volumeId);\n\n  if (cachedVolume) {\n    return cachedVolume as IImageVolume;\n  }\n\n  const numBytes = scalarData ? scalarData.buffer.byteLength : scalarLength * 4;\n\n  // check if there is enough space in unallocated + image Cache\n  const isCacheable = cache.isCacheable(numBytes);\n  if (!isCacheable) {\n    throw new Error(Events.CACHE_SIZE_EXCEEDED);\n  }\n\n  const scalarArray = vtkDataArray.newInstance({\n    name: 'Pixels',\n    numberOfComponents: 1,\n    values: scalarData,\n  });\n\n  const imageData = vtkImageData.newInstance();\n\n  imageData.setDimensions(dimensions);\n  imageData.setSpacing(spacing);\n  imageData.setDirection(direction);\n  imageData.setOrigin(origin);\n  imageData.getPointData().setScalars(scalarArray);\n\n  const derivedVolume = new ImageVolume({\n    volumeId,\n    metadata: cloneDeep(metadata),\n    dimensions: [dimensions[0], dimensions[1], dimensions[2]],\n    spacing,\n    origin,\n    direction,\n    imageData: imageData,\n    scalarData,\n    sizeInBytes: numBytes,\n    referencedImageIds: options.referencedImageIds || [],\n    referencedVolumeId: options.referencedVolumeId,\n    imageIds: options.imageIds || [],\n  });\n\n  if (preventCache) {\n    return derivedVolume;\n  }\n\n  const volumeLoadObject = {\n    promise: Promise.resolve(derivedVolume),\n  };\n  cache.putVolumeLoadObject(volumeId, volumeLoadObject);\n\n  return derivedVolume;\n}\n\nexport async function createAndCacheVolumeFromImages(\n  volumeId: string,\n  imageIds: string[],\n  options: {\n    preventCache?: boolean;\n    additionalDetails?: Record<string, any>;\n  } = {}\n): Promise<IImageVolume> {\n  const { preventCache = false } = options;\n\n  if (imageIds === undefined) {\n    throw new Error(\n      'createAndCacheVolumeFromImages: parameter imageIds must not be undefined'\n    );\n  }\n\n  if (volumeId === undefined) {\n    throw new Error(\n      'createAndCacheVolumeFromImages: parameter volumeId must not be undefined'\n    );\n  }\n\n  const cachedVolume = cache.getVolume(volumeId);\n\n  if (cachedVolume) {\n    return Promise.resolve(cachedVolume);\n  }\n\n  const volumeProps = generateVolumePropsFromImageIds(imageIds, volumeId);\n\n  // volume is an empty volume, we need to load the data from the imageIds\n  // into the volume scalarData\n\n  // it is important to get the imageIds from the volumeProps\n  // since they are sorted\n  const imagePromises = volumeProps.imageIds.map((imageId, imageIdIndex) => {\n    const imageLoadObject = cache.getImageLoadObject(imageId);\n\n    return imageLoadObject.promise.then((image) => {\n      const pixelData = image.getPixelData();\n      const offset = imageIdIndex * image.rows * image.columns;\n\n      (volumeProps.scalarData as PixelDataTypedArray).set(pixelData, offset);\n    });\n  });\n\n  await Promise.all(imagePromises);\n\n  const volume = new ImageVolume({\n    ...volumeProps,\n    referencedImageIds: imageIds,\n    ...options,\n  });\n\n  // since we generated the volume from images, we can optimize the cache\n  // by replacing the pixelData of the images with a view of the volume's\n  // scalarData\n  performCacheOptimizationForVolume(volume);\n\n  const volumeLoadObject = {\n    promise: Promise.resolve(volume),\n  };\n\n  if (preventCache) {\n    return volumeLoadObject.promise;\n  }\n\n  cache.putVolumeLoadObject(volumeId, volumeLoadObject);\n\n  return volumeLoadObject.promise;\n}\n\n/**\n * Registers an volumeLoader plugin with cornerstone for the specified scheme\n *\n * @param scheme - The scheme to use for this volume loader (e.g. 'dicomweb', 'wadouri', 'http')\n * @param volumeLoader - A Cornerstone Volume Loader function\n */\nexport function registerVolumeLoader(\n  scheme: string,\n  volumeLoader: VolumeLoaderFn\n): void {\n  volumeLoaders[scheme] = volumeLoader;\n}\n\n/** Gets the array of volume loader schemes */\nexport function getVolumeLoaderSchemes(): string[] {\n  return Object.keys(volumeLoaders);\n}\n\n/**\n * Registers a new unknownVolumeLoader and returns the previous one\n *\n * @param volumeLoader - A Cornerstone Volume Loader\n *\n * @returns The previous Unknown Volume Loader\n */\nexport function registerUnknownVolumeLoader(\n  volumeLoader: VolumeLoaderFn\n): VolumeLoaderFn | undefined {\n  const oldVolumeLoader = unknownVolumeLoader;\n\n  unknownVolumeLoader = volumeLoader;\n\n  return oldVolumeLoader;\n}\n\nexport function getUnknownVolumeLoaderSchema(): string {\n  return unknownVolumeLoader.name;\n}\n\n/**\n * Creates and caches a derived segmentation volume based on a referenced volume.\n * This is basically a utility method since for the segmentations we have to specify\n * Uint8Array as the targetBuffer type for now until we support other types.\n *\n * @param referencedVolumeId - The ID of the referenced volume.\n * @param options - The options for creating the derived volume.\n * @returns A promise that resolves to the created derived segmentation volume.\n */\nexport async function createAndCacheDerivedSegmentationVolume(\n  referencedVolumeId: string,\n  options = {} as DerivedVolumeOptions\n): Promise<IImageVolume> {\n  return createAndCacheDerivedVolume(referencedVolumeId, {\n    ...options,\n    targetBuffer: {\n      type: 'Uint8Array',\n    },\n  });\n}\n\n/**\n * Creates a local segmentation volume.\n *\n * @param options - The options for creating the volume.\n * @param volumeId - The ID of the volume.\n * @param preventCache - Whether to prevent caching the volume.\n * @returns A promise that resolves to the created image volume.\n */\nexport async function createLocalSegmentationVolume(\n  options: LocalVolumeOptions,\n  volumeId: string,\n  preventCache = false\n): Promise<IImageVolume> {\n  if (!options.scalarData) {\n    options.scalarData = new Uint8Array(\n      options.dimensions[0] * options.dimensions[1] * options.dimensions[2]\n    );\n  }\n\n  return createLocalVolume(options, volumeId, preventCache);\n}\n\n/**\n * This function generates volume scalar data based on the provided target buffer and scalar length.\n * It checks if the cache can accommodate the data size and throws an error if it exceeds the cache size.\n * If a shared array buffer is available in the target buffer, it uses that to create the typed array.\n * Otherwise, it creates a typed array based on the scalar length.\n *\n * @param targetBuffer - The target buffer object which may contain a type and a shared array buffer.\n * @param scalarLength - The scalar length for creating the typed array.\n * @param useNorm16Texture - A flag to specify whether to use a 16-bit texture or not.\n * @returns The volume scalar data as a typed array.\n */\nfunction generateVolumeScalarData(\n  targetBuffer: {\n    type: PixelDataTypedArrayString;\n    sharedArrayBuffer?: boolean;\n  },\n  scalarLength: number\n) {\n  const { useNorm16Texture } = getConfiguration().rendering;\n\n  const { TypedArrayConstructor, numBytes } = getBufferConfiguration(\n    targetBuffer?.type,\n    scalarLength,\n    {\n      use16BitTexture: useNorm16Texture,\n      isVolumeBuffer: true,\n    }\n  );\n\n  const isCacheable = cache.isCacheable(numBytes);\n  if (!isCacheable) {\n    throw new Error(Events.CACHE_SIZE_EXCEEDED);\n  }\n\n  let volumeScalarData;\n  if (targetBuffer?.sharedArrayBuffer ?? getShouldUseSharedArrayBuffer()) {\n    switch (targetBuffer.type) {\n      case 'Float32Array':\n        volumeScalarData = createFloat32SharedArray(scalarLength);\n        break;\n      case 'Uint8Array':\n        volumeScalarData = createUint8SharedArray(scalarLength);\n        break;\n      case 'Uint16Array':\n        volumeScalarData = createUint16SharedArray(scalarLength);\n        break;\n      case 'Int16Array':\n        volumeScalarData = createUint16SharedArray(scalarLength);\n        break;\n      default:\n        throw new Error(\n          'generateVolumeScalarData: SharedArrayBuffer is not supported for the specified target buffer type'\n        );\n    }\n  } else {\n    volumeScalarData = new TypedArrayConstructor(scalarLength);\n  }\n\n  return { volumeScalarData, numBytes };\n}\n","import { RequestPoolManager } from './requestPoolManager';\nimport RequestType from '../enums/RequestType';\n\n/**\n * You can use the imageLoadPoolManager to load images, by providing a `requestFn`\n * that returns a promise for the image. You can provide a `type` to specify the type of\n * request (interaction, thumbnail, prefetch), and you can provide additional details\n * that will be passed to the requestFn. Below is an example of a requestFn that loads\n * an image from an imageId:\n *\n * ```javascript\n *\n * const priority = -5\n * const requestType = RequestType.Interaction\n * const additionalDetails = { imageId }\n * const options = {\n *   targetBuffer: {\n *     type: 'Float32Array',\n *     offset: null,\n *     length: null,\n *   },\n *   preScale: {\n *     enabled: true,\n *   },\n * }\n *\n * imageLoadPoolManager.addRequest(\n *   loadAndCacheImage(imageId, options).then(() => { // set on viewport}),\n *   requestType,\n *   additionalDetails,\n *   priority\n * )\n * ```\n */\nconst imageLoadPoolManager = new RequestPoolManager('imageLoadPool');\n\nimageLoadPoolManager.grabDelay = 0;\n\nimageLoadPoolManager.setMaxSimultaneousRequests(RequestType.Interaction, 1000);\nimageLoadPoolManager.setMaxSimultaneousRequests(RequestType.Thumbnail, 1000);\nimageLoadPoolManager.setMaxSimultaneousRequests(RequestType.Prefetch, 1000);\n\nexport default imageLoadPoolManager;\n","import RequestType from '../enums/RequestType';\nimport { IImage } from '../types';\nimport { uuidv4 } from '../utilities';\n\ntype AdditionalDetails = {\n  imageId?: string;\n  volumeId?: string;\n};\n\ntype RequestDetailsInterface = {\n  requestFn: () => Promise<IImage | void>;\n  type: RequestType;\n  additionalDetails: AdditionalDetails;\n};\n\ntype RequestPool = {\n  [name in RequestType]: { [key: number]: RequestDetailsInterface[] };\n};\n\n/**\n * RequestPool manager class is a base class that manages the request pools.\n * It is used imageRetrievalPoolManager, and imageLoadPoolManager to retrieve and load images.\n * Previously requestPoolManager was used to manage the retrieval and loading and decoding\n * of the images in a way that new requests were sent after the image was both loaded and decoded\n * which was not performant since it was waiting for the image to be loaded and decoded before\n * sending the next request which is a network request and can be done in parallel.\n * Now, we use separate imageRetrievalPoolManager and imageLoadPoolManager\n * to improve performance and both are extending the RequestPoolManager class which\n * is a basic queueing pool.\n *\n * A new requestPool can be created by instantiating a new RequestPoolManager class.\n *\n * ```javascript\n * const requestPoolManager = new RequestPoolManager()\n * ```\n *\n * ## ImageLoadPoolManager\n *\n * You can use the imageLoadPoolManager to load images, by providing a `requestFn`\n * that returns a promise for the image. You can provide a `type` to specify the type of\n * request (interaction, thumbnail, prefetch), and you can provide additional details\n * that will be passed to the requestFn. Below is an example of a requestFn that loads\n * an image from an imageId:\n *\n * ```javascript\n *\n * const priority = -5\n * const requestType = RequestType.Interaction\n * const additionalDetails = { imageId }\n * const options = {\n *   targetBuffer: {\n *     type: 'Float32Array',\n *     offset: null,\n *     length: null,\n *   },\n *   preScale: {\n *      enabled: true,\n *    },\n * }\n *\n * imageLoadPoolManager.addRequest(\n *   loadAndCacheImage(imageId, options).then(() => { // set on viewport}),\n *   requestType,\n *   additionalDetails,\n *   priority\n * )\n * ```\n * ### ImageRetrievalPoolManager\n * You don't need to directly use the imageRetrievalPoolManager to load images\n * since the imageLoadPoolManager will automatically use it for retrieval. However,\n * maximum number of concurrent requests can be set by calling `setMaxConcurrentRequests`.\n */\nclass RequestPoolManager {\n  private id: string;\n  private awake: boolean;\n  private requestPool: RequestPool;\n  private numRequests = {\n    interaction: 0,\n    thumbnail: 0,\n    prefetch: 0,\n    compute: 0,\n  };\n  /* maximum number of requests of each type. */\n  public maxNumRequests: {\n    interaction: number;\n    thumbnail: number;\n    prefetch: number;\n    compute: number;\n  };\n  /* A public property that is used to set the delay between requests. */\n  public grabDelay: number;\n  private timeoutHandle: number;\n\n  /**\n   * By default a request pool containing three priority groups, one for each\n   * of the request types, is created. Maximum number of requests of each type\n   * is set to 6.\n   */\n  constructor(id?: string) {\n    this.id = id ? id : uuidv4();\n\n    this.requestPool = {\n      interaction: { 0: [] },\n      thumbnail: { 0: [] },\n      prefetch: { 0: [] },\n      compute: { 0: [] },\n    };\n\n    this.grabDelay = 5;\n    this.awake = false;\n\n    this.numRequests = {\n      interaction: 0,\n      thumbnail: 0,\n      prefetch: 0,\n      compute: 0,\n    };\n\n    this.maxNumRequests = {\n      interaction: 6,\n      thumbnail: 6,\n      prefetch: 5,\n      // I believe there is a bug right now, where if there are two workers\n      // and one wants to run a compute job 6 times and the limit is just 5, then\n      // the other worker will never get a chance to run its compute job.\n      // we should probably have a separate limit for compute jobs per worker\n      // context as there is another layer of parallelism there. For this reason\n      // I'm setting the limit to 1000 for now.\n      compute: 1000,\n    };\n  }\n\n  /**\n   * This function sets the maximum number of requests for a given request type.\n   * @param type - The type of request you want to set the max number\n   * of requests for it can be either of interaction, prefetch, or thumbnail.\n   * @param maxNumRequests - The maximum number of requests that can be\n   * made at a time.\n   */\n  public setMaxSimultaneousRequests(\n    type: RequestType,\n    maxNumRequests: number\n  ): void {\n    this.maxNumRequests[type] = maxNumRequests;\n  }\n\n  /**\n   * It returns the maximum number of requests of a given type that can be made\n   * @param type - The type of request.\n   * @returns The maximum number of requests of a given type.\n   */\n  public getMaxSimultaneousRequests(type: RequestType): number {\n    return this.maxNumRequests[type];\n  }\n\n  /**\n   * Stops further fetching of the requests, all the ongoing requests will still\n   * be retrieved\n   */\n  public destroy(): void {\n    if (this.timeoutHandle) {\n      window.clearTimeout(this.timeoutHandle);\n    }\n  }\n\n  /**\n   * Adds the requests to the pool of requests.\n   *\n   * @param requestFn - A function that returns a promise which resolves in the image\n   * @param type - Priority category, it can be either of interaction, prefetch,\n   * or thumbnail.\n   * @param additionalDetails - Additional details that requests can contain.\n   * For instance the volumeId for the volume requests\n   * @param priority - Priority number for each category of requests. Its default\n   * value is priority 0. The lower the priority number, the higher the priority number\n   *\n   */\n  public addRequest(\n    requestFn: () => Promise<IImage | void>,\n    type: RequestType,\n    additionalDetails: Record<string, unknown>,\n    priority = 0\n  ): void {\n    // Describe the request\n    const requestDetails: RequestDetailsInterface = {\n      requestFn,\n      type,\n      additionalDetails,\n    };\n\n    // Check if the priority group exists on the request type\n    if (this.requestPool[type][priority] === undefined) {\n      this.requestPool[type][priority] = [];\n    }\n\n    // Adding the request to the correct priority group of the request type\n    this.requestPool[type][priority].push(requestDetails);\n\n    this.startGrabbing();\n  }\n\n  /**\n   * Filter the requestPoolManager's pool of request based on the result of\n   * provided filter function. The provided filter function needs to return false or true\n   *\n   * @param filterFunction - The filter function for filtering of the requests to keep\n   */\n  public filterRequests(\n    filterFunction: (requestDetails: RequestDetailsInterface) => boolean\n  ): void {\n    Object.keys(this.requestPool).forEach((type: string) => {\n      const requestType = this.requestPool[type];\n      Object.keys(requestType).forEach((priority) => {\n        requestType[priority] = requestType[priority].filter(\n          (requestDetails: RequestDetailsInterface) => {\n            return filterFunction(requestDetails);\n          }\n        );\n      });\n    });\n  }\n\n  /**\n   * Clears the requests specific to the provided type. For instance, the\n   * pool of requests of type 'interaction' can be cleared via this function.\n   *\n   *\n   * @param type - category of the request (either interaction, prefetch or thumbnail)\n   */\n  public clearRequestStack(type: string): void {\n    if (!this.requestPool[type]) {\n      throw new Error(`No category for the type ${type} found`);\n    }\n    this.requestPool[type] = { 0: [] };\n  }\n\n  private sendRequests(type) {\n    const requestsToSend = this.maxNumRequests[type] - this.numRequests[type];\n    let syncImageCount = 0;\n\n    for (let i = 0; i < requestsToSend; i++) {\n      const requestDetails = this.getNextRequest(type);\n      if (requestDetails === null) {\n        return false;\n      } else if (requestDetails) {\n        this.numRequests[type]++;\n        this.awake = true;\n\n        let requestResult;\n        try {\n          requestResult = requestDetails.requestFn();\n        } catch (e) {\n          // This is the only warning one will get, so need a warn message\n          console.warn('sendRequest failed', e);\n        }\n        if (requestResult?.finally) {\n          requestResult.finally(() => {\n            this.numRequests[type]--;\n            this.startAgain();\n          });\n        } else {\n          // Handle non-async request functions too - typically just short circuit ones\n          this.numRequests[type]--;\n          syncImageCount++;\n        }\n      }\n    }\n    if (syncImageCount) {\n      this.startAgain();\n    }\n\n    return true;\n  }\n\n  private getNextRequest(type): RequestDetailsInterface | null {\n    const interactionPriorities = this.getSortedPriorityGroups(type);\n    for (const priority of interactionPriorities) {\n      if (this.requestPool[type][priority].length) {\n        return this.requestPool[type][priority].shift();\n      }\n    }\n\n    return null;\n  }\n\n  protected startGrabbing(): void {\n    const hasRemainingInteractionRequests = this.sendRequests(\n      RequestType.Interaction\n    );\n    const hasRemainingThumbnailRequests = this.sendRequests(\n      RequestType.Thumbnail\n    );\n    const hasRemainingPrefetchRequests = this.sendRequests(\n      RequestType.Prefetch\n    );\n    const hasRemainingComputeRequests = this.sendRequests(RequestType.Compute);\n\n    if (\n      !hasRemainingInteractionRequests &&\n      !hasRemainingThumbnailRequests &&\n      !hasRemainingPrefetchRequests &&\n      !hasRemainingComputeRequests\n    ) {\n      this.awake = false;\n    }\n  }\n\n  protected startAgain(): void {\n    if (!this.awake) {\n      return;\n    }\n\n    if (this.grabDelay !== undefined) {\n      // Prevents calling setTimeout hundreds of times when hundreds of requests\n      // are added which make it slower and works in an unexpected way when\n      // destroy/clearTimeout is called because only the last handle is stored.\n      if (!this.timeoutHandle) {\n        this.timeoutHandle = window.setTimeout(() => {\n          this.timeoutHandle = null;\n          this.startGrabbing();\n        }, this.grabDelay);\n      }\n    } else {\n      this.startGrabbing();\n    }\n  }\n\n  protected getSortedPriorityGroups(type: string): Array<number> {\n    const priorities = Object.keys(this.requestPool[type])\n      .map(Number)\n      .filter((priority) => this.requestPool[type][priority].length)\n      .sort((a, b) => a - b);\n    return priorities;\n  }\n\n  /**\n   * Returns the request pool containing different categories, their priority and\n   * the added request details.\n   *\n   * @returns the request pool which contains different categories, their priority and\n   * the added request details\n   */\n  getRequestPool(): RequestPool {\n    return this.requestPool;\n  }\n}\n\nexport { RequestPoolManager };\n","import cache, { ImageVolume } from '../cache';\nimport { Events } from '../enums';\nimport eventTarget from '../eventTarget';\nimport { getConfiguration, getShouldUseSharedArrayBuffer } from '../init';\n\n/**\n * This function will check if the cache optimization is enabled and if it is\n * it will check if the created volume was derived from an already cached stack\n * of images, if so it will go back to the image cache and create a view at the\n * correct offset of the bigger volume array buffer, this will save memory.\n *\n * @param volumeId - The volumeId that will be checked for cache optimization\n */\nexport function setupCacheOptimizationEventListener(volumeId) {\n  const { enableCacheOptimization } = getConfiguration();\n  const shouldUseSAB = getShouldUseSharedArrayBuffer();\n\n  const performOptimization = enableCacheOptimization && shouldUseSAB;\n  if (!performOptimization) {\n    return;\n  }\n\n  eventTarget.addEventListenerOnce(\n    Events.IMAGE_VOLUME_LOADING_COMPLETED,\n    (evt) => {\n      if (evt.detail.volumeId !== volumeId) {\n        return;\n      }\n\n      const volume = cache.getVolume(volumeId);\n\n      performCacheOptimizationForVolume(volume);\n    }\n  );\n}\n\n/**\n * Performs cache optimization for a volume by replacing the pixel data of each image\n * in the image cache (if found) with a view of the volume's scalar data.\n * @param options - The options for cache optimization.\n * @param options.volumeId - The ID of the volume.\n */\nexport function performCacheOptimizationForVolume(volume) {\n  if (!(volume instanceof ImageVolume)) {\n    return;\n  }\n\n  const scalarData = volume.getScalarData();\n\n  volume.imageCacheOffsetMap.size > 0\n    ? _processImageCacheOffsetMap(volume, scalarData)\n    : _processVolumeImages(volume, scalarData);\n}\n\n/**\n * This function will process the volume images and replace the pixel data of each\n * image in the image cache (if found) with a view of the volume's scalar data.\n * This function is used when the volume is derived from an already cached stack\n * of images.\n *\n * @param volume - The volume to process.\n * @param scalarData - The scalar data to use for the volume.\n */\nfunction _processImageCacheOffsetMap(volume, scalarData) {\n  volume.imageCacheOffsetMap.forEach(({ offset }, imageId) => {\n    const image = cache.getImage(imageId);\n    if (!image) {\n      return;\n    }\n\n    _updateImageWithScalarDataView(image, scalarData, offset);\n    cache.decrementImageCacheSize(image.sizeInBytes);\n  });\n}\n\n/**\n * This function will process the volume images and replace the pixel data of each\n * image in the image cache (if found) with a view of the volume's scalar data.\n * This function is used when the volume is not derived from an already cached stack\n * of images.\n *\n * @param volume - The volume to process.\n * @param scalarData - The scalar data to use for the volume.\n */\nfunction _processVolumeImages(volume, scalarData) {\n  let compatibleScalarData = scalarData;\n\n  const sampleImageIdWithImage = volume.imageIds.find((imageId) => {\n    const image = cache.getImage(imageId);\n    return image;\n  });\n\n  if (!sampleImageIdWithImage) {\n    return;\n  }\n\n  const sampleImage = cache.getImage(sampleImageIdWithImage);\n  const samplePixelData =\n    sampleImage.imageFrame?.pixelData || sampleImage.getPixelData();\n\n  // Check if the types of scalarData and pixelData are different.\n  if (scalarData.constructor !== samplePixelData.constructor) {\n    // If so, create a new typed array of the same type as pixelData and copy the values from scalarData.\n    compatibleScalarData = new samplePixelData.constructor(scalarData.length);\n\n    // Copy values from scalarData to compatibleScalarData.\n    compatibleScalarData.set(scalarData);\n  }\n\n  volume.imageIds.forEach((imageId) => {\n    const image = cache.getImage(imageId);\n    if (!image) {\n      return;\n    }\n\n    const index = volume.getImageIdIndex(imageId);\n    const offset = index * image.getPixelData().byteLength;\n\n    _updateImageWithScalarDataView(image, compatibleScalarData, offset);\n    cache.decrementImageCacheSize(image.sizeInBytes);\n  });\n}\n\nfunction _updateImageWithScalarDataView(image, scalarData, offset) {\n  const pixelData = image.imageFrame\n    ? image.imageFrame.pixelData\n    : image.getPixelData();\n\n  const view = new pixelData.constructor(\n    scalarData.buffer,\n    offset,\n    pixelData.length\n  );\n\n  image.getPixelData = () => view;\n\n  if (image.imageFrame) {\n    image.imageFrame.pixelData = view;\n  }\n\n  image.bufferView = {\n    buffer: scalarData.buffer,\n    offset,\n  };\n}\n","import vtkColorMaps from '@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps';\n\nimport { ColormapPublic, ColormapRegistration } from '../types';\nimport isEqual from './isEqual';\nimport { actorIsA } from './actorCheck';\n\nconst _colormaps = new Map();\n\n/**\n * Register a colormap\n * @param name - name of the colormap\n * @param colormap - colormap object\n */\nfunction registerColormap(colormap: ColormapRegistration) {\n  _colormaps.set(colormap.Name, colormap);\n}\n\n/**\n * Get a colormap by name\n * @param name - name of the colormap\n * @returns colormap object\n */\nfunction getColormap(name) {\n  return _colormaps.get(name);\n}\n\n/**\n * Get all registered colormap names\n * @returns array of colormap names\n *\n */\nfunction getColormapNames() {\n  return Array.from(_colormaps.keys());\n}\n\n/**\n * Finds a colormap that matches the given RGB points.\n *\n * @param rgbPoints - The RGB points to match against the colormaps.\n * @returns  The matched colormap object or null if no match is found.\n */\nfunction findMatchingColormap(rgbPoints, actor): ColormapPublic | null {\n  const colormapsVTK = vtkColorMaps.rgbPresetNames.map((presetName) =>\n    vtkColorMaps.getPresetByName(presetName)\n  );\n\n  const colormapsCS3D = getColormapNames().map((colormapName) =>\n    getColormap(colormapName)\n  );\n\n  const colormaps = colormapsVTK.concat(colormapsCS3D);\n\n  // Find the colormap that matches the given RGB points\n  const matchedColormap = colormaps.find((colormap) => {\n    const { RGBPoints: presetRGBPoints } = colormap;\n\n    if (presetRGBPoints.length !== rgbPoints.length) {\n      return false;\n    }\n\n    for (let i = 0; i < presetRGBPoints.length; i += 4) {\n      if (\n        !isEqual(\n          presetRGBPoints.slice(i + 1, i + 4),\n          rgbPoints.slice(i + 1, i + 4)\n        )\n      ) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n\n  if (!matchedColormap) {\n    return null;\n  }\n\n  const opacity = [];\n  if (actorIsA(actor, 'vtkVolume')) {\n    const opacityPoints = actor\n      .getProperty()\n      .getScalarOpacity(0)\n      .getDataPointer();\n\n    if (!opacityPoints) {\n      return {\n        name: matchedColormap.Name,\n      };\n    }\n\n    for (let i = 0; i < opacityPoints.length; i += 2) {\n      opacity.push({\n        value: opacityPoints[i],\n        opacity: opacityPoints[i + 1],\n      });\n    }\n  }\n\n  return {\n    name: matchedColormap.Name,\n    opacity,\n  };\n}\n\nexport {\n  getColormap,\n  getColormapNames,\n  registerColormap,\n  findMatchingColormap,\n};\n","import vtkColorTransferFunction from '@kitware/vtk.js/Rendering/Core/ColorTransferFunction';\nimport { VOIRange } from '../types';\n\nexport default function createLinearRGBTransferFunction(\n  voiRange: VOIRange\n): vtkColorTransferFunction {\n  const cfun = vtkColorTransferFunction.newInstance();\n  let lower = 0;\n  let upper = 1024;\n  if (\n    voiRange &&\n    voiRange.lower !== undefined &&\n    voiRange.upper !== undefined\n  ) {\n    lower = voiRange.lower;\n    upper = voiRange.upper;\n  }\n  cfun.addRGBPoint(lower, 0.0, 0.0, 0.0);\n  cfun.addRGBPoint(upper, 1.0, 1.0, 1.0);\n\n  return cfun;\n}\n","import { ImageSliceData, IVolumeViewport, VolumeActor } from '../types';\nimport getSliceRange from './getSliceRange';\nimport getTargetVolumeAndSpacingInNormalDir from './getTargetVolumeAndSpacingInNormalDir';\n\n/**\n * It calculates the number of slices and the current slice index for a given\n * Volume viewport\n * @param viewport - volume viewport\n * @returns An object with two properties: numberOfSlices and imageIndex.\n */\nfunction getImageSliceDataForVolumeViewport(\n  viewport: IVolumeViewport\n): ImageSliceData {\n  const camera = viewport.getCamera();\n\n  const { spacingInNormalDirection, imageVolume } =\n    getTargetVolumeAndSpacingInNormalDir(viewport, camera);\n\n  if (!imageVolume) {\n    return;\n  }\n\n  const { viewPlaneNormal, focalPoint } = camera;\n\n  const actorEntry = viewport\n    .getActors()\n    .find(\n      (a) =>\n        a.referenceId === imageVolume.volumeId || a.uid === imageVolume.volumeId\n    );\n\n  if (!actorEntry) {\n    console.warn('No actor found for with actorUID of', imageVolume.volumeId);\n  }\n\n  const volumeActor = actorEntry.actor as VolumeActor;\n  const sliceRange = getSliceRange(volumeActor, viewPlaneNormal, focalPoint);\n\n  const { min, max, current } = sliceRange;\n\n  // calculate number of steps from min to max with current normal spacing in direction\n  const numberOfSlices = Math.round((max - min) / spacingInNormalDirection) + 1;\n\n  // calculate the imageIndex based on min, max, current\n  let imageIndex = ((current - min) / (max - min)) * numberOfSlices;\n  imageIndex = Math.floor(imageIndex);\n\n  // Clamp imageIndex\n  if (imageIndex > numberOfSlices - 1) {\n    imageIndex = numberOfSlices - 1;\n  } else if (imageIndex < 0) {\n    imageIndex = 0;\n  }\n\n  return {\n    numberOfSlices,\n    imageIndex,\n  };\n}\n\nexport default getImageSliceDataForVolumeViewport;\n","function getTransferFunctionNodes(transferFunction) {\n  const size = transferFunction.getSize();\n  const values = [];\n  for (let index = 0; index < size; index++) {\n    const nodeValue1 = [];\n\n    transferFunction.getNodeValue(index, nodeValue1);\n\n    values.push(nodeValue1);\n  }\n\n  return values;\n}\n\nfunction setTransferFunctionNodes(transferFunction, nodes) {\n  if (!nodes?.length) {\n    return;\n  }\n\n  transferFunction.removeAllPoints();\n\n  nodes.forEach((node) => {\n    transferFunction.addRGBPoint(...node);\n  });\n}\n\nexport { getTransferFunctionNodes, setTransferFunctionNodes };\n","import type Point3 from '../types/Point3';\n\n/**\n * Given an imageData object and a point in physical space, return the index of the\n * voxel that contains the point. TODO: this should be pushed to vtk upstream.\n * @param imageData - The image data object.\n * @param physicalPoint - The point in physical space that you want to transform to\n * index space.\n * @returns An array of integers.\n */\nexport default function transformWorldToIndex(imageData, worldPos: Point3) {\n  const continuousIndex = imageData.worldToIndex(worldPos);\n  const index = continuousIndex.map(Math.round);\n\n  return index;\n}\n","import eventTarget from '../eventTarget';\n\n/**\n * Small utility to trigger a custom event for a given EventTarget.\n *\n * @example\n *\n * ```javascript\n * triggerEvent(element, Events.IMAGE_RENDERED, { element })\n * ```\n * or it can trigger event on the eventTarget itself\n *\n * ```javascript\n * triggerEvent(eventTarget, CSTOOLS_EVENTS.ANNOTATION_MODIFIED, { viewportId, annotationUID })\n * ```\n *\n * @param el - The element or EventTarget to trigger the event upon\n * @param type - The event type name\n * @param detail - The event detail to be sent\n * @returns false if event is cancelable and at least one of the event handlers\n * which received event called Event.preventDefault(). Otherwise it returns true.\n */\nexport default function triggerEvent(\n  el: EventTarget = eventTarget,\n  type: string,\n  detail: unknown = null\n): boolean {\n  if (!type) {\n    throw new Error('Event type was not defined');\n  }\n\n  const event = new CustomEvent(type, {\n    detail,\n    cancelable: true,\n  });\n\n  return el.dispatchEvent(event);\n}\n","import * as Comlink from 'comlink';\nimport { RequestType } from '../enums/';\nimport { RequestPoolManager } from '../requestPool/requestPoolManager';\n\nclass CentralizedWorkerManager {\n  constructor() {\n    this.workerRegistry = {};\n    this.workerPoolManager = new RequestPoolManager('webworker');\n  }\n\n  /**\n   * Registers a new worker, it doesn't mean that the function will get executed.\n   *\n   * @param workerName - The name of the worker.\n   * @param workerFn - The function that creates a new instance of the worker.\n   * @param options - Optional parameters.\n   * @param options.maxWorkerInstances - The maximum number of instances of this worker that can be created.\n   * For instance if you create a worker with maxWorkerInstances = 2, then only 2 instances of this worker will be created\n   * and in case there are 10 tasks that need to be executed, each will get assigned 5 tasks.\n   * @param options.overwrite - Whether to overwrite the worker if it's already registered.\n   * @param options.autoTerminateOnIdle - Whether to automatically terminate idle workers.\n   */\n  registerWorker(workerName, workerFn, options = {}) {\n    const {\n      maxWorkerInstances = 1,\n      overwrite = false,\n      autoTerminateOnIdle = {\n        enabled: false,\n        idleTimeThreshold: 3000, // 3 seconds\n      },\n    } = options;\n\n    if (this.workerRegistry[workerName] && !overwrite) {\n      console.warn(`Worker type '${workerName}' is already registered...`);\n      return;\n    }\n\n    if (overwrite && this.workerRegistry[workerName]?.idleCheckIntervalId) {\n      clearInterval(this.workerRegistry[workerName].idleCheckIntervalId);\n    }\n\n    const workerProperties = {\n      workerFn: null,\n      instances: [],\n      loadCounters: [],\n      lastActiveTime: [],\n      // used for termination\n      nativeWorkers: [],\n      // auto termination\n      autoTerminateOnIdle: autoTerminateOnIdle.enabled,\n      idleCheckIntervalId: null,\n      idleTimeThreshold: autoTerminateOnIdle.idleTimeThreshold,\n    };\n\n    workerProperties.loadCounters = Array(maxWorkerInstances).fill(0);\n    workerProperties.lastActiveTime = Array(maxWorkerInstances).fill(null);\n\n    for (let i = 0; i < maxWorkerInstances; i++) {\n      const worker = workerFn();\n      workerProperties.instances.push(Comlink.wrap(worker));\n      workerProperties.nativeWorkers.push(worker);\n      workerProperties.workerFn = workerFn;\n    }\n\n    this.workerRegistry[workerName] = workerProperties;\n  }\n\n  getNextWorkerAPI(workerName) {\n    const workerProperties = this.workerRegistry[workerName];\n\n    if (!workerProperties) {\n      console.error(`Worker type '${workerName}' is not registered.`);\n      return null;\n    }\n\n    // Find the worker with the minimum load.\n    const workerInstances = workerProperties.instances.filter(\n      (instance) => instance !== null\n    );\n\n    let minLoadIndex = 0;\n    let minLoadValue = workerProperties.loadCounters[0] || 0;\n    for (let i = 1; i < workerInstances.length; i++) {\n      const currentLoadValue = workerProperties.loadCounters[i] || 0;\n      if (currentLoadValue < minLoadValue) {\n        minLoadIndex = i;\n        minLoadValue = currentLoadValue;\n      }\n    }\n\n    // Check and recreate the worker if it was terminated.\n    if (workerProperties.instances[minLoadIndex] === null) {\n      const worker = workerProperties.workerFn();\n      workerProperties.instances[minLoadIndex] = Comlink.wrap(worker);\n      workerProperties.nativeWorkers[minLoadIndex] = worker;\n    }\n\n    // Update the load counter.\n    workerProperties.loadCounters[minLoadIndex] += 1;\n\n    // return the worker that has the minimum load.\n    return {\n      api: workerProperties.instances[minLoadIndex],\n      index: minLoadIndex,\n    };\n  }\n\n  /**\n   * Executes a task on a worker.\n   *\n   * @param workerName - The name of the worker to execute the task on.\n   * @param methodName - The name of the method to execute on the worker.\n   * @param args - The arguments to pass to the method. Default is an array\n   * You should put your transferable objects in the first argument as object\n   * and from the second argument you can put your non-transferable objects such\n   * as functions, classes, etc.\n   * @param options - An object containing options for the request. Default is an empty object.\n   * @param options.requestType - The type of the request. Default is RequestType.Compute.\n   * @param options.priority - The priority of the request. Default is 0.\n   * @param options.options - Additional options for the request. Default is an empty object.\n   *\n   * @returns A promise that resolves with the result of the task.\n   */\n  executeTask(\n    workerName,\n    methodName,\n    args = {},\n    {\n      requestType = RequestType.Compute,\n      priority = 0,\n      options = {},\n      callbacks = [],\n    } = {}\n  ) {\n    return new Promise((resolve, reject) => {\n      const requestFn = async () => {\n        const { api, index } = this.getNextWorkerAPI(workerName);\n        if (!api) {\n          const error = new Error(\n            `No available worker instance for '${workerName}'`\n          );\n          console.error(error);\n          reject(error);\n          return;\n        }\n\n        try {\n          // fix if any of the args keys are a function then we need to proxy it\n          // for the worker to be able to call it\n          let finalCallbacks = [];\n          if (callbacks.length) {\n            finalCallbacks = callbacks.map((cb) => {\n              return Comlink.proxy(cb);\n            });\n          }\n          const workerProperties = this.workerRegistry[workerName];\n\n          workerProperties.processing = true;\n\n          const results = await api[methodName](args, ...finalCallbacks);\n\n          workerProperties.processing = false;\n          workerProperties.lastActiveTime[index] = Date.now();\n\n          // If auto termination is enabled and the interval is not set, set it.\n          if (\n            workerProperties.autoTerminateOnIdle &&\n            !workerProperties.idleCheckIntervalId &&\n            workerProperties.idleTimeThreshold\n          ) {\n            workerProperties.idleCheckIntervalId = setInterval(() => {\n              this.terminateIdleWorkers(\n                workerName,\n                workerProperties.idleTimeThreshold\n              );\n            }, workerProperties.idleTimeThreshold);\n          }\n\n          resolve(results);\n        } catch (err) {\n          console.error(\n            `Error executing method '${methodName}' on worker '${workerName}':`,\n            err\n          );\n          reject(err);\n        } finally {\n          this.workerRegistry[workerName].loadCounters[index]--;\n        }\n      };\n\n      // I believe there is a bug right now, where if there are two workers\n      // and one wants to run a compute job 6 times and the limit is just 5, then\n      // the other worker will never get a chance to run its compute job.\n      // we should probably have a separate limit for compute jobs per worker\n      // context as there is another layer of parallelism there.\n      this.workerPoolManager.addRequest(\n        requestFn,\n        requestType,\n        options,\n        priority\n      );\n    });\n  }\n\n  terminateIdleWorkers(workerName, idleTimeThreshold) {\n    const workerProperties = this.workerRegistry[workerName];\n\n    if (workerProperties.processing) {\n      return;\n    }\n\n    const now = Date.now();\n\n    workerProperties.instances.forEach((_, index) => {\n      const lastActiveTime = workerProperties.lastActiveTime[index];\n      const isWorkerActive =\n        lastActiveTime !== null && workerProperties.loadCounters[index] > 0;\n      const idleTime = now - lastActiveTime;\n\n      if (!isWorkerActive && idleTime > idleTimeThreshold) {\n        this.terminateWorkerInstance(workerName, index);\n      }\n    });\n  }\n\n  terminate(workerName) {\n    const workerProperties = this.workerRegistry[workerName];\n    if (!workerProperties) {\n      console.error(`Worker type '${workerName}' is not registered.`);\n      return;\n    }\n\n    workerProperties.instances.forEach((_, index) => {\n      this.terminateWorkerInstance(workerName, index);\n    });\n  }\n\n  // New method to handle individual worker termination\n  terminateWorkerInstance(workerName, index) {\n    const workerProperties = this.workerRegistry[workerName];\n    const workerInstance = workerProperties.instances[index];\n\n    if (workerInstance !== null) {\n      workerInstance[Comlink.releaseProxy]();\n      workerProperties.nativeWorkers[index].terminate();\n\n      // Set the worker instance to null after termination\n      workerProperties.instances[index] = null;\n      workerProperties.lastActiveTime[index] = null;\n    }\n  }\n}\n\nexport default CentralizedWorkerManager;\n","import { SVGCursorDescriptor } from '../types';\n\n/*\n * Definitions\n */\n\nconst BASE: SVGCursorDescriptor = {\n  iconContent: '',\n  iconSize: 16,\n  viewBox: {\n    x: 16,\n    y: 16,\n  },\n  mousePoint: {\n    x: 8,\n    y: 8,\n  },\n  mousePointerGroupString: `\n    <path stroke=\"{{color}}\" d=\"M8 16L8 0\"></path>\n    <path stroke=\"{{color}}\" d=\"M16 8L0 8\"></path>\n  `,\n};\n\nconst SEGMENTATION_CURSOR_BOUNDARIES = {\n  x: 127,\n  y: 60,\n};\n\nconst MINUS_RECT = `\n<rect fill=\"{{color}}\" x=\"80.19\" y=\"25.03\" width=\"47.14\" height=\"15.85\"/>\n`;\n\nconst PLUS_RECT = `\n<rect fill=\"{{color}}\" x=\"80.19\" y=\"25.03\" width=\"47.14\" height=\"15.85\"/>\n<rect fill=\"{{color}}\" x=\"95.84\" y=\"9.38\" width=\"15.85\" height=\"47.14\"/>\n`;\n\nconst SCISSOR_ICON = `<path fill=\"{{color}}\" d=\"M82.89,10a12.09,12.09,0,0,0-16.8-2.5l-27.5,20.4-8.5-6.3a2.93,2.93,0,0,1-1.1-3,14.66,14.66,0,0,0,.1-6.6,14.08,14.08,0,1,0-6.5,15.2,2.87,2.87,0,0,1,3.2.2l8.2,6.1-8.2,6.1a2.87,2.87,0,0,1-3.2.2,14.16,14.16,0,1,0,6.7,14.4,14,14,0,0,0-.3-5.8,2.93,2.93,0,0,1,1.1-3l8.5-6.3,27.5,20.4A11.91,11.91,0,0,0,82.89,57l-31.7-23.5ZM15.29,21a5.9,5.9,0,1,1,5.9-5.9A5.91,5.91,0,0,1,15.29,21Zm0,36.8a5.9,5.9,0,1,1,5.9-5.9A5.91,5.91,0,0,1,15.29,57.77Zm28.3-21.5a2.8,2.8,0,1,1,2.8-2.8A2.8,2.8,0,0,1,43.59,36.27Z\" transform=\"translate(-1.17 -0.96)\"/>`;\nconst RECTANGLE_ICON = `<path fill=\"{{color}}\" d=\"M8.86,2.25V66.08H72.69V2.25H8.86ZM65.28,58.67h-49v-49h49v49Z\" transform=\"translate(-8.86 -2.25)\"/>`;\nconst CIRCLE_ICON = `<path fill=\"{{color}}\" d=\"M40.77,2.25A31.92,31.92,0,1,0,72.69,34.16,31.92,31.92,0,0,0,40.77,2.25Zm0,57.63A25.71,25.71,0,1,1,66.48,34.16,25.71,25.71,0,0,1,40.77,59.87Z\" transform=\"translate(-8.86 -2.25)\"/>`;\n\nconst CursorSVG: Record<string, SVGCursorDescriptor> = {\n  Angle: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M1203 544q0 13-10 23l-393 393 393 393q10 10 10 23t-10 23l-50\n    50q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l466-466q10-10 23-10t23\n    10l50 50q10 10 10 23z\" />`,\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }),\n  ArrowAnnotate: extend(BASE, {\n    iconContent: `<g id=\"arrowAnnotate-group\" fill=\"none\" stroke-width=\"1\" stroke=\"{{color}}\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n    <path id=\"arrowAnnotate-arrow\" d=\"M23,7 l-15,15 M7,17 l0,6 6,0\" stroke-width=\"2\" />\n  </g>`,\n    viewBox: {\n      x: 24,\n      y: 24,\n    },\n  }),\n  Bidirectional: extend(BASE, {\n    iconContent: `<g fill=\"{{color}}\" stroke-width=\"3\" stroke=\"{{color}}\">\n    <path d=\"M27.63 3.21L3.12 28.81\"></path>\n    <path d=\"M27.63 15.75L15.27 4.43\"></path>\n    <path d=\"M16.5 4.28C16.5 4.96 15.95 5.51 15.27 5.51C14.59 5.51 14.03 4.96 14.03 4.28C14.03 3.59 14.59 3.04 15.27 3.04C15.95 3.04 16.5 3.59 16.5 4.28Z\" ></path>\n    <path d=\"M28.87 3.19C28.87 3.87 28.31 4.43 27.63 4.43C26.95 4.43 26.4 3.87 26.4 3.19C26.4 2.51 26.95 1.95 27.63 1.95C28.31 1.95 28.87 2.51 28.87 3.19Z\"></path>\n    <path d=\"M28.87 15.75C28.87 16.43 28.31 16.99 27.63 16.99C26.95 16.99 26.4 16.43 26.4 15.75C26.4 15.07 26.95 14.51 27.63 14.51C28.31 14.51 28.87 15.07 28.87 15.75Z\"></path>\n    <path d=\"M4.73 28.44C4.73 29.12 4.17 29.68 3.49 29.68C2.81 29.68 2.25 29.12 2.25 28.44C2.25 27.76 2.81 27.2 3.49 27.2C4.17 27.2 4.73 27.76 4.73 28.44Z\"></path>\n  </g>`,\n    viewBox: {\n      x: 48,\n      y: 48,\n    },\n  }),\n  CobbAngle: extend(BASE, {\n    iconContent: `<g stroke=\"{{color}}\" stroke-width=\"3\">\n    <path d=\"M28.59 2.34L3.82 12.32\"></path>\n    <path d=\"M28.59 29.66L3.82 19.68\"></path>\n    <path stroke-dasharray=\"2\" fill-opacity=\"0\" d=\"M12.37\n      23.06C12.67 22.36 12.85 21.93 12.92 21.76C14.6 17.8 14.68 13.35 13.15\n      9.33C13.11 9.24 13.02 9 12.88 8.63\">\n    </path>\n  </g>`,\n    viewBox: {\n      x: 32,\n      y: 32,\n    },\n  }),\n  CircleROI: extend(BASE, {\n    iconContent: `<circle stroke=\"{{color}}\" fill=\"none\" stroke-width=\"3\" cx=\"16\" cy=\"16\" r=\"14\" />`,\n    viewBox: {\n      x: 32,\n      y: 32,\n    },\n  }),\n  EllipticalROI: extend(BASE, {\n    iconContent: `<path stroke=\"{{color}}\" fill=\"none\" stroke-width=\"3\" d=\"M30.74 15.76C30.74 20.99 24.14 25.23 16\n    25.23C7.86 25.23 1.26 20.99 1.26 15.76C1.26 10.54 7.86 6.3 16 6.3C24.14\n    6.3 30.74 10.54 30.74 15.76Z\" />`,\n    viewBox: {\n      x: 32,\n      y: 32,\n    },\n  }),\n  FreehandROI: extend(BASE, {\n    iconContent: `<g fill=\"{{color}}\" stroke=\"{{color}}\" stroke-width=\"2\">\n    <ellipse ry=\"1\" rx=\"1\" id=\"svg_3\" cy=\"4.240343\" cx=\"14.306499\"/>\n    <line id=\"svg_4\" y2=\"3.58462\" x2=\"12.242186\" y1=\"3.997482\" x1=\"13.432202\"/>\n    <line id=\"svg_5\" y2=\"3.268901\" x2=\"10.857882\" y1=\"3.608906\" x1=\"12.387902\"/>\n    <line id=\"svg_6\" y2=\"3.147471\" x2=\"9.740724\" y1=\"3.293187\" x1=\"10.955026\"/>\n    <line id=\"svg_7\" y2=\"3.147471\" x2=\"8.089274\" y1=\"3.196043\" x1=\"9.983585\"/>\n    <line id=\"svg_8\" y2=\"3.268901\" x2=\"6.874972\" y1=\"3.123185\" x1=\"8.307848\"/>\n    <line id=\"svg_9\" y2=\"3.657478\" x2=\"5.587812\" y1=\"3.220329\" x1=\"7.020688\"/>\n    <line id=\"svg_10\" y2=\"4.046054\" x2=\"4.737801\" y1=\"3.560334\" x1=\"5.854959\"/>\n    <line id=\"svg_11\" y2=\"4.337487\" x2=\"4.300652\" y1=\"3.997482\" x1=\"4.834945\"/>\n    <line id=\"svg_12\" y2=\"4.726063\" x2=\"3.88779\" y1=\"4.191771\" x1=\"4.470655\"/>\n    <line id=\"svg_15\" y2=\"5.3575\" x2=\"3.377783\" y1=\"4.604633\" x1=\"3.960648\"/>\n    <line id=\"svg_16\" y2=\"6.183226\" x2=\"2.916348\" y1=\"5.138926\" x1=\"3.547785\"/>\n    <line id=\"svg_17\" y2=\"6.960379\" x2=\"2.770632\" y1=\"5.867507\" x1=\"3.037779\"/>\n    <line id=\"svg_18\" y2=\"7.713246\" x2=\"2.673488\" y1=\"6.741804\" x1=\"2.819204\"/>\n    <line id=\"svg_19\" y2=\"8.684687\" x2=\"2.697774\" y1=\"7.616102\" x1=\"2.673488\"/>\n    <line id=\"svg_20\" y2=\"9.753273\" x2=\"2.892062\" y1=\"8.611829\" x1=\"2.697774\"/>\n    <line id=\"svg_21\" y2=\"10.724714\" x2=\"3.134923\" y1=\"9.534698\" x1=\"2.84349\"/>\n    <line id=\"svg_23\" y2=\"11.647583\" x2=\"3.596357\" y1=\"10.578998\" x1=\"3.086351\"/>\n    <line id=\"svg_25\" y2=\"12.521881\" x2=\"4.276366\" y1=\"11.501867\" x1=\"3.499213\"/>\n    <line id=\"svg_26\" y2=\"13.930471\" x2=\"5.830673\" y1=\"12.376165\" x1=\"4.13065\"/>\n    <line id=\"svg_28\" y2=\"14.707624\" x2=\"7.263549\" y1=\"13.881899\" x1=\"5.733528\"/>\n    <line id=\"svg_29\" y2=\"15.339061\" x2=\"8.963571\" y1=\"14.61048\" x1=\"7.06926\"/>\n    <line id=\"svg_30\" y2=\"15.581921\" x2=\"10.882168\" y1=\"15.314775\" x1=\"8.817855\"/>\n    <line id=\"svg_31\" y2=\"15.460491\" x2=\"12.023612\" y1=\"15.581921\" x1=\"10.785024\"/>\n    <line id=\"svg_33\" y2=\"15.120487\" x2=\"13.092197\" y1=\"15.484777\" x1=\"11.877895\"/>\n    <line id=\"svg_34\" y2=\"14.586194\" x2=\"13.86935\" y1=\"15.217631\" x1=\"12.897909\"/>\n    <line id=\"svg_35\" y2=\"13.833327\" x2=\"14.597931\" y1=\"14.756196\" x1=\"13.699348\"/>\n    <line id=\"svg_37\" y2=\"12.716169\" x2=\"15.180796\" y1=\"13.881899\" x1=\"14.549359\"/>\n    <line id=\"svg_39\" y2=\"11.429009\" x2=\"15.520801\" y1=\"12.813313\" x1=\"15.15651\"/>\n    <ellipse ry=\"1\" rx=\"1\" id=\"svg_40\" cy=\"10.967574\" cx=\"15.520801\"/>\n  </g>`,\n    viewBox: {\n      x: 18,\n      y: 18,\n    },\n  }),\n  FreehandROISculptor: extend(BASE, {\n    iconContent: `<g id=\"icon-freehand-sculpt\" fill=\"none\" stroke-width=\"1.5\" stroke=\"{{color}}\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n    <line id=\"svg_1\" y2=\"2.559367\" x2=\"10.184807\" y1=\"4.467781\" x1=\"8.81711\"/>\n    <line id=\"svg_4\" y2=\"1.493836\" x2=\"11.727442\" y1=\"2.766112\" x1=\"10.089386\"/>\n    <line id=\"svg_7\" y2=\"1.080346\" x2=\"13.047428\" y1=\"1.748291\" x1=\"11.345759\"/>\n    <line id=\"svg_8\" y2=\"1.000829\" x2=\"14.351511\" y1=\"1.112153\" x1=\"12.77707\"/>\n    <line id=\"svg_9\" y2=\"1.350705\" x2=\"15.242104\" y1=\"0.905408\" x1=\"13.969828\"/>\n    <line id=\"svg_10\" y2=\"2.098167\" x2=\"15.862339\" y1=\"1.14396\" x1=\"14.955842\"/>\n    <line id=\"svg_11\" y2=\"3.195505\" x2=\"16.41896\" y1=\"1.939133\" x1=\"15.766918\"/>\n    <line id=\"svg_12\" y2=\"4.292843\" x2=\"16.530284\" y1=\"2.925147\" x1=\"16.387153\"/>\n    <line id=\"svg_16\" y2=\"5.644637\" x2=\"16.196311\" y1=\"3.831643\" x1=\"16.593898\"/>\n    <line id=\"svg_18\" y2=\"7.266789\" x2=\"15.623787\" y1=\"5.19934\" x1=\"16.275829\"/>\n    <line id=\"svg_19\" y2=\"10.813258\" x2=\"14.526449\" y1=\"6.726071\" x1=\"15.766918\"/>\n    <line id=\"svg_20\" y2=\"5.056209\" x2=\"8.085552\" y1=\"4.181519\" x1=\"8.976145\"/>\n    <line id=\"svg_23\" y2=\"5.326568\" x2=\"7.481221\" y1=\"4.78585\" x1=\"8.403621\"/>\n    <line id=\"svg_24\" y2=\"5.565119\" x2=\"6.749662\" y1=\"5.294761\" x1=\"7.624352\"/>\n    <line id=\"svg_25\" y2=\"5.994512\" x2=\"5.429675\" y1=\"5.533312\" x1=\"6.956407\"/>\n    <line id=\"svg_27\" y2=\"6.551133\" x2=\"4.284627\" y1=\"5.962706\" x1=\"5.572807\"/>\n    <line id=\"svg_28\" y2=\"7.584858\" x2=\"3.044158\" y1=\"6.392099\" x1=\"4.427758\"/>\n    <line id=\"svg_29\" y2=\"8.84123\" x2=\"2.185372\" y1=\"7.489437\" x1=\"3.219096\"/>\n    <line id=\"svg_31\" y2=\"10.606513\" x2=\"1.644654\" y1=\"8.602678\" x1=\"2.280792\"/>\n    <line id=\"svg_32\" y2=\"13.214679\" x2=\"1.48562\" y1=\"10.352058\" x1=\"1.724171\"/>\n    <line id=\"svg_33\" y2=\"14.375631\" x2=\"1.676461\" y1=\"12.992031\" x1=\"1.453813\"/>\n    <line id=\"svg_34\" y2=\"15.298031\" x2=\"2.264889\" y1=\"14.152983\" x1=\"1.517427\"/>\n    <line id=\"svg_35\" y2=\"16.172721\" x2=\"3.521261\" y1=\"14.948155\" x1=\"1.915013\"/>\n    <line id=\"svg_36\" y2=\"16.824762\" x2=\"5.207027\" y1=\"15.997783\" x1=\"3.28271\"/>\n    <line id=\"svg_38\" y2=\"17.063314\" x2=\"7.035924\" y1=\"16.745245\" x1=\"4.968475\"/>\n    <line id=\"svg_39\" y2=\"16.888376\" x2=\"9.278311\" y1=\"17.047411\" x1=\"6.733758\"/>\n    <line id=\"svg_40\" y2=\"16.284045\" x2=\"10.661911\" y1=\"16.983797\" x1=\"8.992048\"/>\n    <line id=\"svg_41\" y2=\"15.313934\" x2=\"11.647925\" y1=\"16.395369\" x1=\"10.455166\"/>\n    <line id=\"svg_44\" y2=\"13.898527\" x2=\"12.82478\" y1=\"15.425259\" x1=\"11.504794\"/>\n    <line id=\"svg_45\" y2=\"12.037824\" x2=\"14.144766\" y1=\"14.312017\" x1=\"12.522614\"/>\n    <line id=\"svg_47\" y2=\"10.59061\" x2=\"14.605966\" y1=\"12.228665\" x1=\"13.953925\"/>\n    <ellipse ry=\"1\" rx=\"1\" id=\"svg_48\" cy=\"3.982726\" cx=\"13.460918\"/>\n  </g>`,\n    viewBox: {\n      x: 18,\n      y: 18,\n    },\n  }),\n  Length: extend(BASE, {\n    iconContent: `<g id=\"length-group\" fill=\"none\" stroke-width=\"1\" stroke=\"{{color}}\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n    <path id=\"length-dashes\" d=\"m22.5,6 -16.5,16.5\" stroke-width=\"3\" stroke-dasharray=\"0.6666,5\" />\n  </g>`,\n    viewBox: {\n      x: 24,\n      y: 24,\n    },\n  }),\n  Probe: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M1152 896q0 106-75 181t-181 75-181-75-75-181 75-181 181-75 181 75\n    75 181zm-256-544q-148 0-273 73t-198 198-73 273 73 273 198 198 273 73 273-73\n    198-198 73-273-73-273-198-198-273-73zm768 544q0 209-103 385.5t-279.5\n    279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5\n    385.5-103 385.5 103 279.5 279.5 103 385.5z\" />`,\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }),\n  RectangleROI: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M1312 256h-832q-66 0-113 47t-47 113v832q0 66 47\n    113t113 47h832q66 0 113-47t47-113v-832q0-66-47-113t-113-47zm288 160v832q0\n    119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119\n    84.5-203.5t203.5-84.5h832q119 0 203.5 84.5t84.5 203.5z\" />`,\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }),\n  TextMarker: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M789 559l-170 450q33 0 136.5 2t160.5 2q19 0\n    57-2-87-253-184-452zm-725 1105l2-79q23-7 56-12.5t57-10.5 49.5-14.5 44.5-29\n    31-50.5l237-616 280-724h128q8 14 11 21l205 480q33 78 106 257.5t114 274.5q15\n    34 58 144.5t72 168.5q20 45 35 57 19 15 88 29.5t84 20.5q6 38 6 57 0 5-.5\n    13.5t-.5 12.5q-63 0-190-8t-191-8q-76 0-215 7t-178 8q0-43 4-78l131-28q1 0\n    12.5-2.5t15.5-3.5 14.5-4.5 15-6.5 11-8 9-11\n    2.5-14q0-16-31-96.5t-72-177.5-42-100l-450-2q-26 58-76.5 195.5t-50.5 162.5q0\n    22 14 37.5t43.5 24.5 48.5 13.5 57 8.5 41 4q1 19 1 58 0 9-2 27-58\n    0-174.5-10t-174.5-10q-8 0-26.5 4t-21.5 4q-80 14-188 14z\" />`,\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }),\n  Crosshairs: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M1325 1024h-109q-26 0-45-19t-19-45v-128q0-26\n    19-45t45-19h109q-32-108-112.5-188.5t-188.5-112.5v109q0 26-19 45t-45\n    19h-128q-26 0-45-19t-19-45v-109q-108 32-188.5 112.5t-112.5 188.5h109q26\n    0 45 19t19 45v128q0 26-19 45t-45 19h-109q32 108 112.5 188.5t188.5\n    112.5v-109q0-26 19-45t45-19h128q26 0 45 19t19 45v109q108-32\n    188.5-112.5t112.5-188.5zm339-192v128q0 26-19 45t-45 19h-143q-37 161-154.5\n    278.5t-278.5 154.5v143q0 26-19 45t-45 19h-128q-26\n    0-45-19t-19-45v-143q-161-37-278.5-154.5t-154.5-278.5h-143q-26\n    0-45-19t-19-45v-128q0-26 19-45t45-19h143q37-161\n    154.5-278.5t278.5-154.5v-143q0-26 19-45t45-19h128q26 0 45 19t19 45v143q161\n    37 278.5 154.5t154.5 278.5h143q26 0 45 19t19 45z\" />`,\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }),\n  Eraser: extend(BASE, {\n    iconContent: `<path transform=\"translate(0,1792) scale(1,-1)\" fill=\"{{color}}\" d=\"M960 1408l336-384h-768l-336 384h768zm1013-1077q15\n    34 9.5 71.5t-30.5 65.5l-896 1024q-38 44-96 44h-768q-38\n    0-69.5-20.5t-47.5-54.5q-15-34-9.5-71.5t30.5-65.5l896-1024q38-44 96-44h768q38\n    0 69.5 20.5t47.5 54.5z\" />`,\n    viewBox: {\n      x: 2048,\n      y: 1792,\n    },\n  }),\n  Magnify: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M508.5 481.6l-129-129c-2.3-2.3-5.3-3.5-8.5-3.5h-10.3C395\n    312 416 262.5 416 208 416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c54.5\n    0 104-21 141.1-55.2V371c0 3.2 1.3 6.2 3.5 8.5l129 129c4.7 4.7 12.3 4.7 17\n    0l9.9-9.9c4.7-4.7 4.7-12.3 0-17zM208 384c-97.3 0-176-78.7-176-176S110.7 32 208\n    32s176 78.7 176 176-78.7 176-176 176z\" />`,\n    viewBox: {\n      x: 512,\n      y: 512,\n    },\n  }),\n  Pan: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M1411 541l-355 355 355 355 144-144q29-31 70-14 39 17\n    39 59v448q0 26-19 45t-45 19h-448q-42 0-59-40-17-39 14-69l144-144-355-355-355\n    355 144 144q31 30 14 69-17 40-59 40h-448q-26 0-45-19t-19-45v-448q0-42 40-59\n    39-17 69 14l144 144 355-355-355-355-144 144q-19 19-45 19-12\n    0-24-5-40-17-40-59v-448q0-26 19-45t45-19h448q42 0 59 40 17 39-14 69l-144\n    144 355 355 355-355-144-144q-31-30-14-69 17-40 59-40h448q26 0 45 19t19\n    45v448q0 42-39 59-13 5-25 5-26 0-45-19z\" />`,\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }),\n  Rotate: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M1664 256v448q0 26-19 45t-45 19h-448q-42 0-59-40-17-39\n    14-69l138-138q-148-137-349-137-104 0-198.5 40.5t-163.5 109.5-109.5\n    163.5-40.5 198.5 40.5 198.5 109.5 163.5 163.5 109.5 198.5 40.5q119 0\n    225-52t179-147q7-10 23-12 15 0 25 9l137 138q9 8 9.5 20.5t-7.5 22.5q-109\n    132-264 204.5t-327 72.5q-156 0-298-61t-245-164-164-245-61-298 61-298\n    164-245 245-164 298-61q147 0 284.5 55.5t244.5 156.5l130-129q29-31 70-14\n    39 17 39 59z\" />`,\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }),\n  StackScroll: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M24 21v2c0 0.547-0.453 1-1 1h-22c-0.547\n    0-1-0.453-1-1v-2c0-0.547 0.453-1 1-1h22c0.547 0 1 0.453 1 1zM24 13v2c0\n    0.547-0.453 1-1 1h-22c-0.547 0-1-0.453-1-1v-2c0-0.547 0.453-1 1-1h22c0.547\n    0 1 0.453 1 1zM24 5v2c0 0.547-0.453 1-1 1h-22c-0.547\n    0-1-0.453-1-1v-2c0-0.547 0.453-1 1-1h22c0.547 0 1 0.453 1 1z\" />`,\n    viewBox: {\n      x: 24,\n      y: 28,\n    },\n  }),\n  WindowLevelRegion: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M1664 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119\n    0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5\n    84.5t84.5 203.5z\" />`,\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }),\n  WindowLevel: extend(BASE, {\n    iconContent: `\n    <path fill=\"{{color}}\" d=\"M14.5,3.5 a1 1 0 0 1 -11,11 Z\" stroke=\"none\" opacity=\"0.8\" />\n    <circle cx=\"9\" cy=\"9\" r=\"8\" fill=\"none\" stroke-width=\"2\" stroke=\"{{color}}\" />`,\n    viewBox: {\n      x: 18,\n      y: 18,\n    },\n  }),\n  Zoom: extend(BASE, {\n    iconContent: `\n  <path fill=\"{{color}}\" d=\"M508.5 481.6l-129-129c-2.3-2.3-5.3-3.5-8.5-3.5h-10.3C395\n    312 416 262.5 416 208 416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c54.5\n    0 104-21 141.1-55.2V371c0 3.2 1.3 6.2 3.5 8.5l129 129c4.7 4.7 12.3 4.7 17\n    0l9.9-9.9c4.7-4.7 4.7-12.3 0-17zM208 384c-97.3 0-176-78.7-176-176S110.7 32 208\n    32s176 78.7 176 176-78.7 176-176 176z\" />\n  <path fill=\"{{color}}\" transform=\"scale(0.22,0.22) translate(1400,0)\" d=\"M1216\n    320q0 26-19 45t-45 19h-128v1024h128q26 0 45 19t19 45-19 45l-256 256q-19\n    19-45 19t-45-19l-256-256q-19-19-19-45t19-45 45-19h128v-1024h-128q-26\n    0-45-19t-19-45 19-45l256-256q19-19 45-19t45 19l256 256q19 19 19 45z\" />`,\n    viewBox: {\n      x: 640,\n      y: 512,\n    },\n  }),\n\n  /*\n   * Segmentation Cursors\n   */\n\n  SegmentationFreeHandEraseInside: extend(BASE, {\n    iconContent: `${SCISSOR_ICON} ${MINUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  SegmentationFreeHandFillInside: extend(BASE, {\n    iconContent: `${SCISSOR_ICON} ${PLUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  SegmentationFreeHandEraseOutside: extend(BASE, {\n    iconContent: `${SCISSOR_ICON} ${MINUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  SegmentationFreeHandFillOutside: extend(BASE, {\n    iconContent: `${SCISSOR_ICON} ${PLUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  SegmentationRectangleEraseInside: extend(BASE, {\n    iconContent: `${RECTANGLE_ICON} ${MINUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  // Default Rectangle Scissors\n  RectangleScissor: extend(BASE, {\n    iconContent: `${RECTANGLE_ICON} ${PLUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  'RectangleScissor.FILL_INSIDE': extend(BASE, {\n    iconContent: `${RECTANGLE_ICON} ${PLUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  'RectangleScissor.FILL_OUTSIDE': extend(BASE, {\n    iconContent: `${RECTANGLE_ICON} ${PLUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  'RectangleScissor.ERASE_OUTSIDE': extend(BASE, {\n    iconContent: `${RECTANGLE_ICON} ${MINUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  'RectangleScissor.ERASE_INSIDE': extend(BASE, {\n    iconContent: `${RECTANGLE_ICON} ${MINUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  CircleScissor: extend(BASE, {\n    iconContent: `${CIRCLE_ICON} ${PLUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  'CircleScissor.FILL_INSIDE': extend(BASE, {\n    iconContent: `${CIRCLE_ICON} ${PLUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  'CircleScissor.ERASE_OUTSIDE': extend(BASE, {\n    iconContent: `${CIRCLE_ICON} ${MINUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  'CircleScissor.FILL_OUTSIDE': extend(BASE, {\n    iconContent: `${CIRCLE_ICON} ${PLUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n};\n\n/*\n * Utils\n */\n\nfunction extend(\n  base: SVGCursorDescriptor,\n  values: Record<string, unknown>\n): SVGCursorDescriptor {\n  return Object.assign(Object.create(base), values);\n}\n\n/**\n * Registers a cursor to the list, so that it will be used for the given `toolName`.\n * Overwrites the given cursor if it is already set.\n *\n * @param toolName - The name of the tool to assign a cursor to.\n * @param iconContent - The SVG icon content of the cursor.\n * @param viewBox - The viewBox of the cursor object.\n */\nfunction registerCursor(\n  toolName: string,\n  iconContent: string,\n  viewBox: { x: number; y: number }\n) {\n  CursorSVG[toolName] = extend(BASE, {\n    iconContent,\n    viewBox,\n  });\n}\n\nfunction getDefinedSVGCursorDescriptor(\n  name: string\n): SVGCursorDescriptor | undefined {\n  return CursorSVG[name];\n}\n\n/*\n * Exports\n */\nconst svgCursorNames = Object.keys(CursorSVG);\n\nexport {\n  getDefinedSVGCursorDescriptor,\n  registerCursor,\n  svgCursorNames,\n  CursorSVG,\n};\n","import { state } from '../store';\nimport { getEnabledElement } from '@cornerstonejs/core';\nimport { SVGDrawingHelper } from '../types';\n\nconst VIEWPORT_ELEMENT = 'viewport-element';\n\n/**\n * Returns the SVG drawing helper for the given HTML element.\n * @param element - The HTML element to get the SVG drawing helper for.\n * @private\n */\nfunction getSvgDrawingHelper(element: HTMLDivElement): SVGDrawingHelper {\n  const enabledElement = getEnabledElement(element);\n  const { viewportId, renderingEngineId } = enabledElement;\n  const canvasHash = `${viewportId}:${renderingEngineId}`;\n  const svgLayerElement = _getSvgLayer(element);\n\n  // Reset touched\n  Object.keys(state.svgNodeCache[canvasHash]).forEach((cacheKey) => {\n    state.svgNodeCache[canvasHash][cacheKey].touched = false;\n  });\n\n  return {\n    svgLayerElement: svgLayerElement,\n    svgNodeCacheForCanvas: state.svgNodeCache,\n    getSvgNode: getSvgNode.bind(this, canvasHash),\n    appendNode: appendNode.bind(this, svgLayerElement, canvasHash),\n    setNodeTouched: setNodeTouched.bind(this, canvasHash),\n    clearUntouched: clearUntouched.bind(this, svgLayerElement, canvasHash),\n  };\n}\n\n/**\n *\n * @param element\n * @private\n */\nfunction _getSvgLayer(element) {\n  const viewportElement = `.${VIEWPORT_ELEMENT}`;\n  const internalDivElement = element.querySelector(viewportElement);\n\n  // Using :scope to make sure the right svg layer is selected otherwise it\n  // may select one from a nested viewport (eg: AdvancedMagnifyTool).\n  const svgLayer = internalDivElement.querySelector(':scope > .svg-layer');\n\n  return svgLayer;\n}\n\nfunction getSvgNode(canvasHash, cacheKey) {\n  // If state has been reset\n  if (!state.svgNodeCache[canvasHash]) {\n    return;\n  }\n\n  if (state.svgNodeCache[canvasHash][cacheKey]) {\n    return state.svgNodeCache[canvasHash][cacheKey].domRef;\n  }\n}\n\nfunction appendNode(svgLayerElement, canvasHash, svgNode, cacheKey) {\n  // If state has been reset\n  if (!state.svgNodeCache[canvasHash]) {\n    return null;\n  }\n\n  state.svgNodeCache[canvasHash][cacheKey] = {\n    touched: true,\n    domRef: svgNode,\n  };\n\n  svgLayerElement.appendChild(svgNode);\n}\n\nfunction setNodeTouched(canvasHash, cacheKey) {\n  // If state has been reset\n  if (!state.svgNodeCache[canvasHash]) {\n    return;\n  }\n\n  if (state.svgNodeCache[canvasHash][cacheKey]) {\n    state.svgNodeCache[canvasHash][cacheKey].touched = true;\n  }\n}\n\nfunction clearUntouched(svgLayerElement, canvasHash) {\n  // If state has been reset\n  if (!state.svgNodeCache[canvasHash]) {\n    return;\n  }\n\n  Object.keys(state.svgNodeCache[canvasHash]).forEach((cacheKey) => {\n    const cacheEntry = state.svgNodeCache[canvasHash][cacheKey];\n\n    if (!cacheEntry.touched && cacheEntry.domRef) {\n      svgLayerElement.removeChild(cacheEntry.domRef);\n      delete state.svgNodeCache[canvasHash][cacheKey];\n    }\n  });\n}\n\nexport default getSvgDrawingHelper;\n","import getSvgDrawingHelper from './getSvgDrawingHelper';\n\nfunction draw(\n  element: HTMLDivElement,\n  fn: (svgDrawingElement: any) => any\n): void {\n  const svgDrawingHelper = getSvgDrawingHelper(element);\n\n  // Save...\n  fn(svgDrawingHelper);\n  // Restore...\n\n  svgDrawingHelper.clearUntouched();\n}\n\nexport default draw;\n","/**\n * ToolModes - This enum defines the 4 tool states which are available.\n */\nenum ToolModes {\n  /**\n   * Active:\n   * - Can be actively used by mouse/touch events mapped to its `ToolBinding`s.\n   * - Can add data if an annotation tool.\n   * - Can be passively interacted by grabbing a tool or its handles.\n   * - Renders data if the tool has a `renderAnnotation` method.\n   */\n  Active = 'Active',\n  /**\n   * Passive:\n   * - Can be passively interacted by grabbing a tool or its handles.\n   * - Renders data if the tool has a `renderAnnotation` method.\n   */\n  Passive = 'Passive',\n  /**\n   * Enabled:\n   * - Renders data if the tool has a `renderAnnotation` method.\n   */\n  Enabled = 'Enabled',\n  /**\n   * Disabled:\n   * - Annotation does not render.\n   */\n  Disabled = 'Disabled',\n}\n\nexport default ToolModes;\n","import { MouseBindings, ToolModes } from '../../enums';\nimport get from 'lodash.get';\nimport cloneDeep from 'lodash.clonedeep';\nimport {\n  triggerEvent,\n  eventTarget,\n  getRenderingEngine,\n  getRenderingEngines,\n  getEnabledElementByIds,\n  Settings,\n} from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\nimport { Events } from '../../enums';\nimport {\n  ToolActivatedEventDetail,\n  ToolModeChangedEventDetail,\n} from '../../types/EventTypes';\nimport { ToolGroupManager, state } from '../index';\nimport {\n  IToolBinding,\n  IToolClassReference,\n  IToolGroup,\n  SetToolBindingsType,\n  ToolOptionsType,\n  ToolConfiguration,\n} from '../../types';\n\nimport { MouseCursor, SVGMouseCursor } from '../../cursors';\nimport { initElementCursor } from '../../cursors/elementCursor';\n\nconst { Active, Passive, Enabled, Disabled } = ToolModes;\n\nconst PRIMARY_BINDINGS = [{ mouseButton: MouseBindings.Primary }];\n\n/**\n * ToolGroup class which is a container for tools and their modes and states.\n * In Cornerstone3DTools, you need to create a tool group in order to use the\n * tools. ToolGroup is a way to share tool configuration, state (enabled, disabled, etc.)\n * across a set of viewports. Tools can set to be activated, enabled or disabled\n * in a toolGroup. You should not directly instantiate a ToolGroup. You need to use\n * ToolGroupManager helpers to create a new toolGroup or get a reference to an existing toolGroup.\n *\n * ```js\n * const toolGroup = csTools.ToolGroupManager.createToolGroup('toolGroupId')\n * ```\n */\nexport default class ToolGroup implements IToolGroup {\n  id: string;\n  viewportsInfo = [];\n  toolOptions = {};\n  currentActivePrimaryToolName: string | null = null;\n  prevActivePrimaryToolName: string | null = null;\n  /**\n   * Options used for restoring a tool\n   */\n  restoreToolOptions = {};\n  _toolInstances = {};\n\n  constructor(id: string) {\n    this.id = id;\n  }\n\n  /**\n   * Get the viewport IDs of all the viewports in the current viewport\n   * @returns An array of viewport IDs.\n   */\n  getViewportIds(): string[] {\n    return this.viewportsInfo.map(({ viewportId }) => viewportId);\n  }\n\n  /**\n   * Returns the toolGroup viewports info which is an array of {viewportId, renderingEngineId}\n   */\n  getViewportsInfo(): Array<Types.IViewportId> {\n    return this.viewportsInfo.slice();\n  }\n\n  /**\n   * Get the tool instance for a given tool name in the toolGroup\n   * @param toolName - The name of the tool.\n   * @returns A tool instance.\n   */\n  public getToolInstance(toolInstanceName: string) {\n    const toolInstance = this._toolInstances[toolInstanceName];\n    if (!toolInstance) {\n      console.warn(\n        `'${toolInstanceName}' is not registered with this toolGroup (${this.id}).`\n      );\n      return;\n    }\n\n    return toolInstance;\n  }\n\n  /**\n   * Retrieves the tool instances associated with this tool group.\n   *\n   * @returns A record containing the tool instances, where the keys are the tool names and the values are the tool instances.\n   */\n  public getToolInstances(): Record<string, any> {\n    return this._toolInstances;\n  }\n\n  /**\n   * Check if a tool is already added to the tool group\n   * @param toolName - Tool name\n   * @returns True if the tool is already added or false otherwise\n   */\n  hasTool(toolName: string): boolean {\n    return !!this._toolInstances[toolName];\n  }\n\n  /**\n   * Add a tool to the tool group with the given tool name and tool configuration.\n   * Note that adding a tool to a tool group will not automatically set the tool\n   * to be active. You must call setToolActive or setToolPassive and other methods\n   * to set the tool to be active or passive or in other states.\n   *\n   * @param toolName - string\n   * @param configuration - Tool configuration objects and a custom statistics calculator if needed\n   */\n  addTool(toolName: string, configuration: ToolConfiguration = {}): void {\n    const toolDefinition = state.tools[toolName];\n    const hasToolName = typeof toolName !== 'undefined' && toolName !== '';\n    const localToolInstance = this.toolOptions[toolName];\n\n    if (!hasToolName) {\n      console.warn(\n        'Tool with configuration did not produce a toolName: ',\n        configuration\n      );\n      return;\n    }\n\n    if (!toolDefinition) {\n      console.warn(\n        `'${toolName}' is not registered with the library. You need to use cornerstoneTools.addTool to register it.`\n      );\n      return;\n    }\n\n    if (localToolInstance) {\n      console.warn(\n        `'${toolName}' is already registered for ToolGroup ${this.id}.`\n      );\n      return;\n    }\n\n    // Should these be renamed higher up, so we don't have to alias?\n    // Wrap in try-catch so 3rd party tools don't explode?\n    const { toolClass: ToolClass } = toolDefinition;\n\n    const toolProps = {\n      name: toolName,\n      toolGroupId: this.id,\n      configuration,\n    };\n\n    const instantiatedTool = new ToolClass(toolProps);\n\n    // API instead of directly exposing schema?\n    // Maybe not here, but feels like a \"must\" for any method outside of the ToolGroup itself\n    this._toolInstances[toolName] = instantiatedTool;\n  }\n\n  public addToolInstance(\n    toolName: string,\n    parentClassName: string,\n    configuration = {}\n  ): void {\n    let ToolClassToUse = state.tools[toolName]\n      ?.toolClass as IToolClassReference;\n\n    if (!ToolClassToUse) {\n      // get parent class constructor\n      const ParentClass = state.tools[parentClassName]\n        .toolClass as IToolClassReference;\n\n      // Todo: could not find a way to make this work with typescript\n      // @ts-ignore\n      class ToolInstance extends ParentClass {}\n      // @ts-ignore\n      ToolInstance.toolName = toolName;\n      // @ts-ignore\n      ToolClassToUse = ToolInstance;\n\n      state.tools[toolName] = {\n        toolClass: ToolInstance as IToolClassReference,\n      };\n    }\n\n    // add the tool to the toolGroup\n    // @ts-ignore\n    this.addTool(ToolClassToUse.toolName, configuration);\n  }\n\n  //   class InstanceTool extends parentClass;\n  // InstanceTool.constructor.toolName = name;\n  // addTool(InstanceTool,configuration)\n  /**\n   * Add a viewport to the ToolGroup. It accepts viewportId and optional\n   * renderingEngineId parameter. If renderingEngineId is not provided,\n   * it checks if cornerstone-core has more than one renderingEngine; If so,\n   * it will throw an error. If cornerstone-core has only one renderingEngine,\n   * it will use that renderingEngine.\n   *\n   * @param viewportId - The unique identifier for the viewport.\n   * @param renderingEngineId - The rendering engine to use.\n   */\n  public addViewport(viewportId: string, renderingEngineId?: string): void {\n    if (typeof viewportId !== 'string') {\n      throw new Error('viewportId must be defined and be a string');\n    }\n\n    const renderingEngines = getRenderingEngines();\n\n    if (!renderingEngineId && renderingEngines.length > 1) {\n      throw new Error(\n        'You must specify a renderingEngineId when there are multiple rendering engines.'\n      );\n    }\n\n    const renderingEngineUIDToUse = renderingEngineId || renderingEngines[0].id;\n\n    // Don't overwrite if it already exists\n    if (\n      !this.viewportsInfo.some(({ viewportId: vpId }) => vpId === viewportId)\n    ) {\n      this.viewportsInfo.push({\n        viewportId,\n        renderingEngineId: renderingEngineUIDToUse,\n      });\n    }\n\n    // Handle the newly added viewport's mouse cursor\n    const toolName = this.getActivePrimaryMouseButtonTool();\n\n    const runtimeSettings = Settings.getRuntimeSettings();\n    if (runtimeSettings.get('useCursors')) {\n      this.setViewportsCursorByToolName(toolName);\n    }\n\n    const eventDetail = {\n      toolGroupId: this.id,\n      viewportId,\n      renderingEngineId: renderingEngineUIDToUse,\n    };\n\n    triggerEvent(eventTarget, Events.TOOLGROUP_VIEWPORT_ADDED, eventDetail);\n  }\n\n  /**\n   * Removes viewport from the toolGroup. If only renderingEngineId is defined\n   * it removes all the viewports with the same renderingEngineId, if viewportId\n   * is also provided, it will remove that specific viewport from the ToolGroup.\n   *\n   * @param renderingEngineId - renderingEngine id\n   * @param viewportId - viewport id\n   */\n  public removeViewports(renderingEngineId: string, viewportId?: string): void {\n    const indices = [];\n\n    this.viewportsInfo.forEach((vpInfo, index) => {\n      let match = false;\n      if (vpInfo.renderingEngineId === renderingEngineId) {\n        match = true;\n\n        if (viewportId && vpInfo.viewportId !== viewportId) {\n          match = false;\n        }\n      }\n      if (match) {\n        indices.push(index);\n      }\n    });\n\n    if (indices.length) {\n      // Note: Traverse the array backwards, such that when we remove items we\n      // do not immediately mess up our loop indicies.\n      for (let i = indices.length - 1; i >= 0; i--) {\n        this.viewportsInfo.splice(indices[i], 1);\n      }\n    }\n\n    const eventDetail = {\n      toolGroupId: this.id,\n      viewportId,\n      renderingEngineId,\n    };\n\n    triggerEvent(eventTarget, Events.TOOLGROUP_VIEWPORT_REMOVED, eventDetail);\n  }\n\n  public setActiveStrategy(toolName: string, strategyName: string) {\n    const toolInstance = this._toolInstances[toolName];\n\n    if (toolInstance === undefined) {\n      console.warn(\n        `Tool ${toolName} not added to toolGroup, can't set tool configuration.`\n      );\n\n      return;\n    }\n\n    toolInstance.setActiveStrategy(strategyName);\n  }\n\n  setToolMode(\n    toolName: string,\n    mode: ToolModes,\n    options = {} as SetToolBindingsType\n  ): void {\n    if (!toolName) {\n      console.warn('setToolMode: toolName must be defined');\n      return;\n    }\n\n    if (mode === ToolModes.Active) {\n      this.setToolActive(\n        toolName,\n        options || this.restoreToolOptions[toolName]\n      );\n      return;\n    }\n\n    if (mode === ToolModes.Passive) {\n      this.setToolPassive(toolName);\n      return;\n    }\n\n    if (mode === ToolModes.Enabled) {\n      this.setToolEnabled(toolName);\n      return;\n    }\n\n    if (mode === ToolModes.Disabled) {\n      this.setToolDisabled(toolName);\n      return;\n    }\n\n    console.warn('setToolMode: mode must be defined');\n  }\n\n  /**\n   * Set the tool mode on the toolGroup to be Active. This means the tool\n   * can be actively used by the defined bindings (e.g., Mouse primary click)\n   *\n   * - Can be actively used by mouse/touch events mapped to its `ToolBinding`s.\n   * - Can add data if an annotation tool.\n   * - Can be passively interacted by grabbing a tool or its handles.\n   * - Renders data if the tool has a `renderAnnotation` method.\n   *\n   * @param toolName - tool name\n   * @param toolBindingsOptions - tool bindings\n   */\n  public setToolActive(\n    toolName: string,\n    toolBindingsOptions = {} as SetToolBindingsType\n  ): void {\n    const toolInstance = this._toolInstances[toolName];\n\n    if (toolInstance === undefined) {\n      console.warn(\n        `Tool ${toolName} not added to toolGroup, can't set tool mode.`\n      );\n\n      return;\n    }\n\n    if (!toolInstance) {\n      console.warn(\n        `'${toolName}' instance ${toolInstance} is not registered with this toolGroup, can't set tool mode.`\n      );\n      return;\n    }\n\n    const prevBindings: IToolBinding[] = this.toolOptions[toolName]\n      ? this.toolOptions[toolName].bindings\n      : [];\n\n    const newBindings = toolBindingsOptions.bindings\n      ? toolBindingsOptions.bindings\n      : [];\n\n    // combine the new bindings with the previous bindings to avoid duplicates\n    // it allows duplicated mouse buttons as long as they don't have same\n    // modifier keys.\n    const bindingsToUse = [...prevBindings, ...newBindings].reduce(\n      (unique, binding) => {\n        const TouchBinding = binding.numTouchPoints !== undefined;\n        const MouseBinding = binding.mouseButton !== undefined;\n\n        if (\n          !unique.some((obj) => hasSameBinding(obj, binding)) &&\n          (TouchBinding || MouseBinding)\n        ) {\n          unique.push(binding);\n        }\n        return unique;\n      },\n      []\n    );\n\n    // We should not override the bindings if they are already set\n    const toolOptions: ToolOptionsType = {\n      bindings: bindingsToUse,\n      mode: Active,\n    };\n\n    this.toolOptions[toolName] = toolOptions;\n    this._toolInstances[toolName].mode = Active;\n\n    // reset the mouse cursor if tool has left click binding\n    const runtimeSettings = Settings.getRuntimeSettings();\n    const useCursor = runtimeSettings.get('useCursors');\n\n    if (this._hasMousePrimaryButtonBinding(toolBindingsOptions) && useCursor) {\n      this.setViewportsCursorByToolName(toolName);\n    } else {\n      // reset to default cursor only if there is no other tool with primary binding\n      const activeToolIdentifier = this.getActivePrimaryMouseButtonTool();\n      if (!activeToolIdentifier && useCursor) {\n        const cursor = MouseCursor.getDefinedCursor('default');\n        this._setCursorForViewports(cursor);\n      }\n    }\n\n    // if it is a primary tool binding, we should store it as the previous primary tool\n    // so that we can restore it when the tool is disabled if desired\n    if (this._hasMousePrimaryButtonBinding(toolBindingsOptions)) {\n      if (this.prevActivePrimaryToolName === null) {\n        this.prevActivePrimaryToolName = toolName;\n      } else {\n        this.prevActivePrimaryToolName = this.currentActivePrimaryToolName;\n      }\n\n      this.currentActivePrimaryToolName = toolName;\n    }\n\n    if (typeof toolInstance.onSetToolActive === 'function') {\n      toolInstance.onSetToolActive();\n    }\n    this._renderViewports();\n\n    const eventDetail: ToolActivatedEventDetail = {\n      toolGroupId: this.id,\n      toolName,\n      toolBindingsOptions,\n    };\n\n    triggerEvent(eventTarget, Events.TOOL_ACTIVATED, eventDetail);\n    this._triggerToolModeChangedEvent(toolName, Active, toolBindingsOptions);\n  }\n\n  /**\n   * Set the tool mode on the toolGroup to be Passive.\n   *\n   * - Can be passively interacted by grabbing a tool or its handles.\n   * - Renders data if the tool has a `renderAnnotation` method.\n   *\n   * @param toolName - tool name\n   * @param options - Options used when setting the tool as passive\n   *  - removeAllBindings: only the primary button bindings are removed but\n   *  if this parameter is set to true all bindings are removed.\n   */\n  public setToolPassive(\n    toolName: string,\n    options?: { removeAllBindings?: boolean | IToolBinding[] }\n  ): void {\n    const toolInstance = this._toolInstances[toolName];\n\n    if (toolInstance === undefined) {\n      console.warn(\n        `Tool ${toolName} not added to toolGroup, can't set tool mode.`\n      );\n\n      return;\n    }\n\n    // We should only remove the primary button bindings and keep\n    // the other ones (Zoom on right click)\n    const prevToolOptions = this.getToolOptions(toolName);\n    const toolOptions = Object.assign(\n      {\n        bindings: prevToolOptions ? prevToolOptions.bindings : [],\n      },\n      prevToolOptions,\n      {\n        mode: Passive,\n      }\n    );\n\n    const matchBindings = Array.isArray(options?.removeAllBindings)\n      ? options.removeAllBindings\n      : this.getDefaultPrimaryBindings();\n\n    // Remove the primary button bindings without modifiers, if they exist\n    toolOptions.bindings = toolOptions.bindings.filter(\n      (binding) =>\n        options?.removeAllBindings !== true &&\n        !matchBindings.some((matchBinding) =>\n          hasSameBinding(binding, matchBinding)\n        )\n      //(binding.mouseButton !== defaultMousePrimary || binding.modifierKey)\n    );\n    // If there are other bindings, set the tool to be active\n    let mode = Passive;\n    if (toolOptions.bindings.length !== 0) {\n      mode = Active;\n      toolOptions.mode = mode;\n    }\n\n    this.toolOptions[toolName] = toolOptions;\n    toolInstance.mode = mode;\n\n    if (typeof toolInstance.onSetToolPassive === 'function') {\n      toolInstance.onSetToolPassive();\n    }\n    this._renderViewports();\n\n    // It would make sense to use `toolInstance.mode` as mode when setting a tool\n    // as passive because it can still be actived in the end but `Passive` must\n    // be used when synchronizing ToolGroups so that other ToolGroups can take the\n    // same action (update tool bindings). Should the event have two different modes\n    // to handle this special case?\n    this._triggerToolModeChangedEvent(toolName, Passive);\n  }\n\n  /**\n   * Set the tool mode on the toolGroup to be Enabled.\n   *\n   * - Renders data if the tool has a `renderAnnotation` method..\n   *\n   * @param toolName - tool name\n   */\n  public setToolEnabled(toolName: string): void {\n    const toolInstance = this._toolInstances[toolName];\n\n    if (toolInstance === undefined) {\n      console.warn(\n        `Tool ${toolName} not added to toolGroup, can't set tool mode.`\n      );\n\n      return;\n    }\n\n    const toolOptions = {\n      bindings: [],\n      mode: Enabled,\n    };\n\n    this.toolOptions[toolName] = toolOptions;\n    toolInstance.mode = Enabled;\n\n    if (typeof toolInstance.onSetToolEnabled === 'function') {\n      toolInstance.onSetToolEnabled();\n    }\n\n    this._renderViewports();\n    this._triggerToolModeChangedEvent(toolName, Enabled);\n  }\n\n  /**\n   * Set the tool mode on the toolGroup to be Disabled.\n   *\n   * - Annotation does not render.\n   *\n   * @param toolName - tool name\n   */\n  public setToolDisabled(toolName: string): void {\n    const toolInstance = this._toolInstances[toolName];\n\n    if (toolInstance === undefined) {\n      console.warn(\n        `Tool ${toolName} not added to toolGroup, can't set tool mode.`\n      );\n\n      return;\n    }\n\n    const toolOptions = {\n      bindings: [],\n      mode: Disabled,\n    };\n\n    this.restoreToolOptions[toolName] = this.toolOptions[toolName];\n\n    this.toolOptions[toolName] = toolOptions;\n    toolInstance.mode = Disabled;\n\n    if (typeof toolInstance.onSetToolDisabled === 'function') {\n      toolInstance.onSetToolDisabled();\n    }\n    this._renderViewports();\n    this._triggerToolModeChangedEvent(toolName, Disabled);\n  }\n\n  /**\n   * Get the options for a given tool\n   * @param toolName - The name of the tool.\n   * @returns the tool options\n   */\n  public getToolOptions(toolName: string): ToolOptionsType {\n    const toolOptionsForTool = this.toolOptions[toolName];\n\n    if (toolOptionsForTool === undefined) {\n      return;\n    }\n\n    return toolOptionsForTool;\n  }\n\n  /**\n   * Find the name of the tool that is Active and has a primary button binding\n   * (Mouse primary click)\n   *\n   * @returns The name of the tool\n   */\n  public getActivePrimaryMouseButtonTool(): string {\n    return Object.keys(this.toolOptions).find((toolName) => {\n      const toolOptions = this.toolOptions[toolName];\n      return (\n        toolOptions.mode === Active &&\n        this._hasMousePrimaryButtonBinding(toolOptions)\n      );\n    });\n  }\n\n  public setViewportsCursorByToolName(\n    toolName: string,\n    strategyName?: string\n  ): void {\n    const cursor = this._getCursor(toolName, strategyName);\n\n    this._setCursorForViewports(cursor);\n  }\n\n  private _getCursor(toolName: string, strategyName?: string): MouseCursor {\n    let cursorName;\n    let cursor;\n\n    if (strategyName) {\n      // Try combinations with strategyName first:\n      // Try with toolName and toolInstanceName first.\n      cursorName = `${toolName}.${strategyName}`;\n\n      cursor = SVGMouseCursor.getDefinedCursor(cursorName, true);\n\n      if (cursor) {\n        return cursor;\n      }\n    }\n\n    // Try with toolName and toolInstanceName first.\n    cursorName = `${toolName}`;\n\n    cursor = SVGMouseCursor.getDefinedCursor(cursorName, true);\n\n    if (cursor) {\n      return cursor;\n    }\n\n    // Try with just toolName.\n    cursorName = toolName;\n\n    cursor = SVGMouseCursor.getDefinedCursor(cursorName, true);\n\n    if (cursor) {\n      return cursor;\n    }\n\n    return MouseCursor.getDefinedCursor('default');\n  }\n\n  _setCursorForViewports(cursor: MouseCursor): void {\n    this.viewportsInfo.forEach(({ renderingEngineId, viewportId }) => {\n      const enabledElement = getEnabledElementByIds(\n        viewportId,\n        renderingEngineId\n      );\n\n      if (!enabledElement) {\n        return;\n      }\n\n      const { viewport } = enabledElement;\n      initElementCursor(viewport.element, cursor);\n    });\n  }\n\n  /**\n   * Set a configuration of a tool by the given toolName.\n   * Use overwrite as true in case you want to overwrite any existing configuration (be careful, depending on config change it might break the annotation flow).\n   */\n  public setToolConfiguration(\n    toolName: string,\n    configuration: ToolConfiguration,\n    overwrite?: boolean\n  ): boolean {\n    const toolInstance = this._toolInstances[toolName];\n    if (toolInstance === undefined) {\n      console.warn(\n        `Tool ${toolName} not present, can't set tool configuration.`\n      );\n      return false;\n    }\n\n    let _configuration;\n\n    if (overwrite) {\n      _configuration = configuration;\n    } else {\n      // We should not deep copy here, it is the job of the application to\n      // deep copy the configuration before passing it to the toolGroup, otherwise\n      // some strange appending behaviour happens for the arrays\n      _configuration = Object.assign(toolInstance.configuration, configuration);\n    }\n\n    toolInstance.configuration = _configuration;\n\n    if (typeof toolInstance.onSetToolConfiguration === 'function') {\n      toolInstance.onSetToolConfiguration();\n    }\n\n    this._renderViewports();\n\n    return true;\n  }\n\n  /**\n   * Returns the default mouse primary button.\n   */\n  public getDefaultMousePrimary(): MouseBindings {\n    return MouseBindings.Primary;\n  }\n\n  /**\n   * Gets an array of bindings that is the full primary binding.\n   * Currently this is just the primary mouse button, but may be extended in the\n   * future to include touch or other binding types.\n   */\n  public getDefaultPrimaryBindings(): IToolBinding[] {\n    return PRIMARY_BINDINGS;\n  }\n\n  /**\n   * Get the configuration of tool. It returns only the config for the given path (in case exists).\n   * ConfigurationPath is the the path of the property to get separated by '.'.\n   *\n   * @example\n   * getToolConfiguration('LengthTool', 'firstLevel.secondLevel')\n   * // get from LengthTool instance the configuration value as being LengthToolInstance[configuration][firstLevel][secondLevel]\n   */\n  getToolConfiguration(toolName: string, configurationPath?: string): any {\n    if (this._toolInstances[toolName] === undefined) {\n      console.warn(\n        `Tool ${toolName} not present, can't set tool configuration.`\n      );\n      return;\n    }\n\n    const _configuration =\n      get(this._toolInstances[toolName].configuration, configurationPath) ||\n      this._toolInstances[toolName].configuration;\n\n    return cloneDeep(_configuration);\n  }\n\n  /**\n   * Gets the name of the previously active tool.\n   * @returns The name of the previously active tool.\n   */\n  public getPrevActivePrimaryToolName(): string {\n    return this.prevActivePrimaryToolName;\n  }\n\n  /**\n   *\n   * @param newToolGroupId - Id of the new (clone) tool group\n   * @param fnToolFilter - Function to filter which tools from this tool group\n   * should be added to the new (clone) one. Example: only annotations tools\n   * can be filtered and added to the new tool group.\n   * @returns A new tool group that is a clone of this one\n   */\n  public clone(\n    newToolGroupId,\n    fnToolFilter: (toolName: string) => void = null\n  ): IToolGroup {\n    let toolGroup = ToolGroupManager.getToolGroup(newToolGroupId);\n\n    if (toolGroup) {\n      console.warn(`ToolGroup ${newToolGroupId} already exists`);\n      return toolGroup;\n    }\n\n    toolGroup = ToolGroupManager.createToolGroup(newToolGroupId);\n    fnToolFilter = fnToolFilter ?? (() => true);\n\n    Object.keys(this._toolInstances)\n      .filter(fnToolFilter)\n      .forEach((toolName) => {\n        const sourceToolInstance = this._toolInstances[toolName];\n        const sourceToolOptions = this.toolOptions[toolName];\n        const sourceToolMode = sourceToolInstance.mode;\n\n        toolGroup.addTool(toolName);\n\n        (toolGroup as unknown as ToolGroup).setToolMode(\n          toolName,\n          sourceToolMode,\n          {\n            bindings: sourceToolOptions.bindings ?? [],\n          }\n        );\n      });\n\n    return toolGroup;\n  }\n\n  /**\n   * Check if the tool binding is set to be primary mouse button.\n   * @param toolOptions - The options for the tool mode.\n   * @returns A boolean value.\n   */\n  private _hasMousePrimaryButtonBinding(toolOptions) {\n    const primaryBindings = this.getDefaultPrimaryBindings();\n    return toolOptions?.bindings?.some((binding) =>\n      primaryBindings.some((primary) => hasSameBinding(binding, primary))\n    );\n  }\n\n  /**\n   * It re-renders the viewports in the toolGroup\n   */\n  private _renderViewports(): void {\n    this.viewportsInfo.forEach(({ renderingEngineId, viewportId }) => {\n      getRenderingEngine(renderingEngineId).renderViewport(viewportId);\n    });\n  }\n\n  /**\n   * Trigger ToolModeChangedEvent when changing the tool mode\n   * @param toolName - Tool name\n   * @param mode - Tool mode\n   * @param toolBindingsOptions - Binding options used when a tool is activated\n   */\n  private _triggerToolModeChangedEvent(\n    toolName: string,\n    mode: ToolModes,\n    toolBindingsOptions?: SetToolBindingsType\n  ): void {\n    const eventDetail: ToolModeChangedEventDetail = {\n      toolGroupId: this.id,\n      toolName,\n      mode,\n      toolBindingsOptions,\n    };\n\n    triggerEvent(eventTarget, Events.TOOL_MODE_CHANGED, eventDetail);\n  }\n}\n\n/**\n * Figure out if the two bindings are the same\n */\nfunction hasSameBinding(\n  binding1: IToolBinding,\n  binding2: IToolBinding\n): boolean {\n  if (binding1.mouseButton !== binding2.mouseButton) {\n    return false;\n  }\n  if (binding1.numTouchPoints !== binding2.numTouchPoints) {\n    return false;\n  }\n\n  return binding1.modifierKey === binding2.modifierKey;\n}\n","import { state } from '../index';\nimport ToolGroup from './ToolGroup';\nimport { IToolGroup } from '../../types';\n\n/**\n * Create a new tool group with the given name. ToolGroups are the new way\n * in Cornerstone3DTools to share tool configuration, state (enabled, disabled, etc.)\n * across a set of viewports.\n *\n * @param toolGroupId - The unique ID of the tool group.\n * @returns A reference to the tool group that was created.\n */\nfunction createToolGroup(toolGroupId: string): IToolGroup | undefined {\n  // Exit early if ID conflict\n  const toolGroupWithIdExists = state.toolGroups.some(\n    (tg) => tg.id === toolGroupId\n  );\n\n  if (toolGroupWithIdExists) {\n    console.warn(`'${toolGroupId}' already exists.`);\n    return;\n  }\n\n  const toolGroup = new ToolGroup(toolGroupId);\n\n  // Update state\n  state.toolGroups.push(toolGroup);\n\n  // Return reference\n  return toolGroup;\n}\n\nexport default createToolGroup;\n","// `BaseManager` or IManager interface for duplicate API between ToolGroup/Synchronizer?\nimport { state as csToolsState } from '../index';\nimport destroyToolGroup from './destroyToolGroup';\n\n// ToolGroups function entirely by their \"state\" being queried and leveraged\n// removing a ToolGroup from state is equivalent to killing it. Calling\n// destroyToolGroup() to make sure the SegmentationDisplayTools\n// have been removed from the toolGroup Viewports. //Todo: this makes more sense\n// to be based on events, but we don't have any toolGroup created/removed events\n\n/**\n * Destroy all tool groups\n */\nfunction destroy(): void {\n  const toolGroups = [...csToolsState.toolGroups];\n\n  for (const toolGroup of toolGroups) {\n    destroyToolGroup(toolGroup.id);\n  }\n\n  csToolsState.toolGroups = [];\n}\n\nexport default destroy;\n","import { state } from '../index';\nimport { removeSegmentationsFromToolGroup } from '../../stateManagement/segmentation';\nimport { segmentationRenderingEngine } from '../../utilities/segmentation/triggerSegmentationRender';\n// ToolGroups function entirely by their \"state\" being queried and leveraged\n// removing a ToolGroup from state is equivalent to killing it\n\n/**\n * Given a tool group Id, destroy the toolGroup. It will also cleanup all segmentations\n * associated with that tool group too\n *\n * @param toolGroupId - The Id of the tool group to be destroyed.\n */\nfunction destroyToolGroup(toolGroupId: string): void {\n  const toolGroupIndex = state.toolGroups.findIndex(\n    (tg) => tg.id === toolGroupId\n  );\n\n  if (toolGroupIndex > -1) {\n    segmentationRenderingEngine.removeToolGroup(toolGroupId);\n    // Todo: this should not happen here)\n    removeSegmentationsFromToolGroup(toolGroupId);\n    state.toolGroups.splice(toolGroupIndex, 1);\n  }\n}\n\nexport default destroyToolGroup;\n","import { state } from '../index';\nimport { IToolGroup } from '../../types';\n\n/**\n * Return the array of tool groups\n * @returns An array of tool groups.\n */\nfunction getAllToolGroups(): Array<IToolGroup> {\n  return state.toolGroups;\n}\n\nexport default getAllToolGroups;\n","import { state } from '../index';\nimport { IToolGroup } from '../../types';\n\n/**\n * Given a tool group Id, return the tool group\n * @param toolGroupId - The Id of the tool group to be retrieved.\n * @returns The tool group that has the same id as the tool group id that was\n * passed in.\n */\nfunction getToolGroup(toolGroupId: string): IToolGroup | undefined {\n  return state.toolGroups.find((s) => s.id === toolGroupId);\n}\n\nexport default getToolGroup;\n","import { state } from '../index';\nimport { IToolGroup } from '../../types';\nimport { ToolModes } from '../../enums';\n\nconst MODES = [ToolModes.Active, ToolModes.Passive, ToolModes.Enabled];\n\n/**\n * Returns the toolGroups that has the given toolName as active, passive\n * or enabled.\n * @param toolName - The name of the tool\n * @returns An array of tool groups.\n */\nfunction getToolGroupsWithToolName(toolName: string): IToolGroup[] | [] {\n  return state.toolGroups.filter(({ toolOptions }) => {\n    const toolGroupToolNames = Object.keys(toolOptions);\n\n    for (let i = 0; i < toolGroupToolNames.length; i++) {\n      if (toolName !== toolGroupToolNames[i]) {\n        continue;\n      }\n\n      /* filter out tools that don't have options */\n      if (!toolOptions[toolName]) {\n        continue;\n      }\n\n      if (MODES.includes(toolOptions[toolName].mode)) {\n        return true;\n      }\n    }\n    return false;\n  });\n}\n\nexport default getToolGroupsWithToolName;\n","import { vec2, vec3 } from 'gl-matrix';\nimport { getEnabledElement, utilities as csUtils } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport { getCalibratedLengthUnitsAndScale } from '../../utilities/getCalibratedUnits';\nimport { roundNumber } from '../../utilities';\nimport { AnnotationTool } from '../base';\nimport throttle from '../../utilities/throttle';\nimport {\n  addAnnotation,\n  getAnnotations,\n  removeAnnotation,\n} from '../../stateManagement/annotation/annotationState';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\nimport {\n  triggerAnnotationCompleted,\n  triggerAnnotationModified,\n} from '../../stateManagement/annotation/helpers/state';\nimport {\n  drawLine as drawLineSvg,\n  drawHandles as drawHandlesSvg,\n  drawLinkedTextBox as drawLinkedTextBoxSvg,\n} from '../../drawingSvg';\nimport { state } from '../../store';\nimport { Events } from '../../enums';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport * as lineSegment from '../../utilities/math/line';\nimport { getTextBoxCoordsCanvas } from '../../utilities/drawing';\nimport {\n  resetElementCursor,\n  hideElementCursor,\n} from '../../cursors/elementCursor';\nimport {\n  EventTypes,\n  ToolHandle,\n  TextBoxHandle,\n  PublicToolProps,\n  ToolProps,\n  SVGDrawingHelper,\n} from '../../types';\nimport { BidirectionalAnnotation } from '../../types/ToolSpecificAnnotationTypes';\n\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport { StyleSpecifier } from '../../types/AnnotationStyle';\n\nconst { transformWorldToIndex } = csUtils;\n\n/**\n * BidirectionalTool let you draw annotations that measures the length and\n * width at the same time in `mm` unit. It is consisted of two perpendicular lines and\n * a text box. You can use the BidirectionalTool in all planes even in oblique\n * reconstructed planes. Note: annotation tools in cornerstone3DTools exists in the exact location\n * in the physical 3d space, as a result, by default, all annotations that are\n * drawing in the same frameOfReference will get shared between viewports that\n * are in the same frameOfReference.\n *\n * The resulting annotation's data (statistics) and metadata (the\n * state of the viewport while drawing was happening) will get added to the\n * ToolState manager and can be accessed from the ToolState by calling getAnnotations\n * or similar methods.\n *\n * ```js\n * cornerstoneTools.addTool(BidirectionalTool)\n *\n * const toolGroup = ToolGroupManager.createToolGroup('toolGroupId')\n *\n * toolGroup.addTool(BidirectionalTool.toolName)\n *\n * toolGroup.addViewport('viewportId', 'renderingEngineId')\n *\n * toolGroup.setToolActive(BidirectionalTool.toolName, {\n *   bindings: [\n *    {\n *       mouseButton: MouseBindings.Primary, // Left Click\n *     },\n *   ],\n * })\n * ```\n *\n * Read more in the Docs section of the website.\n */\n\nclass BidirectionalTool extends AnnotationTool {\n  static toolName;\n\n  touchDragCallback: any;\n  mouseDragCallback: any;\n  _throttledCalculateCachedStats: any;\n  editData: {\n    annotation: any;\n    viewportIdsToRender: string[];\n    handleIndex?: number;\n    movingTextBox: boolean;\n    newAnnotation?: boolean;\n    hasMoved?: boolean;\n  } | null;\n  isDrawing: boolean;\n  isHandleOutsideImage: boolean;\n  preventHandleOutsideImage: boolean;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        preventHandleOutsideImage: false,\n        getTextLines: defaultGetTextLines,\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n\n    this._throttledCalculateCachedStats = throttle(\n      this._calculateCachedStats,\n      100,\n      { trailing: true }\n    );\n  }\n\n  /**\n   * Based on the current position of the mouse and the current imageId to create\n   * a Bidirectional Annotation and stores it in the annotationManager\n   *\n   * @param evt -  EventTypes.NormalizedMouseEventType\n   * @returns The annotation object.\n   *\n   */\n  addNewAnnotation(\n    evt: EventTypes.InteractionEventType\n  ): BidirectionalAnnotation {\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const worldPos = currentPoints.world;\n    const enabledElement = getEnabledElement(element);\n    const { viewport, renderingEngine } = enabledElement;\n\n    this.isDrawing = true;\n\n    const camera = viewport.getCamera();\n    const { viewPlaneNormal, viewUp } = camera;\n\n    const referencedImageId = this.getReferencedImageId(\n      viewport,\n      worldPos,\n      viewPlaneNormal,\n      viewUp\n    );\n\n    const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n\n    const annotation: BidirectionalAnnotation = {\n      highlighted: true,\n      invalidated: true,\n      metadata: {\n        toolName: this.getToolName(),\n        viewPlaneNormal: <Types.Point3>[...viewPlaneNormal],\n        viewUp: <Types.Point3>[...viewUp],\n        FrameOfReferenceUID,\n        referencedImageId,\n        ...viewport.getViewReference({ points: [worldPos] }),\n      },\n      data: {\n        handles: {\n          points: [\n            // long\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n            // short\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n          ],\n          textBox: {\n            hasMoved: false,\n            worldPosition: <Types.Point3>[0, 0, 0],\n            worldBoundingBox: {\n              topLeft: <Types.Point3>[0, 0, 0],\n              topRight: <Types.Point3>[0, 0, 0],\n              bottomLeft: <Types.Point3>[0, 0, 0],\n              bottomRight: <Types.Point3>[0, 0, 0],\n            },\n          },\n          activeHandleIndex: null,\n        },\n        label: '',\n        cachedStats: {},\n      },\n    };\n\n    addAnnotation(annotation, element);\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      handleIndex: 1,\n      movingTextBox: false,\n      newAnnotation: true,\n      hasMoved: false,\n    };\n    this._activateDraw(element);\n\n    hideElementCursor(element);\n\n    evt.preventDefault();\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    return annotation;\n  }\n\n  /**\n   * It returns if the canvas point is near the provided annotation in the provided\n   * element or not. A proximity is passed to the function to determine the\n   * proximity of the point to the annotation in number of pixels.\n   *\n   * @param element - HTML Element\n   * @param annotation - Annotation\n   * @param canvasCoords - Canvas coordinates\n   * @param proximity - Proximity to tool to consider\n   * @returns Boolean, whether the canvas point is near tool\n   */\n  isPointNearTool = (\n    element: HTMLDivElement,\n    annotation: BidirectionalAnnotation,\n    canvasCoords: Types.Point2,\n    proximity: number\n  ): boolean => {\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n    const { data } = annotation;\n    const { points } = data.handles;\n\n    // Check long axis\n    let canvasPoint1 = viewport.worldToCanvas(points[0]);\n    let canvasPoint2 = viewport.worldToCanvas(points[1]);\n\n    let line = {\n      start: {\n        x: canvasPoint1[0],\n        y: canvasPoint1[1],\n      },\n      end: {\n        x: canvasPoint2[0],\n        y: canvasPoint2[1],\n      },\n    };\n\n    let distanceToPoint = lineSegment.distanceToPoint(\n      [line.start.x, line.start.y],\n      [line.end.x, line.end.y],\n      [canvasCoords[0], canvasCoords[1]]\n    );\n\n    if (distanceToPoint <= proximity) {\n      return true;\n    }\n\n    // Check short axis\n    canvasPoint1 = viewport.worldToCanvas(points[2]);\n    canvasPoint2 = viewport.worldToCanvas(points[3]);\n\n    line = {\n      start: {\n        x: canvasPoint1[0],\n        y: canvasPoint1[1],\n      },\n      end: {\n        x: canvasPoint2[0],\n        y: canvasPoint2[1],\n      },\n    };\n\n    distanceToPoint = lineSegment.distanceToPoint(\n      [line.start.x, line.start.y],\n      [line.end.x, line.end.y],\n      [canvasCoords[0], canvasCoords[1]]\n    );\n\n    if (distanceToPoint <= proximity) {\n      return true;\n    }\n\n    return false;\n  };\n\n  /**\n   * Handles the toolSelected callback for bidirectional tool\n   * @param evt - EventTypes.MouseDownEventType\n   * @param annotation - Bidirectional annotation\n   * @param interactionType - interaction type (mouse, touch)\n   */\n  toolSelectedCallback = (\n    evt: EventTypes.InteractionEventType,\n    annotation: BidirectionalAnnotation\n  ): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    annotation.highlighted = true;\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      movingTextBox: false,\n    };\n\n    this._activateModify(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    hideElementCursor(element);\n\n    evt.preventDefault();\n  };\n\n  /**\n   * Executes the callback for when mouse has selected a handle (anchor point) of\n   * the bidirectional tool or when the text box has been selected.\n   *\n   * @param evt - EventTypes.MouseDownEventType\n   * @param annotation - Bidirectional annotation\n   * @param handle - Handle index or selected textBox information\n   * @param interactionType - interaction type (mouse, touch)\n   */\n  handleSelectedCallback = (\n    evt: EventTypes.InteractionEventType,\n    annotation: BidirectionalAnnotation,\n    handle: ToolHandle\n  ): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const data = annotation.data;\n\n    annotation.highlighted = true;\n\n    let movingTextBox = false;\n    let handleIndex;\n\n    if ((handle as TextBoxHandle).worldPosition) {\n      movingTextBox = true;\n    } else {\n      handleIndex = data.handles.points.findIndex((p) => p === handle);\n    }\n\n    // Find viewports to render on drag.\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    hideElementCursor(element);\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      handleIndex,\n      movingTextBox,\n    };\n    this._activateModify(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    evt.preventDefault();\n  };\n\n  /**\n   * Handles the mouse up action for the bidirectional tool. It can be at the end\n   * of the annotation drawing (MouseUpEventType) or when the user clicks and release\n   * the mouse button instantly which let to the annotation to draw without holding\n   * the mouse button (MouseClickEventType).\n   *\n   * @param evt - mouse up or mouse click event types\n   */\n  _endCallback = (evt: EventTypes.InteractionEventType): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    const { annotation, viewportIdsToRender, newAnnotation, hasMoved } =\n      this.editData;\n    const { data } = annotation;\n\n    if (newAnnotation && !hasMoved) {\n      return;\n    }\n\n    data.handles.activeHandleIndex = null;\n\n    this._deactivateModify(element);\n    this._deactivateDraw(element);\n\n    resetElementCursor(element);\n\n    const { renderingEngine } = getEnabledElement(element);\n\n    if (this.editData.handleIndex !== undefined) {\n      const { points } = data.handles;\n      const firstLineSegmentLength = vec3.distance(points[0], points[1]);\n      const secondLineSegmentLength = vec3.distance(points[2], points[3]);\n\n      if (secondLineSegmentLength > firstLineSegmentLength) {\n        // Switch points so [0,1] is the long axis and [2,3] is the short axis.\n\n        const longAxis = [[...points[2]], [...points[3]]];\n\n        const shortAxisPoint0 = [...points[0]];\n        const shortAxisPoint1 = [...points[1]];\n\n        // shortAxis[0->1] should be perpendicular (counter-clockwise) to longAxis[0->1]\n        const longAxisVector = vec2.create();\n\n        vec2.set(\n          longAxisVector,\n          longAxis[1][0] - longAxis[0][0],\n          longAxis[1][1] - longAxis[1][0]\n        );\n\n        const counterClockWisePerpendicularToLongAxis = vec2.create();\n\n        vec2.set(\n          counterClockWisePerpendicularToLongAxis,\n          -longAxisVector[1],\n          longAxisVector[0]\n        );\n\n        const currentShortAxisVector = vec2.create();\n\n        vec2.set(\n          currentShortAxisVector,\n          shortAxisPoint1[0] - shortAxisPoint0[0],\n          shortAxisPoint1[1] - shortAxisPoint0[0]\n        );\n\n        let shortAxis;\n\n        if (\n          vec2.dot(\n            currentShortAxisVector,\n            counterClockWisePerpendicularToLongAxis\n          ) > 0\n        ) {\n          shortAxis = [shortAxisPoint0, shortAxisPoint1];\n        } else {\n          shortAxis = [shortAxisPoint1, shortAxisPoint0];\n        }\n\n        data.handles.points = [\n          longAxis[0],\n          longAxis[1],\n          shortAxis[0],\n          shortAxis[1],\n        ];\n      }\n    }\n\n    if (\n      this.isHandleOutsideImage &&\n      this.configuration.preventHandleOutsideImage\n    ) {\n      removeAnnotation(annotation.annotationUID);\n    }\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    if (newAnnotation) {\n      triggerAnnotationCompleted(annotation);\n    }\n\n    this.editData = null;\n    this.isDrawing = false;\n  };\n\n  /**\n   * @param evt - mouse move event type or mouse drag\n   */\n  _dragDrawCallback = (evt: EventTypes.InteractionEventType): void => {\n    this.isDrawing = true;\n\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine, viewport } = enabledElement;\n    const { worldToCanvas } = viewport;\n    const { annotation, viewportIdsToRender, handleIndex } = this.editData;\n    const { data } = annotation;\n\n    const worldPos = currentPoints.world;\n\n    // Update first move handle\n    data.handles.points[handleIndex] = [...worldPos];\n\n    const canvasCoordPoints = data.handles.points.map(worldToCanvas);\n\n    const canvasCoords = {\n      longLineSegment: {\n        start: {\n          x: canvasCoordPoints[0][0],\n          y: canvasCoordPoints[0][1],\n        },\n        end: {\n          x: canvasCoordPoints[1][0],\n          y: canvasCoordPoints[1][1],\n        },\n      },\n      shortLineSegment: {\n        start: {\n          x: canvasCoordPoints[2][0],\n          y: canvasCoordPoints[2][1],\n        },\n        end: {\n          x: canvasCoordPoints[3][0],\n          y: canvasCoordPoints[3][1],\n        },\n      },\n    };\n\n    // ~~ calculate worldPos of our short axis handles\n    // short axis is perpendicular to long axis, and we set its length to be 2/3 of long axis\n    // (meaning each)\n    const dist = vec2.distance(canvasCoordPoints[0], canvasCoordPoints[1]);\n\n    const shortAxisDistFromCenter = dist / 3;\n    // Calculate long line's incline\n    const dx =\n      canvasCoords.longLineSegment.start.x - canvasCoords.longLineSegment.end.x;\n    const dy =\n      canvasCoords.longLineSegment.start.y - canvasCoords.longLineSegment.end.y;\n    const length = Math.sqrt(dx * dx + dy * dy);\n    const vectorX = dx / length;\n    const vectorY = dy / length;\n    // middle point between long line segment's points\n    const xMid =\n      (canvasCoords.longLineSegment.start.x +\n        canvasCoords.longLineSegment.end.x) /\n      2;\n    const yMid =\n      (canvasCoords.longLineSegment.start.y +\n        canvasCoords.longLineSegment.end.y) /\n      2;\n    // short points 1/3 distance from center of long points\n    const startX = xMid + shortAxisDistFromCenter * vectorY;\n    const startY = yMid - shortAxisDistFromCenter * vectorX;\n    const endX = xMid - shortAxisDistFromCenter * vectorY;\n    const endY = yMid + shortAxisDistFromCenter * vectorX;\n\n    // Update perpendicular line segment's points\n    data.handles.points[2] = viewport.canvasToWorld([startX, startY]);\n    data.handles.points[3] = viewport.canvasToWorld([endX, endY]);\n\n    annotation.invalidated = true;\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    this.editData.hasMoved = true;\n  };\n\n  /**\n   * Mouse drag to edit annotation callback\n   * @param evt - mouse drag event\n   */\n  _dragModifyCallback = (evt: EventTypes.InteractionEventType): void => {\n    this.isDrawing = true;\n\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n    const { annotation, viewportIdsToRender, handleIndex, movingTextBox } =\n      this.editData;\n    const { data } = annotation;\n    if (movingTextBox) {\n      const { deltaPoints } = eventDetail;\n      const worldPosDelta = deltaPoints.world;\n\n      const { textBox } = data.handles;\n      const { worldPosition } = textBox;\n\n      worldPosition[0] += worldPosDelta[0];\n      worldPosition[1] += worldPosDelta[1];\n      worldPosition[2] += worldPosDelta[2];\n\n      textBox.hasMoved = true;\n    } else if (handleIndex === undefined) {\n      // Moving tool\n      const { deltaPoints } = eventDetail;\n      const worldPosDelta = deltaPoints.world;\n      const points = data.handles.points;\n\n      points.forEach((point) => {\n        point[0] += worldPosDelta[0];\n        point[1] += worldPosDelta[1];\n        point[2] += worldPosDelta[2];\n      });\n      annotation.invalidated = true;\n    } else {\n      this._dragModifyHandle(evt);\n      annotation.invalidated = true;\n    }\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n  };\n\n  /**\n   * Mouse dragging a handle callback\n   * @param evt - mouse drag event\n   */\n  _dragModifyHandle = (evt: EventTypes.InteractionEventType): void => {\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n    const { annotation, handleIndex: movingHandleIndex } = this.editData;\n    const { data } = annotation;\n\n    // Moving handle\n    const worldPos = currentPoints.world;\n    const canvasCoordHandlesCurrent = [\n      viewport.worldToCanvas(data.handles.points[0]),\n      viewport.worldToCanvas(data.handles.points[1]),\n      viewport.worldToCanvas(data.handles.points[2]),\n      viewport.worldToCanvas(data.handles.points[3]),\n    ];\n\n    const firstLineSegment = {\n      start: {\n        x: canvasCoordHandlesCurrent[0][0],\n        y: canvasCoordHandlesCurrent[0][1],\n      },\n      end: {\n        x: canvasCoordHandlesCurrent[1][0],\n        y: canvasCoordHandlesCurrent[1][1],\n      },\n    };\n    const secondLineSegment = {\n      start: {\n        x: canvasCoordHandlesCurrent[2][0],\n        y: canvasCoordHandlesCurrent[2][1],\n      },\n      end: {\n        x: canvasCoordHandlesCurrent[3][0],\n        y: canvasCoordHandlesCurrent[3][1],\n      },\n    };\n\n    // Handle we've selected's proposed point\n    const proposedPoint = <Types.Point3>[...worldPos];\n    const proposedCanvasCoord = viewport.worldToCanvas(proposedPoint);\n\n    if (movingHandleIndex === 0 || movingHandleIndex === 1) {\n      const fixedHandleIndex = movingHandleIndex === 0 ? 1 : 0;\n\n      const fixedHandleCanvasCoord =\n        canvasCoordHandlesCurrent[fixedHandleIndex];\n\n      const fixedHandleToProposedCoordVec = vec2.set(\n        vec2.create(),\n        proposedCanvasCoord[0] - fixedHandleCanvasCoord[0],\n        proposedCanvasCoord[1] - fixedHandleCanvasCoord[1]\n      );\n\n      const fixedHandleToOldCoordVec = vec2.set(\n        vec2.create(),\n        canvasCoordHandlesCurrent[movingHandleIndex][0] -\n          fixedHandleCanvasCoord[0],\n        canvasCoordHandlesCurrent[movingHandleIndex][1] -\n          fixedHandleCanvasCoord[1]\n      );\n\n      // normalize vector\n      vec2.normalize(\n        fixedHandleToProposedCoordVec,\n        fixedHandleToProposedCoordVec\n      );\n      vec2.normalize(fixedHandleToOldCoordVec, fixedHandleToOldCoordVec);\n\n      // Check whether this\n      const proposedFirstLineSegment = {\n        start: {\n          x: fixedHandleCanvasCoord[0],\n          y: fixedHandleCanvasCoord[1],\n        },\n        end: {\n          x: proposedCanvasCoord[0],\n          y: proposedCanvasCoord[1],\n        },\n      };\n\n      // Note: this is the case when we are modifying the long axis line segment\n      // and we make it shorter and shorter until its second half size becomes zero\n      // which basically means that any more modification would make the long axis\n      // second half disappear. In this case, we just bail out and do not update\n      // since we don't want to disrupt the bidirectional shape.\n      if (\n        this._movingLongAxisWouldPutItThroughShortAxis(\n          proposedFirstLineSegment,\n          secondLineSegment\n        )\n      ) {\n        return;\n      }\n\n      const centerOfRotation = fixedHandleCanvasCoord;\n\n      const angle = this._getSignedAngle(\n        fixedHandleToOldCoordVec,\n        fixedHandleToProposedCoordVec\n      );\n\n      // rotate handles around the center of rotation, first translate to origin,\n      // then rotate, then translate back\n      let firstPointX = canvasCoordHandlesCurrent[2][0];\n      let firstPointY = canvasCoordHandlesCurrent[2][1];\n\n      let secondPointX = canvasCoordHandlesCurrent[3][0];\n      let secondPointY = canvasCoordHandlesCurrent[3][1];\n\n      // translate to origin\n      firstPointX -= centerOfRotation[0];\n      firstPointY -= centerOfRotation[1];\n\n      secondPointX -= centerOfRotation[0];\n      secondPointY -= centerOfRotation[1];\n\n      // rotate\n      const rotatedFirstPoint =\n        firstPointX * Math.cos(angle) - firstPointY * Math.sin(angle);\n      const rotatedFirstPointY =\n        firstPointX * Math.sin(angle) + firstPointY * Math.cos(angle);\n\n      const rotatedSecondPoint =\n        secondPointX * Math.cos(angle) - secondPointY * Math.sin(angle);\n      const rotatedSecondPointY =\n        secondPointX * Math.sin(angle) + secondPointY * Math.cos(angle);\n\n      // translate back\n      firstPointX = rotatedFirstPoint + centerOfRotation[0];\n      firstPointY = rotatedFirstPointY + centerOfRotation[1];\n\n      secondPointX = rotatedSecondPoint + centerOfRotation[0];\n      secondPointY = rotatedSecondPointY + centerOfRotation[1];\n\n      // update handles\n      const newFirstPoint = viewport.canvasToWorld([firstPointX, firstPointY]);\n      const newSecondPoint = viewport.canvasToWorld([\n        secondPointX,\n        secondPointY,\n      ]);\n\n      // the fixed handle is the one that is not being moved so we\n      // don't need to update it\n      data.handles.points[movingHandleIndex] = proposedPoint;\n      data.handles.points[2] = newFirstPoint;\n      data.handles.points[3] = newSecondPoint;\n    } else {\n      // Translation manipulator\n      const translateHandleIndex = movingHandleIndex === 2 ? 3 : 2;\n\n      const canvasCoordsCurrent = {\n        longLineSegment: {\n          start: firstLineSegment.start,\n          end: firstLineSegment.end,\n        },\n        shortLineSegment: {\n          start: secondLineSegment.start,\n          end: secondLineSegment.end,\n        },\n      };\n\n      const longLineSegmentVec = vec2.subtract(\n        vec2.create(),\n        [\n          canvasCoordsCurrent.longLineSegment.end.x,\n          canvasCoordsCurrent.longLineSegment.end.y,\n        ],\n        [\n          canvasCoordsCurrent.longLineSegment.start.x,\n          canvasCoordsCurrent.longLineSegment.start.y,\n        ]\n      );\n\n      const longLineSegmentVecNormalized = vec2.normalize(\n        vec2.create(),\n        longLineSegmentVec\n      );\n\n      const proposedToCurrentVec = vec2.subtract(\n        vec2.create(),\n        [proposedCanvasCoord[0], proposedCanvasCoord[1]],\n        [\n          canvasCoordHandlesCurrent[movingHandleIndex][0],\n          canvasCoordHandlesCurrent[movingHandleIndex][1],\n        ]\n      );\n\n      const movementLength = vec2.length(proposedToCurrentVec);\n\n      const angle = this._getSignedAngle(\n        longLineSegmentVecNormalized,\n        proposedToCurrentVec\n      );\n\n      const movementAlongLineSegmentLength = Math.cos(angle) * movementLength;\n\n      const newTranslatedPoint = vec2.scaleAndAdd(\n        vec2.create(),\n        [\n          canvasCoordHandlesCurrent[translateHandleIndex][0],\n          canvasCoordHandlesCurrent[translateHandleIndex][1],\n        ],\n        longLineSegmentVecNormalized,\n        movementAlongLineSegmentLength\n      );\n\n      // don't update if it passes through the other line segment\n      if (\n        this._movingLongAxisWouldPutItThroughShortAxis(\n          {\n            start: {\n              x: proposedCanvasCoord[0],\n              y: proposedCanvasCoord[1],\n            },\n            end: {\n              x: newTranslatedPoint[0],\n              y: newTranslatedPoint[1],\n            },\n          },\n          {\n            start: {\n              x: canvasCoordsCurrent.longLineSegment.start.x,\n              y: canvasCoordsCurrent.longLineSegment.start.y,\n            },\n            end: {\n              x: canvasCoordsCurrent.longLineSegment.end.x,\n              y: canvasCoordsCurrent.longLineSegment.end.y,\n            },\n          }\n        )\n      ) {\n        return;\n      }\n\n      const intersectionPoint = lineSegment.intersectLine(\n        [proposedCanvasCoord[0], proposedCanvasCoord[1]],\n        [newTranslatedPoint[0], newTranslatedPoint[1]],\n        [firstLineSegment.start.x, firstLineSegment.start.y],\n        [firstLineSegment.end.x, firstLineSegment.end.y]\n      );\n\n      // don't update if it doesn't intersect\n      if (!intersectionPoint) {\n        return;\n      }\n\n      data.handles.points[translateHandleIndex] = viewport.canvasToWorld(\n        newTranslatedPoint as Types.Point2\n      );\n      data.handles.points[movingHandleIndex] = proposedPoint;\n    }\n  };\n\n  /**\n   * Cancels an ongoing drawing of a bidirectional annotation\n   * @param element - HTML Element\n   */\n  cancel = (element: HTMLDivElement) => {\n    // If it is mid-draw or mid-modify\n    if (this.isDrawing) {\n      this.isDrawing = false;\n      this._deactivateDraw(element);\n      this._deactivateModify(element);\n      resetElementCursor(element);\n\n      const { annotation, viewportIdsToRender, newAnnotation } = this.editData;\n      const { data } = annotation;\n\n      annotation.highlighted = false;\n      data.handles.activeHandleIndex = null;\n\n      const { renderingEngine } = getEnabledElement(element);\n\n      triggerAnnotationRenderForViewportIds(\n        renderingEngine,\n        viewportIdsToRender\n      );\n\n      if (newAnnotation) {\n        triggerAnnotationCompleted(annotation);\n      }\n\n      this.editData = null;\n      return annotation.annotationUID;\n    }\n  };\n\n  _activateDraw = (element) => {\n    state.isInteractingWithTool = true;\n\n    element.addEventListener(Events.MOUSE_UP, this._endCallback);\n    element.addEventListener(Events.MOUSE_DRAG, this._dragDrawCallback);\n    element.addEventListener(Events.MOUSE_MOVE, this._dragDrawCallback);\n    element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.addEventListener(\n      Events.TOUCH_TAP,\n      this._endCallback as EventListener\n    );\n    element.addEventListener(\n      Events.TOUCH_END,\n      this._endCallback as EventListener\n    );\n    element.addEventListener(\n      Events.TOUCH_DRAG,\n      this._dragDrawCallback as EventListener\n    );\n  };\n\n  _deactivateDraw = (element) => {\n    state.isInteractingWithTool = false;\n\n    element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n    element.removeEventListener(Events.MOUSE_DRAG, this._dragDrawCallback);\n    element.removeEventListener(Events.MOUSE_MOVE, this._dragDrawCallback);\n    element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.removeEventListener(\n      Events.TOUCH_TAP,\n      this._endCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.TOUCH_END,\n      this._endCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.TOUCH_DRAG,\n      this._dragDrawCallback as EventListener\n    );\n  };\n\n  _activateModify = (element) => {\n    state.isInteractingWithTool = true;\n\n    element.addEventListener(Events.MOUSE_UP, this._endCallback);\n    element.addEventListener(Events.MOUSE_DRAG, this._dragModifyCallback);\n    element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.addEventListener(\n      Events.TOUCH_END,\n      this._endCallback as EventListener\n    );\n    element.addEventListener(\n      Events.TOUCH_DRAG,\n      this._dragModifyCallback as EventListener\n    );\n    element.addEventListener(\n      Events.TOUCH_TAP,\n      this._endCallback as EventListener\n    );\n  };\n\n  _deactivateModify = (element) => {\n    state.isInteractingWithTool = false;\n\n    element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n    element.removeEventListener(Events.MOUSE_DRAG, this._dragModifyCallback);\n    element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.removeEventListener(\n      Events.TOUCH_END,\n      this._endCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.TOUCH_DRAG,\n      this._dragModifyCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.TOUCH_TAP,\n      this._endCallback as EventListener\n    );\n  };\n\n  /**\n   * it is used to draw the bidirectional annotation in each\n   * request animation frame. It calculates the updated cached statistics if\n   * data is invalidated and cache it.\n   *\n   * @param enabledElement - The Cornerstone's enabledElement.\n   * @param svgDrawingHelper - The svgDrawingHelper providing the context for drawing.\n   */\n  renderAnnotation = (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper\n  ): boolean => {\n    let renderStatus = true;\n    const { viewport } = enabledElement;\n    const { element } = viewport;\n    let annotations = getAnnotations(this.getToolName(), element);\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    annotations = this.filterInteractableAnnotationsForElement(\n      element,\n      annotations\n    );\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    const targetId = this.getTargetId(viewport);\n\n    const renderingEngine = viewport.getRenderingEngine();\n\n    const styleSpecifier: StyleSpecifier = {\n      toolGroupId: this.toolGroupId,\n      toolName: this.getToolName(),\n      viewportId: enabledElement.viewport.id,\n    };\n\n    for (let i = 0; i < annotations.length; i++) {\n      const annotation = annotations[i] as BidirectionalAnnotation;\n      const { annotationUID, data } = annotation;\n      const { points, activeHandleIndex } = data.handles;\n      const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n\n      styleSpecifier.annotationUID = annotationUID;\n\n      const { color, lineWidth, lineDash, shadow } = this.getAnnotationStyle({\n        annotation,\n        styleSpecifier,\n      });\n\n      // If cachedStats does not exist, or the unit is missing (as part of import/hydration etc.),\n      // force to recalculate the stats from the points\n      if (\n        !data.cachedStats[targetId] ||\n        data.cachedStats[targetId].unit == null\n      ) {\n        data.cachedStats[targetId] = {\n          length: null,\n          width: null,\n          unit: null,\n        };\n\n        this._calculateCachedStats(annotation, renderingEngine, enabledElement);\n      } else if (annotation.invalidated) {\n        this._throttledCalculateCachedStats(\n          annotation,\n          renderingEngine,\n          enabledElement\n        );\n      }\n\n      // If rendering engine has been destroyed while rendering\n      if (!viewport.getRenderingEngine()) {\n        console.warn('Rendering Engine has been destroyed');\n        return renderStatus;\n      }\n\n      let activeHandleCanvasCoords;\n\n      if (!isAnnotationVisible(annotationUID)) {\n        continue;\n      }\n\n      if (\n        !isAnnotationLocked(annotation) &&\n        !this.editData &&\n        activeHandleIndex !== null\n      ) {\n        // Not locked or creating and hovering over handle, so render handle.\n        activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]];\n      }\n\n      if (activeHandleCanvasCoords) {\n        const handleGroupUID = '0';\n\n        drawHandlesSvg(\n          svgDrawingHelper,\n          annotationUID,\n          handleGroupUID,\n          activeHandleCanvasCoords,\n          {\n            color,\n          }\n        );\n      }\n\n      const dataId1 = `${annotationUID}-line-1`;\n      const dataId2 = `${annotationUID}-line-2`;\n\n      const lineUID = '0';\n      drawLineSvg(\n        svgDrawingHelper,\n        annotationUID,\n        lineUID,\n        canvasCoordinates[0],\n        canvasCoordinates[1],\n        {\n          color,\n          lineDash,\n          lineWidth,\n          shadow,\n        },\n        dataId1\n      );\n\n      const secondLineUID = '1';\n      drawLineSvg(\n        svgDrawingHelper,\n        annotationUID,\n        secondLineUID,\n        canvasCoordinates[2],\n        canvasCoordinates[3],\n        {\n          color,\n          lineDash,\n          lineWidth,\n          shadow,\n        },\n        dataId2\n      );\n\n      renderStatus = true;\n\n      const options = this.getLinkedTextBoxStyle(styleSpecifier, annotation);\n      if (!options.visibility) {\n        data.handles.textBox = {\n          hasMoved: false,\n          worldPosition: <Types.Point3>[0, 0, 0],\n          worldBoundingBox: {\n            topLeft: <Types.Point3>[0, 0, 0],\n            topRight: <Types.Point3>[0, 0, 0],\n            bottomLeft: <Types.Point3>[0, 0, 0],\n            bottomRight: <Types.Point3>[0, 0, 0],\n          },\n        };\n        continue;\n      }\n\n      const textLines = this.configuration.getTextLines(data, targetId);\n      if (!textLines || textLines.length === 0) {\n        continue;\n      }\n\n      let canvasTextBoxCoords;\n\n      if (!data.handles.textBox.hasMoved) {\n        canvasTextBoxCoords = getTextBoxCoordsCanvas(canvasCoordinates);\n\n        data.handles.textBox.worldPosition =\n          viewport.canvasToWorld(canvasTextBoxCoords);\n      }\n\n      const textBoxPosition = viewport.worldToCanvas(\n        data.handles.textBox.worldPosition\n      );\n\n      const textBoxUID = '1';\n      const boundingBox = drawLinkedTextBoxSvg(\n        svgDrawingHelper,\n        annotationUID,\n        textBoxUID,\n        textLines,\n        textBoxPosition,\n        canvasCoordinates,\n        {},\n        options\n      );\n\n      const { x: left, y: top, width, height } = boundingBox;\n\n      data.handles.textBox.worldBoundingBox = {\n        topLeft: viewport.canvasToWorld([left, top]),\n        topRight: viewport.canvasToWorld([left + width, top]),\n        bottomLeft: viewport.canvasToWorld([left, top + height]),\n        bottomRight: viewport.canvasToWorld([left + width, top + height]),\n      };\n    }\n\n    return renderStatus;\n  };\n\n  _movingLongAxisWouldPutItThroughShortAxis = (\n    firstLineSegment,\n    secondLineSegment\n  ) => {\n    const vectorInSecondLineDirection = vec2.create();\n\n    vec2.set(\n      vectorInSecondLineDirection,\n      secondLineSegment.end.x - secondLineSegment.start.x,\n      secondLineSegment.end.y - secondLineSegment.start.y\n    );\n\n    vec2.normalize(vectorInSecondLineDirection, vectorInSecondLineDirection);\n\n    const extendedSecondLineSegment = {\n      start: {\n        x: secondLineSegment.start.x - vectorInSecondLineDirection[0] * 10,\n        y: secondLineSegment.start.y - vectorInSecondLineDirection[1] * 10,\n      },\n      end: {\n        x: secondLineSegment.end.x + vectorInSecondLineDirection[0] * 10,\n        y: secondLineSegment.end.y + vectorInSecondLineDirection[1] * 10,\n      },\n    };\n\n    // Add some buffer in the secondLineSegment when finding the proposedIntersectionPoint\n    // Of points to stop us getting stack when rotating quickly.\n\n    const proposedIntersectionPoint = lineSegment.intersectLine(\n      [extendedSecondLineSegment.start.x, extendedSecondLineSegment.start.y],\n      [extendedSecondLineSegment.end.x, extendedSecondLineSegment.end.y],\n      [firstLineSegment.start.x, firstLineSegment.start.y],\n      [firstLineSegment.end.x, firstLineSegment.end.y]\n    );\n\n    const wouldPutThroughShortAxis = !proposedIntersectionPoint;\n\n    return wouldPutThroughShortAxis;\n  };\n\n  _calculateLength(pos1, pos2) {\n    const dx = pos1[0] - pos2[0];\n    const dy = pos1[1] - pos2[1];\n    const dz = pos1[2] - pos2[2];\n\n    return Math.sqrt(dx * dx + dy * dy + dz * dz);\n  }\n\n  _calculateCachedStats = (annotation, renderingEngine, enabledElement) => {\n    const { data } = annotation;\n    const { element } = enabledElement.viewport;\n\n    const worldPos1 = data.handles.points[0];\n    const worldPos2 = data.handles.points[1];\n    const worldPos3 = data.handles.points[2];\n    const worldPos4 = data.handles.points[3];\n\n    const { cachedStats } = data;\n    const targetIds = Object.keys(cachedStats);\n\n    for (let i = 0; i < targetIds.length; i++) {\n      const targetId = targetIds[i];\n\n      const image = this.getTargetIdImage(targetId, renderingEngine);\n\n      // If image does not exists for the targetId, skip. This can be due\n      // to various reasons such as if the target was a volumeViewport, and\n      // the volumeViewport has been decached in the meantime.\n      if (!image) {\n        continue;\n      }\n\n      const { imageData, dimensions } = image;\n      const index1 = transformWorldToIndex(imageData, worldPos1);\n      const index2 = transformWorldToIndex(imageData, worldPos2);\n      const index3 = transformWorldToIndex(imageData, worldPos3);\n      const index4 = transformWorldToIndex(imageData, worldPos4);\n\n      const handles1 = [index1, index2];\n      const handles2 = [index3, index4];\n\n      const { scale: scale1, units: units1 } = getCalibratedLengthUnitsAndScale(\n        image,\n        handles1\n      );\n\n      const { scale: scale2, units: units2 } = getCalibratedLengthUnitsAndScale(\n        image,\n        handles2\n      );\n\n      const dist1 = this._calculateLength(worldPos1, worldPos2) / scale1;\n      const dist2 = this._calculateLength(worldPos3, worldPos4) / scale2;\n      const length = dist1 > dist2 ? dist1 : dist2;\n      const width = dist1 > dist2 ? dist2 : dist1;\n\n      const lengthUnit = dist1 > dist2 ? units1 : units2;\n      const widthUnit = dist1 > dist2 ? units2 : units1;\n\n      this._isInsideVolume(index1, index2, index3, index4, dimensions)\n        ? (this.isHandleOutsideImage = false)\n        : (this.isHandleOutsideImage = true);\n\n      cachedStats[targetId] = {\n        length,\n        width,\n        unit: units1,\n        lengthUnit,\n        widthUnit,\n      };\n    }\n\n    annotation.invalidated = false;\n\n    // Dispatching annotation modified\n    triggerAnnotationModified(annotation, element);\n\n    return cachedStats;\n  };\n\n  _isInsideVolume = (index1, index2, index3, index4, dimensions): boolean => {\n    return (\n      csUtils.indexWithinDimensions(index1, dimensions) &&\n      csUtils.indexWithinDimensions(index2, dimensions) &&\n      csUtils.indexWithinDimensions(index3, dimensions) &&\n      csUtils.indexWithinDimensions(index4, dimensions)\n    );\n  };\n\n  _getSignedAngle = (vector1, vector2) => {\n    return Math.atan2(\n      vector1[0] * vector2[1] - vector1[1] * vector2[0],\n      vector1[0] * vector2[0] + vector1[1] * vector2[1]\n    );\n  };\n}\n\nfunction defaultGetTextLines(data, targetId): string[] {\n  const { cachedStats, label } = data;\n  const { length, width, unit, lengthUnit, widthUnit } = cachedStats[targetId];\n\n  const textLines = [];\n  if (label) {\n    textLines.push(label);\n  }\n  if (length === undefined) {\n    return textLines;\n  }\n\n  // spaceBetweenSlices & pixelSpacing &\n  // magnitude in each direction? Otherwise, this is \"px\"?\n  textLines.push(\n    `L: ${roundNumber(length)} ${lengthUnit || unit}`,\n    `W: ${roundNumber(width)} ${widthUnit || unit}`\n  );\n\n  return textLines;\n}\n\nBidirectionalTool.toolName = 'Bidirectional';\nexport default BidirectionalTool;\n","import {\n  CONSTANTS,\n  getEnabledElement,\n  VolumeViewport,\n  utilities as csUtils,\n} from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\nimport { vec3 } from 'gl-matrix';\n\nimport { getCalibratedLengthUnitsAndScale } from '../../utilities/getCalibratedUnits';\nimport { math, roundNumber } from '../../utilities';\nimport { polyline } from '../../utilities/math';\nimport { filterAnnotationsForDisplay } from '../../utilities/planar';\nimport throttle from '../../utilities/throttle';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport registerDrawLoop from './planarFreehandROITool/drawLoop';\nimport registerEditLoopCommon from './planarFreehandROITool/editLoopCommon';\nimport registerClosedContourEditLoop from './planarFreehandROITool/closedContourEditLoop';\nimport registerOpenContourEditLoop from './planarFreehandROITool/openContourEditLoop';\nimport registerOpenContourEndEditLoop from './planarFreehandROITool/openContourEndEditLoop';\nimport registerRenderMethods from './planarFreehandROITool/renderMethods';\nimport type {\n  EventTypes,\n  ToolHandle,\n  Annotation,\n  Annotations,\n  AnnotationStyle,\n  PublicToolProps,\n  ToolProps,\n  SVGDrawingHelper,\n  AnnotationRenderContext,\n} from '../../types';\nimport { triggerAnnotationModified } from '../../stateManagement/annotation/helpers/state';\nimport { drawLinkedTextBox } from '../../drawingSvg';\nimport { PlanarFreehandROIAnnotation } from '../../types/ToolSpecificAnnotationTypes';\nimport { getTextBoxCoordsCanvas } from '../../utilities/drawing';\nimport { PlanarFreehandROICommonData } from '../../utilities/math/polyline/planarFreehandROIInternalTypes';\n\nimport { getLineSegmentIntersectionsCoordinates } from '../../utilities/math/polyline';\nimport pointInShapeCallback from '../../utilities/pointInShapeCallback';\nimport { isViewportPreScaled } from '../../utilities/viewport/isViewportPreScaled';\nimport { getModalityUnit } from '../../utilities/getModalityUnit';\nimport { BasicStatsCalculator } from '../../utilities/math/basic';\nimport calculatePerimeter from '../../utilities/contours/calculatePerimeter';\nimport ContourSegmentationBaseTool from '../base/ContourSegmentationBaseTool';\nimport { KeyboardBindings, ChangeTypes } from '../../enums';\n\nconst { pointCanProjectOnLine } = polyline;\nconst { EPSILON } = CONSTANTS;\n\nconst PARALLEL_THRESHOLD = 1 - EPSILON;\n\n/**\n * PlanarFreehandROITool lets you draw annotations that define an arbitrarily drawn region.\n * You can use the PlanarFreehandROITool in all perpendicular views (axial, sagittal, coronal),\n * support for oblique views is possible, but not yet supported, due to the implementation of\n * `getSubPixelSpacingAndXYDirections`.\n *\n * The resulting annotation's data and metadata (the\n * state of the viewport while drawing was happening) will get added to the\n * ToolState manager and can be accessed from the ToolState by calling getAnnotations\n * or similar methods.\n *\n * PlanarFreehandROITool annotation can be smoothed on drawing completion. This is a configured based approach.\n * The smoothing process uses b-spline algorithm and consider 4 configurations properties:\n * - smoothing.smoothOnAdd: to tell whether it should be smoothed or not (for editing it is considered the property smoothOnEdit) (default: false)\n * - smoothing.smoothOnEdit: to tell whether it should be smoothed or not when editing (default: false)\n * - smoothing.knotsRatioPercentageOnAdd: percentage of points from Segment that are likely to be considered knots during smoothing (for editing it is considered the property knotsRatioPercentageOnEdit) ( default: 40)\n * - smoothing.knotsRatioPercentageOnEdit: same as knotsRatioPercentageOnAdd but applicable only when editing the tool (default: 40)\n *\n * So, with that said the smoothing might occur when:\n * - drawing is done (i.e mouse is released) and smoothing.smoothOnAdd is true. smoothing algorithm uses knotsRatioPercentageOnAdd\n * - edit drawing is done (i.e mouse is released) and smoothing.smoothOnEdit is true. smoothing algorithm uses knotsRatioPercentageOnEdit and its only applied to changed segment\n * smoothing does not occur when:\n * - smoothing.smoothOnAdd is false and drawing is completed\n * - smoothing.smoothOnEdit is false and edit is completed\n * - drawing still happening (editing or not)\n *\n * The result of smoothing will be removal of some of the outliers\n * Changing tool configuration (see below) you can fine-tune the smoothing process by changing knotsRatioPercentageOnAdd and knotsRatioPercentageOnEdit value, which smaller values produces a more agressive smoothing.\n * A smaller value of knotsRatioPercentageOnAdd/knotsRatioPercentageOnEdit produces a more aggressive smoothing.\n *\n * ```js\n * cornerstoneTools.addTool(PlanarFreehandROITool)\n *\n * const toolGroup = ToolGroupManager.createToolGroup('toolGroupId')\n *\n * toolGroup.addTool(PlanarFreehandROITool.toolName)\n *\n * toolGroup.addViewport('viewportId', 'renderingEngineId')\n *\n * toolGroup.setToolActive(PlanarFreehandROITool.toolName, {\n *   bindings: [\n *    {\n *       mouseButton: MouseBindings.Primary, // Left Click\n *     },\n *   ],\n * })\n *\n * // set smoothing aggressiveness while adding new annotation (ps: this does not change if smoothing is ON or OFF)\n * toolGroup.setToolConfiguration(PlanarFreehandROITool.toolName, {\n *   smoothing: { knotsRatioPercentageOnAdd: 30 },\n * });\n *\n * // set smoothing to be ON while editing only\n * toolGroup.setToolConfiguration(PlanarFreehandROITool.toolName, {\n *   smoothing: { smoothOnAdd: false, smoothOnEdit: true  },\n * });\n * ```\n *\n *\n * Read more in the Docs section of the website.\n */\n\nclass PlanarFreehandROITool extends ContourSegmentationBaseTool {\n  static toolName;\n\n  public touchDragCallback: any;\n  public mouseDragCallback: any;\n  _throttledCalculateCachedStats: any;\n  private commonData?: PlanarFreehandROICommonData;\n  isDrawing = false;\n  isEditingClosed = false;\n  isEditingOpen = false;\n\n  protected activateDraw: (\n    evt: EventTypes.InteractionEventType,\n    annotation: PlanarFreehandROIAnnotation,\n    viewportIdsToRender: string[]\n  ) => void;\n  private activateClosedContourEdit: (\n    evt: EventTypes.InteractionEventType,\n    annotation: PlanarFreehandROIAnnotation,\n    viewportIdsToRender: string[]\n  ) => void;\n  private activateOpenContourEdit: (\n    evt: EventTypes.InteractionEventType,\n    annotation: PlanarFreehandROIAnnotation,\n    viewportIdsToRender: string[]\n  ) => void;\n  private activateOpenContourEndEdit: (\n    evt: EventTypes.InteractionEventType,\n    annotation: PlanarFreehandROIAnnotation,\n    viewportIdsToRender: string[],\n    handle: ToolHandle | null\n  ) => void;\n  private cancelDrawing: (element: HTMLDivElement) => void;\n  private cancelClosedContourEdit: (element: HTMLDivElement) => void;\n  private cancelOpenContourEdit: (element: HTMLDivElement) => void;\n\n  private renderContour: (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper,\n    annotation: PlanarFreehandROIAnnotation\n  ) => void;\n  private renderContourBeingDrawn: (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper,\n    annotation: PlanarFreehandROIAnnotation\n  ) => void;\n  private renderClosedContourBeingEdited: (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper,\n    annotation: PlanarFreehandROIAnnotation\n  ) => void;\n  private renderOpenContourBeingEdited: (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper,\n    annotation: PlanarFreehandROIAnnotation\n  ) => void;\n\n  private renderPointContourWithMarker: (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper,\n    annotation: PlanarFreehandROIAnnotation\n  ) => void;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        shadow: true,\n        preventHandleOutsideImage: false,\n        /**\n         * Specify which modifier key is used to add a hole to a contour. The\n         * modifier must be pressed when the first point of a new contour is added.\n         */\n        contourHoleAdditionModifierKey: KeyboardBindings.Shift,\n        alwaysRenderOpenContourHandles: {\n          // When true, always render end points when you have an open contour, rather\n          // than just rendering a line.\n          enabled: false,\n          // When enabled, use this radius to draw the endpoints whilst not hovering.\n          radius: 2,\n        },\n        allowOpenContours: true,\n        // Proximity in canvas coordinates used to join contours.\n        closeContourProximity: 10,\n        // The proximity at which we fallback to the simplest grabbing logic for\n        // determining what index of the contour to start editing.\n        checkCanvasEditFallbackProximity: 6,\n        // For closed contours, make them clockwise\n        // This can be useful if contours are compared between slices, eg for\n        // interpolation, and does not cause problems otherwise so defaulting to true.\n        makeClockWise: true,\n        // The relative distance that points should be dropped along the polyline\n        // in units of the image pixel spacing. A value of 1 means that nodes must\n        // be placed no closed than the image spacing apart. A value of 4 means that 4\n        // nodes should be placed within the space of one image pixel size. A higher\n        // value gives more finesse to the tool/smoother lines, but the value cannot\n        // be infinite as the lines become very computationally expensive to draw.\n        subPixelResolution: 4,\n        /**\n         * Smoothing is used to remove jagged irregularities in the polyline,\n         * as opposed to interpolation, which is used to create new polylines\n         * between existing polylines.\n         */\n        smoothing: {\n          smoothOnAdd: false,\n          smoothOnEdit: false, // used for edit only\n          knotsRatioPercentageOnAdd: 40,\n          knotsRatioPercentageOnEdit: 40,\n        },\n        /**\n         * Interpolation is the creation of new segmentations in between the\n         * existing segmentations/indices.  Note that this does not apply to\n         * ROI values, since those annotations are individual annotations, not\n         * connected in any way to each other, whereas segmentations are intended\n         * to be connected 2d + 1 dimension (time or space or other) volumes.\n         */\n        interpolation: {\n          enabled: false,\n          // Callback to update the annotation or perform other action when the\n          // interpolation is complete.\n          onInterpolationComplete: null,\n        },\n        /**\n         * The polyline may get processed in order to reduce the number of points\n         * for better performance and storage.\n         */\n        decimate: {\n          enabled: false,\n          /** A maximum given distance 'epsilon' to decide if a point should or\n           * shouldn't be added the resulting polyline which will have a lower\n           * number of points for higher `epsilon` values.\n           */\n          epsilon: 0.1,\n        },\n        displayOnePointAsCrosshairs: false,\n        calculateStats: true,\n        getTextLines: defaultGetTextLines,\n        statsCalculator: BasicStatsCalculator,\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n\n    // Register event loops and rendering logic, which are stored in different\n    // Files due to their complexity/size.\n    registerDrawLoop(this);\n    registerEditLoopCommon(this);\n    registerClosedContourEditLoop(this);\n    registerOpenContourEditLoop(this);\n    registerOpenContourEndEditLoop(this);\n    registerRenderMethods(this);\n\n    this._throttledCalculateCachedStats = throttle(\n      this._calculateCachedStats,\n      100,\n      { trailing: true }\n    );\n  }\n\n  /**\n   * Based on the current position of the mouse and the current image, creates\n   * a `PlanarFreehandROIAnnotation` and stores it in the annotationManager.\n   *\n   * @param evt - `EventTypes.NormalizedMouseEventType`\n   * @returns The `PlanarFreehandROIAnnotation` object.\n   */\n  addNewAnnotation = (\n    evt: EventTypes.InteractionEventType\n  ): PlanarFreehandROIAnnotation => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    const annotation = this.createAnnotation(\n      evt\n    ) as PlanarFreehandROIAnnotation;\n\n    this.addAnnotation(annotation, element);\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.activateDraw(evt, annotation, viewportIdsToRender);\n\n    evt.preventDefault();\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    return annotation;\n  };\n\n  /**\n   * Begins an edit of an open contour, when the mouse has selected a handle\n   * (end) of the open contour.\n   *\n   * @param evt - `EventTypes.MouseDownEventType`\n   * @param annotation - `PlanarFreehandROIAnnotation` annotation.\n   * @param handle - The handle index, 0 for the start and 1 for the end.\n   * @param interactionType - interaction type (mouse, touch)\n   */\n  handleSelectedCallback = (\n    evt: EventTypes.InteractionEventType,\n    annotation: PlanarFreehandROIAnnotation,\n    handle: ToolHandle\n  ): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.activateOpenContourEndEdit(\n      evt,\n      annotation,\n      viewportIdsToRender,\n      handle\n    );\n  };\n\n  /**\n   * Edits the open or closed contour when the line is grabbed and dragged.\n   */\n  toolSelectedCallback = (\n    evt: EventTypes.InteractionEventType,\n    annotation: PlanarFreehandROIAnnotation\n  ): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    if (annotation.data.contour.closed) {\n      this.activateClosedContourEdit(evt, annotation, viewportIdsToRender);\n    } else {\n      this.activateOpenContourEdit(evt, annotation, viewportIdsToRender);\n    }\n\n    evt.preventDefault();\n  };\n\n  /**\n   * Returns if the canvas point is near the line of the given annotation in the\n   * provided element or not. A proximity is passed to the function to determine the\n   * proximity of the point to the annotation in number of pixels.\n   *\n   * @param element - HTML Element\n   * @param annotation - The `PlanarFreehandROIAnnotation`.\n   * @param canvasCoords - Canvas coordinates\n   * @param proximity - Proximity to tool to consider\n   * @returns Boolean, whether the canvas point is near tool\n   */\n  isPointNearTool = (\n    element: HTMLDivElement,\n    annotation: PlanarFreehandROIAnnotation,\n    canvasCoords: Types.Point2,\n    proximity: number\n  ): boolean => {\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n\n    const { polyline: points } = annotation.data.contour;\n\n    // NOTE: It is implemented this way so that we do not double calculate\n    // points when number crunching adjacent line segments.\n    let previousPoint = viewport.worldToCanvas(points[0]);\n\n    for (let i = 1; i < points.length; i++) {\n      const p1 = previousPoint;\n      const p2 = viewport.worldToCanvas(points[i]);\n      const canProject = pointCanProjectOnLine(canvasCoords, p1, p2, proximity);\n\n      if (canProject) {\n        return true;\n      }\n\n      previousPoint = p2;\n    }\n\n    if (!annotation.data.contour.closed) {\n      // Contour is open, don't check last point to first point.\n      return false;\n    }\n\n    // check last point to first point\n    const pStart = viewport.worldToCanvas(points[0]);\n    const pEnd = viewport.worldToCanvas(points[points.length - 1]);\n\n    return pointCanProjectOnLine(canvasCoords, pStart, pEnd, proximity);\n  };\n\n  public cancel = (element: HTMLDivElement): void => {\n    const isDrawing = this.isDrawing;\n    const isEditingOpen = this.isEditingOpen;\n    const isEditingClosed = this.isEditingClosed;\n\n    if (isDrawing) {\n      this.cancelDrawing(element);\n    } else if (isEditingOpen) {\n      this.cancelOpenContourEdit(element);\n    } else if (isEditingClosed) {\n      this.cancelClosedContourEdit(element);\n    }\n  };\n\n  /**\n   * @override We need to override this method as the tool doesn't always have\n   * `handles`, which means `filterAnnotationsForDisplay` fails inside\n   * `filterAnnotationsWithinSlice`.\n   */\n  public filterInteractableAnnotationsForElement(\n    element: HTMLDivElement,\n    annotations: Annotations\n  ): Annotations | undefined {\n    if (!annotations || !annotations.length) {\n      return;\n    }\n\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n\n    let annotationsToDisplay;\n\n    if (viewport instanceof VolumeViewport) {\n      const camera = viewport.getCamera();\n\n      const { spacingInNormalDirection } =\n        csUtils.getTargetVolumeAndSpacingInNormalDir(viewport, camera);\n\n      // Get data with same normal and within the same slice\n      annotationsToDisplay = this.filterAnnotationsWithinSlice(\n        annotations,\n        camera,\n        spacingInNormalDirection\n      );\n    } else {\n      // Use the default `filterAnnotationsForDisplay` utility, as the stack\n      // path doesn't require handles.\n      annotationsToDisplay = filterAnnotationsForDisplay(viewport, annotations);\n    }\n\n    return annotationsToDisplay;\n  }\n\n  /**\n   * Altered version of the `utilities.planar.filterAnnotationsWithinSlice`,\n   * which uses the polyline position rather than the handle. As the polyline is\n   * always present.\n   */\n  private filterAnnotationsWithinSlice(\n    annotations: Annotations,\n    camera: Types.ICamera,\n    spacingInNormalDirection: number\n  ): Annotations {\n    const { viewPlaneNormal } = camera;\n\n    const annotationsWithParallelNormals = annotations.filter(\n      (td: Annotation) => {\n        const annotationViewPlaneNormal = td.metadata.viewPlaneNormal;\n\n        const isParallel =\n          Math.abs(vec3.dot(viewPlaneNormal, annotationViewPlaneNormal)) >\n          PARALLEL_THRESHOLD;\n\n        return annotationViewPlaneNormal && isParallel;\n      }\n    ) as PlanarFreehandROIAnnotation[];\n\n    // No in plane annotations.\n    if (!annotationsWithParallelNormals.length) {\n      return [];\n    }\n\n    // Annotation should be within the slice, which means that it should be between\n    // camera's focalPoint +/- spacingInNormalDirection.\n\n    const halfSpacingInNormalDirection = spacingInNormalDirection / 2;\n    const { focalPoint } = camera;\n\n    const annotationsWithinSlice = [];\n\n    for (const annotation of annotationsWithParallelNormals) {\n      const data = annotation.data;\n      const point = data.contour.polyline[0];\n\n      if (!annotation.isVisible) {\n        continue;\n      }\n\n      // A = point\n      // B = focal point\n      // P = normal\n\n      // B-A dot P  => Distance in the view direction.\n      // this should be less than half the slice distance.\n\n      const dir = vec3.create();\n\n      vec3.sub(dir, focalPoint, point);\n\n      const dot = vec3.dot(dir, viewPlaneNormal);\n\n      if (Math.abs(dot) < halfSpacingInNormalDirection) {\n        annotationsWithinSlice.push(annotation);\n      }\n    }\n\n    return annotationsWithinSlice;\n  }\n\n  protected isContourSegmentationTool(): boolean {\n    // Disable contour segmentation behavior because it shall be activated only\n    // for PlanarFreehandContourSegmentationTool\n    return false;\n  }\n\n  protected createAnnotation(evt: EventTypes.InteractionEventType): Annotation {\n    const worldPos = evt.detail.currentPoints.world;\n    const contourAnnotation = super.createAnnotation(evt);\n\n    const onInterpolationComplete = (annotation) => {\n      // Clear out the handles because they aren't used for straight freeform\n      annotation.data.handles.points.length = 0;\n    };\n\n    const annotation = <PlanarFreehandROIAnnotation>csUtils.deepMerge(\n      contourAnnotation,\n      {\n        data: {\n          contour: {\n            polyline: [<Types.Point3>[...worldPos]],\n          },\n          label: '',\n          cachedStats: {},\n        },\n        onInterpolationComplete,\n      }\n    );\n\n    return annotation;\n  }\n\n  protected getAnnotationStyle(context) {\n    // This method exists only because `super` cannot be called from\n    // _getRenderingOptions() which is in an external file.\n    return super.getAnnotationStyle(context);\n  }\n\n  protected renderAnnotationInstance(\n    renderContext: AnnotationRenderContext\n  ): boolean {\n    const { enabledElement, targetId, svgDrawingHelper } = renderContext;\n    const annotation = renderContext.annotation as PlanarFreehandROIAnnotation;\n\n    let renderStatus = false;\n    const { viewport, renderingEngine } = enabledElement;\n\n    const isDrawing = this.isDrawing;\n    const isEditingOpen = this.isEditingOpen;\n    const isEditingClosed = this.isEditingClosed;\n\n    if (!(isDrawing || isEditingOpen || isEditingClosed)) {\n      // No annotations are currently being modified, so we can just use the\n      // render contour method to render all of them\n      if (\n        this.configuration.displayOnePointAsCrosshairs &&\n        annotation.data.contour.polyline.length === 1\n      ) {\n        this.renderPointContourWithMarker(\n          enabledElement,\n          svgDrawingHelper,\n          annotation\n        );\n      } else {\n        this.renderContour(enabledElement, svgDrawingHelper, annotation);\n      }\n    } else {\n      // The active annotation will need special rendering treatment. Render all\n      // other annotations not being interacted with using the standard renderContour\n      // rendering path.\n      const activeAnnotationUID = this.commonData.annotation.annotationUID;\n\n      if (annotation.annotationUID === activeAnnotationUID) {\n        if (isDrawing) {\n          this.renderContourBeingDrawn(\n            enabledElement,\n            svgDrawingHelper,\n            annotation\n          );\n        } else if (isEditingClosed) {\n          this.renderClosedContourBeingEdited(\n            enabledElement,\n            svgDrawingHelper,\n            annotation\n          );\n        } else if (isEditingOpen) {\n          this.renderOpenContourBeingEdited(\n            enabledElement,\n            svgDrawingHelper,\n            annotation\n          );\n        } else {\n          throw new Error(\n            `Unknown ${this.getToolName()} annotation rendering state`\n          );\n        }\n      } else {\n        if (\n          this.configuration.displayOnePointAsCrosshairs &&\n          annotation.data.contour.polyline.length === 1\n        ) {\n          this.renderPointContourWithMarker(\n            enabledElement,\n            svgDrawingHelper,\n            annotation\n          );\n        } else {\n          this.renderContour(enabledElement, svgDrawingHelper, annotation);\n        }\n      }\n\n      // Todo: return boolean flag for each rendering route in the planar tool.\n      renderStatus = true;\n    }\n\n    if (!this.configuration.calculateStats) {\n      return;\n    }\n\n    this._calculateStatsIfActive(\n      annotation,\n      targetId,\n      viewport,\n      renderingEngine,\n      enabledElement\n    );\n\n    this._renderStats(annotation, viewport, enabledElement, svgDrawingHelper);\n\n    return renderStatus;\n  }\n\n  _calculateStatsIfActive(\n    annotation: PlanarFreehandROIAnnotation,\n    targetId: string,\n    viewport,\n    renderingEngine,\n    enabledElement\n  ) {\n    const activeAnnotationUID = this.commonData?.annotation.annotationUID;\n\n    if (\n      annotation.annotationUID === activeAnnotationUID &&\n      !this.commonData?.movingTextBox\n    ) {\n      return;\n    }\n\n    if (!this.commonData?.movingTextBox) {\n      const { data } = annotation;\n      if (\n        !data.cachedStats[targetId] ||\n        data.cachedStats[targetId].areaUnit == null\n      ) {\n        data.cachedStats[targetId] = {\n          Modality: null,\n          area: null,\n          max: null,\n          mean: null,\n          stdDev: null,\n          areaUnit: null,\n        };\n\n        this._calculateCachedStats(\n          annotation,\n          viewport,\n          renderingEngine,\n          enabledElement\n        );\n      } else if (annotation.invalidated) {\n        this._throttledCalculateCachedStats(\n          annotation,\n          viewport,\n          renderingEngine,\n          enabledElement\n        );\n      }\n    }\n  }\n\n  private _calculateCachedStats = (\n    annotation,\n    viewport,\n    renderingEngine,\n    enabledElement\n  ) => {\n    const { data } = annotation;\n    const { cachedStats } = data;\n    const { polyline: points, closed } = data.contour;\n\n    const targetIds = Object.keys(cachedStats);\n\n    for (let i = 0; i < targetIds.length; i++) {\n      const targetId = targetIds[i];\n      const image = this.getTargetIdImage(targetId, renderingEngine);\n\n      // If image does not exists for the targetId, skip. This can be due\n      // to various reasons such as if the target was a volumeViewport, and\n      // the volumeViewport has been decached in the meantime.\n      if (!image) {\n        continue;\n      }\n\n      const { imageData, metadata } = image;\n      const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n\n      // Using an arbitrary start point (canvasPoint), calculate the\n      // mm spacing for the canvas in the X and Y directions.\n      const canvasPoint = canvasCoordinates[0];\n      const originalWorldPoint = viewport.canvasToWorld(canvasPoint);\n      const deltaXPoint = viewport.canvasToWorld([\n        canvasPoint[0] + 1,\n        canvasPoint[1],\n      ]);\n      const deltaYPoint = viewport.canvasToWorld([\n        canvasPoint[0],\n        canvasPoint[1] + 1,\n      ]);\n\n      const deltaInX = vec3.distance(originalWorldPoint, deltaXPoint);\n      const deltaInY = vec3.distance(originalWorldPoint, deltaYPoint);\n\n      const worldPosIndex = csUtils.transformWorldToIndex(imageData, points[0]);\n      worldPosIndex[0] = Math.floor(worldPosIndex[0]);\n      worldPosIndex[1] = Math.floor(worldPosIndex[1]);\n      worldPosIndex[2] = Math.floor(worldPosIndex[2]);\n\n      let iMin = worldPosIndex[0];\n      let iMax = worldPosIndex[0];\n\n      let jMin = worldPosIndex[1];\n      let jMax = worldPosIndex[1];\n\n      let kMin = worldPosIndex[2];\n      let kMax = worldPosIndex[2];\n\n      for (let j = 1; j < points.length; j++) {\n        const worldPosIndex = csUtils.transformWorldToIndex(\n          imageData,\n          points[j]\n        );\n        worldPosIndex[0] = Math.floor(worldPosIndex[0]);\n        worldPosIndex[1] = Math.floor(worldPosIndex[1]);\n        worldPosIndex[2] = Math.floor(worldPosIndex[2]);\n        iMin = Math.min(iMin, worldPosIndex[0]);\n        iMax = Math.max(iMax, worldPosIndex[0]);\n\n        jMin = Math.min(jMin, worldPosIndex[1]);\n        jMax = Math.max(jMax, worldPosIndex[1]);\n\n        kMin = Math.min(kMin, worldPosIndex[2]);\n        kMax = Math.max(kMax, worldPosIndex[2]);\n      }\n\n      const worldPosIndex2 = csUtils.transformWorldToIndex(\n        imageData,\n        points[1]\n      );\n      worldPosIndex2[0] = Math.floor(worldPosIndex2[0]);\n      worldPosIndex2[1] = Math.floor(worldPosIndex2[1]);\n      worldPosIndex2[2] = Math.floor(worldPosIndex2[2]);\n\n      const { scale, areaUnits } = getCalibratedLengthUnitsAndScale(\n        image,\n        () => {\n          const polyline = data.contour.polyline;\n          const numPoints = polyline.length;\n          const projectedPolyline = new Array(numPoints);\n\n          for (let i = 0; i < numPoints; i++) {\n            projectedPolyline[i] = viewport.worldToCanvas(polyline[i]);\n          }\n\n          const {\n            maxX: canvasMaxX,\n            maxY: canvasMaxY,\n            minX: canvasMinX,\n            minY: canvasMinY,\n          } = math.polyline.getAABB(projectedPolyline);\n\n          const topLeftBBWorld = viewport.canvasToWorld([\n            canvasMinX,\n            canvasMinY,\n          ]);\n\n          const topLeftBBIndex = csUtils.transformWorldToIndex(\n            imageData,\n            topLeftBBWorld\n          );\n\n          const bottomRightBBWorld = viewport.canvasToWorld([\n            canvasMaxX,\n            canvasMaxY,\n          ]);\n\n          const bottomRightBBIndex = csUtils.transformWorldToIndex(\n            imageData,\n            bottomRightBBWorld\n          );\n\n          return [topLeftBBIndex, bottomRightBBIndex];\n        }\n      );\n      let area = polyline.getArea(canvasCoordinates) / scale / scale;\n      // Convert from canvas_pixels ^2 to mm^2\n      area *= deltaInX * deltaInY;\n\n      // Expand bounding box\n      const iDelta = 0.01 * (iMax - iMin);\n      const jDelta = 0.01 * (jMax - jMin);\n      const kDelta = 0.01 * (kMax - kMin);\n\n      iMin = Math.floor(iMin - iDelta);\n      iMax = Math.ceil(iMax + iDelta);\n      jMin = Math.floor(jMin - jDelta);\n      jMax = Math.ceil(jMax + jDelta);\n      kMin = Math.floor(kMin - kDelta);\n      kMax = Math.ceil(kMax + kDelta);\n\n      const boundsIJK = [\n        [iMin, iMax],\n        [jMin, jMax],\n        [kMin, kMax],\n      ] as [Types.Point2, Types.Point2, Types.Point2];\n\n      const worldPosEnd = imageData.indexToWorld([iMax, jMax, kMax]);\n      const canvasPosEnd = viewport.worldToCanvas(worldPosEnd);\n\n      let curRow = 0;\n      let intersections = [];\n      let intersectionCounter = 0;\n      const pointsInShape = pointInShapeCallback(\n        imageData,\n        (pointLPS, pointIJK) => {\n          let result = true;\n          const point = viewport.worldToCanvas(pointLPS);\n          if (point[1] != curRow) {\n            intersectionCounter = 0;\n            curRow = point[1];\n            intersections = getLineSegmentIntersectionsCoordinates(\n              canvasCoordinates,\n              point,\n              [canvasPosEnd[0], point[1]]\n            );\n            intersections.sort(\n              (function (index) {\n                return function (a, b) {\n                  return a[index] === b[index]\n                    ? 0\n                    : a[index] < b[index]\n                    ? -1\n                    : 1;\n                };\n              })(0)\n            );\n          }\n          if (intersections.length && point[0] > intersections[0][0]) {\n            intersections.shift();\n            intersectionCounter++;\n          }\n          if (intersectionCounter % 2 === 0) {\n            result = false;\n          }\n          return result;\n        },\n        this.configuration.statsCalculator.statsCallback,\n        boundsIJK\n      );\n\n      const modalityUnitOptions = {\n        isPreScaled: isViewportPreScaled(viewport, targetId),\n        isSuvScaled: this.isSuvScaled(\n          viewport,\n          targetId,\n          annotation.metadata.referencedImageId\n        ),\n      };\n\n      const modalityUnit = getModalityUnit(\n        metadata.Modality,\n        annotation.metadata.referencedImageId,\n        modalityUnitOptions\n      );\n\n      const stats = this.configuration.statsCalculator.getStatistics();\n\n      cachedStats[targetId] = {\n        Modality: metadata.Modality,\n        area,\n        perimeter: calculatePerimeter(canvasCoordinates, closed),\n        mean: stats.mean?.value,\n        max: stats.max?.value,\n        stdDev: stats.stdDev?.value,\n        statsArray: stats.array,\n        pointsInShape: pointsInShape,\n        areaUnit: areaUnits,\n        modalityUnit,\n      };\n    }\n\n    triggerAnnotationModified(\n      annotation,\n      enabledElement.viewport.element,\n      ChangeTypes.StatsUpdated\n    );\n\n    annotation.invalidated = false;\n\n    return cachedStats;\n  };\n\n  private _renderStats = (\n    annotation,\n    viewport,\n    enabledElement,\n    svgDrawingHelper\n  ) => {\n    const { data } = <PlanarFreehandROIAnnotation>annotation;\n    const targetId = this.getTargetId(viewport);\n\n    const styleSpecifier: AnnotationStyle.StyleSpecifier = {\n      toolGroupId: this.toolGroupId,\n      toolName: this.getToolName(),\n      viewportId: enabledElement.viewport.id,\n    };\n\n    const options = this.getLinkedTextBoxStyle(styleSpecifier, annotation);\n    if (!options.visibility) {\n      return;\n    }\n\n    const textLines = this.configuration.getTextLines(data, targetId);\n    if (!textLines || textLines.length === 0) {\n      return;\n    }\n\n    const canvasCoordinates = data.contour.polyline.map((p) =>\n      viewport.worldToCanvas(p)\n    );\n    if (!data.handles.textBox.hasMoved) {\n      const canvasTextBoxCoords = getTextBoxCoordsCanvas(canvasCoordinates);\n\n      data.handles.textBox.worldPosition =\n        viewport.canvasToWorld(canvasTextBoxCoords);\n    }\n\n    const textBoxPosition = viewport.worldToCanvas(\n      data.handles.textBox.worldPosition\n    );\n\n    const textBoxUID = '1';\n    const boundingBox = drawLinkedTextBox(\n      svgDrawingHelper,\n      annotation.annotationUID ?? '',\n      textBoxUID,\n      textLines,\n      textBoxPosition,\n      canvasCoordinates,\n      {},\n      options\n    );\n\n    const { x: left, y: top, width, height } = boundingBox;\n\n    data.handles.textBox.worldBoundingBox = {\n      topLeft: viewport.canvasToWorld([left, top]),\n      topRight: viewport.canvasToWorld([left + width, top]),\n      bottomLeft: viewport.canvasToWorld([left, top + height]),\n      bottomRight: viewport.canvasToWorld([left + width, top + height]),\n    };\n  };\n}\n\nfunction defaultGetTextLines(data, targetId): string[] {\n  const cachedVolumeStats = data.cachedStats[targetId];\n  const {\n    area,\n    mean,\n    stdDev,\n    perimeter,\n    max,\n    isEmptyArea,\n    areaUnit,\n    modalityUnit,\n  } = cachedVolumeStats || {};\n\n  const textLines: string[] = [];\n\n  if (area) {\n    const areaLine = isEmptyArea\n      ? `Area: Oblique not supported`\n      : `Area: ${roundNumber(area)} ${areaUnit}`;\n    textLines.push(areaLine);\n  }\n\n  if (mean) {\n    textLines.push(`Mean: ${roundNumber(mean)} ${modalityUnit}`);\n  }\n\n  if (Number.isFinite(max)) {\n    textLines.push(`Max: ${roundNumber(max)} ${modalityUnit}`);\n  }\n\n  if (stdDev) {\n    textLines.push(`Std Dev: ${roundNumber(stdDev)} ${modalityUnit}`);\n  }\n\n  if (perimeter) {\n    textLines.push(`Perimeter: ${roundNumber(perimeter)} ${modalityUnit}`);\n  }\n\n  return textLines;\n}\n\nPlanarFreehandROITool.toolName = 'PlanarFreehandROI';\nexport default PlanarFreehandROITool;\n","import {\n  getEnabledElementByIds,\n  Types,\n  utilities as csUtils,\n} from '@cornerstonejs/core';\nimport Representations from '../../enums/SegmentationRepresentations';\nimport { config as segmentationConfig } from '../../stateManagement/segmentation';\nimport { setSegmentationVisibility } from '../../stateManagement/segmentation/config/segmentationVisibility';\nimport { getSegmentationRepresentations } from '../../stateManagement/segmentation/segmentationState';\nimport { getToolGroup } from '../../store/ToolGroupManager';\nimport { PublicToolProps, ToolProps } from '../../types';\nimport { BaseTool } from '../base';\n\nimport {\n  SegmentationRepresentationConfig,\n  ToolGroupSpecificRepresentation,\n} from '../../types/SegmentationStateTypes';\nimport { surfaceDisplay } from './Surface';\nimport { contourDisplay } from './Contour';\nimport { labelmapDisplay } from './Labelmap';\nimport SegmentationRepresentations from '../../enums/SegmentationRepresentations';\nimport { addTool, state } from '../../store';\nimport PlanarFreehandContourSegmentationTool from '../annotation/PlanarFreehandContourSegmentationTool';\n\nconst planarContourToolName = PlanarFreehandContourSegmentationTool.toolName;\n/**\n * In Cornerstone3DTools, displaying of segmentations are handled by the SegmentationDisplayTool.\n * Generally, any Segmentation can be viewed in various representations such as\n * labelmap (3d), contours, surface etc. As of now, Cornerstone3DTools only implements\n * Labelmap representation.\n *\n * SegmentationDisplayTool works at ToolGroup level, and is responsible for displaying the\n * segmentation representation for ALL viewports of a toolGroup, this way we can support complex\n * scenarios for displaying segmentations.\n *\n * Current Limitations:\n * - Only supports rendering of the volumetric segmentations in 3D space. (StackViewport segmentations are not supported yet)\n * - Labelmap representation is the only supported representation for now.\n *\n * Similar to other tools in Cornerstone3DTools, the SegmentationDisplayTool should\n * be added to the CornerstoneTools by calling cornerstoneTools.addTool(SegmentationDisplayTool)\n * and a toolGroup should be created for it using the ToolGroupManager API, finally\n * viewports information such as viewportId and renderingEngineId should be provided\n * to the toolGroup and the SegmentationDisplayTool should be set to be activated.\n *\n *\n */\nclass SegmentationDisplayTool extends BaseTool {\n  static toolName;\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      configuration: {},\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n  }\n\n  onSetToolEnabled(): void {\n    const toolGroupId = this.toolGroupId;\n    const toolGroupSegmentationRepresentations =\n      getSegmentationRepresentations(toolGroupId);\n\n    if (\n      !toolGroupSegmentationRepresentations ||\n      toolGroupSegmentationRepresentations.length === 0\n    ) {\n      return;\n    }\n\n    // for each segmentationData, make the visibility true\n    toolGroupSegmentationRepresentations.forEach(\n      (segmentationRepresentation) => {\n        setSegmentationVisibility(\n          toolGroupId,\n          segmentationRepresentation.segmentationRepresentationUID,\n          true\n        );\n      }\n    );\n  }\n\n  onSetToolDisabled(): void {\n    const toolGroupId = this.toolGroupId;\n    const toolGroupSegmentationRepresentations =\n      getSegmentationRepresentations(toolGroupId);\n\n    if (\n      !toolGroupSegmentationRepresentations ||\n      toolGroupSegmentationRepresentations.length === 0\n    ) {\n      return;\n    }\n\n    // for each segmentationData, make the visibility false\n    toolGroupSegmentationRepresentations.forEach(\n      (segmentationRepresentation) => {\n        setSegmentationVisibility(\n          toolGroupId,\n          segmentationRepresentation.segmentationRepresentationUID,\n          false\n        );\n      }\n    );\n  }\n\n  /**\n   * It is used to trigger the render for each segmentations in the toolGroup.\n   * Based on the segmentation representation type, it will call the corresponding\n   * render function.\n   *\n   * @param toolGroupId - the toolGroupId\n   */\n  renderSegmentation = (toolGroupId: string): void => {\n    const toolGroup = getToolGroup(toolGroupId);\n\n    if (!toolGroup) {\n      return;\n    }\n\n    const toolGroupSegmentationRepresentations =\n      getSegmentationRepresentations(toolGroupId);\n\n    if (\n      !toolGroupSegmentationRepresentations ||\n      toolGroupSegmentationRepresentations.length === 0\n    ) {\n      return;\n    }\n\n    // toolGroup Viewports\n    const toolGroupViewports = toolGroup.viewportsInfo.map(\n      ({ renderingEngineId, viewportId }) => {\n        const enabledElement = getEnabledElementByIds(\n          viewportId,\n          renderingEngineId\n        );\n\n        if (enabledElement) {\n          return enabledElement.viewport;\n        }\n      }\n    );\n\n    // Render each segmentationData, in each viewport in the toolGroup\n    const segmentationRenderList = toolGroupSegmentationRepresentations.map(\n      (representation: ToolGroupSpecificRepresentation) => {\n        const config = this._getMergedRepresentationsConfig(toolGroupId);\n\n        const viewportsRenderList = [];\n\n        const renderers = {\n          [Representations.Labelmap]: labelmapDisplay,\n          [Representations.Contour]: contourDisplay,\n          [Representations.Surface]: surfaceDisplay,\n        };\n\n        if (representation.type === SegmentationRepresentations.Contour) {\n          // if the representation is contour we need to make sure\n          // that the planarFreeHandTool is added to the toolGroup\n          this.addPlanarFreeHandToolIfAbsent(toolGroupId);\n        }\n\n        const display = renderers[representation.type];\n\n        for (const viewport of toolGroupViewports) {\n          const renderedViewport = display.render(\n            viewport as Types.IVolumeViewport,\n            representation,\n            config\n          );\n\n          viewportsRenderList.push(renderedViewport);\n        }\n        return viewportsRenderList;\n      }\n    );\n\n    Promise.allSettled(segmentationRenderList).then(() => {\n      // for all viewports in the toolGroup trigger a re-render\n      toolGroupViewports.forEach((viewport) => {\n        viewport.render();\n      });\n    });\n  };\n\n  addPlanarFreeHandToolIfAbsent(toolGroupId) {\n    // if it is contour we should check if the toolGroup and more importantly\n    // the cornerstoneTools have the planarFreeHandTool added\n    if (!(planarContourToolName in state.tools)) {\n      addTool(PlanarFreehandContourSegmentationTool);\n    }\n\n    const toolGroup = getToolGroup(toolGroupId);\n\n    // check if toolGroup has this tool\n    if (!toolGroup.hasTool(planarContourToolName)) {\n      toolGroup.addTool(planarContourToolName);\n      toolGroup.setToolPassive(planarContourToolName);\n    }\n  }\n\n  /**\n   * Merge the toolGroup specific configuration with the default global configuration\n   * @param toolGroupId\n   * @returns\n   */\n  _getMergedRepresentationsConfig(\n    toolGroupId: string\n  ): SegmentationRepresentationConfig {\n    const toolGroupConfig =\n      segmentationConfig.getToolGroupSpecificConfig(toolGroupId);\n    const globalConfig = segmentationConfig.getGlobalConfig();\n\n    // merge two configurations and override the global config\n    const mergedConfig = csUtils.deepMerge(globalConfig, toolGroupConfig);\n\n    return mergedConfig;\n  }\n}\n\nSegmentationDisplayTool.toolName = 'SegmentationDisplay';\nexport default SegmentationDisplayTool;\n","import {\n  getEnabledElement,\n  cache,\n  StackViewport,\n  utilities as csUtils,\n} from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport { addAnnotation, getAnnotations } from '../../stateManagement';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\n\nimport {\n  drawHandles as drawHandlesSvg,\n  drawRect as drawRectSvg,\n} from '../../drawingSvg';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport { hideElementCursor } from '../../cursors/elementCursor';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\nimport { triggerAnnotationModified } from '../../stateManagement/annotation/helpers/state';\nimport {\n  PublicToolProps,\n  ToolProps,\n  EventTypes,\n  SVGDrawingHelper,\n} from '../../types';\nimport { RectangleROIThresholdAnnotation } from '../../types/ToolSpecificAnnotationTypes';\nimport RectangleROITool from '../annotation/RectangleROITool';\nimport { StyleSpecifier } from '../../types/AnnotationStyle';\n\n/**\n * This tool is exactly the RectangleROITool but only draws a rectangle on the image,\n * and by using utility functions such as thresholdByRange and thresholdByROIStat it can be used to\n * create a segmentation. This tool, however, does not calculate the statistics\n * as RectangleROITool does.\n */\nclass RectangleROIThresholdTool extends RectangleROITool {\n  static toolName;\n  _throttledCalculateCachedStats: any;\n  editData: {\n    annotation: any;\n    viewportIdsToRender: string[];\n    handleIndex?: number;\n    newAnnotation?: boolean;\n    hasMoved?: boolean;\n  } | null;\n  isDrawing: boolean;\n  isHandleOutsideImage: boolean;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        shadow: true,\n        preventHandleOutsideImage: false,\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n  }\n\n  /**\n   * Based on the current position of the mouse and the enabledElement it creates\n   * the edit data for the tool.\n   *\n   * @param evt -  EventTypes.NormalizedMouseEventType\n   * @returns The annotation object.\n   *\n   */\n  addNewAnnotation = (evt: EventTypes.InteractionEventType) => {\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const worldPos = currentPoints.world;\n\n    const enabledElement = getEnabledElement(element);\n    const { viewport, renderingEngine } = enabledElement;\n\n    this.isDrawing = true;\n\n    const camera = viewport.getCamera();\n    const { viewPlaneNormal, viewUp } = camera;\n\n    const targetId = this.getTargetId(viewport);\n    let referencedImageId, volumeId;\n\n    if (viewport instanceof StackViewport) {\n      referencedImageId = targetId.split('imageId:')[1];\n    } else {\n      volumeId = csUtils.getVolumeId(targetId);\n      const imageVolume = cache.getVolume(volumeId);\n      referencedImageId = csUtils.getClosestImageId(\n        imageVolume,\n        worldPos,\n        viewPlaneNormal\n      );\n    }\n\n    const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n    // Todo: how not to store enabledElement on the annotation, segmentationModule needs the element to\n    // decide on the active segmentIndex, active segmentationIndex etc.\n    const annotation = {\n      highlighted: true,\n      invalidated: true,\n      metadata: {\n        viewPlaneNormal: <Types.Point3>[...viewPlaneNormal],\n        enabledElement,\n        viewUp: <Types.Point3>[...viewUp],\n        FrameOfReferenceUID,\n        referencedImageId,\n        toolName: this.getToolName(),\n        volumeId,\n      },\n      data: {\n        label: '',\n        handles: {\n          // No need a textBox\n          textBox: {\n            hasMoved: false,\n            worldPosition: null,\n            worldBoundingBox: null,\n          },\n          points: [\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n          ],\n          activeHandleIndex: null,\n        },\n        segmentationId: null,\n      },\n    };\n\n    addAnnotation(annotation, element);\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      handleIndex: 3,\n      newAnnotation: true,\n      hasMoved: false,\n    };\n    this._activateDraw(element);\n\n    hideElementCursor(element);\n\n    evt.preventDefault();\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    return annotation;\n  };\n\n  /**\n   * it is used to draw the RectangleROI Threshold annotation in each\n   * request animation frame.\n   *\n   * @param enabledElement - The Cornerstone's enabledElement.\n   * @param svgDrawingHelper - The svgDrawingHelper providing the context for drawing.\n   */\n  renderAnnotation = (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper\n  ): boolean => {\n    let renderStatus = false;\n    const { viewport } = enabledElement;\n    const { element } = viewport;\n    let annotations = getAnnotations(this.getToolName(), element);\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    annotations = this.filterInteractableAnnotationsForElement(\n      element,\n      annotations\n    );\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    const styleSpecifier: StyleSpecifier = {\n      toolGroupId: this.toolGroupId,\n      toolName: this.getToolName(),\n      viewportId: enabledElement.viewport.id,\n    };\n\n    for (let i = 0; i < annotations.length; i++) {\n      const annotation = annotations[i] as RectangleROIThresholdAnnotation;\n      const { annotationUID, data } = annotation;\n      const { points, activeHandleIndex } = data.handles;\n      const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n\n      styleSpecifier.annotationUID = annotationUID;\n\n      const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n      const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n      const color = 'rgb(255, 255, 255)'\n\n      // If rendering engine has been destroyed while rendering\n      if (!viewport.getRenderingEngine()) {\n        console.warn('Rendering Engine has been destroyed');\n        return renderStatus;\n      }\n\n      // Todo: This is not correct way to add the event trigger,\n      // this will trigger on all mouse hover too. Problem is that we don't\n      // have a cached stats mechanism for this tool yet?\n      triggerAnnotationModified(annotation, element);\n\n      let activeHandleCanvasCoords;\n\n      if (!isAnnotationVisible(annotationUID)) {\n        continue;\n      }\n\n      if (\n        !isAnnotationLocked(annotation) &&\n        !this.editData &&\n        activeHandleIndex !== null\n      ) {\n        // Not locked or creating and hovering over handle, so render handle.\n        activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]];\n      }\n\n      if (activeHandleCanvasCoords) {\n        const handleGroupUID = '0';\n\n        drawHandlesSvg(\n          svgDrawingHelper,\n          annotationUID,\n          handleGroupUID,\n          activeHandleCanvasCoords,\n          {\n            color,\n          }\n        );\n      }\n\n      const rectangleUID = '0';\n      drawRectSvg(\n        svgDrawingHelper,\n        annotationUID,\n        rectangleUID,\n        canvasCoordinates[0],\n        canvasCoordinates[3],\n        {\n          color,\n          lineDash,\n          lineWidth,\n        }\n      );\n\n      renderStatus = true;\n    }\n\n    return renderStatus;\n  };\n}\n\nRectangleROIThresholdTool.toolName = 'RectangleROIThreshold';\nexport default RectangleROIThresholdTool;\n","import {\n  getEnabledElement,\n  cache,\n  StackViewport,\n  metaData,\n  utilities as csUtils,\n} from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport { vec3 } from 'gl-matrix';\nimport {\n  addAnnotation,\n  getAnnotations,\n  removeAnnotation,\n} from '../../stateManagement';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport { triggerAnnotationModified } from '../../stateManagement/annotation/helpers/state';\nimport {\n  drawHandles as drawHandlesSvg,\n  drawRect as drawRectSvg,\n} from '../../drawingSvg';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport throttle from '../../utilities/throttle';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\nimport {\n  hideElementCursor,\n  resetElementCursor,\n} from '../../cursors/elementCursor';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport { triggerAnnotationCompleted } from '../../stateManagement/annotation/helpers/state';\n\nimport {\n  PublicToolProps,\n  ToolProps,\n  EventTypes,\n  SVGDrawingHelper,\n} from '../../types';\nimport { RectangleROIStartEndThresholdAnnotation } from '../../types/ToolSpecificAnnotationTypes';\nimport RectangleROITool from '../annotation/RectangleROITool';\nimport { StyleSpecifier } from '../../types/AnnotationStyle';\nimport { pointInShapeCallback } from '../../utilities/';\n\nconst { transformWorldToIndex } = csUtils;\n\n/**\n * This tool is similar to the RectangleROIThresholdTool which\n * only draws a rectangle on the image, and by using utility functions\n * such as thresholdByRange and thresholdByROIStat it can be used to\n * create a segmentation. The only difference is that it only acts on the\n * acquisition plane and not the 3D volume, and accepts a start and end\n * slice, and renders a dashed rectangle on the image between the start and end\n * but a solid rectangle on start and end slice. Utility functions should be used\n * to modify the start and end slice.\n * // Todo: right now only the first slice has grabbable handles, need to make\n * // it so that the handles are grabbable on all slices.\n */\nclass RectangleROIStartEndThresholdTool extends RectangleROITool {\n  static toolName;\n  _throttledCalculateCachedStats: any;\n  editData: {\n    annotation: any;\n    viewportIdsToRender: string[];\n    handleIndex?: number;\n    newAnnotation?: boolean;\n    hasMoved?: boolean;\n  } | null;\n  isDrawing: boolean;\n  isHandleOutsideImage: boolean;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      configuration: {\n        numSlicesToPropagate: 10,\n        computePointsInsideVolume: false,\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n\n    this._throttledCalculateCachedStats = throttle(\n      this._calculateCachedStatsTool,\n      100,\n      { trailing: true }\n    );\n  }\n\n  /**\n   * Based on the current position of the mouse and the enabledElement it creates\n   * the edit data for the tool.\n   *\n   * @param evt -  EventTypes.NormalizedMouseEventType\n   * @returns The annotation object.\n   *\n   */\n  addNewAnnotation = (evt: EventTypes.InteractionEventType) => {\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const worldPos = currentPoints.world;\n\n    const enabledElement = getEnabledElement(element);\n    const { viewport, renderingEngine } = enabledElement;\n\n    this.isDrawing = true;\n\n    const camera = viewport.getCamera();\n    const { viewPlaneNormal, viewUp } = camera;\n\n    let referencedImageId, imageVolume, volumeId;\n    if (viewport instanceof StackViewport) {\n      throw new Error('Stack Viewport Not implemented');\n    } else {\n      const targetId = this.getTargetId(viewport);\n      volumeId = csUtils.getVolumeId(targetId);\n      imageVolume = cache.getVolume(volumeId);\n      referencedImageId = csUtils.getClosestImageId(\n        imageVolume,\n        worldPos,\n        viewPlaneNormal\n      );\n    }\n\n    if (!referencedImageId) {\n      throw new Error('This tool does not work on non-acquisition planes');\n    }\n\n    const startIndex = viewport.getCurrentImageIdIndex();\n    const spacingInNormal = csUtils.getSpacingInNormalDirection(\n      imageVolume,\n      viewPlaneNormal\n    );\n\n    // We cannot simply add numSlicesToPropagate to startIndex because\n    // the order of imageIds can be from top to bottom or bottom to top and\n    // we want to make sure it is always propagated in the direction of the\n    // view and also to make sure we don't go out of bounds.\n    const endIndex = this._getEndSliceIndex(\n      imageVolume,\n      worldPos,\n      spacingInNormal,\n      viewPlaneNormal\n    );\n\n    const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n\n    const annotation = {\n      highlighted: true,\n      invalidated: true,\n      metadata: {\n        viewPlaneNormal: <Types.Point3>[...viewPlaneNormal],\n        enabledElement,\n        viewUp: <Types.Point3>[...viewUp],\n        FrameOfReferenceUID,\n        referencedImageId,\n        toolName: this.getToolName(),\n        volumeId,\n        spacingInNormal,\n      },\n      data: {\n        label: '',\n        startSlice: startIndex,\n        endSlice: endIndex,\n        cachedStats: {\n          pointsInVolume: [],\n          projectionPoints: [],\n          projectionPointsImageIds: [referencedImageId],\n        },\n        handles: {\n          // No need a textBox\n          textBox: {\n            hasMoved: false,\n            worldPosition: null,\n            worldBoundingBox: null,\n          },\n          points: [\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n          ],\n          activeHandleIndex: null,\n        },\n        labelmapUID: null,\n      },\n    };\n\n    // update the projection points in 3D space, since we are projecting\n    // the points to the slice plane, we need to make sure the points are\n    // computed for later export\n    this._computeProjectionPoints(annotation, imageVolume);\n\n    addAnnotation(annotation, element);\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      handleIndex: 3,\n      newAnnotation: true,\n      hasMoved: false,\n    };\n    this._activateDraw(element);\n\n    hideElementCursor(element);\n\n    evt.preventDefault();\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    return annotation;\n  };\n\n  _endCallback = (evt: EventTypes.InteractionEventType): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    const { annotation, viewportIdsToRender, newAnnotation, hasMoved } =\n      this.editData;\n    const { data } = annotation;\n\n    if (newAnnotation && !hasMoved) {\n      return;\n    }\n\n    data.handles.activeHandleIndex = null;\n\n    this._deactivateModify(element);\n    this._deactivateDraw(element);\n\n    resetElementCursor(element);\n\n    const enabledElement = getEnabledElement(element);\n\n    this.editData = null;\n    this.isDrawing = false;\n\n    if (\n      this.isHandleOutsideImage &&\n      this.configuration.preventHandleOutsideImage\n    ) {\n      removeAnnotation(annotation.annotationUID);\n    }\n\n    const targetId = this.getTargetId(enabledElement.viewport);\n    const imageVolume = cache.getVolume(targetId.split(/volumeId:|\\?/)[1]);\n\n    if (this.configuration.calculatePointsInsideVolume) {\n      this._computePointsInsideVolume(annotation, imageVolume, enabledElement);\n    }\n\n    triggerAnnotationRenderForViewportIds(\n      enabledElement.renderingEngine,\n      viewportIdsToRender\n    );\n\n    if (newAnnotation) {\n      triggerAnnotationCompleted(annotation);\n    }\n  };\n\n  // Todo: make it work for planes other than acquisition planes\n  _computeProjectionPoints(\n    annotation: RectangleROIStartEndThresholdAnnotation,\n    imageVolume: Types.IImageVolume\n  ): void {\n    const { data, metadata } = annotation;\n    const { viewPlaneNormal, spacingInNormal } = metadata;\n    const { imageData } = imageVolume;\n    const { startSlice, endSlice } = data;\n    const { points } = data.handles;\n\n    const startIJK = transformWorldToIndex(imageData, points[0]);\n\n    if (startIJK[2] !== startSlice) {\n      throw new Error('Start slice does not match');\n    }\n\n    // substitute the end slice index 2 with startIJK index 2\n    const endIJK = vec3.fromValues(startIJK[0], startIJK[1], endSlice);\n\n    const startWorld = vec3.create();\n    imageData.indexToWorldVec3(startIJK, startWorld);\n\n    const endWorld = vec3.create();\n    imageData.indexToWorldVec3(endIJK, endWorld);\n\n    // distance between start and end slice in the world coordinate\n    const distance = vec3.distance(startWorld, endWorld);\n\n    // for each point inside points, navigate in the direction of the viewPlaneNormal\n    // with amount of spacingInNormal, and calculate the next slice until we reach the distance\n    const newProjectionPoints = [];\n    for (let dist = 0; dist < distance; dist += spacingInNormal) {\n      newProjectionPoints.push(\n        points.map((point) => {\n          const newPoint = vec3.create();\n          vec3.scaleAndAdd(newPoint, point, viewPlaneNormal, dist);\n          return Array.from(newPoint);\n        })\n      );\n    }\n\n    data.cachedStats.projectionPoints = newProjectionPoints;\n\n    // Find the imageIds for the projection points\n    const projectionPointsImageIds = [];\n    for (const RectanglePoints of newProjectionPoints) {\n      const imageId = csUtils.getClosestImageId(\n        imageVolume,\n        RectanglePoints[0],\n        viewPlaneNormal\n      );\n      projectionPointsImageIds.push(imageId);\n    }\n\n    data.cachedStats.projectionPointsImageIds = projectionPointsImageIds;\n  }\n\n  //This function return all the points inside the ROI for every slices between startSlice and endSlice\n  _computePointsInsideVolume(annotation, imageVolume, enabledElement) {\n    const { data } = annotation;\n    const projectionPoints = data.cachedStats.projectionPoints;\n\n    const pointsInsideVolume: Types.Point3[][] = [[]];\n\n    for (let i = 0; i < projectionPoints.length; i++) {\n      // If image does not exists for the targetId, skip. This can be due\n      // to various reasons such as if the target was a volumeViewport, and\n      // the volumeViewport has been decached in the meantime.\n      if (!imageVolume) {\n        continue;\n      }\n\n      const projectionPoint = projectionPoints[i][0];\n\n      const worldPos1 = data.handles.points[0];\n      const worldPos2 = data.handles.points[3];\n\n      const { dimensions, imageData } = imageVolume;\n\n      const worldPos1Index = transformWorldToIndex(imageData, worldPos1);\n      //We only need to change the Z of our bounds so we are getting the Z from the current projection point\n      const worldProjectionPointIndex = transformWorldToIndex(\n        imageData,\n        projectionPoint\n      );\n\n      worldPos1Index[0] = Math.floor(worldPos1Index[0]);\n      worldPos1Index[1] = Math.floor(worldPos1Index[1]);\n      worldPos1Index[2] = Math.floor(worldProjectionPointIndex[2]);\n\n      const worldPos2Index = transformWorldToIndex(imageData, worldPos2);\n\n      worldPos2Index[0] = Math.floor(worldPos2Index[0]);\n      worldPos2Index[1] = Math.floor(worldPos2Index[1]);\n      worldPos2Index[2] = Math.floor(worldProjectionPointIndex[2]);\n\n      // Check if one of the indexes are inside the volume, this then gives us\n      // Some area to do stats over.\n\n      if (this._isInsideVolume(worldPos1Index, worldPos2Index, dimensions)) {\n        this.isHandleOutsideImage = false;\n        const iMin = Math.min(worldPos1Index[0], worldPos2Index[0]);\n        const iMax = Math.max(worldPos1Index[0], worldPos2Index[0]);\n\n        const jMin = Math.min(worldPos1Index[1], worldPos2Index[1]);\n        const jMax = Math.max(worldPos1Index[1], worldPos2Index[1]);\n\n        const kMin = Math.min(worldPos1Index[2], worldPos2Index[2]);\n        const kMax = Math.max(worldPos1Index[2], worldPos2Index[2]);\n\n        const boundsIJK = [\n          [iMin, iMax],\n          [jMin, jMax],\n          [kMin, kMax],\n        ] as [Types.Point2, Types.Point2, Types.Point2];\n\n        const pointsInShape = pointInShapeCallback(\n          imageData,\n          () => true,\n          null,\n          boundsIJK\n        );\n\n        //@ts-ignore\n        pointsInsideVolume.push(pointsInShape);\n      }\n    }\n    data.cachedStats.pointsInVolume = pointsInsideVolume;\n  }\n\n  _calculateCachedStatsTool(annotation, enabledElement) {\n    const data = annotation.data;\n    const { viewport } = enabledElement;\n\n    const { cachedStats } = data;\n    const targetId = this.getTargetId(viewport);\n    const imageVolume = cache.getVolume(targetId.split(/volumeId:|\\?/)[1]);\n\n    // Todo: this shouldn't be here, this is a performance issue\n    // Since we are extending the RectangleROI class, we need to\n    // bring the logic for handle to some cachedStats calculation\n    this._computeProjectionPoints(annotation, imageVolume);\n\n    annotation.invalidated = false;\n\n    // Dispatching annotation modified\n    triggerAnnotationModified(annotation, viewport.element);\n\n    return cachedStats;\n  }\n\n  /**\n   * it is used to draw the rectangleROIStartEnd annotation in each\n   * request animation frame.\n   *\n   * @param enabledElement - The Cornerstone's enabledElement.\n   * @param svgDrawingHelper - The svgDrawingHelper providing the context for drawing.\n   */\n  renderAnnotation = (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper\n  ): boolean => {\n    let renderStatus = false;\n    const { viewport } = enabledElement;\n\n    const annotations = getAnnotations(this.getToolName(), viewport.element);\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    const sliceIndex = viewport.getCurrentImageIdIndex();\n\n    const styleSpecifier: StyleSpecifier = {\n      toolGroupId: this.toolGroupId,\n      toolName: this.getToolName(),\n      viewportId: enabledElement.viewport.id,\n    };\n\n    for (let i = 0; i < annotations.length; i++) {\n      const annotation = annotations[\n        i\n      ] as RectangleROIStartEndThresholdAnnotation;\n      const { annotationUID, data } = annotation;\n      const { startSlice, endSlice } = data;\n      const { points, activeHandleIndex } = data.handles;\n\n      const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n\n      styleSpecifier.annotationUID = annotationUID;\n\n      const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n      const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n      const color = 'rgb(255, 255, 255)'\n      // range of slices to render based on the start and end slice, like\n      // np.arange\n\n      // if indexIJK is outside the start/end slice, we don't render\n      if (\n        sliceIndex < Math.min(startSlice, endSlice) ||\n        sliceIndex > Math.max(startSlice, endSlice)\n      ) {\n        continue;\n      }\n\n      // WE HAVE TO CACHE STATS BEFORE FETCHING TEXT\n\n      if (annotation.invalidated) {\n        this._throttledCalculateCachedStats(annotation, enabledElement);\n      }\n\n      // if it is inside the start/end slice, but not exactly the first or\n      // last slice, we render the line in dash, but not the handles\n      let firstOrLastSlice = false;\n      if (sliceIndex === startSlice || sliceIndex === endSlice) {\n        firstOrLastSlice = true;\n      }\n\n      // If rendering engine has been destroyed while rendering\n      if (!viewport.getRenderingEngine()) {\n        console.warn('Rendering Engine has been destroyed');\n        return renderStatus;\n      }\n\n      let activeHandleCanvasCoords;\n\n      if (!isAnnotationVisible(annotationUID)) {\n        continue;\n      }\n\n      if (\n        !isAnnotationLocked(annotation) &&\n        !this.editData &&\n        activeHandleIndex !== null &&\n        firstOrLastSlice\n      ) {\n        // Not locked or creating and hovering over handle, so render handle.\n        activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]];\n      }\n\n      if (activeHandleCanvasCoords) {\n        const handleGroupUID = '0';\n\n        drawHandlesSvg(\n          svgDrawingHelper,\n          annotationUID,\n          handleGroupUID,\n          activeHandleCanvasCoords,\n          {\n            color,\n          }\n        );\n      }\n\n      let lineDashToUse = lineDash;\n\n      if (!firstOrLastSlice) {\n        lineDashToUse = 2;\n      }\n\n      const rectangleUID = '0';\n      drawRectSvg(\n        svgDrawingHelper,\n        annotationUID,\n        rectangleUID,\n        canvasCoordinates[0],\n        canvasCoordinates[3],\n        {\n          color,\n          lineDash: lineDashToUse,\n          lineWidth,\n        }\n      );\n\n      renderStatus = true;\n    }\n\n    return renderStatus;\n  };\n\n  _getEndSliceIndex(\n    imageVolume: Types.IImageVolume,\n    worldPos: Types.Point3,\n    spacingInNormal: number,\n    viewPlaneNormal: Types.Point3\n  ): number | undefined {\n    const numSlicesToPropagate = this.configuration.numSlicesToPropagate;\n\n    // get end position by moving from worldPos in the direction of viewplaneNormal\n    // with amount of numSlicesToPropagate * spacingInNormal\n    const endPos = vec3.create();\n    vec3.scaleAndAdd(\n      endPos,\n      worldPos,\n      viewPlaneNormal,\n      numSlicesToPropagate * spacingInNormal\n    );\n\n    const halfSpacingInNormalDirection = spacingInNormal / 2;\n    // Loop through imageIds of the imageVolume and find the one that is closest to endPos\n    const { imageIds } = imageVolume;\n    let imageIdIndex;\n    for (let i = 0; i < imageIds.length; i++) {\n      const imageId = imageIds[i];\n\n      const { imagePositionPatient } = metaData.get(\n        'imagePlaneModule',\n        imageId\n      );\n\n      const dir = vec3.create();\n      vec3.sub(dir, endPos, imagePositionPatient);\n\n      const dot = vec3.dot(dir, viewPlaneNormal);\n\n      if (Math.abs(dot) < halfSpacingInNormalDirection) {\n        imageIdIndex = i;\n      }\n    }\n\n    return imageIdIndex;\n  }\n}\n\nRectangleROIStartEndThresholdTool.toolName = 'RectangleROIStartEndThreshold';\nexport default RectangleROIStartEndThresholdTool;\n","import { utilities } from '@cornerstonejs/core';\n\nimport {\n  getAnnotationNearPoint,\n  getAnnotationNearPointOnEnabledElement,\n} from './getAnnotationNearPoint';\n\n// Lodash/common JS functionality\nimport debounce from './debounce';\nimport throttle from './throttle';\nimport isObject from './isObject';\nimport clip from './clip';\nimport calibrateImageSpacing from './calibrateImageSpacing';\nimport {\n  getCalibratedLengthUnitsAndScale,\n  getCalibratedProbeUnitsAndValue,\n  getCalibratedAspect,\n} from './getCalibratedUnits';\nimport triggerAnnotationRenderForViewportIds from './triggerAnnotationRenderForViewportIds';\nimport triggerAnnotationRenderForToolGroupIds from './triggerAnnotationRenderForToolGroupIds';\nimport triggerAnnotationRender from './triggerAnnotationRender';\nimport jumpToSlice from './viewport/jumpToSlice';\n\nimport pointInShapeCallback from './pointInShapeCallback';\nimport { getSphereBoundsInfo } from './getSphereBoundsInfo';\nimport scroll from './scroll';\nimport { pointToString } from './pointToString';\nimport annotationFrameRange from './annotationFrameRange';\nimport pointInSurroundingSphereCallback from './pointInSurroundingSphereCallback';\nimport getViewportForAnnotation from './getViewportForAnnotation';\nimport {\n  annotationHydration,\n  getClosestImageIdForStackViewport,\n} from './annotationHydration';\n// name spaces\nimport * as contours from './contours';\nimport * as segmentation from './segmentation';\nimport * as drawing from './drawing';\nimport * as math from './math';\nimport * as planar from './planar';\nimport * as viewportFilters from './viewportFilters';\nimport * as orientation from './orientation';\nimport * as cine from './cine';\nimport * as boundingBox from './boundingBox';\nimport * as planarFreehandROITool from './planarFreehandROITool';\nimport * as rectangleROITool from './rectangleROITool';\nimport { stackPrefetch, stackContextPrefetch } from './stackPrefetch';\nimport * as viewport from './viewport';\nimport * as touch from './touch';\nimport * as dynamicVolume from './dynamicVolume';\nimport * as polyDataUtils from './polyData/utils';\nimport * as voi from './voi';\nimport * as contourSegmentation from './contourSegmentation';\n\nconst roundNumber = utilities.roundNumber;\n\n// Events\nimport { triggerEvent } from '@cornerstonejs/core';\n\nexport {\n  math,\n  planar,\n  viewportFilters,\n  drawing,\n  debounce,\n  dynamicVolume,\n  throttle,\n  orientation,\n  isObject,\n  touch,\n  triggerEvent,\n  calibrateImageSpacing,\n  getCalibratedLengthUnitsAndScale,\n  getCalibratedProbeUnitsAndValue,\n  getCalibratedAspect,\n  segmentation,\n  contours,\n  triggerAnnotationRenderForViewportIds,\n  triggerAnnotationRenderForToolGroupIds,\n  triggerAnnotationRender,\n  pointInShapeCallback,\n  getSphereBoundsInfo,\n  getAnnotationNearPoint,\n  getViewportForAnnotation,\n  getAnnotationNearPointOnEnabledElement,\n  jumpToSlice,\n  pointInSurroundingSphereCallback,\n  viewport,\n  cine,\n  clip,\n  boundingBox,\n  rectangleROITool,\n  planarFreehandROITool,\n  stackPrefetch,\n  stackContextPrefetch,\n  scroll,\n  roundNumber,\n  pointToString,\n  polyDataUtils,\n  voi,\n  annotationFrameRange,\n  contourSegmentation,\n  annotationHydration,\n  getClosestImageIdForStackViewport,\n};\n","import { m as macro } from '../../macros2.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkPiecewiseFunction methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPiecewiseFunction(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPiecewiseFunction');\n\n  // Return the number of points which specify this function\n  publicAPI.getSize = () => model.nodes.length;\n\n  // Return the type of function stored in object:\n  // Function Types:\n  //    0 : Constant        (No change in slope between end points)\n  //    1 : NonDecreasing   (Always increasing or zero slope)\n  //    2 : NonIncreasing   (Always decreasing or zero slope)\n  //    3 : Varied          (Contains both decreasing and increasing slopes)\n  //    4 : Unknown         (Error condition)\n  //\n  publicAPI.getType = () => {\n    let value;\n    let prevValue = 0.0;\n    let functionType = 0;\n    if (model.nodes.length > 0) {\n      prevValue = model.nodes[0].y;\n    }\n    for (let i = 1; i < model.nodes.length; i++) {\n      value = model.nodes[i].y;\n\n      // Do not change the function type if equal\n      if (value !== prevValue) {\n        if (value > prevValue) {\n          switch (functionType) {\n            case 0:\n            case 1:\n              // NonDecreasing\n              functionType = 1;\n              break;\n            case 2:\n            default:\n              // Varied\n              functionType = 3;\n              break;\n          }\n        } else {\n          // value < prev_value\n          switch (functionType) {\n            case 0:\n            case 2:\n              // NonIncreasing\n              functionType = 2;\n              break;\n            case 1:\n            default:\n              // Varied\n              functionType = 3;\n              break;\n          }\n        }\n      }\n      prevValue = value;\n\n      // Exit loop if we find a Varied function\n      if (functionType === 3) {\n        break;\n      }\n    }\n    switch (functionType) {\n      case 0:\n        return 'Constant';\n      case 1:\n        return 'NonDecreasing';\n      case 2:\n        return 'NonIncreasing';\n      case 3:\n      default:\n        return 'Varied';\n    }\n  };\n\n  // Since we no longer store the data in an array, we must\n  // copy out of the vector into an array. No modified check -\n  // could be added if performance is a problem\n  publicAPI.getDataPointer = () => {\n    const size = model.nodes.length;\n    model.function = null;\n    if (size > 0) {\n      model.function = [];\n      for (let i = 0; i < size; i++) {\n        model.function[2 * i] = model.nodes[i].x;\n        model.function[2 * i + 1] = model.nodes[i].y;\n      }\n    }\n    return model.function;\n  };\n\n  // Returns the first point location which starts a non-zero segment of the\n  // function. Note that the value at this point may be zero.\n  publicAPI.getFirstNonZeroValue = () => {\n    // Check if no points specified\n    if (model.nodes.length === 0) {\n      return 0;\n    }\n    let allZero = 1;\n    let x = 0.0;\n    let i = 0;\n    for (; i < model.nodes.length; i++) {\n      if (model.nodes[i].y !== 0.0) {\n        allZero = 0;\n        break;\n      }\n    }\n\n    // If every specified point has a zero value then return\n    // a large value\n    if (allZero) {\n      x = Number.MAX_VALUE;\n    } else if (i > 0) {\n      // A point was found with a non-zero value\n      // Return the value of the point that precedes this one\n      x = model.nodes[i - 1].x;\n    } else if (model.clamping) {\n      // If this is the first point in the function, return its\n      // value is clamping is off, otherwise VTK_DOUBLE_MIN if\n      // clamping is on.\n      x = -Number.MAX_VALUE;\n    } else {\n      x = model.nodes[0].x;\n    }\n    return x;\n  };\n\n  // For a specified index value, get the node parameters\n  publicAPI.getNodeValue = (index, val) => {\n    const size = model.nodes.length;\n    if (index < 0 || index >= size) {\n      vtkErrorMacro('Index out of range!');\n      return -1;\n    }\n    val[0] = model.nodes[index].x;\n    val[1] = model.nodes[index].y;\n    val[2] = model.nodes[index].midpoint;\n    val[3] = model.nodes[index].sharpness;\n    return 1;\n  };\n\n  // For a specified index value, get the node parameters\n  publicAPI.setNodeValue = (index, val) => {\n    const size = model.nodes.length;\n    if (index < 0 || index >= size) {\n      vtkErrorMacro('Index out of range!');\n      return -1;\n    }\n    const oldX = model.nodes[index].x;\n    model.nodes[index].x = val[0];\n    model.nodes[index].y = val[1];\n    model.nodes[index].midpoint = val[2];\n    model.nodes[index].sharpness = val[3];\n    if (oldX !== val[0]) {\n      // The point has been moved, the order of points or the range might have\n      // been modified.\n      publicAPI.sortAndUpdateRange();\n      // No need to call Modified() here because SortAndUpdateRange() has done it\n      // already.\n    } else {\n      publicAPI.modified();\n    }\n    return 1;\n  };\n\n  // Adds a point to the function. If a duplicate point is inserted\n  // then the function value at that location is set to the new value.\n  // This is the legacy version that assumes midpoint = 0.5 and\n  // sharpness = 0.0\n  publicAPI.addPoint = (x, y) => publicAPI.addPointLong(x, y, 0.5, 0.0);\n\n  // Adds a point to the function and returns the array index of the point.\n  publicAPI.addPointLong = (x, y, midpoint, sharpness) => {\n    // Error check\n    if (midpoint < 0.0 || midpoint > 1.0) {\n      vtkErrorMacro('Midpoint outside range [0.0, 1.0]');\n      return -1;\n    }\n    if (sharpness < 0.0 || sharpness > 1.0) {\n      vtkErrorMacro('Sharpness outside range [0.0, 1.0]');\n      return -1;\n    }\n\n    // remove any node already at this X location\n    if (!model.allowDuplicateScalars) {\n      publicAPI.removePoint(x);\n    }\n\n    // Create the new node\n    const node = {\n      x,\n      y,\n      midpoint,\n      sharpness\n    };\n\n    // Add it, then sort to get everything in order\n    model.nodes.push(node);\n    publicAPI.sortAndUpdateRange();\n\n    // Now find this node so we can return the index\n    let i;\n    for (i = 0; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === x) {\n        break;\n      }\n    }\n\n    // If we didn't find it, something went horribly wrong so\n    // return -1\n    if (i < model.nodes.length) {\n      return i;\n    }\n    return -1;\n  };\n  publicAPI.setNodes = nodes => {\n    if (model.nodes !== nodes) {\n      model.nodes = nodes;\n      publicAPI.sortAndUpdateRange();\n    }\n  };\n\n  // Sort the vector in increasing order, then fill in\n  // the Range\n  publicAPI.sortAndUpdateRange = () => {\n    model.nodes.sort((a, b) => a.x - b.x);\n    const modifiedInvoked = publicAPI.updateRange();\n    // If range is updated, Modified() has been called, don't call it again.\n    if (!modifiedInvoked) {\n      publicAPI.modified();\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.updateRange = () => {\n    const oldRange = model.range.slice();\n    const size = model.nodes.length;\n    if (size) {\n      model.range[0] = model.nodes[0].x;\n      model.range[1] = model.nodes[size - 1].x;\n    } else {\n      model.range[0] = 0;\n      model.range[1] = 0;\n    }\n    // If the rage is the same, then no need to call Modified()\n    if (oldRange[0] === model.range[0] && oldRange[1] === model.range[1]) {\n      return false;\n    }\n    publicAPI.modified();\n    return true;\n  };\n\n  // Removes a point from the function. If no point is found then function\n  // remains the same.\n  publicAPI.removePoint = x => {\n    // First find the node since we need to know its\n    // index as our return value\n    let i;\n    for (i = 0; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === x) {\n        break;\n      }\n    }\n\n    // If the node doesn't exist, we return -1\n    if (i >= model.nodes.length) {\n      return -1;\n    }\n    const retVal = i;\n\n    // If the first or last point has been removed, then we update the range\n    // No need to sort here as the order of points hasn't changed.\n    let modifiedInvoked = false;\n    model.nodes.splice(i, 1);\n    if (i === 0 || i === model.nodes.length) {\n      modifiedInvoked = publicAPI.updateRange();\n    }\n    if (!modifiedInvoked) {\n      publicAPI.modified();\n    }\n    return retVal;\n  };\n\n  // Removes all points from the function.\n  publicAPI.removeAllPoints = () => {\n    model.nodes = [];\n    publicAPI.sortAndUpdateRange();\n  };\n\n  // Add in end points of line and remove any points between them\n  // Legacy method with no way to specify midpoint and sharpness\n  publicAPI.addSegment = (x1, y1, x2, y2) => {\n    // First, find all points in this range and remove them\n    publicAPI.sortAndUpdateRange();\n    for (let i = 0; i < model.nodes.length;) {\n      if (model.nodes[i].x >= x1 && model.nodes[i].x <= x2) {\n        model.nodes.splice(i, 1);\n      } else {\n        i++;\n      }\n    }\n\n    // Now add the points\n    publicAPI.addPoint(x1, y1, 0.5, 0.0);\n    publicAPI.addPoint(x2, y2, 0.5, 0.0);\n  };\n\n  // Return the value of the function at a position\n  publicAPI.getValue = x => {\n    const table = [];\n    publicAPI.getTable(x, x, 1, table);\n    return table[0];\n  };\n\n  // Remove all points outside the range, and make sure a point\n  // exists at each end of the range. Used as a convenience method\n  // for transfer function editors\n  publicAPI.adjustRange = range => {\n    if (range.length < 2) {\n      return 0;\n    }\n    const functionRange = publicAPI.getRange();\n\n    // Make sure we have points at each end of the range\n    if (functionRange[0] < range[0]) {\n      publicAPI.addPoint(range[0], publicAPI.getValue(range[0]));\n    } else {\n      publicAPI.addPoint(range[0], publicAPI.getValue(functionRange[0]));\n    }\n    if (functionRange[1] > range[1]) {\n      publicAPI.addPoint(range[1], publicAPI.getValue(range[1]));\n    } else {\n      publicAPI.addPoint(range[1], publicAPI.getValue(functionRange[1]));\n    }\n\n    // Remove all points out-of-range\n    publicAPI.sortAndUpdateRange();\n    for (let i = 0; i < model.nodes.length;) {\n      if (model.nodes[i].x >= range[0] && model.nodes[i].x <= range[1]) {\n        model.nodes.splice(i, 1);\n      } else {\n        ++i;\n      }\n    }\n    publicAPI.sortAndUpdateRange();\n    return 1;\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.estimateMinNumberOfSamples = (x1, x2) => {\n    const d = publicAPI.findMinimumXDistance();\n    return Math.ceil((x2 - x1) / d);\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.findMinimumXDistance = () => {\n    const size = model.nodes.length;\n    if (size < 2) {\n      return -1.0;\n    }\n    let distance = model.nodes[1].x - model.nodes[0].x;\n    for (let i = 0; i < size - 1; i++) {\n      const currentDist = model.nodes[i + 1].x - model.nodes[i].x;\n      if (currentDist < distance) {\n        distance = currentDist;\n      }\n    }\n    return distance;\n  };\n\n  // Returns a table of function values evaluated at regular intervals\n  /* eslint-disable prefer-destructuring */\n  /* eslint-disable no-continue */\n  publicAPI.getTable = function (xStart, xEnd, size, table) {\n    let stride = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n    let i;\n    let idx = 0;\n    const numNodes = model.nodes.length;\n\n    // Need to keep track of the last value so that\n    // we can fill in table locations past this with\n    // this value if Clamping is On.\n    let lastValue = 0.0;\n    if (numNodes !== 0) {\n      lastValue = model.nodes[numNodes - 1].y;\n    }\n    let x = 0.0;\n    let x1 = 0.0;\n    let x2 = 0.0;\n    let y1 = 0.0;\n    let y2 = 0.0;\n    let midpoint = 0.0;\n    let sharpness = 0.0;\n\n    // For each table entry\n    for (i = 0; i < size; i++) {\n      // Find our location in the table\n      const tidx = stride * i;\n\n      // Find our X location. If we are taking only 1 sample, make\n      // it halfway between start and end (usually start and end will\n      // be the same in this case)\n      if (size > 1) {\n        x = xStart + i / (size - 1.0) * (xEnd - xStart);\n      } else {\n        x = 0.5 * (xStart + xEnd);\n      }\n\n      // Do we need to move to the next node?\n      while (idx < numNodes && x > model.nodes[idx].x) {\n        idx++;\n        // If we are at a valid point index, fill in\n        // the value at this node, and the one before (the\n        // two that surround our current sample location)\n        // idx cannot be 0 since we just incremented it.\n        if (idx < numNodes) {\n          x1 = model.nodes[idx - 1].x;\n          x2 = model.nodes[idx].x;\n          y1 = model.nodes[idx - 1].y;\n          y2 = model.nodes[idx].y;\n\n          // We only need the previous midpoint and sharpness\n          // since these control this region\n          midpoint = model.nodes[idx - 1].midpoint;\n          sharpness = model.nodes[idx - 1].sharpness;\n\n          // Move midpoint away from extreme ends of range to avoid\n          // degenerate math\n          if (midpoint < 0.00001) {\n            midpoint = 0.00001;\n          }\n          if (midpoint > 0.99999) {\n            midpoint = 0.99999;\n          }\n        }\n      }\n\n      // Are we at the end? If so, just use the last value\n      if (idx >= numNodes) {\n        table[tidx] = model.clamping ? lastValue : 0.0;\n      } else if (idx === 0) {\n        // Are we before the first node? If so, duplicate this nodes values\n        table[tidx] = model.clamping ? model.nodes[0].y : 0.0;\n      } else {\n        // Otherwise, we are between two nodes - interpolate\n        // Our first attempt at a normalized location [0,1] -\n        // we will be modifying this based on midpoint and\n        // sharpness to get the curve shape we want and to have\n        // it pass through (y1+y2)/2 at the midpoint.\n        let s = (x - x1) / (x2 - x1);\n\n        // Readjust based on the midpoint - linear adjustment\n        if (s < midpoint) {\n          s = 0.5 * s / midpoint;\n        } else {\n          s = 0.5 + 0.5 * (s - midpoint) / (1.0 - midpoint);\n        }\n\n        // override for sharpness > 0.99\n        // In this case we just want piecewise constant\n        if (sharpness > 0.99) {\n          // Use the first value since we are below the midpoint\n          if (s < 0.5) {\n            table[tidx] = y1;\n            continue;\n          } else {\n            // Use the second value at or above the midpoint\n            table[tidx] = y2;\n            continue;\n          }\n        }\n\n        // Override for sharpness < 0.01\n        // In this case we want piecewise linear\n        if (sharpness < 0.01) {\n          // Simple linear interpolation\n          table[tidx] = (1 - s) * y1 + s * y2;\n          continue;\n        }\n\n        // We have a sharpness between [0.01, 0.99] - we will\n        // used a modified hermite curve interpolation where we\n        // derive the slope based on the sharpness, and we compress\n        // the curve non-linearly based on the sharpness\n\n        // First, we will adjust our position based on sharpness in\n        // order to make the curve sharper (closer to piecewise constant)\n        if (s < 0.5) {\n          s = 0.5 * (s * 2) ** (1.0 + 10 * sharpness);\n        } else if (s > 0.5) {\n          s = 1.0 - 0.5 * ((1.0 - s) * 2) ** (1 + 10 * sharpness);\n        }\n\n        // Compute some coefficients we will need for the hermite curve\n        const ss = s * s;\n        const sss = ss * s;\n        const h1 = 2 * sss - 3 * ss + 1;\n        const h2 = -2 * sss + 3 * ss;\n        const h3 = sss - 2 * ss + s;\n        const h4 = sss - ss;\n\n        // Use one slope for both end points\n        const slope = y2 - y1;\n        const t = (1.0 - sharpness) * slope;\n\n        // Compute the value\n        table[tidx] = h1 * y1 + h2 * y2 + h3 * t + h4 * t;\n\n        // Final error check to make sure we don't go outside\n        // the Y range\n        const min = y1 < y2 ? y1 : y2;\n        const max = y1 > y2 ? y1 : y2;\n        table[tidx] = table[tidx] < min ? min : table[tidx];\n        table[tidx] = table[tidx] > max ? max : table[tidx];\n      }\n    }\n  };\n}\n/* eslint-enable prefer-destructuring */\n/* eslint-enable no-continue */\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // model.function = NULL;\n  range: [0, 0],\n  clamping: true,\n  allowDuplicateScalars: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  macro.obj(publicAPI, model);\n\n  // Internal objects initialization\n  model.nodes = [];\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['allowDuplicateScalars', 'clamping']);\n  macro.setArray(publicAPI, model, ['range'], 2);\n\n  // Create get macros for array\n  macro.getArray(publicAPI, model, ['range']);\n\n  // For more macro methods, see \"Sources/macros.js\"\n\n  // Object specific methods\n  vtkPiecewiseFunction(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkPiecewiseFunction');\n\n// ----------------------------------------------------------------------------\n\nvar vtkPiecewiseFunction$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkPiecewiseFunction$1 as default, extend, newInstance };\n","import { mat4, vec4, vec3, quat } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport { r as radiansFromDegrees, k as add, j as cross } from '../../Common/Core/Math/index.js';\n\nconst {\n  vtkDebugMacro\n} = macro;\n\n/* eslint-disable new-cap */\n\n/*\n * Convenience function to access elements of a gl-matrix.  If it turns\n * out I have rows and columns swapped everywhere, then I'll just change\n * the order of 'row' and 'col' parameters in this function\n */\n// function getMatrixElement(matrix, row, col) {\n//   const idx = (row * 4) + col;\n//   return matrix[idx];\n// }\n\n// ----------------------------------------------------------------------------\n// vtkCamera methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCamera(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCamera');\n\n  // Set up private variables and methods\n  const origin = new Float64Array(3);\n  const dopbasis = new Float64Array([0.0, 0.0, -1.0]);\n  const upbasis = new Float64Array([0.0, 1.0, 0.0]);\n  const tmpMatrix = mat4.identity(new Float64Array(16));\n  const tmpMatrix2 = mat4.identity(new Float64Array(16));\n  const tmpvec1 = new Float64Array(3);\n  const tmpvec2 = new Float64Array(3);\n  const tmpvec3 = new Float64Array(3);\n  const rotateMatrix = mat4.identity(new Float64Array(16));\n  const trans = mat4.identity(new Float64Array(16));\n  const newPosition = new Float64Array(3);\n  const newFocalPoint = new Float64Array(3);\n\n  // Internal Functions that don't need to be public\n  function computeViewPlaneNormal() {\n    // VPN is -DOP\n    model.viewPlaneNormal[0] = -model.directionOfProjection[0];\n    model.viewPlaneNormal[1] = -model.directionOfProjection[1];\n    model.viewPlaneNormal[2] = -model.directionOfProjection[2];\n  }\n  publicAPI.orthogonalizeViewUp = () => {\n    const vt = publicAPI.getViewMatrix();\n    model.viewUp[0] = vt[4];\n    model.viewUp[1] = vt[5];\n    model.viewUp[2] = vt[6];\n    publicAPI.modified();\n  };\n  publicAPI.setPosition = (x, y, z) => {\n    if (x === model.position[0] && y === model.position[1] && z === model.position[2]) {\n      return;\n    }\n    model.position[0] = x;\n    model.position[1] = y;\n    model.position[2] = z;\n\n    // recompute the focal distance\n    publicAPI.computeDistance();\n    publicAPI.modified();\n  };\n  publicAPI.setFocalPoint = (x, y, z) => {\n    if (x === model.focalPoint[0] && y === model.focalPoint[1] && z === model.focalPoint[2]) {\n      return;\n    }\n    model.focalPoint[0] = x;\n    model.focalPoint[1] = y;\n    model.focalPoint[2] = z;\n\n    // recompute the focal distance\n    publicAPI.computeDistance();\n    publicAPI.modified();\n  };\n  publicAPI.setDistance = d => {\n    if (model.distance === d) {\n      return;\n    }\n    model.distance = d;\n    if (model.distance < 1e-20) {\n      model.distance = 1e-20;\n      vtkDebugMacro('Distance is set to minimum.');\n    }\n\n    // we want to keep the camera pointing in the same direction\n    const vec = model.directionOfProjection;\n\n    // recalculate FocalPoint\n    model.focalPoint[0] = model.position[0] + vec[0] * model.distance;\n    model.focalPoint[1] = model.position[1] + vec[1] * model.distance;\n    model.focalPoint[2] = model.position[2] + vec[2] * model.distance;\n    publicAPI.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  // This method must be called when the focal point or camera position changes\n  publicAPI.computeDistance = () => {\n    const dx = model.focalPoint[0] - model.position[0];\n    const dy = model.focalPoint[1] - model.position[1];\n    const dz = model.focalPoint[2] - model.position[2];\n    model.distance = Math.sqrt(dx * dx + dy * dy + dz * dz);\n    if (model.distance < 1e-20) {\n      model.distance = 1e-20;\n      vtkDebugMacro('Distance is set to minimum.');\n      const vec = model.directionOfProjection;\n\n      // recalculate FocalPoint\n      model.focalPoint[0] = model.position[0] + vec[0] * model.distance;\n      model.focalPoint[1] = model.position[1] + vec[1] * model.distance;\n      model.focalPoint[2] = model.position[2] + vec[2] * model.distance;\n    }\n    model.directionOfProjection[0] = dx / model.distance;\n    model.directionOfProjection[1] = dy / model.distance;\n    model.directionOfProjection[2] = dz / model.distance;\n    computeViewPlaneNormal();\n  };\n\n  //----------------------------------------------------------------------------\n  // Move the position of the camera along the view plane normal. Moving\n  // towards the focal point (e.g., > 1) is a dolly-in, moving away\n  // from the focal point (e.g., < 1) is a dolly-out.\n  publicAPI.dolly = amount => {\n    if (amount <= 0.0) {\n      return;\n    }\n\n    // dolly moves the camera towards the focus\n    const d = model.distance / amount;\n    publicAPI.setPosition(model.focalPoint[0] - d * model.directionOfProjection[0], model.focalPoint[1] - d * model.directionOfProjection[1], model.focalPoint[2] - d * model.directionOfProjection[2]);\n  };\n  publicAPI.roll = angle => {\n    const eye = model.position;\n    const at = model.focalPoint;\n    const up = model.viewUp;\n    const viewUpVec4 = new Float64Array([up[0], up[1], up[2], 0.0]);\n    mat4.identity(rotateMatrix);\n    const viewDir = new Float64Array([at[0] - eye[0], at[1] - eye[1], at[2] - eye[2]]);\n    mat4.rotate(rotateMatrix, rotateMatrix, radiansFromDegrees(angle), viewDir);\n    vec4.transformMat4(viewUpVec4, viewUpVec4, rotateMatrix);\n    model.viewUp[0] = viewUpVec4[0];\n    model.viewUp[1] = viewUpVec4[1];\n    model.viewUp[2] = viewUpVec4[2];\n    publicAPI.modified();\n  };\n  publicAPI.azimuth = angle => {\n    const fp = model.focalPoint;\n    mat4.identity(trans);\n\n    // translate the focal point to the origin,\n    // rotate about view up,\n    // translate back again\n    mat4.translate(trans, trans, fp);\n    mat4.rotate(trans, trans, radiansFromDegrees(angle), model.viewUp);\n    mat4.translate(trans, trans, [-fp[0], -fp[1], -fp[2]]);\n\n    // apply the transform to the position\n    vec3.transformMat4(newPosition, model.position, trans);\n    publicAPI.setPosition(newPosition[0], newPosition[1], newPosition[2]);\n  };\n  publicAPI.yaw = angle => {\n    const position = model.position;\n    mat4.identity(trans);\n\n    // translate the camera to the origin,\n    // rotate about axis,\n    // translate back again\n    mat4.translate(trans, trans, position);\n    mat4.rotate(trans, trans, radiansFromDegrees(angle), model.viewUp);\n    mat4.translate(trans, trans, [-position[0], -position[1], -position[2]]);\n\n    // apply the transform to the position\n    vec3.transformMat4(newFocalPoint, model.focalPoint, trans);\n    publicAPI.setFocalPoint(newFocalPoint[0], newFocalPoint[1], newFocalPoint[2]);\n  };\n  publicAPI.elevation = angle => {\n    const fp = model.focalPoint;\n\n    // get the eye / camera position from the viewMatrix\n    const vt = publicAPI.getViewMatrix();\n    const axis = [-vt[0], -vt[1], -vt[2]];\n    mat4.identity(trans);\n\n    // translate the focal point to the origin,\n    // rotate about view up,\n    // translate back again\n    mat4.translate(trans, trans, fp);\n    mat4.rotate(trans, trans, radiansFromDegrees(angle), axis);\n    mat4.translate(trans, trans, [-fp[0], -fp[1], -fp[2]]);\n\n    // apply the transform to the position\n    vec3.transformMat4(newPosition, model.position, trans);\n    publicAPI.setPosition(newPosition[0], newPosition[1], newPosition[2]);\n  };\n  publicAPI.pitch = angle => {\n    const position = model.position;\n    const vt = publicAPI.getViewMatrix();\n    const axis = [vt[0], vt[1], vt[2]];\n    mat4.identity(trans);\n\n    // translate the camera to the origin,\n    // rotate about axis,\n    // translate back again\n    mat4.translate(trans, trans, position);\n    mat4.rotate(trans, trans, radiansFromDegrees(angle), axis);\n    mat4.translate(trans, trans, [-position[0], -position[1], -position[2]]);\n\n    // apply the transform to the focal point\n    vec3.transformMat4(newFocalPoint, model.focalPoint, trans);\n    publicAPI.setFocalPoint(...newFocalPoint);\n  };\n  publicAPI.zoom = factor => {\n    if (factor <= 0) {\n      return;\n    }\n    if (model.parallelProjection) {\n      model.parallelScale /= factor;\n    } else {\n      model.viewAngle /= factor;\n    }\n    publicAPI.modified();\n  };\n  publicAPI.translate = (x, y, z) => {\n    const offset = [x, y, z];\n    add(model.position, offset, model.position);\n    add(model.focalPoint, offset, model.focalPoint);\n    publicAPI.computeDistance();\n    publicAPI.modified();\n  };\n  publicAPI.applyTransform = transformMat4 => {\n    const vuOld = [...model.viewUp, 1.0];\n    const posNew = [];\n    const fpNew = [];\n    const vuNew = [];\n    vuOld[0] += model.position[0];\n    vuOld[1] += model.position[1];\n    vuOld[2] += model.position[2];\n    vec4.transformMat4(posNew, [...model.position, 1.0], transformMat4);\n    vec4.transformMat4(fpNew, [...model.focalPoint, 1.0], transformMat4);\n    vec4.transformMat4(vuNew, vuOld, transformMat4);\n    vuNew[0] -= posNew[0];\n    vuNew[1] -= posNew[1];\n    vuNew[2] -= posNew[2];\n    publicAPI.setPosition(...posNew.slice(0, 3));\n    publicAPI.setFocalPoint(...fpNew.slice(0, 3));\n    publicAPI.setViewUp(...vuNew.slice(0, 3));\n  };\n  publicAPI.getThickness = () => model.clippingRange[1] - model.clippingRange[0];\n  publicAPI.setThickness = thickness => {\n    let t = thickness;\n    if (t < 1e-20) {\n      t = 1e-20;\n      vtkDebugMacro('Thickness is set to minimum.');\n    }\n    publicAPI.setClippingRange(model.clippingRange[0], model.clippingRange[0] + t);\n  };\n  publicAPI.setThicknessFromFocalPoint = thickness => {\n    let t = thickness;\n    if (t < 1e-20) {\n      t = 1e-20;\n      vtkDebugMacro('Thickness is set to minimum.');\n    }\n    publicAPI.setClippingRange(model.distance - t / 2, model.distance + t / 2);\n  };\n\n  // Unimplemented functions\n  publicAPI.setRoll = angle => {}; // dependency on GetOrientation() and a model.ViewTransform object, see https://github.com/Kitware/VTK/blob/master/Common/Transforms/vtkTransform.cxx and https://vtk.org/doc/nightly/html/classvtkTransform.html\n  publicAPI.getRoll = () => {};\n  publicAPI.setObliqueAngles = (alpha, beta) => {};\n  publicAPI.getOrientation = () => {};\n  publicAPI.getOrientationWXYZ = () => {};\n  publicAPI.getFrustumPlanes = aspect => {\n    // Return array of 24 params (4 params for each of 6 plane equations)\n  };\n  publicAPI.getCameraLightTransformMatrix = matrix => {\n    mat4.copy(matrix, model.cameraLightTransform);\n    return matrix;\n  };\n  publicAPI.computeCameraLightTransform = () => {\n    // not sure if this is the correct transformation, based on the same funciton in VTK\n    mat4.copy(tmpMatrix, publicAPI.getViewMatrix());\n    mat4.invert(tmpMatrix, tmpMatrix);\n    mat4.fromScaling(tmpMatrix2, [model.distance, model.distance, model.distance]);\n    mat4.multiply(tmpMatrix, tmpMatrix, tmpMatrix2);\n    mat4.identity(model.cameraLightTransform);\n    mat4.translate(model.cameraLightTransform, tmpMatrix, [0.0, 0.0, -1.0]);\n  };\n  publicAPI.deepCopy = sourceCamera => {};\n  publicAPI.physicalOrientationToWorldDirection = ori => {\n    // push the x axis through the orientation quat\n    const oriq = quat.fromValues(ori[0], ori[1], ori[2], ori[3]);\n    const coriq = quat.create();\n    const qdir = quat.fromValues(0.0, 0.0, 1.0, 0.0);\n    quat.conjugate(coriq, oriq);\n\n    // rotate the z axis by the quat\n    quat.multiply(qdir, oriq, qdir);\n    quat.multiply(qdir, qdir, coriq);\n\n    // return the z axis in world coords\n    return [qdir[0], qdir[1], qdir[2]];\n  };\n  publicAPI.getPhysicalToWorldMatrix = result => {\n    publicAPI.getWorldToPhysicalMatrix(result);\n    mat4.invert(result, result);\n  };\n  publicAPI.getWorldToPhysicalMatrix = result => {\n    mat4.identity(result);\n\n    // now the physical to vtk world rotation tform\n    const physVRight = [3];\n    cross(model.physicalViewNorth, model.physicalViewUp, physVRight);\n    result[0] = physVRight[0];\n    result[1] = physVRight[1];\n    result[2] = physVRight[2];\n    result[4] = model.physicalViewUp[0];\n    result[5] = model.physicalViewUp[1];\n    result[6] = model.physicalViewUp[2];\n    result[8] = -model.physicalViewNorth[0];\n    result[9] = -model.physicalViewNorth[1];\n    result[10] = -model.physicalViewNorth[2];\n    mat4.transpose(result, result);\n    vec3.set(tmpvec1, 1 / model.physicalScale, 1 / model.physicalScale, 1 / model.physicalScale);\n    mat4.scale(result, result, tmpvec1);\n    mat4.translate(result, result, model.physicalTranslation);\n  };\n  publicAPI.computeViewParametersFromViewMatrix = vmat => {\n    // invert to get view to world\n    mat4.invert(tmpMatrix, vmat);\n\n    // note with glmatrix operations happen in\n    // the reverse order\n    // mat.scale\n    // mat.translate\n    // will result in the translation then the scale\n    // mat.mult(a,b)\n    // results in perform the B transformation then A\n\n    // then extract the params position, orientation\n    // push 0,0,0 through to get a translation\n    vec3.transformMat4(tmpvec1, origin, tmpMatrix);\n    publicAPI.computeDistance();\n    const oldDist = model.distance;\n    publicAPI.setPosition(tmpvec1[0], tmpvec1[1], tmpvec1[2]);\n\n    // push basis vectors to get orientation\n    vec3.transformMat4(tmpvec2, dopbasis, tmpMatrix);\n    vec3.subtract(tmpvec2, tmpvec2, tmpvec1);\n    vec3.normalize(tmpvec2, tmpvec2);\n    publicAPI.setDirectionOfProjection(tmpvec2[0], tmpvec2[1], tmpvec2[2]);\n    vec3.transformMat4(tmpvec3, upbasis, tmpMatrix);\n    vec3.subtract(tmpvec3, tmpvec3, tmpvec1);\n    vec3.normalize(tmpvec3, tmpvec3);\n    publicAPI.setViewUp(tmpvec3[0], tmpvec3[1], tmpvec3[2]);\n    publicAPI.setDistance(oldDist);\n  };\n\n  // the provided matrix should include\n  // translation and orientation only\n  // mat is physical to view\n  publicAPI.computeViewParametersFromPhysicalMatrix = mat => {\n    // get the WorldToPhysicalMatrix\n    publicAPI.getWorldToPhysicalMatrix(tmpMatrix);\n\n    // first convert the physical -> view matrix to be\n    // world -> view\n    mat4.multiply(tmpMatrix, mat, tmpMatrix);\n    publicAPI.computeViewParametersFromViewMatrix(tmpMatrix);\n  };\n  publicAPI.setViewMatrix = mat => {\n    model.viewMatrix = mat;\n    if (model.viewMatrix) {\n      mat4.copy(tmpMatrix, model.viewMatrix);\n      publicAPI.computeViewParametersFromViewMatrix(tmpMatrix);\n      mat4.transpose(model.viewMatrix, model.viewMatrix);\n    }\n  };\n  publicAPI.getViewMatrix = () => {\n    if (model.viewMatrix) {\n      return model.viewMatrix;\n    }\n    mat4.lookAt(tmpMatrix, model.position,\n    // eye\n    model.focalPoint,\n    // at\n    model.viewUp // up\n    );\n\n    mat4.transpose(tmpMatrix, tmpMatrix);\n    const result = new Float64Array(16);\n    mat4.copy(result, tmpMatrix);\n    return result;\n  };\n  publicAPI.setProjectionMatrix = mat => {\n    model.projectionMatrix = mat;\n  };\n  publicAPI.getProjectionMatrix = (aspect, nearz, farz) => {\n    const result = new Float64Array(16);\n    mat4.identity(result);\n    if (model.projectionMatrix) {\n      const scale = 1 / model.physicalScale;\n      vec3.set(tmpvec1, scale, scale, scale);\n      mat4.copy(result, model.projectionMatrix);\n      mat4.scale(result, result, tmpvec1);\n      mat4.transpose(result, result);\n      return result;\n    }\n    mat4.identity(tmpMatrix);\n\n    // FIXME: Not sure what to do about adjust z buffer here\n    // adjust Z-buffer range\n    // this->ProjectionTransform->AdjustZBuffer( -1, +1, nearz, farz );\n    const cWidth = model.clippingRange[1] - model.clippingRange[0];\n    const cRange = [model.clippingRange[0] + (nearz + 1) * cWidth / 2.0, model.clippingRange[0] + (farz + 1) * cWidth / 2.0];\n    if (model.parallelProjection) {\n      // set up a rectangular parallelipiped\n      const width = model.parallelScale * aspect;\n      const height = model.parallelScale;\n      const xmin = (model.windowCenter[0] - 1.0) * width;\n      const xmax = (model.windowCenter[0] + 1.0) * width;\n      const ymin = (model.windowCenter[1] - 1.0) * height;\n      const ymax = (model.windowCenter[1] + 1.0) * height;\n      mat4.ortho(tmpMatrix, xmin, xmax, ymin, ymax, cRange[0], cRange[1]);\n      mat4.transpose(tmpMatrix, tmpMatrix);\n    } else if (model.useOffAxisProjection) {\n      throw new Error('Off-Axis projection is not supported at this time');\n    } else {\n      const tmp = Math.tan(radiansFromDegrees(model.viewAngle) / 2.0);\n      let width;\n      let height;\n      if (model.useHorizontalViewAngle === true) {\n        width = model.clippingRange[0] * tmp;\n        height = model.clippingRange[0] * tmp / aspect;\n      } else {\n        width = model.clippingRange[0] * tmp * aspect;\n        height = model.clippingRange[0] * tmp;\n      }\n      const xmin = (model.windowCenter[0] - 1.0) * width;\n      const xmax = (model.windowCenter[0] + 1.0) * width;\n      const ymin = (model.windowCenter[1] - 1.0) * height;\n      const ymax = (model.windowCenter[1] + 1.0) * height;\n      const znear = cRange[0];\n      const zfar = cRange[1];\n      tmpMatrix[0] = 2.0 * znear / (xmax - xmin);\n      tmpMatrix[5] = 2.0 * znear / (ymax - ymin);\n      tmpMatrix[2] = (xmin + xmax) / (xmax - xmin);\n      tmpMatrix[6] = (ymin + ymax) / (ymax - ymin);\n      tmpMatrix[10] = -(znear + zfar) / (zfar - znear);\n      tmpMatrix[14] = -1.0;\n      tmpMatrix[11] = -2.0 * znear * zfar / (zfar - znear);\n      tmpMatrix[15] = 0.0;\n    }\n    mat4.copy(result, tmpMatrix);\n    return result;\n  };\n  publicAPI.getCompositeProjectionMatrix = (aspect, nearz, farz) => {\n    const vMat = publicAPI.getViewMatrix();\n    const pMat = publicAPI.getProjectionMatrix(aspect, nearz, farz);\n    // mats are transposed so the order is A then B\n    // we reuse pMat as it is a copy so we can do what we want with it\n    mat4.multiply(pMat, vMat, pMat);\n    return pMat;\n  };\n  publicAPI.setDirectionOfProjection = (x, y, z) => {\n    if (model.directionOfProjection[0] === x && model.directionOfProjection[1] === y && model.directionOfProjection[2] === z) {\n      return;\n    }\n    model.directionOfProjection[0] = x;\n    model.directionOfProjection[1] = y;\n    model.directionOfProjection[2] = z;\n    const vec = model.directionOfProjection;\n\n    // recalculate FocalPoint\n    model.focalPoint[0] = model.position[0] + vec[0] * model.distance;\n    model.focalPoint[1] = model.position[1] + vec[1] * model.distance;\n    model.focalPoint[2] = model.position[2] + vec[2] * model.distance;\n    computeViewPlaneNormal();\n  };\n\n  // used to handle convert js device orientation angles\n  // when you use this method the camera will adjust to the\n  // device orientation such that the physicalViewUp you set\n  // in world coordinates looks up, and the physicalViewNorth\n  // you set in world coorindates will (maybe) point north\n  //\n  // NOTE WARNING - much of the documentation out there on how\n  // orientation works is seriously wrong. Even worse the Chrome\n  // device orientation simulator is completely wrong and should\n  // never be used. OMG it is so messed up.\n  //\n  // how it seems to work on iOS is that the device orientation\n  // is specified in extrinsic angles with a alpha, beta, gamma\n  // convention with axes of Z, X, Y (the code below substitutes\n  // the physical coordinate system for these axes to get the right\n  // modified coordinate system.\n  publicAPI.setDeviceAngles = (alpha, beta, gamma, screen) => {\n    const physVRight = [3];\n    cross(model.physicalViewNorth, model.physicalViewUp, physVRight);\n\n    // phone to physical coordinates\n    const rotmat = mat4.identity(new Float64Array(16));\n    mat4.rotate(rotmat, rotmat, radiansFromDegrees(alpha), model.physicalViewUp);\n    mat4.rotate(rotmat, rotmat, radiansFromDegrees(beta), physVRight);\n    mat4.rotate(rotmat, rotmat, radiansFromDegrees(gamma), model.physicalViewNorth);\n    mat4.rotate(rotmat, rotmat, radiansFromDegrees(-screen), model.physicalViewUp);\n    const dop = new Float64Array([-model.physicalViewUp[0], -model.physicalViewUp[1], -model.physicalViewUp[2]]);\n    const vup = new Float64Array(model.physicalViewNorth);\n    vec3.transformMat4(dop, dop, rotmat);\n    vec3.transformMat4(vup, vup, rotmat);\n    publicAPI.setDirectionOfProjection(dop[0], dop[1], dop[2]);\n    publicAPI.setViewUp(vup[0], vup[1], vup[2]);\n    publicAPI.modified();\n  };\n  publicAPI.setOrientationWXYZ = (degrees, x, y, z) => {\n    const quatMat = mat4.identity(new Float64Array(16));\n    if (degrees !== 0.0 && (x !== 0.0 || y !== 0.0 || z !== 0.0)) {\n      // convert to radians\n      const angle = radiansFromDegrees(degrees);\n      const q = quat.create();\n      quat.setAxisAngle(q, [x, y, z], angle);\n      mat4.fromQuat(quatMat, q);\n    }\n    const newdop = new Float64Array(3);\n    vec3.transformMat4(newdop, [0.0, 0.0, -1.0], quatMat);\n    const newvup = new Float64Array(3);\n    vec3.transformMat4(newvup, [0.0, 1.0, 0.0], quatMat);\n    publicAPI.setDirectionOfProjection(...newdop);\n    publicAPI.setViewUp(...newvup);\n    publicAPI.modified();\n  };\n  publicAPI.computeClippingRange = bounds => {\n    let vn = null;\n    let position = null;\n    vn = model.viewPlaneNormal;\n    position = model.position;\n    const a = -vn[0];\n    const b = -vn[1];\n    const c = -vn[2];\n    const d = -(a * position[0] + b * position[1] + c * position[2]);\n\n    // Set the max near clipping plane and the min far clipping plane\n    const range = [a * bounds[0] + b * bounds[2] + c * bounds[4] + d, 1e-18];\n\n    // Find the closest / farthest bounding box vertex\n    for (let k = 0; k < 2; k++) {\n      for (let j = 0; j < 2; j++) {\n        for (let i = 0; i < 2; i++) {\n          const dist = a * bounds[i] + b * bounds[2 + j] + c * bounds[4 + k] + d;\n          range[0] = dist < range[0] ? dist : range[0];\n          range[1] = dist > range[1] ? dist : range[1];\n        }\n      }\n    }\n    return range;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  position: [0, 0, 1],\n  focalPoint: [0, 0, 0],\n  viewUp: [0, 1, 0],\n  directionOfProjection: [0, 0, -1],\n  parallelProjection: false,\n  useHorizontalViewAngle: false,\n  viewAngle: 30,\n  parallelScale: 1,\n  clippingRange: [0.01, 1000.01],\n  windowCenter: [0, 0],\n  viewPlaneNormal: [0, 0, 1],\n  useOffAxisProjection: false,\n  screenBottomLeft: [-0.5, -0.5, -0.5],\n  screenBottomRight: [0.5, -0.5, -0.5],\n  screenTopRight: [0.5, 0.5, -0.5],\n  freezeFocalPoint: false,\n  projectionMatrix: null,\n  viewMatrix: null,\n  cameraLightTransform: mat4.create(),\n  // used for world to physical transformations\n  physicalTranslation: [0, 0, 0],\n  physicalScale: 1.0,\n  physicalViewUp: [0, 1, 0],\n  physicalViewNorth: [0, 0, -1]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['distance']);\n  macro.setGet(publicAPI, model, ['parallelProjection', 'useHorizontalViewAngle', 'viewAngle', 'parallelScale', 'useOffAxisProjection', 'freezeFocalPoint', 'physicalScale']);\n  macro.getArray(publicAPI, model, ['directionOfProjection', 'viewPlaneNormal', 'position', 'focalPoint']);\n  macro.setGetArray(publicAPI, model, ['clippingRange', 'windowCenter'], 2);\n  macro.setGetArray(publicAPI, model, ['viewUp', 'screenBottomLeft', 'screenBottomRight', 'screenTopRight', 'physicalTranslation', 'physicalViewUp', 'physicalViewNorth'], 3);\n\n  // Object methods\n  vtkCamera(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkCamera');\n\n// ----------------------------------------------------------------------------\n\nvar vtkCamera$1 = {\n  newInstance,\n  extend\n};\n\nexport { DEFAULT_VALUES, vtkCamera$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport { h as hsv2rgb, i as isNan, J as floor, K as isInf, L as rgb2hsv, M as rgb2lab, N as lab2rgb } from '../../Common/Core/Math/index.js';\nimport vtkScalarsToColors from '../../Common/Core/ScalarsToColors.js';\nimport Constants from './ColorTransferFunction/Constants.js';\n\nconst {\n  ColorSpace,\n  Scale\n} = Constants;\nconst {\n  ScalarMappingTarget\n} = vtkScalarsToColors;\nconst {\n  vtkDebugMacro,\n  vtkErrorMacro,\n  vtkWarningMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n/* eslint-disable no-continue                                                */\n\n// Convert to and from a special polar version of CIELAB (useful for creating\n// continuous diverging color maps).\nfunction vtkColorTransferFunctionLabToMsh(lab, msh) {\n  const L = lab[0];\n  const a = lab[1];\n  const b = lab[2];\n  const M = Math.sqrt(L * L + a * a + b * b);\n  const s = M > 0.001 ? Math.acos(L / M) : 0.0;\n  const h = s > 0.001 ? Math.atan2(b, a) : 0.0;\n  msh[0] = M;\n  msh[1] = s;\n  msh[2] = h;\n}\nfunction vtkColorTransferFunctionMshToLab(msh, lab) {\n  const M = msh[0];\n  const s = msh[1];\n  const h = msh[2];\n  lab[0] = M * Math.cos(s);\n  lab[1] = M * Math.sin(s) * Math.cos(h);\n  lab[2] = M * Math.sin(s) * Math.sin(h);\n}\n\n// For the case when interpolating from a saturated color to an unsaturated\n// color, find a hue for the unsaturated color that makes sense.\nfunction vtkColorTransferFunctionAdjustHue(msh, unsatM) {\n  if (msh[0] >= unsatM - 0.1) {\n    // The best we can do is hold hue constant.\n    return msh[2];\n  }\n\n  // This equation is designed to make the perceptual change of the\n  // interpolation to be close to constant.\n  const hueSpin = msh[1] * Math.sqrt(unsatM * unsatM - msh[0] * msh[0]) / (msh[0] * Math.sin(msh[1]));\n  // Spin hue away from 0 except in purple hues.\n  if (msh[2] > -0.3 * Math.PI) {\n    return msh[2] + hueSpin;\n  }\n  return msh[2] - hueSpin;\n}\nfunction vtkColorTransferFunctionAngleDiff(a1, a2) {\n  let adiff = a1 - a2;\n  if (adiff < 0.0) {\n    adiff = -adiff;\n  }\n  while (adiff >= 2.0 * Math.PI) {\n    adiff -= 2.0 * Math.PI;\n  }\n  if (adiff > Math.PI) {\n    adiff = 2.0 * Math.PI - adiff;\n  }\n  return adiff;\n}\n\n// Interpolate a diverging color map.\nfunction vtkColorTransferFunctionInterpolateDiverging(s, rgb1, rgb2, result) {\n  const lab1 = [];\n  const lab2 = [];\n  rgb2lab(rgb1, lab1);\n  rgb2lab(rgb2, lab2);\n  const msh1 = [];\n  const msh2 = [];\n  vtkColorTransferFunctionLabToMsh(lab1, msh1);\n  vtkColorTransferFunctionLabToMsh(lab2, msh2);\n\n  // If the endpoints are distinct saturated colors, then place white in between\n  // them.\n  let localS = s;\n  if (msh1[1] > 0.05 && msh2[1] > 0.05 && vtkColorTransferFunctionAngleDiff(msh1[2], msh2[2]) > 0.33 * Math.PI) {\n    // Insert the white midpoint by setting one end to white and adjusting the\n    // scalar value.\n    let Mmid = Math.max(msh1[0], msh2[0]);\n    Mmid = Math.max(88.0, Mmid);\n    if (s < 0.5) {\n      msh2[0] = Mmid;\n      msh2[1] = 0.0;\n      msh2[2] = 0.0;\n      localS *= 2.0;\n    } else {\n      msh1[0] = Mmid;\n      msh1[1] = 0.0;\n      msh1[2] = 0.0;\n      localS = 2.0 * localS - 1.0;\n    }\n  }\n\n  // If one color has no saturation, then its hue value is invalid.  In this\n  // case, we want to set it to something logical so that the interpolation of\n  // hue makes sense.\n  if (msh1[1] < 0.05 && msh2[1] > 0.05) {\n    msh1[2] = vtkColorTransferFunctionAdjustHue(msh2, msh1[0]);\n  } else if (msh2[1] < 0.05 && msh1[1] > 0.05) {\n    msh2[2] = vtkColorTransferFunctionAdjustHue(msh1, msh2[0]);\n  }\n  const mshTmp = [];\n  mshTmp[0] = (1 - localS) * msh1[0] + localS * msh2[0];\n  mshTmp[1] = (1 - localS) * msh1[1] + localS * msh2[1];\n  mshTmp[2] = (1 - localS) * msh1[2] + localS * msh2[2];\n\n  // Now convert back to RGB\n  const labTmp = [];\n  vtkColorTransferFunctionMshToLab(mshTmp, labTmp);\n  lab2rgb(labTmp, result);\n}\n\n// ----------------------------------------------------------------------------\n// vtkColorTransferFunction methods\n// ----------------------------------------------------------------------------\n\nfunction vtkColorTransferFunction(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkColorTransferFunction');\n\n  // Return the number of points which specify this function\n  publicAPI.getSize = () => model.nodes.length;\n\n  //----------------------------------------------------------------------------\n  // Add a point defined in RGB\n  publicAPI.addRGBPoint = (x, r, g, b) => publicAPI.addRGBPointLong(x, r, g, b, 0.5, 0.0);\n\n  //----------------------------------------------------------------------------\n  // Add a point defined in RGB\n  publicAPI.addRGBPointLong = function (x, r, g, b) {\n    let midpoint = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0.5;\n    let sharpness = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0.0;\n    // Error check\n    if (midpoint < 0.0 || midpoint > 1.0) {\n      vtkErrorMacro('Midpoint outside range [0.0, 1.0]');\n      return -1;\n    }\n    if (sharpness < 0.0 || sharpness > 1.0) {\n      vtkErrorMacro('Sharpness outside range [0.0, 1.0]');\n      return -1;\n    }\n\n    // remove any node already at this X location\n    if (!model.allowDuplicateScalars) {\n      publicAPI.removePoint(x);\n    }\n\n    // Create the new node\n    const node = {\n      x,\n      r,\n      g,\n      b,\n      midpoint,\n      sharpness\n    };\n\n    // Add it, then sort to get everything in order\n    model.nodes.push(node);\n    publicAPI.sortAndUpdateRange();\n\n    // We need to find the index of the node we just added in order\n    // to return this value\n    let i = 0;\n    for (; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === x) {\n        break;\n      }\n    }\n\n    // If we didn't find it, something went horribly wrong so\n    // return -1\n    if (i < model.nodes.length) {\n      return i;\n    }\n    return -1;\n  };\n\n  //----------------------------------------------------------------------------\n  // Add a point defined in HSV\n  publicAPI.addHSVPoint = (x, h, s, v) => publicAPI.addHSVPointLong(x, h, s, v, 0.5, 0.0);\n\n  //----------------------------------------------------------------------------\n  // Add a point defined in HSV\n  publicAPI.addHSVPointLong = function (x, h, s, v) {\n    let midpoint = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0.5;\n    let sharpness = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0.0;\n    const rgb = [];\n    const hsv = [h, s, v];\n    hsv2rgb(hsv, rgb);\n    return publicAPI.addRGBPoint(x, rgb[0], rgb[1], rgb[2], midpoint, sharpness);\n  };\n\n  //----------------------------------------------------------------------------\n  // Set nodes directly\n  publicAPI.setNodes = nodes => {\n    if (model.nodes !== nodes) {\n      const before = JSON.stringify(model.nodes);\n      model.nodes = nodes;\n      const after = JSON.stringify(model.nodes);\n      if (publicAPI.sortAndUpdateRange() || before !== after) {\n        publicAPI.modified();\n        return true;\n      }\n    }\n    return false;\n  };\n\n  //----------------------------------------------------------------------------\n  // Sort the vector in increasing order, then fill in\n  // the Range\n  publicAPI.sortAndUpdateRange = () => {\n    const before = JSON.stringify(model.nodes);\n    model.nodes.sort((a, b) => a.x - b.x);\n    const after = JSON.stringify(model.nodes);\n    const modifiedInvoked = publicAPI.updateRange();\n    // If range is updated, Modified() has been called, don't call it again.\n    if (!modifiedInvoked && before !== after) {\n      publicAPI.modified();\n      return true;\n    }\n    return modifiedInvoked;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.updateRange = () => {\n    const oldRange = [2];\n    oldRange[0] = model.mappingRange[0];\n    oldRange[1] = model.mappingRange[1];\n    const size = model.nodes.length;\n    if (size) {\n      model.mappingRange[0] = model.nodes[0].x;\n      model.mappingRange[1] = model.nodes[size - 1].x;\n    } else {\n      model.mappingRange[0] = 0;\n      model.mappingRange[1] = 0;\n    }\n\n    // If the range is the same, then no need to call Modified()\n    if (oldRange[0] === model.mappingRange[0] && oldRange[1] === model.mappingRange[1]) {\n      return false;\n    }\n    publicAPI.modified();\n    return true;\n  };\n\n  //----------------------------------------------------------------------------\n  // Remove a point\n  publicAPI.removePoint = x => {\n    // First find the node since we need to know its\n    // index as our return value\n    let i = 0;\n    for (; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === x) {\n        break;\n      }\n    }\n    const retVal = i;\n\n    // If the node doesn't exist, we return -1\n    if (i >= model.nodes.length) {\n      return -1;\n    }\n\n    // If the first or last point has been removed, then we update the range\n    // No need to sort here as the order of points hasn't changed.\n    let modifiedInvoked = false;\n    model.nodes.splice(i, 1);\n    if (i === 0 || i === model.nodes.length) {\n      modifiedInvoked = publicAPI.updateRange();\n    }\n    if (!modifiedInvoked) {\n      publicAPI.modified();\n    }\n    return retVal;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.movePoint = (oldX, newX) => {\n    if (oldX === newX) {\n      // Nothing to do.\n      return;\n    }\n    publicAPI.removePoint(newX);\n    for (let i = 0; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === oldX) {\n        model.nodes[i].x = newX;\n        publicAPI.sortAndUpdateRange();\n        break;\n      }\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  // Remove all points\n  publicAPI.removeAllPoints = () => {\n    model.nodes = [];\n    publicAPI.sortAndUpdateRange();\n  };\n\n  //----------------------------------------------------------------------------\n  // Add a line defined in RGB\n  publicAPI.addRGBSegment = (x1, r1, g1, b1, x2, r2, g2, b2) => {\n    // First, find all points in this range and remove them\n    publicAPI.sortAndUpdateRange();\n    for (let i = 0; i < model.nodes.length;) {\n      if (model.nodes[i].x >= x1 && model.nodes[i].x <= x2) {\n        model.nodes.splice(i, 1);\n      } else {\n        i++;\n      }\n    }\n\n    // Now add the points\n    publicAPI.addRGBPointLong(x1, r1, g1, b1, 0.5, 0.0);\n    publicAPI.addRGBPointLong(x2, r2, g2, b2, 0.5, 0.0);\n    publicAPI.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  // Add a line defined in HSV\n  publicAPI.addHSVSegment = (x1, h1, s1, v1, x2, h2, s2, v2) => {\n    const hsv1 = [h1, s1, v1];\n    const hsv2 = [h2, s2, v2];\n    const rgb1 = [];\n    const rgb2 = [];\n    hsv2rgb(hsv1, rgb1);\n    hsv2rgb(hsv2, rgb2);\n    publicAPI.addRGBSegment(x1, rgb1[0], rgb1[1], rgb1[2], x2, rgb2[0], rgb2[1], rgb2[2]);\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns the RGBA color evaluated at the specified location\n  publicAPI.mapValue = x => {\n    const rgb = [];\n    publicAPI.getColor(x, rgb);\n    return [Math.floor(255.0 * rgb[0] + 0.5), Math.floor(255.0 * rgb[1] + 0.5), Math.floor(255.0 * rgb[2] + 0.5), 255];\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns the RGB color evaluated at the specified location\n  publicAPI.getColor = (x, rgb) => {\n    if (model.indexedLookup) {\n      const numNodes = publicAPI.getSize();\n      // todo\n      const idx = publicAPI.getAnnotatedValueIndexInternal(x);\n      if (idx < 0 || numNodes === 0) {\n        const nanColor = publicAPI.getNanColorByReference();\n        rgb[0] = nanColor[0];\n        rgb[1] = nanColor[1];\n        rgb[2] = nanColor[2];\n      } else {\n        const nodeVal = [];\n        publicAPI.getNodeValue(idx % numNodes, nodeVal);\n        // nodeVal[0] is the x value. nodeVal[1...3] is rgb.\n        rgb[0] = nodeVal[1];\n        rgb[1] = nodeVal[2];\n        rgb[2] = nodeVal[3];\n      }\n      return;\n    }\n    publicAPI.getTable(x, x, 1, rgb);\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns the red color evaluated at the specified location\n  publicAPI.getRedValue = x => {\n    const rgb = [];\n    publicAPI.getColor(x, rgb);\n    return rgb[0];\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns the green color evaluated at the specified location\n  publicAPI.getGreenValue = x => {\n    const rgb = [];\n    publicAPI.getColor(x, rgb);\n    return rgb[1];\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns the blue color evaluated at the specified location\n  publicAPI.getBlueValue = x => {\n    const rgb = [];\n    publicAPI.getColor(x, rgb);\n    return rgb[2];\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns a table of RGB colors at regular intervals along the function\n  publicAPI.getTable = (xStart_, xEnd_, size, table) => {\n    // To handle BigInt limitation\n    const xStart = Number(xStart_);\n    const xEnd = Number(xEnd_);\n\n    // Special case: If either the start or end is a NaN, then all any\n    // interpolation done on them is also a NaN.  Therefore, fill the table with\n    // the NaN color.\n    if (isNan(xStart) || isNan(xEnd)) {\n      for (let i = 0; i < size; i++) {\n        table[i * 3 + 0] = model.nanColor[0];\n        table[i * 3 + 1] = model.nanColor[1];\n        table[i * 3 + 2] = model.nanColor[2];\n      }\n      return;\n    }\n    let idx = 0;\n    const numNodes = model.nodes.length;\n\n    // Need to keep track of the last value so that\n    // we can fill in table locations past this with\n    // this value if Clamping is On.\n    let lastR = 0.0;\n    let lastG = 0.0;\n    let lastB = 0.0;\n    if (numNodes !== 0) {\n      lastR = model.nodes[numNodes - 1].r;\n      lastG = model.nodes[numNodes - 1].g;\n      lastB = model.nodes[numNodes - 1].b;\n    }\n    let x = 0.0;\n    let x1 = 0.0;\n    let x2 = 0.0;\n    const rgb1 = [0.0, 0.0, 0.0];\n    const rgb2 = [0.0, 0.0, 0.0];\n    let midpoint = 0.0;\n    let sharpness = 0.0;\n    const tmpVec = [];\n\n    // If the scale is logarithmic, make sure the range is valid.\n    let usingLogScale = model.scale === Scale.LOG10;\n    if (usingLogScale) {\n      // Note: This requires range[0] <= range[1].\n      usingLogScale = model.mappingRange[0] > 0.0;\n    }\n    let logStart = 0.0;\n    let logEnd = 0.0;\n    let logX = 0.0;\n    if (usingLogScale) {\n      logStart = Math.log10(xStart);\n      logEnd = Math.log10(xEnd);\n    }\n\n    // For each table entry\n    for (let i = 0; i < size; i++) {\n      // Find our location in the table\n      const tidx = 3 * i;\n\n      // Find our X location. If we are taking only 1 sample, make\n      // it halfway between start and end (usually start and end will\n      // be the same in this case)\n      if (size > 1) {\n        if (usingLogScale) {\n          logX = logStart + i / (size - 1.0) * (logEnd - logStart);\n          x = 10.0 ** logX;\n        } else {\n          x = xStart + i / (size - 1.0) * (xEnd - xStart);\n        }\n      } else if (usingLogScale) {\n        logX = 0.5 * (logStart + logEnd);\n        x = 10.0 ** logX;\n      } else {\n        x = 0.5 * (xStart + xEnd);\n      }\n\n      // Linearly map x from mappingRange to [0, numberOfValues-1],\n      // discretize (round down to the closest integer),\n      // then map back to mappingRange\n      if (model.discretize) {\n        const range = model.mappingRange;\n        if (x >= range[0] && x <= range[1]) {\n          const numberOfValues = model.numberOfValues;\n          const deltaRange = range[1] - range[0];\n          if (numberOfValues <= 1) {\n            x = range[0] + deltaRange / 2.0;\n          } else {\n            // normalize x\n            const xn = (x - range[0]) / deltaRange;\n            // discretize\n            const discretizeIndex = floor(numberOfValues * xn);\n            // get discretized x\n            x = range[0] + discretizeIndex / (numberOfValues - 1) * deltaRange;\n          }\n        }\n      }\n\n      // Do we need to move to the next node?\n      while (idx < numNodes && x > model.nodes[idx].x) {\n        idx++;\n        // If we are at a valid point index, fill in\n        // the value at this node, and the one before (the\n        // two that surround our current sample location)\n        // idx cannot be 0 since we just incremented it.\n        if (idx < numNodes) {\n          x1 = model.nodes[idx - 1].x;\n          x2 = model.nodes[idx].x;\n          if (usingLogScale) {\n            x1 = Math.log10(x1);\n            x2 = Math.log10(x2);\n          }\n          rgb1[0] = model.nodes[idx - 1].r;\n          rgb2[0] = model.nodes[idx].r;\n          rgb1[1] = model.nodes[idx - 1].g;\n          rgb2[1] = model.nodes[idx].g;\n          rgb1[2] = model.nodes[idx - 1].b;\n          rgb2[2] = model.nodes[idx].b;\n\n          // We only need the previous midpoint and sharpness\n          // since these control this region\n          midpoint = model.nodes[idx - 1].midpoint;\n          sharpness = model.nodes[idx - 1].sharpness;\n\n          // Move midpoint away from extreme ends of range to avoid\n          // degenerate math\n          if (midpoint < 0.00001) {\n            midpoint = 0.00001;\n          }\n          if (midpoint > 0.99999) {\n            midpoint = 0.99999;\n          }\n        }\n      }\n\n      // Are we at or past the end? If so, just use the last value\n      if (x > model.mappingRange[1]) {\n        table[tidx] = 0.0;\n        table[tidx + 1] = 0.0;\n        table[tidx + 2] = 0.0;\n        if (model.clamping) {\n          if (publicAPI.getUseAboveRangeColor()) {\n            table[tidx] = model.aboveRangeColor[0];\n            table[tidx + 1] = model.aboveRangeColor[1];\n            table[tidx + 2] = model.aboveRangeColor[2];\n          } else {\n            table[tidx] = lastR;\n            table[tidx + 1] = lastG;\n            table[tidx + 2] = lastB;\n          }\n        }\n      } else if (x < model.mappingRange[0] || isInf(x) && x < 0) {\n        // we are before the first node? If so, duplicate this node's values.\n        // We have to deal with -inf here\n        table[tidx] = 0.0;\n        table[tidx + 1] = 0.0;\n        table[tidx + 2] = 0.0;\n        if (model.clamping) {\n          if (publicAPI.getUseBelowRangeColor()) {\n            table[tidx] = model.belowRangeColor[0];\n            table[tidx + 1] = model.belowRangeColor[1];\n            table[tidx + 2] = model.belowRangeColor[2];\n          } else if (numNodes > 0) {\n            table[tidx] = model.nodes[0].r;\n            table[tidx + 1] = model.nodes[0].g;\n            table[tidx + 2] = model.nodes[0].b;\n          }\n        }\n      } else if (idx === 0 && (Math.abs(x - xStart) < 1e-6 || model.discretize)) {\n        if (numNodes > 0) {\n          table[tidx] = model.nodes[0].r;\n          table[tidx + 1] = model.nodes[0].g;\n          table[tidx + 2] = model.nodes[0].b;\n        } else {\n          table[tidx] = 0.0;\n          table[tidx + 1] = 0.0;\n          table[tidx + 2] = 0.0;\n        }\n      } else {\n        // OK, we are between two nodes - interpolate\n        // Our first attempt at a normalized location [0,1] -\n        // we will be modifying this based on midpoint and\n        // sharpness to get the curve shape we want and to have\n        // it pass through (y1+y2)/2 at the midpoint.\n        let s = 0.0;\n        if (usingLogScale) {\n          s = (logX - x1) / (x2 - x1);\n        } else {\n          s = (x - x1) / (x2 - x1);\n        }\n\n        // Readjust based on the midpoint - linear adjustment\n        if (s < midpoint) {\n          s = 0.5 * s / midpoint;\n        } else {\n          s = 0.5 + 0.5 * (s - midpoint) / (1.0 - midpoint);\n        }\n\n        // override for sharpness > 0.99\n        // In this case we just want piecewise constant\n        if (sharpness > 0.99) {\n          // Use the first value since we are below the midpoint\n          if (s < 0.5) {\n            table[tidx] = rgb1[0];\n            table[tidx + 1] = rgb1[1];\n            table[tidx + 2] = rgb1[2];\n            continue;\n          } else {\n            // Use the second value at or above the midpoint\n            table[tidx] = rgb2[0];\n            table[tidx + 1] = rgb2[1];\n            table[tidx + 2] = rgb2[2];\n            continue;\n          }\n        }\n\n        // Override for sharpness < 0.01\n        // In this case we want piecewise linear\n        if (sharpness < 0.01) {\n          // Simple linear interpolation\n          if (model.colorSpace === ColorSpace.RGB) {\n            table[tidx] = (1 - s) * rgb1[0] + s * rgb2[0];\n            table[tidx + 1] = (1 - s) * rgb1[1] + s * rgb2[1];\n            table[tidx + 2] = (1 - s) * rgb1[2] + s * rgb2[2];\n          } else if (model.colorSpace === ColorSpace.HSV) {\n            const hsv1 = [];\n            const hsv2 = [];\n            rgb2hsv(rgb1, hsv1);\n            rgb2hsv(rgb2, hsv2);\n            if (model.hSVWrap && (hsv1[0] - hsv2[0] > 0.5 || hsv2[0] - hsv1[0] > 0.5)) {\n              if (hsv1[0] > hsv2[0]) {\n                hsv1[0] -= 1.0;\n              } else {\n                hsv2[0] -= 1.0;\n              }\n            }\n            const hsvTmp = [];\n            hsvTmp[0] = (1.0 - s) * hsv1[0] + s * hsv2[0];\n            if (hsvTmp[0] < 0.0) {\n              hsvTmp[0] += 1.0;\n            }\n            hsvTmp[1] = (1.0 - s) * hsv1[1] + s * hsv2[1];\n            hsvTmp[2] = (1.0 - s) * hsv1[2] + s * hsv2[2];\n\n            // Now convert this back to RGB\n            hsv2rgb(hsvTmp, tmpVec);\n            table[tidx] = tmpVec[0];\n            table[tidx + 1] = tmpVec[1];\n            table[tidx + 2] = tmpVec[2];\n          } else if (model.colorSpace === ColorSpace.LAB) {\n            const lab1 = [];\n            const lab2 = [];\n            rgb2lab(rgb1, lab1);\n            rgb2lab(rgb2, lab2);\n            const labTmp = [];\n            labTmp[0] = (1 - s) * lab1[0] + s * lab2[0];\n            labTmp[1] = (1 - s) * lab1[1] + s * lab2[1];\n            labTmp[2] = (1 - s) * lab1[2] + s * lab2[2];\n\n            // Now convert back to RGB\n            lab2rgb(labTmp, tmpVec);\n            table[tidx] = tmpVec[0];\n            table[tidx + 1] = tmpVec[1];\n            table[tidx + 2] = tmpVec[2];\n          } else if (model.colorSpace === ColorSpace.DIVERGING) {\n            vtkColorTransferFunctionInterpolateDiverging(s, rgb1, rgb2, tmpVec);\n            table[tidx] = tmpVec[0];\n            table[tidx + 1] = tmpVec[1];\n            table[tidx + 2] = tmpVec[2];\n          } else {\n            vtkErrorMacro('ColorSpace set to invalid value.', model.colorSpace);\n          }\n          continue;\n        }\n\n        // We have a sharpness between [0.01, 0.99] - we will\n        // used a modified hermite curve interpolation where we\n        // derive the slope based on the sharpness, and we compress\n        // the curve non-linearly based on the sharpness\n\n        // First, we will adjust our position based on sharpness in\n        // order to make the curve sharper (closer to piecewise constant)\n        if (s < 0.5) {\n          s = 0.5 * (s * 2.0) ** (1.0 + 10.0 * sharpness);\n        } else if (s > 0.5) {\n          s = 1.0 - 0.5 * ((1.0 - s) * 2) ** (1 + 10.0 * sharpness);\n        }\n\n        // Compute some coefficients we will need for the hermite curve\n        const ss = s * s;\n        const sss = ss * s;\n        const h1 = 2.0 * sss - 3 * ss + 1;\n        const h2 = -2 * sss + 3 * ss;\n        const h3 = sss - 2 * ss + s;\n        const h4 = sss - ss;\n        let slope;\n        let t;\n        if (model.colorSpace === ColorSpace.RGB) {\n          for (let j = 0; j < 3; j++) {\n            // Use one slope for both end points\n            slope = rgb2[j] - rgb1[j];\n            t = (1.0 - sharpness) * slope;\n\n            // Compute the value\n            table[tidx + j] = h1 * rgb1[j] + h2 * rgb2[j] + h3 * t + h4 * t;\n          }\n        } else if (model.colorSpace === ColorSpace.HSV) {\n          const hsv1 = [];\n          const hsv2 = [];\n          rgb2hsv(rgb1, hsv1);\n          rgb2hsv(rgb2, hsv2);\n          if (model.hSVWrap && (hsv1[0] - hsv2[0] > 0.5 || hsv2[0] - hsv1[0] > 0.5)) {\n            if (hsv1[0] > hsv2[0]) {\n              hsv1[0] -= 1.0;\n            } else {\n              hsv2[0] -= 1.0;\n            }\n          }\n          const hsvTmp = [];\n          for (let j = 0; j < 3; j++) {\n            // Use one slope for both end points\n            slope = hsv2[j] - hsv1[j];\n            t = (1.0 - sharpness) * slope;\n\n            // Compute the value\n            hsvTmp[j] = h1 * hsv1[j] + h2 * hsv2[j] + h3 * t + h4 * t;\n            if (j === 0 && hsvTmp[j] < 0.0) {\n              hsvTmp[j] += 1.0;\n            }\n          }\n          // Now convert this back to RGB\n          hsv2rgb(hsvTmp, tmpVec);\n          table[tidx] = tmpVec[0];\n          table[tidx + 1] = tmpVec[1];\n          table[tidx + 2] = tmpVec[2];\n        } else if (model.colorSpace === ColorSpace.LAB) {\n          const lab1 = [];\n          const lab2 = [];\n          rgb2lab(rgb1, lab1);\n          rgb2lab(rgb2, lab2);\n          const labTmp = [];\n          for (let j = 0; j < 3; j++) {\n            // Use one slope for both end points\n            slope = lab2[j] - lab1[j];\n            t = (1.0 - sharpness) * slope;\n\n            // Compute the value\n            labTmp[j] = h1 * lab1[j] + h2 * lab2[j] + h3 * t + h4 * t;\n          }\n          // Now convert this back to RGB\n          lab2rgb(labTmp, tmpVec);\n          table[tidx] = tmpVec[0];\n          table[tidx + 1] = tmpVec[1];\n          table[tidx + 2] = tmpVec[2];\n        } else if (model.colorSpace === ColorSpace.DIVERGING) {\n          // I have not implemented proper interpolation by a hermite curve for\n          // the diverging color map, but I cannot think of a good use case for\n          // that anyway.\n          vtkColorTransferFunctionInterpolateDiverging(s, rgb1, rgb2, tmpVec);\n          table[tidx] = tmpVec[0];\n          table[tidx + 1] = tmpVec[1];\n          table[tidx + 2] = tmpVec[2];\n        } else {\n          vtkErrorMacro('ColorSpace set to invalid value.');\n        }\n\n        // Final error check to make sure we don't go outside [0,1]\n        for (let j = 0; j < 3; j++) {\n          table[tidx + j] = table[tidx + j] < 0.0 ? 0.0 : table[tidx + j];\n          table[tidx + j] = table[tidx + j] > 1.0 ? 1.0 : table[tidx + j];\n        }\n      }\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getUint8Table = function (xStart, xEnd, size) {\n    let withAlpha = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    if (publicAPI.getMTime() <= model.buildTime && model.tableSize === size && model.tableWithAlpha !== withAlpha) {\n      return model.table;\n    }\n    if (model.nodes.length === 0) {\n      vtkErrorMacro('Attempting to lookup a value with no points in the function');\n      return model.table;\n    }\n    const nbChannels = withAlpha ? 4 : 3;\n    if (model.tableSize !== size || model.tableWithAlpha !== withAlpha) {\n      model.table = new Uint8Array(size * nbChannels);\n      model.tableSize = size;\n      model.tableWithAlpha = withAlpha;\n    }\n    const tmpTable = [];\n    publicAPI.getTable(xStart, xEnd, size, tmpTable);\n    for (let i = 0; i < size; i++) {\n      model.table[i * nbChannels + 0] = Math.floor(tmpTable[i * 3 + 0] * 255.0 + 0.5);\n      model.table[i * nbChannels + 1] = Math.floor(tmpTable[i * 3 + 1] * 255.0 + 0.5);\n      model.table[i * nbChannels + 2] = Math.floor(tmpTable[i * 3 + 2] * 255.0 + 0.5);\n      if (withAlpha) {\n        model.table[i * nbChannels + 3] = 255;\n      }\n    }\n    model.buildTime.modified();\n    return model.table;\n  };\n  publicAPI.buildFunctionFromArray = array => {\n    publicAPI.removeAllPoints();\n    const numComponents = array.getNumberOfComponents();\n    for (let i = 0; i < array.getNumberOfTuples(); i++) {\n      switch (numComponents) {\n        case 3:\n          {\n            model.nodes.push({\n              x: i,\n              r: array.getComponent(i, 0),\n              g: array.getComponent(i, 1),\n              b: array.getComponent(i, 2),\n              midpoint: 0.5,\n              sharpness: 0.0\n            });\n            break;\n          }\n        case 4:\n          {\n            model.nodes.push({\n              x: array.getComponent(i, 0),\n              r: array.getComponent(i, 1),\n              g: array.getComponent(i, 2),\n              b: array.getComponent(i, 3),\n              midpoint: 0.5,\n              sharpness: 0.0\n            });\n            break;\n          }\n        case 5:\n          {\n            model.nodes.push({\n              x: i,\n              r: array.getComponent(i, 0),\n              g: array.getComponent(i, 1),\n              b: array.getComponent(i, 2),\n              midpoint: array.getComponent(i, 4),\n              sharpness: array.getComponent(i, 5)\n            });\n            break;\n          }\n        case 6:\n          {\n            model.nodes.push({\n              x: array.getComponent(i, 0),\n              r: array.getComponent(i, 1),\n              g: array.getComponent(i, 2),\n              b: array.getComponent(i, 3),\n              midpoint: array.getComponent(i, 4),\n              sharpness: array.getComponent(i, 5)\n            });\n            break;\n          }\n      }\n    }\n    publicAPI.sortAndUpdateRange();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.buildFunctionFromTable = (xStart, xEnd, size, table) => {\n    let inc = 0.0;\n    publicAPI.removeAllPoints();\n    if (size > 1) {\n      inc = (xEnd - xStart) / (size - 1.0);\n    }\n    for (let i = 0; i < size; i++) {\n      const node = {\n        x: xStart + inc * i,\n        r: table[i * 3],\n        g: table[i * 3 + 1],\n        b: table[i * 3 + 2],\n        sharpness: 0.0,\n        midpoint: 0.5\n      };\n      model.nodes.push(node);\n    }\n    publicAPI.sortAndUpdateRange();\n  };\n\n  //----------------------------------------------------------------------------\n  // For a specified index value, get the node parameters\n  publicAPI.getNodeValue = (index, val) => {\n    if (index < 0 || index >= model.nodes.length) {\n      vtkErrorMacro('Index out of range!');\n      return -1;\n    }\n    val[0] = model.nodes[index].x;\n    val[1] = model.nodes[index].r;\n    val[2] = model.nodes[index].g;\n    val[3] = model.nodes[index].b;\n    val[4] = model.nodes[index].midpoint;\n    val[5] = model.nodes[index].sharpness;\n    return 1;\n  };\n\n  //----------------------------------------------------------------------------\n  // For a specified index value, get the node parameters\n  publicAPI.setNodeValue = (index, val) => {\n    if (index < 0 || index >= model.nodes.length) {\n      vtkErrorMacro('Index out of range!');\n      return -1;\n    }\n    const oldX = model.nodes[index].x;\n    model.nodes[index].x = val[0];\n    model.nodes[index].r = val[1];\n    model.nodes[index].g = val[2];\n    model.nodes[index].b = val[3];\n    model.nodes[index].midpoint = val[4];\n    model.nodes[index].sharpness = val[5];\n    if (oldX !== val[0]) {\n      // The point has been moved, the order of points or the range might have\n      // been modified.\n      publicAPI.sortAndUpdateRange();\n      // No need to call Modified() here because SortAndUpdateRange() has done it\n      // already.\n    } else {\n      publicAPI.modified();\n    }\n    return 1;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getNumberOfAvailableColors = () => {\n    if (model.indexedLookup && publicAPI.getSize()) {\n      return publicAPI.getSize();\n    }\n    if (model.tableSize) {\n      // Not sure if this is correct since it is only set if\n      // \"const unsigned char *::GetTable(double xStart, double xEnd,int size)\"\n      // has been called.\n      return model.tableSize;\n    }\n    return 16777216; // 2^24\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getIndexedColor = (idx, rgba) => {\n    const n = publicAPI.getSize();\n    if (n > 0 && idx >= 0) {\n      const nodeValue = [];\n      publicAPI.getNodeValue(idx % n, nodeValue);\n      for (let j = 0; j < 3; ++j) {\n        rgba[j] = nodeValue[j + 1];\n      }\n      rgba[3] = 1.0; // NodeColor is RGB-only.\n      return;\n    }\n    const nanColor = publicAPI.getNanColorByReference();\n    rgba[0] = nanColor[0];\n    rgba[1] = nanColor[1];\n    rgba[2] = nanColor[2];\n    rgba[3] = 1.0; // NanColor is RGB-only.\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.fillFromDataPointer = (nb, ptr) => {\n    if (nb <= 0 || !ptr) {\n      return;\n    }\n    publicAPI.removeAllPoints();\n    for (let i = 0; i < nb; i++) {\n      publicAPI.addRGBPoint(ptr[i * 4], ptr[i * 4 + 1], ptr[i * 4 + 2], ptr[i * 4 + 3]);\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.setMappingRange = (min, max) => {\n    const range = [min, max];\n    const originalRange = publicAPI.getRange();\n    if (originalRange[1] === range[1] && originalRange[0] === range[0]) {\n      return;\n    }\n    if (range[1] === range[0]) {\n      vtkErrorMacro('attempt to set zero width color range');\n      return;\n    }\n    const scale = (range[1] - range[0]) / (originalRange[1] - originalRange[0]);\n    const shift = range[0] - originalRange[0] * scale;\n    for (let i = 0; i < model.nodes.length; ++i) {\n      model.nodes[i].x = model.nodes[i].x * scale + shift;\n    }\n    model.mappingRange[0] = range[0];\n    model.mappingRange[1] = range[1];\n    publicAPI.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.adjustRange = range => {\n    const functionRange = publicAPI.getRange();\n\n    // Make sure we have points at each end of the range\n    const rgb = [];\n    if (functionRange[0] < range[0]) {\n      publicAPI.getColor(range[0], rgb);\n      publicAPI.addRGBPoint(range[0], rgb[0], rgb[1], rgb[2]);\n    } else {\n      publicAPI.getColor(functionRange[0], rgb);\n      publicAPI.addRGBPoint(range[0], rgb[0], rgb[1], rgb[2]);\n    }\n    if (functionRange[1] > range[1]) {\n      publicAPI.getColor(range[1], rgb);\n      publicAPI.addRGBPoint(range[1], rgb[0], rgb[1], rgb[2]);\n    } else {\n      publicAPI.getColor(functionRange[1], rgb);\n      publicAPI.addRGBPoint(range[1], rgb[0], rgb[1], rgb[2]);\n    }\n\n    // Remove all points out-of-range\n    publicAPI.sortAndUpdateRange();\n    for (let i = 0; i < model.nodes.length;) {\n      if (model.nodes[i].x >= range[0] && model.nodes[i].x <= range[1]) {\n        model.nodes.splice(i, 1);\n      } else {\n        ++i;\n      }\n    }\n    return 1;\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.estimateMinNumberOfSamples = (x1, x2) => {\n    const d = publicAPI.findMinimumXDistance();\n    return Math.ceil((x2 - x1) / d);\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.findMinimumXDistance = () => {\n    if (model.nodes.length < 2) {\n      return -1.0;\n    }\n    let distance = Number.MAX_VALUE;\n    for (let i = 0; i < model.nodes.length - 1; i++) {\n      const currentDist = model.nodes[i + 1].x - model.nodes[i].x;\n      if (currentDist < distance) {\n        distance = currentDist;\n      }\n    }\n    return distance;\n  };\n  publicAPI.mapScalarsThroughTable = (input, output, outFormat, inputOffset) => {\n    if (publicAPI.getSize() === 0) {\n      vtkDebugMacro('Transfer Function Has No Points!');\n      return;\n    }\n    if (model.indexedLookup) {\n      publicAPI.mapDataIndexed(input, output, outFormat, inputOffset);\n    } else {\n      publicAPI.mapData(input, output, outFormat, inputOffset);\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.mapData = (input, output, outFormat, inputOffset) => {\n    if (publicAPI.getSize() === 0) {\n      vtkWarningMacro('Transfer Function Has No Points!');\n      return;\n    }\n    const alpha = Math.floor(publicAPI.getAlpha() * 255.0 + 0.5);\n    const length = input.getNumberOfTuples();\n    const inIncr = input.getNumberOfComponents();\n    const outputV = output.getData();\n    const inputV = input.getData();\n    const rgb = [];\n    if (outFormat === ScalarMappingTarget.RGBA) {\n      for (let i = 0; i < length; i++) {\n        const x = inputV[i * inIncr + inputOffset];\n        publicAPI.getColor(x, rgb);\n        outputV[i * 4] = Math.floor(rgb[0] * 255.0 + 0.5);\n        outputV[i * 4 + 1] = Math.floor(rgb[1] * 255.0 + 0.5);\n        outputV[i * 4 + 2] = Math.floor(rgb[2] * 255.0 + 0.5);\n        outputV[i * 4 + 3] = alpha;\n      }\n    }\n    if (outFormat === ScalarMappingTarget.RGB) {\n      for (let i = 0; i < length; i++) {\n        const x = inputV[i * inIncr + inputOffset];\n        publicAPI.getColor(x, rgb);\n        outputV[i * 3] = Math.floor(rgb[0] * 255.0 + 0.5);\n        outputV[i * 3 + 1] = Math.floor(rgb[1] * 255.0 + 0.5);\n        outputV[i * 3 + 2] = Math.floor(rgb[2] * 255.0 + 0.5);\n      }\n    }\n    if (outFormat === ScalarMappingTarget.LUMINANCE) {\n      for (let i = 0; i < length; i++) {\n        const x = inputV[i * inIncr + inputOffset];\n        publicAPI.getColor(x, rgb);\n        outputV[i] = Math.floor(rgb[0] * 76.5 + rgb[1] * 150.45 + rgb[2] * 28.05 + 0.5);\n      }\n    }\n    if (outFormat === ScalarMappingTarget.LUMINANCE_ALPHA) {\n      for (let i = 0; i < length; i++) {\n        const x = inputV[i * inIncr + inputOffset];\n        publicAPI.getColor(x, rgb);\n        outputV[i * 2] = Math.floor(rgb[0] * 76.5 + rgb[1] * 150.45 + rgb[2] * 28.05 + 0.5);\n        outputV[i * 2 + 1] = alpha;\n      }\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.applyColorMap = colorMap => {\n    const oldColorSpace = JSON.stringify(model.colorSpace);\n    if (colorMap.ColorSpace) {\n      model.colorSpace = ColorSpace[colorMap.ColorSpace.toUpperCase()];\n      if (model.colorSpace === undefined) {\n        vtkErrorMacro(`ColorSpace ${colorMap.ColorSpace} not supported, using RGB instead`);\n        model.colorSpace = ColorSpace.RGB;\n      }\n    }\n    let isModified = oldColorSpace !== JSON.stringify(model.colorSpace);\n    const oldNanColor = isModified || JSON.stringify(model.nanColor);\n    if (colorMap.NanColor) {\n      model.nanColor = [].concat(colorMap.NanColor);\n      while (model.nanColor.length < 4) {\n        model.nanColor.push(1.0);\n      }\n    }\n    isModified = isModified || oldNanColor !== JSON.stringify(model.nanColor);\n    const oldNodes = isModified || JSON.stringify(model.nodes);\n    if (colorMap.RGBPoints) {\n      const size = colorMap.RGBPoints.length;\n      model.nodes = [];\n      const midpoint = 0.5;\n      const sharpness = 0.0;\n      for (let i = 0; i < size; i += 4) {\n        model.nodes.push({\n          x: colorMap.RGBPoints[i],\n          r: colorMap.RGBPoints[i + 1],\n          g: colorMap.RGBPoints[i + 2],\n          b: colorMap.RGBPoints[i + 3],\n          midpoint,\n          sharpness\n        });\n      }\n    }\n    const modifiedInvoked = publicAPI.sortAndUpdateRange();\n    const callModified = !modifiedInvoked && (isModified || oldNodes !== JSON.stringify(model.nodes));\n    if (callModified) publicAPI.modified();\n    return modifiedInvoked || callModified;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  clamping: true,\n  colorSpace: ColorSpace.RGB,\n  hSVWrap: true,\n  scale: Scale.LINEAR,\n  nanColor: null,\n  belowRangeColor: null,\n  aboveRangeColor: null,\n  useAboveRangeColor: false,\n  useBelowRangeColor: false,\n  allowDuplicateScalars: false,\n  table: null,\n  tableSize: 0,\n  buildTime: null,\n  nodes: null,\n  discretize: false,\n  numberOfValues: 256\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkScalarsToColors.extend(publicAPI, model, initialValues);\n\n  // Internal objects initialization\n  model.table = [];\n  model.nodes = [];\n  model.nanColor = [0.5, 0.0, 0.0, 1.0];\n  model.belowRangeColor = [0.0, 0.0, 0.0, 1.0];\n  model.aboveRangeColor = [1.0, 1.0, 1.0, 1.0];\n  model.buildTime = {};\n  macro.obj(model.buildTime);\n\n  // Create get-only macros\n  macro.get(publicAPI, model, ['buildTime', 'mappingRange']);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['useAboveRangeColor', 'useBelowRangeColor', 'colorSpace', 'discretize', 'numberOfValues']);\n  macro.setArray(publicAPI, model, ['nanColor', 'belowRangeColor', 'aboveRangeColor'], 4);\n\n  // Create get macros for array\n  macro.getArray(publicAPI, model, ['nanColor', 'belowRangeColor', 'aboveRangeColor']);\n\n  // For more macro methods, see \"Sources/macros.js\"\n\n  // Object specific methods\n  vtkColorTransferFunction(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkColorTransferFunction');\n\n// ----------------------------------------------------------------------------\n\nvar vtkColorTransferFunction$1 = {\n  newInstance,\n  extend,\n  ...Constants\n};\n\nexport { vtkColorTransferFunction$1 as default, extend, newInstance };\n","import { v as vtkColorMaps$1 } from './ColorMaps.json.js';\n\nconst presetMap = Object.create(null);\nvtkColorMaps$1.filter(p => p.RGBPoints).filter(p => p.ColorSpace !== 'CIELAB').forEach(p => {\n  presetMap[p.Name] = p;\n});\n\n// ----------------------------------------------------------------------------\n\nconst rgbPresetNames = Object.keys(presetMap);\nrgbPresetNames.sort();\n\n// ----------------------------------------------------------------------------\n\nfunction getPresetByName(name) {\n  return presetMap[name];\n}\n\n// ----------------------------------------------------------------------------\n\nfunction addPreset(preset) {\n  if (!preset.RGBPoints || preset.ColorSpace === 'CIELAB') {\n    return;\n  }\n  if (!presetMap[preset.Name]) {\n    rgbPresetNames.push(preset.Name);\n    rgbPresetNames.sort();\n  }\n  presetMap[preset.Name] = preset;\n}\n\n// ----------------------------------------------------------------------------\n\nfunction removePresetByName(name) {\n  const index = rgbPresetNames.indexOf(name);\n  if (index > -1) {\n    rgbPresetNames.splice(index, 1);\n  }\n  delete presetMap[name];\n}\n\n// ----------------------------------------------------------------------------\n\nvar vtkColorMaps = {\n  addPreset,\n  removePresetByName,\n  getPresetByName,\n  rgbPresetNames\n};\n\nexport { vtkColorMaps as default };\n","import Constants from './ImageMapper/Constants.js';\nimport { m as macro } from '../../macros2.js';\nimport vtkAbstractImageMapper from './AbstractImageMapper.js';\nimport { intersectWithLineForPointPicking, intersectWithLineForCellPicking } from './AbstractImageMapper/helper.js';\nimport { C as clampValue, R as multiply3x3_vect3, F as createUninitializedBounds, S as getSparseOrthogonalMatrix } from '../../Common/Core/Math/index.js';\nimport CoincidentTopologyHelper from './Mapper/CoincidentTopologyHelper.js';\n\nconst {\n  staticOffsetAPI,\n  otherStaticMethods\n} = CoincidentTopologyHelper;\nconst {\n  SlicingMode\n} = Constants;\n\n// ----------------------------------------------------------------------------\n// vtkImageMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageMapper');\n  publicAPI.getSliceAtPosition = pos => {\n    const image = publicAPI.getCurrentImage();\n    let pos3;\n    if (pos.length === 3) {\n      pos3 = pos;\n    } else if (Number.isFinite(pos)) {\n      const bds = image.getBounds();\n      switch (model.slicingMode) {\n        case SlicingMode.X:\n          pos3 = [pos, (bds[3] + bds[2]) / 2, (bds[5] + bds[4]) / 2];\n          break;\n        case SlicingMode.Y:\n          pos3 = [(bds[1] + bds[0]) / 2, pos, (bds[5] + bds[4]) / 2];\n          break;\n        case SlicingMode.Z:\n          pos3 = [(bds[1] + bds[0]) / 2, (bds[3] + bds[2]) / 2, pos];\n          break;\n      }\n    }\n    const ijk = [0, 0, 0];\n    image.worldToIndex(pos3, ijk);\n    const ex = image.getExtent();\n    const {\n      ijkMode\n    } = publicAPI.getClosestIJKAxis();\n    let slice = 0;\n    switch (ijkMode) {\n      case SlicingMode.I:\n        slice = clampValue(ijk[0], ex[0], ex[1]);\n        break;\n      case SlicingMode.J:\n        slice = clampValue(ijk[1], ex[2], ex[3]);\n        break;\n      case SlicingMode.K:\n        slice = clampValue(ijk[2], ex[4], ex[5]);\n        break;\n      default:\n        return 0;\n    }\n    return slice;\n  };\n  publicAPI.setSliceFromCamera = cam => {\n    const fp = cam.getFocalPoint();\n    switch (model.slicingMode) {\n      case SlicingMode.I:\n      case SlicingMode.J:\n      case SlicingMode.K:\n        {\n          const slice = publicAPI.getSliceAtPosition(fp);\n          publicAPI.setSlice(slice);\n        }\n        break;\n      case SlicingMode.X:\n        publicAPI.setSlice(fp[0]);\n        break;\n      case SlicingMode.Y:\n        publicAPI.setSlice(fp[1]);\n        break;\n      case SlicingMode.Z:\n        publicAPI.setSlice(fp[2]);\n        break;\n    }\n  };\n  publicAPI.setXSlice = id => {\n    publicAPI.setSlicingMode(SlicingMode.X);\n    publicAPI.setSlice(id);\n  };\n  publicAPI.setYSlice = id => {\n    publicAPI.setSlicingMode(SlicingMode.Y);\n    publicAPI.setSlice(id);\n  };\n  publicAPI.setZSlice = id => {\n    publicAPI.setSlicingMode(SlicingMode.Z);\n    publicAPI.setSlice(id);\n  };\n  publicAPI.setISlice = id => {\n    publicAPI.setSlicingMode(SlicingMode.I);\n    publicAPI.setSlice(id);\n  };\n  publicAPI.setJSlice = id => {\n    publicAPI.setSlicingMode(SlicingMode.J);\n    publicAPI.setSlice(id);\n  };\n  publicAPI.setKSlice = id => {\n    publicAPI.setSlicingMode(SlicingMode.K);\n    publicAPI.setSlice(id);\n  };\n  publicAPI.getSlicingModeNormal = () => {\n    const out = [0, 0, 0];\n    const mat3 = publicAPI.getCurrentImage().getDirection();\n    switch (model.slicingMode) {\n      case SlicingMode.X:\n        out[0] = 1;\n        break;\n      case SlicingMode.Y:\n        out[1] = 1;\n        break;\n      case SlicingMode.Z:\n        out[2] = 1;\n        break;\n      case SlicingMode.I:\n        multiply3x3_vect3(mat3, [1, 0, 0], out);\n        break;\n      case SlicingMode.J:\n        multiply3x3_vect3(mat3, [0, 1, 0], out);\n        break;\n      case SlicingMode.K:\n        multiply3x3_vect3(mat3, [0, 0, 1], out);\n        break;\n    }\n    return out;\n  };\n  function computeClosestIJKAxis() {\n    let xyzMode;\n    switch (model.slicingMode) {\n      case SlicingMode.X:\n        xyzMode = 0;\n        break;\n      case SlicingMode.Y:\n        xyzMode = 1;\n        break;\n      case SlicingMode.Z:\n        xyzMode = 2;\n        break;\n      default:\n        model.closestIJKAxis = {\n          ijkMode: model.slicingMode,\n          flip: false\n        };\n        return;\n    }\n\n    // The direction matrix in vtkImageData is the indexToWorld rotation matrix\n    // with a column-major data layout since it is stored as a WebGL matrix.\n    const direction = publicAPI.getCurrentImage().getDirection();\n    const newMatrix = getSparseOrthogonalMatrix(direction);\n    // With {foo}Vector filled with 0s except at {foo}Mode position where it is 1\n    // We have xyzVector = (+/-) newMatrix * ijkVector\n    let ijkMode = 0;\n    for (; ijkMode < 3; ++ijkMode) {\n      if (newMatrix[xyzMode + 3 * ijkMode] !== 0) {\n        break;\n      }\n    }\n    const flip = newMatrix[xyzMode + 3 * ijkMode] < 0;\n    model.closestIJKAxis = {\n      ijkMode,\n      flip\n    };\n  }\n  publicAPI.setSlicingMode = mode => {\n    if (model.slicingMode === mode) {\n      return;\n    }\n    model.slicingMode = mode;\n    if (publicAPI.getCurrentImage()) {\n      computeClosestIJKAxis();\n    }\n    publicAPI.modified();\n  };\n  publicAPI.getClosestIJKAxis = () => {\n    if ((model.closestIJKAxis === undefined || model.closestIJKAxis.ijkMode === SlicingMode.NONE) && publicAPI.getCurrentImage()) {\n      computeClosestIJKAxis();\n    }\n    return model.closestIJKAxis;\n  };\n  publicAPI.getBounds = () => {\n    const image = publicAPI.getCurrentImage();\n    if (!image) {\n      return createUninitializedBounds();\n    }\n    if (!model.useCustomExtents) {\n      return image.getBounds();\n    }\n    const ex = model.customDisplayExtent.slice();\n    const {\n      ijkMode\n    } = publicAPI.getClosestIJKAxis();\n    let nSlice = model.slice;\n    if (ijkMode !== model.slicingMode) {\n      // If not IJK slicing, get the IJK slice from the XYZ position/slice\n      nSlice = publicAPI.getSliceAtPosition(model.slice);\n    }\n    switch (ijkMode) {\n      case SlicingMode.I:\n        ex[0] = nSlice;\n        ex[1] = nSlice;\n        break;\n      case SlicingMode.J:\n        ex[2] = nSlice;\n        ex[3] = nSlice;\n        break;\n      case SlicingMode.K:\n        ex[4] = nSlice;\n        ex[5] = nSlice;\n        break;\n    }\n    return image.extentToBounds(ex);\n  };\n  publicAPI.getBoundsForSlice = function () {\n    let slice = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : model.slice;\n    let halfThickness = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    const image = publicAPI.getCurrentImage();\n    if (!image) {\n      return createUninitializedBounds();\n    }\n    const extent = image.getSpatialExtent();\n    const {\n      ijkMode\n    } = publicAPI.getClosestIJKAxis();\n    let nSlice = slice;\n    if (ijkMode !== model.slicingMode) {\n      // If not IJK slicing, get the IJK slice from the XYZ position/slice\n      nSlice = publicAPI.getSliceAtPosition(slice);\n    }\n    switch (ijkMode) {\n      case SlicingMode.I:\n        extent[0] = nSlice - halfThickness;\n        extent[1] = nSlice + halfThickness;\n        break;\n      case SlicingMode.J:\n        extent[2] = nSlice - halfThickness;\n        extent[3] = nSlice + halfThickness;\n        break;\n      case SlicingMode.K:\n        extent[4] = nSlice - halfThickness;\n        extent[5] = nSlice + halfThickness;\n        break;\n    }\n    return image.extentToBounds(extent);\n  };\n  publicAPI.intersectWithLineForPointPicking = (p1, p2) => intersectWithLineForPointPicking(p1, p2, publicAPI);\n  publicAPI.intersectWithLineForCellPicking = (p1, p2) => intersectWithLineForCellPicking(p1, p2, publicAPI);\n  publicAPI.getCurrentImage = () => publicAPI.getInputData();\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  slicingMode: SlicingMode.NONE,\n  closestIJKAxis: {\n    ijkMode: SlicingMode.NONE,\n    flip: false\n  },\n  renderToRectangle: false,\n  sliceAtFocalPoint: false,\n  preferSizeOverAccuracy: false // Whether to use halfFloat representation of float, when it is inaccurate\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  vtkAbstractImageMapper.extend(publicAPI, model, initialValues);\n  macro.get(publicAPI, model, ['slicingMode']);\n  macro.setGet(publicAPI, model, ['closestIJKAxis', 'renderToRectangle', 'sliceAtFocalPoint', 'preferSizeOverAccuracy']);\n  CoincidentTopologyHelper.implementCoincidentTopologyMethods(publicAPI, model);\n\n  // Object methods\n  vtkImageMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkImageMapper');\n\n// ----------------------------------------------------------------------------\n\nvar vtkImageMapper$1 = {\n  newInstance,\n  extend,\n  ...staticOffsetAPI,\n  ...otherStaticMethods,\n  ...Constants\n};\n\nexport { vtkImageMapper$1 as default, extend, newInstance };\n","import { mat4 } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\nimport vtkProp3D from './Prop3D.js';\nimport vtkImageProperty from './ImageProperty.js';\n\nconst {\n  vtkDebugMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkImageSlice methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageSlice(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageSlice');\n  publicAPI.getActors = () => publicAPI;\n  publicAPI.getImages = () => publicAPI;\n  publicAPI.getIsOpaque = () => {\n    if (model.forceOpaque) {\n      return true;\n    }\n    if (model.forceTranslucent) {\n      return false;\n    }\n    // make sure we have a property\n    if (!model.property) {\n      // force creation of a property\n      publicAPI.getProperty();\n    }\n    let isOpaque = model.property.getOpacity() >= 1.0;\n\n    // are we using an opaque scalar array, if any?\n    isOpaque = isOpaque && (!model.mapper || model.mapper.getIsOpaque());\n    return isOpaque;\n  };\n\n  // Always render during opaque pass, to keep the behavior\n  // predictable and because depth-peeling kills alpha-blending.\n  // In the future, the Renderer should render images in layers,\n  // i.e. where each image will have a layer number assigned to it,\n  // and the Renderer will do the images in their own pass.\n  publicAPI.hasTranslucentPolygonalGeometry = () => false;\n  publicAPI.makeProperty = vtkImageProperty.newInstance;\n  publicAPI.getProperty = () => {\n    if (model.property === null) {\n      model.property = publicAPI.makeProperty();\n    }\n    return model.property;\n  };\n  publicAPI.getBounds = () => {\n    if (model.mapper === null) {\n      return model.bounds;\n    }\n\n    // Check for the special case when the mapper's bounds are unknown\n    const bds = model.mapper.getBounds();\n    if (!bds || bds.length !== 6) {\n      return bds;\n    }\n\n    // Check for the special case when the actor is empty.\n    if (bds[0] > bds[1]) {\n      model.mapperBounds = bds.concat(); // copy the mapper's bounds\n      model.bounds = [1, -1, 1, -1, 1, -1];\n      model.boundsMTime.modified();\n      return bds;\n    }\n\n    // Check if we have cached values for these bounds - we cache the\n    // values returned by model.mapper.getBounds() and we store the time\n    // of caching. If the values returned this time are different, or\n    // the modified time of this class is newer than the cached time,\n    // then we need to rebuild.\n    const zip = rows => rows[0].map((_, c) => rows.map(row => row[c]));\n    if (!model.mapperBounds || !zip([bds, model.mapperBounds]).reduce((a, b) => a && b[0] === b[1], true) || publicAPI.getMTime() > model.boundsMTime.getMTime()) {\n      vtkDebugMacro('Recomputing bounds...');\n      model.mapperBounds = bds.map(x => x);\n      publicAPI.computeMatrix();\n      const tmp4 = new Float64Array(16);\n      mat4.transpose(tmp4, model.matrix);\n      vtkBoundingBox.transformBounds(bds, tmp4, model.bounds);\n      model.boundsMTime.modified();\n    }\n    return model.bounds;\n  };\n  publicAPI.getBoundsForSlice = (slice, thickness) => {\n    // Check for the special case when the mapper's bounds are unknown\n    const bds = model.mapper.getBoundsForSlice(slice, thickness);\n    // Check for the special case when the actor is empty.\n    if (!vtkBoundingBox.isValid(bds)) {\n      return bds;\n    }\n    publicAPI.computeMatrix();\n    const tmp4 = new Float64Array(16);\n    mat4.transpose(tmp4, model.matrix);\n    const newBounds = vtkBoundingBox.transformBounds(bds, tmp4);\n    return newBounds;\n  };\n\n  //----------------------------------------------------------------------------\n  // Get the minimum X bound\n  publicAPI.getMinXBound = () => publicAPI.getBounds()[0];\n\n  // Get the maximum X bound\n  publicAPI.getMaxXBound = () => publicAPI.getBounds()[1];\n\n  // Get the minimum Y bound\n  publicAPI.getMinYBound = () => publicAPI.getBounds()[2];\n\n  // Get the maximum Y bound\n  publicAPI.getMaxYBound = () => publicAPI.getBounds()[3];\n\n  // Get the minimum Z bound\n  publicAPI.getMinZBound = () => publicAPI.getBounds()[4];\n\n  // Get the maximum Z bound\n  publicAPI.getMaxZBound = () => publicAPI.getBounds()[5];\n  publicAPI.getMTime = () => {\n    let mt = model.mtime;\n    if (model.property !== null) {\n      const time = model.property.getMTime();\n      mt = time > mt ? time : mt;\n    }\n    return mt;\n  };\n  publicAPI.getRedrawMTime = () => {\n    let mt = model.mtime;\n    if (model.mapper !== null) {\n      let time = model.mapper.getMTime();\n      mt = time > mt ? time : mt;\n      if (model.mapper.getInput() !== null) {\n        // FIXME !!! getInputAlgorithm / getInput\n        model.mapper.getInputAlgorithm().update();\n        time = model.mapper.getInput().getMTime();\n        mt = time > mt ? time : mt;\n      }\n    }\n    if (model.property !== null) {\n      let time = model.property.getMTime();\n      mt = time > mt ? time : mt;\n      if (model.property.getRGBTransferFunction() !== null) {\n        time = model.property.getRGBTransferFunction().getMTime();\n        mt = time > mt ? time : mt;\n      }\n    }\n    return mt;\n  };\n  publicAPI.getSupportsSelection = () => model.mapper ? model.mapper.getSupportsSelection() : false;\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  mapper: null,\n  property: null,\n  bounds: [...vtkBoundingBox.INIT_BOUNDS]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkProp3D.extend(publicAPI, model, initialValues);\n\n  // vtkTimeStamp\n  model.boundsMTime = {};\n  macro.obj(model.boundsMTime);\n\n  // Build VTK API\n  macro.set(publicAPI, model, ['property']);\n  macro.setGet(publicAPI, model, ['mapper']);\n  macro.getArray(publicAPI, model, ['bounds'], 6);\n\n  // Object methods\n  vtkImageSlice(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkImageSlice');\n\n// ----------------------------------------------------------------------------\n\nvar vtkImageSlice$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkImageSlice$1 as default, extend, newInstance };\n","import { mat4, vec3 } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\nimport vtkProp3D from './Prop3D.js';\nimport vtkVolumeProperty from './VolumeProperty.js';\n\nconst {\n  vtkDebugMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkVolume methods\n// ----------------------------------------------------------------------------\n\nfunction vtkVolume(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkVolume');\n  publicAPI.getVolumes = () => publicAPI;\n  publicAPI.makeProperty = vtkVolumeProperty.newInstance;\n  publicAPI.getProperty = () => {\n    if (model.property === null) {\n      model.property = publicAPI.makeProperty();\n    }\n    return model.property;\n  };\n  publicAPI.getBounds = () => {\n    if (model.mapper === null) {\n      return model.bounds;\n    }\n\n    // Check for the special case when the mapper's bounds are unknown\n    const bds = model.mapper.getBounds();\n    if (!bds || bds.length !== 6) {\n      return bds;\n    }\n\n    // Check for the special case when the actor is empty.\n    if (bds[0] > bds[1]) {\n      model.mapperBounds = bds.concat(); // copy the mapper's bounds\n      model.bounds = [1, -1, 1, -1, 1, -1];\n      model.boundsMTime.modified();\n      return bds;\n    }\n\n    // Check if we have cached values for these bounds - we cache the\n    // values returned by model.mapper.getBounds() and we store the time\n    // of caching. If the values returned this time are different, or\n    // the modified time of this class is newer than the cached time,\n    // then we need to rebuild.\n    const zip = rows => rows[0].map((_, c) => rows.map(row => row[c]));\n    if (!model.mapperBounds || !zip([bds, model.mapperBounds]).reduce((a, b) => a && b[0] === b[1], true) || publicAPI.getMTime() > model.boundsMTime.getMTime()) {\n      vtkDebugMacro('Recomputing bounds...');\n      model.mapperBounds = bds.map(x => x);\n      const bbox = [];\n      vtkBoundingBox.getCorners(bds, bbox);\n      publicAPI.computeMatrix();\n      const tmp4 = new Float64Array(16);\n      mat4.transpose(tmp4, model.matrix);\n      bbox.forEach(pt => vec3.transformMat4(pt, pt, tmp4));\n\n      /* eslint-disable no-multi-assign */\n      model.bounds[0] = model.bounds[2] = model.bounds[4] = Number.MAX_VALUE;\n      model.bounds[1] = model.bounds[3] = model.bounds[5] = -Number.MAX_VALUE;\n      /* eslint-enable no-multi-assign */\n      model.bounds = model.bounds.map((d, i) => i % 2 === 0 ? bbox.reduce((a, b) => a > b[i / 2] ? b[i / 2] : a, d) : bbox.reduce((a, b) => a < b[(i - 1) / 2] ? b[(i - 1) / 2] : a, d));\n      model.boundsMTime.modified();\n    }\n    return model.bounds;\n  };\n  publicAPI.getMTime = () => {\n    let mt = model.mtime;\n    if (model.property !== null) {\n      const time = model.property.getMTime();\n      mt = time > mt ? time : mt;\n    }\n    return mt;\n  };\n  publicAPI.getRedrawMTime = () => {\n    let mt = model.mtime;\n    if (model.mapper !== null) {\n      let time = model.mapper.getMTime();\n      mt = time > mt ? time : mt;\n      if (model.mapper.getInput() !== null) {\n        // FIXME !!! getInputAlgorithm / getInput\n        model.mapper.getInputAlgorithm().update();\n        time = model.mapper.getInput().getMTime();\n        mt = time > mt ? time : mt;\n      }\n    }\n    return mt;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  mapper: null,\n  property: null,\n  bounds: [1, -1, 1, -1, 1, -1]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkProp3D.extend(publicAPI, model, initialValues);\n\n  // vtkTimeStamp\n  model.boundsMTime = {};\n  macro.obj(model.boundsMTime);\n\n  // Build VTK API\n  macro.set(publicAPI, model, ['property']);\n  macro.setGet(publicAPI, model, ['mapper']);\n  macro.getArray(publicAPI, model, ['bounds'], 6);\n\n  // Object methods\n  vtkVolume(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkVolume');\n\n// ----------------------------------------------------------------------------\n\nvar vtkVolume$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkVolume$1 as default, extend, newInstance };\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nconst proxyMarker = Symbol(\"Comlink.proxy\");\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\nconst finalizer = Symbol(\"Comlink.finalizer\");\nconst throwMarker = Symbol(\"Comlink.thrown\");\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler = {\n    canHandle: (val) => isObject(val) && val[proxyMarker],\n    serialize(obj) {\n        const { port1, port2 } = new MessageChannel();\n        expose(obj, port1);\n        return [port2, [port2]];\n    },\n    deserialize(port) {\n        port.start();\n        return wrap(port);\n    },\n};\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler = {\n    canHandle: (value) => isObject(value) && throwMarker in value,\n    serialize({ value }) {\n        let serialized;\n        if (value instanceof Error) {\n            serialized = {\n                isError: true,\n                value: {\n                    message: value.message,\n                    name: value.name,\n                    stack: value.stack,\n                },\n            };\n        }\n        else {\n            serialized = { isError: false, value };\n        }\n        return [serialized, []];\n    },\n    deserialize(serialized) {\n        if (serialized.isError) {\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\n        }\n        throw serialized.value;\n    },\n};\n/**\n * Allows customizing the serialization of certain values.\n */\nconst transferHandlers = new Map([\n    [\"proxy\", proxyTransferHandler],\n    [\"throw\", throwTransferHandler],\n]);\nfunction isAllowedOrigin(allowedOrigins, origin) {\n    for (const allowedOrigin of allowedOrigins) {\n        if (origin === allowedOrigin || allowedOrigin === \"*\") {\n            return true;\n        }\n        if (allowedOrigin instanceof RegExp && allowedOrigin.test(origin)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction expose(obj, ep = globalThis, allowedOrigins = [\"*\"]) {\n    ep.addEventListener(\"message\", function callback(ev) {\n        if (!ev || !ev.data) {\n            return;\n        }\n        if (!isAllowedOrigin(allowedOrigins, ev.origin)) {\n            console.warn(`Invalid origin '${ev.origin}' for comlink proxy`);\n            return;\n        }\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n        let returnValue;\n        try {\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n            switch (type) {\n                case \"GET\" /* MessageType.GET */:\n                    {\n                        returnValue = rawValue;\n                    }\n                    break;\n                case \"SET\" /* MessageType.SET */:\n                    {\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n                        returnValue = true;\n                    }\n                    break;\n                case \"APPLY\" /* MessageType.APPLY */:\n                    {\n                        returnValue = rawValue.apply(parent, argumentList);\n                    }\n                    break;\n                case \"CONSTRUCT\" /* MessageType.CONSTRUCT */:\n                    {\n                        const value = new rawValue(...argumentList);\n                        returnValue = proxy(value);\n                    }\n                    break;\n                case \"ENDPOINT\" /* MessageType.ENDPOINT */:\n                    {\n                        const { port1, port2 } = new MessageChannel();\n                        expose(obj, port2);\n                        returnValue = transfer(port1, [port1]);\n                    }\n                    break;\n                case \"RELEASE\" /* MessageType.RELEASE */:\n                    {\n                        returnValue = undefined;\n                    }\n                    break;\n                default:\n                    return;\n            }\n        }\n        catch (value) {\n            returnValue = { value, [throwMarker]: 0 };\n        }\n        Promise.resolve(returnValue)\n            .catch((value) => {\n            return { value, [throwMarker]: 0 };\n        })\n            .then((returnValue) => {\n            const [wireValue, transferables] = toWireValue(returnValue);\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n            if (type === \"RELEASE\" /* MessageType.RELEASE */) {\n                // detach and deactive after sending release response above.\n                ep.removeEventListener(\"message\", callback);\n                closeEndPoint(ep);\n                if (finalizer in obj && typeof obj[finalizer] === \"function\") {\n                    obj[finalizer]();\n                }\n            }\n        })\n            .catch((error) => {\n            // Send Serialization Error To Caller\n            const [wireValue, transferables] = toWireValue({\n                value: new TypeError(\"Unserializable return value\"),\n                [throwMarker]: 0,\n            });\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n        });\n    });\n    if (ep.start) {\n        ep.start();\n    }\n}\nfunction isMessagePort(endpoint) {\n    return endpoint.constructor.name === \"MessagePort\";\n}\nfunction closeEndPoint(endpoint) {\n    if (isMessagePort(endpoint))\n        endpoint.close();\n}\nfunction wrap(ep, target) {\n    return createProxy(ep, [], target);\n}\nfunction throwIfProxyReleased(isReleased) {\n    if (isReleased) {\n        throw new Error(\"Proxy has been released and is not useable\");\n    }\n}\nfunction releaseEndpoint(ep) {\n    return requestResponseMessage(ep, {\n        type: \"RELEASE\" /* MessageType.RELEASE */,\n    }).then(() => {\n        closeEndPoint(ep);\n    });\n}\nconst proxyCounter = new WeakMap();\nconst proxyFinalizers = \"FinalizationRegistry\" in globalThis &&\n    new FinalizationRegistry((ep) => {\n        const newCount = (proxyCounter.get(ep) || 0) - 1;\n        proxyCounter.set(ep, newCount);\n        if (newCount === 0) {\n            releaseEndpoint(ep);\n        }\n    });\nfunction registerProxy(proxy, ep) {\n    const newCount = (proxyCounter.get(ep) || 0) + 1;\n    proxyCounter.set(ep, newCount);\n    if (proxyFinalizers) {\n        proxyFinalizers.register(proxy, ep, proxy);\n    }\n}\nfunction unregisterProxy(proxy) {\n    if (proxyFinalizers) {\n        proxyFinalizers.unregister(proxy);\n    }\n}\nfunction createProxy(ep, path = [], target = function () { }) {\n    let isProxyReleased = false;\n    const proxy = new Proxy(target, {\n        get(_target, prop) {\n            throwIfProxyReleased(isProxyReleased);\n            if (prop === releaseProxy) {\n                return () => {\n                    unregisterProxy(proxy);\n                    releaseEndpoint(ep);\n                    isProxyReleased = true;\n                };\n            }\n            if (prop === \"then\") {\n                if (path.length === 0) {\n                    return { then: () => proxy };\n                }\n                const r = requestResponseMessage(ep, {\n                    type: \"GET\" /* MessageType.GET */,\n                    path: path.map((p) => p.toString()),\n                }).then(fromWireValue);\n                return r.then.bind(r);\n            }\n            return createProxy(ep, [...path, prop]);\n        },\n        set(_target, prop, rawValue) {\n            throwIfProxyReleased(isProxyReleased);\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n            const [value, transferables] = toWireValue(rawValue);\n            return requestResponseMessage(ep, {\n                type: \"SET\" /* MessageType.SET */,\n                path: [...path, prop].map((p) => p.toString()),\n                value,\n            }, transferables).then(fromWireValue);\n        },\n        apply(_target, _thisArg, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const last = path[path.length - 1];\n            if (last === createEndpoint) {\n                return requestResponseMessage(ep, {\n                    type: \"ENDPOINT\" /* MessageType.ENDPOINT */,\n                }).then(fromWireValue);\n            }\n            // We just pretend that `bind()` didn’t happen.\n            if (last === \"bind\") {\n                return createProxy(ep, path.slice(0, -1));\n            }\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, {\n                type: \"APPLY\" /* MessageType.APPLY */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n        construct(_target, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, {\n                type: \"CONSTRUCT\" /* MessageType.CONSTRUCT */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n    });\n    registerProxy(proxy, ep);\n    return proxy;\n}\nfunction myFlat(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\nfunction processArguments(argumentList) {\n    const processed = argumentList.map(toWireValue);\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\nconst transferCache = new WeakMap();\nfunction transfer(obj, transfers) {\n    transferCache.set(obj, transfers);\n    return obj;\n}\nfunction proxy(obj) {\n    return Object.assign(obj, { [proxyMarker]: true });\n}\nfunction windowEndpoint(w, context = globalThis, targetOrigin = \"*\") {\n    return {\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\n        addEventListener: context.addEventListener.bind(context),\n        removeEventListener: context.removeEventListener.bind(context),\n    };\n}\nfunction toWireValue(value) {\n    for (const [name, handler] of transferHandlers) {\n        if (handler.canHandle(value)) {\n            const [serializedValue, transferables] = handler.serialize(value);\n            return [\n                {\n                    type: \"HANDLER\" /* WireValueType.HANDLER */,\n                    name,\n                    value: serializedValue,\n                },\n                transferables,\n            ];\n        }\n    }\n    return [\n        {\n            type: \"RAW\" /* WireValueType.RAW */,\n            value,\n        },\n        transferCache.get(value) || [],\n    ];\n}\nfunction fromWireValue(value) {\n    switch (value.type) {\n        case \"HANDLER\" /* WireValueType.HANDLER */:\n            return transferHandlers.get(value.name).deserialize(value.value);\n        case \"RAW\" /* WireValueType.RAW */:\n            return value.value;\n    }\n}\nfunction requestResponseMessage(ep, msg, transfers) {\n    return new Promise((resolve) => {\n        const id = generateUUID();\n        ep.addEventListener(\"message\", function l(ev) {\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\n                return;\n            }\n            ep.removeEventListener(\"message\", l);\n            resolve(ev.data);\n        });\n        if (ep.start) {\n            ep.start();\n        }\n        ep.postMessage(Object.assign({ id }, msg), transfers);\n    });\n}\nfunction generateUUID() {\n    return new Array(4)\n        .fill(0)\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n        .join(\"-\");\n}\n\nexport { createEndpoint, expose, finalizer, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","import ascending from \"./ascending.js\";\nimport descending from \"./descending.js\";\n\nexport default function bisector(f) {\n  let compare1, compare2, delta;\n\n  // If an accessor is specified, promote it to a comparator. In this case we\n  // can test whether the search value is (self-) comparable. We can’t do this\n  // for a comparator (except for specific, known comparators) because we can’t\n  // tell if the comparator is symmetric, and an asymmetric comparator can’t be\n  // used to test whether a single value is comparable.\n  if (f.length !== 2) {\n    compare1 = ascending;\n    compare2 = (d, x) => ascending(f(d), x);\n    delta = (d, x) => f(d) - x;\n  } else {\n    compare1 = f === ascending || f === descending ? f : zero;\n    compare2 = f;\n    delta = f;\n  }\n\n  function left(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function right(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) <= 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function center(a, x, lo = 0, hi = a.length) {\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction zero() {\n  return 0;\n}\n"],"names":["VideoViewport","constructor","props","super","canvas","element","videoWidth","videoHeight","loop","mute","isPlaying","scrollSpeed","playbackRate","frameRange","fps","videoCamera","panWorld","parallelScale","voiRange","lower","upper","getProperties","this","videoElement","muted","resetCamera","refreshRenderValues","canvasContext","fillRect","width","height","renderFrame","getNumberOfSlices","computedSlices","Math","round","duration","isNaN","numberOfFrames","getFrameOfReferenceUID","src","resize","clientWidth","clientHeight","canvasToWorld","canvasPos","destPos","pan","worldToCanvasRatio","getWorldToCanvasRatio","panOffsetCanvas","subCanvasPos","splice","worldToCanvas","worldPos","getRotation","canvasToIndex","transform","getTransform","invert","transformPoint","map","it","devicePixelRatio","indexToCanvas","indexPos","customRenderViewportToCanvas","transformationMatrix","getMatrix","ctx","resetTransform","drawImage","actor","getActors","render","triggerEvent","STACK_NEW_IMAGE","viewportId","id","viewport","renderingEngineId","time","currentTime","IMAGE_RENDERED","initialRender","frame","getFrameNumber","setFrameNumber","pause","renderWhilstPlaying","requestAnimationFrame","getContext","setAttribute","document","createElement","autoplay","crossOrigin","addEventListeners","frameRangeExtractor","useCustomRenderingPipeline","addEventListener","ELEMENT_DISABLED","elementDisabledHandler","removeEventListeners","removeEventListener","remove","getImageDataMetadata","image","imageId","imagePlaneModule","MetadataModules","IMAGE_PLANE","rowCosines","columnCosines","rowCosineVec","colCosineVec","rows","columns","scanAxisNormal","origin","imagePositionPatient","xSpacing","columnPixelSpacing","ySpacing","rowPixelSpacing","xVoxels","yVoxels","hasPixelSpacing","bitsAllocated","numComps","direction","dimensions","spacing","numVoxels","setDataIds","imageIds","options","setVideo","viewReference","sliceIndex","frameNumber","Array","isArray","imageUrlModule","IMAGE_URL","rendered","Error","generalSeries","GENERAL_SERIES","modality","Modality","metadata","cineRate","CINE","setVideoURL","then","setFrameRange","Promise","resolve","window","setTimeout","videoURL","preload","loadedMetadataEventHandler","getImageIds","baseImageId","replace","i","togglePlayPause","play","e","scroll","delta","newTime","seekEventListener","evt","start","paused","end","setTime","timeInSeconds","length","getFrameRange","setProperties","undefined","setPlaybackRate","setScrollSpeed","setVOI","rate","unit","FRAME","SECOND","resetProperties","getScalarData","scalarData","context","getImageData","data","getRange","imageData","getDirection","getDimensions","getSpacing","worldToIndex","point","canvasPoint","pixelCoord","indexToWorld","destPoint","calibration","preScale","scaled","Object","defineProperty","get","enumerable","hasImageURI","imageURI","framesMatch","match","testURI","substring","index","indexOf","setColorTransform","setWindowLevel","windowWidth","windowCenter","setAverageWhite","averageWhite","feFilter","white","maxWhite","max","scaleWhite","c","wlScale","wlDelta","style","filter","setCamera","camera","focalPoint","focalPointCanvas","canvasCenter","panWorldDelta","fillStyle","getCurrentImageId","getReferenceId","specifier","isReferenceViewable","viewRef","referencedImageId","colonIndex","withNavigation","currentIndex","getSliceIndex","range","split","Number","getViewReference","viewRefSpecifier","getCurrentImageIdIndex","getCamera","parallelProjection","position","viewUp","viewPlaneNormal","getPan","offsetWidth","offsetHeight","drawWidth","floor","drawHeight","xOffsetWorld","yOffsetWorld","getCanvasToWorldRatio","canvasToWorldRatio","halfCanvas","halfCanvasWorldCoordinates","scale","translate","updateCameraClippingPlanesAndRange","addImages","stackInputs","actors","forEach","stackInput","getImage","imageActor","createActorMapper","push","uid","actorUID","callback","setActors","async","renderingEngine","viewportIds","getViewport","console","warn","addStackPromises","all","volumeInputs","immediateRender","suppressEvents","addVolumePromises","addVolumes","COLOR_TRANSPARENT","getRank","array","elem","left","right","mid","midElem","makeMappingArray","N","gamma","x","y0","y1","lut","xLinSpace","a","b","n","increment","vector","linspace","pow","xLinSpaceIndexes","inputArray","values","indexes","len","sort","searchSorted","colorPercent","colorDelta","getColormap","colormapData","colormap","name","colors","segmentedData","redLut","red","greenLut","green","blueLut","blue","rgba","createLinearSegmentedColormap","numColors","getId","getColorSchemeName","setColorSchemeName","getNumberOfColors","setNumberOfColors","getColor","isValidIndex","getColorRepeating","setColor","addColor","insertColor","removeColor","clearColors","buildLookupTable","setNumberOfTableValues","setTableValue","createLookupTable","enabledElement","invalidated","stats","lastGetPixelDataTime","lastStoredPixelDataToCanvasImageDataTime","lastPutImageDataTime","lastRenderTime","lastLutGenerateTime","color","renderTimeInMs","invalid","needsRedraw","displayedArea","angle","rotation","rotate","PI","widthScale","heightScale","brhc","tlhc","y","presentationSizeMode","verticalScale","horizontalScale","min","translation","hflip","vflip","pt","shift","viewportOrientation","cosA","cos","sinA","sin","newX","newY","scaleFactor","voi","isPreScaled","pixelReplication","modalityLUT","voiLUT","imageSize","verticalRatio","horizontalRatio","isRotated","resetPan","resetZoom","forceFitToWindow","oldCanvasWidth","oldCanvasHeight","setCanvasSize","getImageSize","imageWidth","imageHeight","wasFitToWindow","getImageFitScale","fitToWindow","relWidthChange","relHeightChange","relChange","sqrt","relativeRescale","useNativeDataType","volumeId","blendMode","imageVolume","loadVolume","vtkOpenGLTexture","volumeMapper","setBlendMode","volumeActor","setMapper","getPointData","getScalars","getNumberOfComponents","getProperty","setIndependentComponents","getRGBTransferFunction","voiModifiedEventDetail","Events","VOI_MODIFIED","triggerVOIModified","REQUEST_TYPE","RequestType","Prefetch","voiLutModule","voiLut","windowLevel","getVOIFromMetadata","imageIdIndex","generalSeriesModule","modalityLutModule","numImages","bytesPerImage","byteLength","voxelsPerImage","bytePerPixel","BYTES_PER_ELEMENT","scalingParameters","rescaleSlope","rescaleIntercept","scalingParametersToUse","suvFactor","suvbw","byteOffset","targetBuffer","type","priority","requestType","enabled","referencedImageIds","loadAndCacheImage","ignoreCache","imageScalarData","getPixelData","buffer","TypedArray","volumeBufferView","set","_getImageScalarDataFromImageVolume","getMinMax","getVOIFromMinMax","scaling","PT","_isCurrentImagePTPrescaled","handlePreScaledVolume","setMappingRange","DEFAULT_VALUES","scalarTexture","extend","publicAPI","model","initialValues","assign","classHierarchy","superDelete","delete","vtkSharedVolumeMapper","newInstance","DEFAULT_SETTINGS","Symbol","RUNTIME_SETTINGS","OBJECT_SETTINGS_MAP","DICTIONARY","Settings","base","dictionary","create","seal","value","key","unset","endsWith","deleteCount","namespace","slice","deleteAll","prototype","hasOwnProperty","call","startsWith","iterate","import","root","isPlainObject","keys","dump","deepSet","assert","subject","getRuntimeSettings","getDefaultSettings","subfield","defaultSettings","settingObj","setting","runtimeSettings","getObjectSettings","from","settings","objectSettingsMap","WeakMap","extendRuntimeSettings","references","last","current","previous","isValidKey","prefix","record","failCount","has","add","field","setAll","WeakSet","getPrototypeOf","separator","subKey","subContext","subContextValue","ONE_GB","_imageCache","Map","_volumeCache","_imageCacheSize","_volumeCacheSize","_maxCacheSize","_maxInstanceSize","setMaxCacheSize","newMaxCacheSize","errorMessage","isCacheable","getBytesAvailable","getMaxCacheSize","getMaxInstanceSize","getCacheSize","_decacheImage","imageLoadObject","cancelFn","decache","_decacheVolume","cachedVolume","volumeLoadObject","volume","cancelLoading","_restoreImagesFromBuffer","purgeCache","imageIterator","done","next","removeImageLoadObject","IMAGE_CACHE_IMAGE_REMOVED","purgeVolumeCache","volumeIterator","removeVolumeLoadObject","VOLUME_CACHE_VOLUME_REMOVED","getVolumeLoadObject","timeStamp","Date","now","getGeometry","geometryId","cachedGeometry","_geometryCache","geometry","cachedImage","getVolume","getVolumes","filterVolumesByReferenceId","referencedVolumeId","incrementImageCacheSize","sizeInBytes","eventDetails","incrementVolumeCacheSize","putGeometryLoadObject","geometryLoadObject","loaded","promise","GEOMETRY_CACHE_GEOMETRY_ADDED","catch","error","decrementImageCacheSize","decrement","decrementVolumeCacheSize","decacheIfNecessaryUntilBytesAvailable","numBytes","volumeImageIds","bytesAvailable","cachedImages","cachedImageIds","im","imageIdsToPurge","includes","putImageLoadObject","sharedCacheKey","toFixed","CACHE_SIZE_EXCEEDED","IMAGE_CACHE_IMAGE_ADDED","getImageLoadObject","isLoaded","getVolumeContainingImageId","volumeIds","imageIdToUse","imageIdToURI","getImageURIIndex","getCachedImageBasedOnImageURI","imageURIToUse","foundImageId","find","putVolumeLoadObject","VOLUME_CACHE_VOLUME_ADDED","imageCacheOffsetMap","size","offset","viewPixelData","pixelData","imageFrame","bufferView","log","RENDERING_DEFAULTS","MINIMUM_SLAB_THICKNESS","MAXIMUM_RAY_DISTANCE","freeze","ViewportStatus","BlendMode","BlendModes","GeometryType","DynamicOperatorType","CalibrationTypes","getEnabledElement","viewportUid","renderingEngineUid","dataset","getEnabledElementByIds","hasBeenDestroyed","FrameOfReferenceUID","getEnabledElementByViewportId","renderingEngines","getEnabledElements","enabledElements","getViewports","imageLoaders","unknownImageLoader","loadImageFromImageLoader","scheme","loader","IMAGE_LOADED","errorObject","IMAGE_LOAD_FAILED","loadImageFromCacheOrVolume","cachedVolumeInfo","loadStatus","convertToCornerstoneImage","loadImage","err","loadAndCacheImages","createAndCacheDerivedImage","preventCache","uuidv4","skipCreateBuffer","onCacheAdd","metaData","TypedArrayConstructor","getBufferConfiguration","targetBufferType","derivedImageId","genericMetadataProvider","imagePixelModule","bitsStored","highBit","samplesPerPixel","pixelRepresentation","localImage","createAndCacheLocalImage","createAndCacheDerivedImages","derivedImageIds","allPromises","newOptions","getDerivedImageId","promises","intercept","slope","minPixelValue","maxPixelValue","voiLUTFunction","getCanvas","Uint8Array","Float32Array","Uint16Array","Int16Array","cancelLoadImage","filterRequests","additionalDetails","cancelLoadImages","cancelLoadAll","requestPool","getRequestPool","requests","pop","loadObject","cancel","clearRequestStack","registerImageLoader","imageLoader","registerUnknownImageLoader","oldImageLoader","unregisterAllImageLoaders","createAndCacheDerivedSegmentationImages","createAndCacheDerivedSegmentationImage","createInternalVTKRepresentation","PhotometricInterpretation","numComponents","dataArrayAttrs","numberOfComponents","setDimensions","setSpacing","setDirection","setOrigin","isDynamicVolume","scalarDataArrays","vtkScalarArray","addArray","setActiveScalars","addScalarDataArraysToImageData","getScalarDataArrays","scalarArray","setScalars","addScalarDataToImageData","volumeLoaders","unknownVolumeLoader","loadVolumeFromVolumeLoader","setupCacheOptimizationEventListener","VOLUME_LOADED","VOLUME_LOADED_FAILED","createAndCacheVolume","createAndCacheDerivedVolume","referencedVolume","scalarLength","volumeScalarData","generateVolumeScalarData","derivedImageData","derivedVolume","createLocalVolume","validDataTypes","createAndCacheVolumeFromImages","volumeProps","generateVolumePropsFromImageIds","imagePromises","performCacheOptimizationForVolume","registerVolumeLoader","volumeLoader","getVolumeLoaderSchemes","registerUnknownVolumeLoader","oldVolumeLoader","getUnknownVolumeLoaderSchema","createAndCacheDerivedSegmentationVolume","createLocalSegmentationVolume","useNorm16Texture","rendering","use16BitTexture","isVolumeBuffer","sharedArrayBuffer","createFloat32SharedArray","createUint8SharedArray","createUint16SharedArray","imageLoadPoolManager","grabDelay","setMaxSimultaneousRequests","Interaction","Thumbnail","RequestPoolManager","numRequests","interaction","thumbnail","prefetch","compute","awake","maxNumRequests","getMaxSimultaneousRequests","destroy","timeoutHandle","clearTimeout","addRequest","requestFn","requestDetails","startGrabbing","filterFunction","sendRequests","requestsToSend","syncImageCount","getNextRequest","requestResult","finally","startAgain","interactionPriorities","getSortedPriorityGroups","hasRemainingInteractionRequests","hasRemainingThumbnailRequests","hasRemainingPrefetchRequests","hasRemainingComputeRequests","Compute","enableCacheOptimization","shouldUseSAB","addEventListenerOnce","IMAGE_VOLUME_LOADING_COMPLETED","detail","_updateImageWithScalarDataView","_processImageCacheOffsetMap","compatibleScalarData","sampleImageIdWithImage","sampleImage","samplePixelData","getImageIdIndex","_processVolumeImages","view","_colormaps","registerColormap","Name","getColormapNames","findMatchingColormap","rgbPoints","colormapsVTK","rgbPresetNames","presetName","getPresetByName","colormapsCS3D","colormapName","matchedColormap","concat","RGBPoints","presetRGBPoints","opacity","opacityPoints","getScalarOpacity","getDataPointer","createLinearRGBTransferFunction","cfun","addRGBPoint","spacingInNormalDirection","actorEntry","referenceId","sliceRange","numberOfSlices","imageIndex","getTransferFunctionNodes","transferFunction","getSize","nodeValue1","getNodeValue","setTransferFunctionNodes","nodes","removeAllPoints","node","transformWorldToIndex","el","event","CustomEvent","cancelable","dispatchEvent","workerRegistry","workerPoolManager","registerWorker","workerName","workerFn","maxWorkerInstances","overwrite","autoTerminateOnIdle","idleTimeThreshold","idleCheckIntervalId","clearInterval","workerProperties","instances","loadCounters","lastActiveTime","nativeWorkers","fill","worker","getNextWorkerAPI","workerInstances","instance","minLoadIndex","minLoadValue","currentLoadValue","api","executeTask","methodName","args","callbacks","reject","finalCallbacks","cb","processing","results","setInterval","terminateIdleWorkers","_","terminateWorkerInstance","terminate","workerInstance","BASE","iconContent","iconSize","viewBox","mousePoint","mousePointerGroupString","SEGMENTATION_CURSOR_BOUNDARIES","MINUS_RECT","PLUS_RECT","SCISSOR_ICON","RECTANGLE_ICON","CIRCLE_ICON","CursorSVG","Angle","ArrowAnnotate","Bidirectional","CobbAngle","CircleROI","EllipticalROI","FreehandROI","FreehandROISculptor","Length","Probe","RectangleROI","TextMarker","Crosshairs","Eraser","Magnify","Pan","Rotate","StackScroll","WindowLevelRegion","WindowLevel","Zoom","SegmentationFreeHandEraseInside","SegmentationFreeHandFillInside","SegmentationFreeHandEraseOutside","SegmentationFreeHandFillOutside","SegmentationRectangleEraseInside","RectangleScissor","CircleScissor","getDefinedSVGCursorDescriptor","svgCursorNames","VIEWPORT_ELEMENT","getSvgNode","canvasHash","cacheKey","svgNodeCache","domRef","appendNode","svgLayerElement","svgNode","touched","appendChild","setNodeTouched","clearUntouched","cacheEntry","removeChild","viewportElement","internalDivElement","querySelector","_getSvgLayer","svgNodeCacheForCanvas","bind","fn","svgDrawingHelper","ToolModes","Active","Passive","Enabled","Disabled","PRIMARY_BINDINGS","mouseButton","MouseBindings","Primary","ToolGroup","viewportsInfo","toolOptions","currentActivePrimaryToolName","prevActivePrimaryToolName","restoreToolOptions","_toolInstances","getViewportIds","getViewportsInfo","getToolInstance","toolInstanceName","toolInstance","getToolInstances","hasTool","toolName","addTool","configuration","toolDefinition","tools","hasToolName","localToolInstance","toolClass","ToolClass","instantiatedTool","toolGroupId","addToolInstance","parentClassName","ToolClassToUse","ParentClass","ToolInstance","addViewport","getRenderingEngines","renderingEngineUIDToUse","some","vpId","getActivePrimaryMouseButtonTool","setViewportsCursorByToolName","eventDetail","eventTarget","TOOLGROUP_VIEWPORT_ADDED","removeViewports","indices","vpInfo","TOOLGROUP_VIEWPORT_REMOVED","setActiveStrategy","strategyName","setToolMode","mode","setToolDisabled","setToolEnabled","setToolPassive","setToolActive","toolBindingsOptions","bindings","reduce","unique","binding","TouchBinding","numTouchPoints","MouseBinding","obj","hasSameBinding","useCursor","_hasMousePrimaryButtonBinding","cursor","MouseCursor","getDefinedCursor","_setCursorForViewports","onSetToolActive","_renderViewports","TOOL_ACTIVATED","_triggerToolModeChangedEvent","prevToolOptions","getToolOptions","matchBindings","removeAllBindings","getDefaultPrimaryBindings","matchBinding","onSetToolPassive","onSetToolEnabled","onSetToolDisabled","toolOptionsForTool","_getCursor","cursorName","SVGMouseCursor","initElementCursor","setToolConfiguration","_configuration","onSetToolConfiguration","getDefaultMousePrimary","getToolConfiguration","configurationPath","getPrevActivePrimaryToolName","clone","newToolGroupId","fnToolFilter","toolGroup","sourceToolInstance","sourceToolOptions","sourceToolMode","primaryBindings","primary","getRenderingEngine","renderViewport","TOOL_MODE_CHANGED","binding1","binding2","modifierKey","toolGroups","tg","toolGroupIndex","findIndex","removeToolGroup","removeSegmentationsFromToolGroup","s","MODES","toolGroupToolNames","BidirectionalTool","toolProps","defaultToolProps","supportedInteractionTypes","preventHandleOutsideImage","getTextLines","defaultGetTextLines","isPointNearTool","annotation","canvasCoords","proximity","points","handles","canvasPoint1","canvasPoint2","line","distanceToPoint","toolSelectedCallback","highlighted","viewportIdsToRender","getViewportIdsWithToolToRender","getToolName","editData","movingTextBox","_activateModify","hideElementCursor","preventDefault","handleSelectedCallback","handle","handleIndex","worldPosition","p","_endCallback","newAnnotation","hasMoved","activeHandleIndex","_deactivateModify","_deactivateDraw","resetElementCursor","firstLineSegmentLength","longAxis","shortAxisPoint0","shortAxisPoint1","longAxisVector","counterClockWisePerpendicularToLongAxis","currentShortAxisVector","shortAxis","isHandleOutsideImage","removeAnnotation","annotationUID","isDrawing","_dragDrawCallback","currentPoints","world","canvasCoordPoints","shortAxisDistFromCenter","dx","dy","vectorX","vectorY","xMid","yMid","startX","startY","endX","endY","_dragModifyCallback","deltaPoints","worldPosDelta","textBox","_dragModifyHandle","movingHandleIndex","canvasCoordHandlesCurrent","firstLineSegment","secondLineSegment","proposedPoint","proposedCanvasCoord","fixedHandleCanvasCoord","fixedHandleToProposedCoordVec","fixedHandleToOldCoordVec","proposedFirstLineSegment","_movingLongAxisWouldPutItThroughShortAxis","centerOfRotation","_getSignedAngle","firstPointX","firstPointY","secondPointX","secondPointY","rotatedFirstPoint","rotatedFirstPointY","rotatedSecondPoint","rotatedSecondPointY","newFirstPoint","newSecondPoint","translateHandleIndex","canvasCoordsCurrent","longLineSegment","shortLineSegment","longLineSegmentVec","longLineSegmentVecNormalized","proposedToCurrentVec","movementLength","movementAlongLineSegmentLength","newTranslatedPoint","_activateDraw","isInteractingWithTool","MOUSE_UP","MOUSE_DRAG","MOUSE_MOVE","MOUSE_CLICK","TOUCH_TAP","TOUCH_END","TOUCH_DRAG","renderAnnotation","renderStatus","annotations","getAnnotations","filterInteractableAnnotationsForElement","targetId","getTargetId","styleSpecifier","canvasCoordinates","lineWidth","lineDash","shadow","getAnnotationStyle","cachedStats","_throttledCalculateCachedStats","_calculateCachedStats","activeHandleCanvasCoords","isAnnotationVisible","isAnnotationLocked","handleGroupUID","drawHandles","dataId1","dataId2","lineUID","drawLine","secondLineUID","getLinkedTextBoxStyle","visibility","worldBoundingBox","topLeft","topRight","bottomLeft","bottomRight","textLines","canvasTextBoxCoords","getTextBoxCoordsCanvas","textBoxPosition","textBoxUID","boundingBox","drawLinkedTextBox","top","vectorInSecondLineDirection","extendedSecondLineSegment","worldPos1","worldPos2","worldPos3","worldPos4","targetIds","getTargetIdImage","index1","index2","index3","index4","handles1","handles2","scale1","units","units1","scale2","units2","dist1","_calculateLength","dist2","lengthUnit","widthUnit","_isInsideVolume","vector1","vector2","atan2","trailing","addNewAnnotation","getReferencedImageId","label","addAnnotation","pos1","pos2","dz","roundNumber","pointCanProjectOnLine","polyline","EPSILON","CONSTANTS","PARALLEL_THRESHOLD","PlanarFreehandROITool","contourHoleAdditionModifierKey","KeyboardBindings","Shift","alwaysRenderOpenContourHandles","radius","allowOpenContours","closeContourProximity","checkCanvasEditFallbackProximity","makeClockWise","subPixelResolution","smoothing","smoothOnAdd","smoothOnEdit","knotsRatioPercentageOnAdd","knotsRatioPercentageOnEdit","interpolation","onInterpolationComplete","decimate","epsilon","displayOnePointAsCrosshairs","calculateStats","statsCalculator","BasicStatsCalculator","isEditingClosed","isEditingOpen","createAnnotation","activateDraw","activateOpenContourEndEdit","contour","closed","activateClosedContourEdit","activateOpenContourEdit","previousPoint","p1","p2","pStart","pEnd","cancelDrawing","cancelOpenContourEdit","cancelClosedContourEdit","originalWorldPoint","deltaXPoint","deltaYPoint","deltaInX","deltaInY","worldPosIndex","iMin","iMax","jMin","jMax","kMin","kMax","j","worldPosIndex2","areaUnits","numPoints","projectedPolyline","maxX","canvasMaxX","maxY","canvasMaxY","minX","canvasMinX","minY","canvasMinY","math","topLeftBBWorld","topLeftBBIndex","bottomRightBBWorld","area","iDelta","jDelta","kDelta","ceil","boundsIJK","worldPosEnd","canvasPosEnd","curRow","intersections","intersectionCounter","pointsInShape","pointLPS","pointIJK","result","getLineSegmentIntersectionsCoordinates","statsCallback","modalityUnitOptions","isSuvScaled","modalityUnit","getStatistics","perimeter","mean","stdDev","statsArray","areaUnit","ChangeTypes","StatsUpdated","_renderStats","annotationsToDisplay","VolumeViewport","filterAnnotationsWithinSlice","filterAnnotationsForDisplay","annotationsWithParallelNormals","td","annotationViewPlaneNormal","isParallel","abs","halfSpacingInNormalDirection","annotationsWithinSlice","isVisible","dir","dot","isContourSegmentationTool","contourAnnotation","renderAnnotationInstance","renderContext","activeAnnotationUID","commonData","renderContourBeingDrawn","renderClosedContourBeingEdited","renderOpenContourBeingEdited","renderPointContourWithMarker","renderContour","_calculateStatsIfActive","cachedVolumeStats","isEmptyArea","areaLine","isFinite","planarContourToolName","SegmentationDisplayTool","renderSegmentation","getToolGroup","toolGroupSegmentationRepresentations","getSegmentationRepresentations","toolGroupViewports","segmentationRenderList","representation","config","_getMergedRepresentationsConfig","viewportsRenderList","renderers","Labelmap","Contour","Surface","addPlanarFreeHandToolIfAbsent","display","renderedViewport","allSettled","segmentationRepresentation","setSegmentationVisibility","segmentationRepresentationUID","toolGroupConfig","globalConfig","RectangleROIThresholdTool","RectangleROITool","StackViewport","cache","segmentationId","triggerAnnotationRenderForViewportIds","getStyle","rectangleUID","drawRect","RectangleROIStartEndThresholdTool","numSlicesToPropagate","computePointsInsideVolume","startIndex","spacingInNormal","endIndex","_getEndSliceIndex","startSlice","endSlice","pointsInVolume","projectionPoints","projectionPointsImageIds","labelmapUID","_computeProjectionPoints","calculatePointsInsideVolume","_computePointsInsideVolume","firstOrLastSlice","lineDashToUse","throttle","_calculateCachedStatsTool","startIJK","endIJK","startWorld","indexToWorldVec3","endWorld","distance","newProjectionPoints","dist","newPoint","RectanglePoints","pointsInsideVolume","projectionPoint","worldPos1Index","worldProjectionPointIndex","worldPos2Index","pointInShapeCallback","endPos","utilities","vtkErrorMacro","m","clamping","allowDuplicateScalars","arguments","setGet","setArray","getArray","getType","prevValue","functionType","function","getFirstNonZeroValue","allZero","MAX_VALUE","val","midpoint","sharpness","setNodeValue","oldX","sortAndUpdateRange","modified","addPoint","addPointLong","removePoint","setNodes","updateRange","oldRange","retVal","modifiedInvoked","addSegment","x1","x2","y2","getValue","table","getTable","adjustRange","functionRange","estimateMinNumberOfSamples","d","findMinimumXDistance","currentDist","xStart","xEnd","stride","idx","numNodes","lastValue","tidx","ss","sss","h1","h2","h3","h4","t","vtkPiecewiseFunction","vtkPiecewiseFunction$1","vtkDebugMacro","directionOfProjection","useHorizontalViewAngle","viewAngle","clippingRange","useOffAxisProjection","screenBottomLeft","screenBottomRight","screenTopRight","freezeFocalPoint","projectionMatrix","viewMatrix","cameraLightTransform","physicalTranslation","physicalScale","physicalViewUp","physicalViewNorth","setGetArray","Float64Array","dopbasis","upbasis","tmpMatrix","tmpMatrix2","tmpvec1","tmpvec2","tmpvec3","rotateMatrix","trans","newPosition","newFocalPoint","computeViewPlaneNormal","orthogonalizeViewUp","vt","getViewMatrix","setPosition","z","computeDistance","setFocalPoint","setDistance","vec","dolly","amount","roll","eye","at","up","viewUpVec4","viewDir","r","azimuth","fp","yaw","elevation","axis","pitch","zoom","factor","applyTransform","transformMat4","vuOld","posNew","fpNew","vuNew","setViewUp","getThickness","setThickness","thickness","setClippingRange","setThicknessFromFocalPoint","setRoll","getRoll","setObliqueAngles","alpha","beta","getOrientation","getOrientationWXYZ","getFrustumPlanes","aspect","getCameraLightTransformMatrix","matrix","computeCameraLightTransform","deepCopy","sourceCamera","physicalOrientationToWorldDirection","ori","oriq","coriq","qdir","getPhysicalToWorldMatrix","getWorldToPhysicalMatrix","physVRight","computeViewParametersFromViewMatrix","vmat","oldDist","setDirectionOfProjection","computeViewParametersFromPhysicalMatrix","mat","setViewMatrix","setProjectionMatrix","getProjectionMatrix","nearz","farz","cWidth","cRange","xmin","xmax","ymin","ymax","tmp","tan","znear","zfar","getCompositeProjectionMatrix","vMat","pMat","setDeviceAngles","screen","rotmat","dop","vup","setOrientationWXYZ","degrees","quatMat","q","newdop","newvup","computeClippingRange","bounds","vn","k","vtkCamera","vtkCamera$1","ColorSpace","Scale","ScalarMappingTarget","vtkWarningMacro","vtkColorTransferFunctionLabToMsh","lab","msh","L","M","acos","h","vtkColorTransferFunctionAdjustHue","unsatM","hueSpin","vtkColorTransferFunctionInterpolateDiverging","rgb1","rgb2","lab1","lab2","msh1","msh2","localS","a1","a2","adiff","vtkColorTransferFunctionAngleDiff","Mmid","mshTmp","labTmp","vtkColorTransferFunctionMshToLab","colorSpace","RGB","hSVWrap","LINEAR","nanColor","belowRangeColor","aboveRangeColor","useAboveRangeColor","useBelowRangeColor","tableSize","buildTime","discretize","numberOfValues","g","addRGBPointLong","addHSVPoint","v","addHSVPointLong","rgb","hsv","before","JSON","stringify","after","mappingRange","movePoint","addRGBSegment","r1","g1","b1","r2","g2","b2","addHSVSegment","s1","v1","s2","v2","hsv1","hsv2","mapValue","indexedLookup","getAnnotatedValueIndexInternal","getNanColorByReference","nodeVal","getRedValue","getGreenValue","getBlueValue","xStart_","xEnd_","lastR","lastG","lastB","tmpVec","usingLogScale","LOG10","logStart","logEnd","logX","log10","deltaRange","xn","discretizeIndex","getUseAboveRangeColor","getUseBelowRangeColor","HSV","hsvTmp","LAB","DIVERGING","getUint8Table","withAlpha","getMTime","tableWithAlpha","nbChannels","tmpTable","buildFunctionFromArray","getNumberOfTuples","getComponent","buildFunctionFromTable","inc","getNumberOfAvailableColors","getIndexedColor","nodeValue","fillFromDataPointer","nb","ptr","originalRange","mapScalarsThroughTable","input","output","outFormat","inputOffset","mapDataIndexed","mapData","getAlpha","inIncr","outputV","getData","inputV","RGBA","LUMINANCE","LUMINANCE_ALPHA","applyColorMap","colorMap","oldColorSpace","toUpperCase","isModified","oldNanColor","NanColor","oldNodes","callModified","vtkColorTransferFunction","vtkColorTransferFunction$1","presetMap","vtkColorMaps","addPreset","preset","removePresetByName","staticOffsetAPI","otherStaticMethods","SlicingMode","slicingMode","NONE","closestIJKAxis","ijkMode","flip","renderToRectangle","sliceAtFocalPoint","preferSizeOverAccuracy","implementCoincidentTopologyMethods","computeClosestIJKAxis","xyzMode","X","Y","Z","getCurrentImage","newMatrix","getSliceAtPosition","pos","pos3","bds","getBounds","ijk","ex","getExtent","getClosestIJKAxis","I","J","K","setSliceFromCamera","cam","getFocalPoint","setSlice","setXSlice","setSlicingMode","setYSlice","setZSlice","setISlice","setJSlice","setKSlice","getSlicingModeNormal","out","mat3","useCustomExtents","customDisplayExtent","nSlice","extentToBounds","getBoundsForSlice","halfThickness","extent","getSpatialExtent","intersectWithLineForPointPicking","intersectWithLineForCellPicking","getInputData","vtkImageMapper","vtkImageMapper$1","mapper","property","INIT_BOUNDS","boundsMTime","getImages","getIsOpaque","forceOpaque","forceTranslucent","isOpaque","getOpacity","hasTranslucentPolygonalGeometry","makeProperty","mapperBounds","row","computeMatrix","tmp4","getMinXBound","getMaxXBound","getMinYBound","getMaxYBound","getMinZBound","getMaxZBound","mt","mtime","getRedrawMTime","getInput","getInputAlgorithm","update","getSupportsSelection","vtkImageSlice","vtkImageSlice$1","bbox","vtkVolume","vtkVolume$1","HASH_UNDEFINED","funcTag","genTag","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reEscapeChar","reIsHostCtor","freeGlobal","freeSelf","self","Function","arrayProto","funcProto","objectProto","coreJsData","maskSrcKey","exec","IE_PROTO","funcToString","toString","objectToString","reIsNative","RegExp","getNative","nativeCreate","symbolProto","symbolToString","Hash","entries","clear","entry","ListCache","MapCache","assocIndexOf","other","baseGet","object","path","isSymbol","test","isKey","stringToPath","toKey","baseIsNative","isObject","func","pattern","tag","isFunction","isHostObject","toSource","getMapData","__data__","memoize","string","baseToString","number","quote","resolver","TypeError","memoized","apply","Cache","isObjectLike","module","exports","defaultValue","proxyMarker","createEndpoint","releaseProxy","finalizer","throwMarker","transferHandlers","canHandle","serialize","port1","port2","MessageChannel","expose","deserialize","port","wrap","serialized","isError","message","stack","ep","globalThis","allowedOrigins","ev","allowedOrigin","isAllowedOrigin","argumentList","fromWireValue","returnValue","parent","prop","rawValue","proxy","transfers","transferCache","transfer","wireValue","transferables","toWireValue","postMessage","closeEndPoint","endpoint","isMessagePort","close","target","createProxy","throwIfProxyReleased","isReleased","releaseEndpoint","requestResponseMessage","proxyCounter","proxyFinalizers","FinalizationRegistry","newCount","isProxyReleased","Proxy","_target","unregister","unregisterProxy","_thisArg","rawArgumentList","processArguments","construct","register","registerProxy","processed","arr","handler","serializedValue","msg","random","MAX_SAFE_INTEGER","join","l","bisector","f","compare1","compare2","lo","hi","zero","center"],"sourceRoot":""}