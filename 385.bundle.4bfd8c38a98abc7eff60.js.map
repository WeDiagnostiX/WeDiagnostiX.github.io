{"version":3,"file":"385.bundle.4bfd8c38a98abc7eff60.js","mappings":"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AM,eACNC,MAAO,UACPH,KAAM,SACNI,SAAU,CACR,CACEY,YAAa,4BACbC,eAAgB,CAAC,EACjBK,QAAS,kBAKjB,CACErB,GAAI,SACJD,KAAM,sBACN4B,MAAO,CACLU,KAAM,EACNC,QAAS,IAGb,CACEtC,GAAI,MACJD,KAAM,cACN4B,MAAO,CACL5B,KAAM,SACNE,KAAM,cACNC,MAAO,MACPC,SAAU,CACR,CACEY,YAAa,wBACbC,eAAgB,CACduB,WAAY,0BAEdlB,QAAS,cAKjB,CACErB,GAAI,aACJD,KAAM,kBACN4B,MAAO,CACL5B,KAAM,OACNE,KAAM,iBACNC,MAAO,aACPC,SAAU,CACR,CACEY,YAAa,gBACbC,eAAgB,CACdQ,SAAU,aACVE,YAAa,OAEfL,QAAS,kBAKjB,CACErB,GAAI,mBACJD,KAAM,mBACN4B,MAAO,CACLC,QAAS,mBACTE,QAASrB,EACL,mBACA,oBACA,qBACA,GACA,sBAEJsB,UAAW,CACT9B,KAAM,eACNC,MAAO,cACP8B,UAAU,EACV5B,QAAS,sBAEX8B,UAAU,EACVC,SAAUC,EAAAA,GACVH,MAAO,CACLvB,EAAgB,OAChBA,EAAgB,YAChBA,EAAgB,SAChBA,EAAgB,WAChBA,EAAgB,aAChBA,EAAgB,WAChBA,EAAgB,OAChBA,EAAgB,UAChBA,EAAgB,MAChBA,EAAgB,cAKtB,CACEV,GAAI,YACJD,KAAM,mBACN4B,MAAO,CACLE,SAAS,EACTD,QAAS,YACTE,QAASxB,EACP,QACA,aACA,aACA,CACE,CACES,YAAa,gBACbC,eAAgB,CAAC,EACjBK,QAAS,gBAGb,SAEFU,UAAW,CACT9B,KAAM,eACNC,MAAO,GACP8B,UAAU,EACV5B,QAAS,cAEX6B,MAAO,CACL3B,EACE,QACA,aACA,aACA,CACE,CACES,YAAa,gBACbC,eAAgB,CAAC,EACjBK,QAAS,gBAGb,SAEFf,EACE,eACA,oBACA,eACA,CACE,CACES,YAAa,mBACbC,eAAgB,CAAC,EACjBK,QAAS,gBAGb,cAEFf,EACE,kBACA,uBACA,oBACA,CACE,CACES,YAAa,yBACbC,eAAgB,C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","sources":["webpack:///../../../modes/longitudinal/src/toolbarButtons.js","webpack:///../../../modes/longitudinal/src/id.js","webpack:///../../../modes/longitudinal/src/initToolGroups.js","webpack:///../../../modes/longitudinal/src/index.js"],"sourcesContent":["// TODO: torn, can either bake this here; or have to create a whole new button type\n// Only ways that you can pass in a custom React component for render :l\nimport {\n  // ExpandableToolbarButton,\n  // ListMenu,\n  WindowLevelMenuItem,\n} from '@ohif/ui';\nimport { defaults } from '@ohif/core';\n\nconst { windowLevelPresets } = defaults;\n/**\n *\n * @param {*} type - 'tool' | 'action' | 'toggle'\n * @param {*} id\n * @param {*} icon\n * @param {*} label\n */\nfunction _createButton(type, id, icon, label, commands, tooltip, uiType) {\n  return {\n    id,\n    icon,\n    label,\n    type,\n    commands,\n    tooltip,\n    uiType,\n  };\n}\n\nconst _createActionButton = _createButton.bind(null, 'action');\nconst _createToggleButton = _createButton.bind(null, 'toggle');\nconst _createToolButton = _createButton.bind(null, 'tool');\n\n\nfunction _createColormap(label, colormap) {\n  return {\n    id: label.toString(),\n    title: label,\n    subtitle: label,\n    type: 'action',\n    commands: [\n      {\n        commandName: 'setAllViewportsColorMap',\n        commandOptions: {\n          ...windowLevelPresets[1]\n        },\n      },\n      {\n        commandName: 'setAllViewportsColorMap',\n        commandOptions: {\n          ...windowLevelPresets[1]\n        },\n      },\n    ],\n  };\n}\n\n/**\n *\n * @param {*} preset - preset number (from above import)\n * @param {*} title\n * @param {*} subtitle\n */\nfunction _createWwwcPreset(preset, title, subtitle) {\n  console.log('DEFAULTS', defaults)\n  return {\n    id: preset.toString(),\n    title,\n    subtitle,\n    type: 'action',\n    commands: [\n      {\n        commandName: 'setWindowLevel',\n        commandOptions: {\n          ...windowLevelPresets[preset],\n        },\n        context: 'CORNERSTONE',\n      },\n    ],\n  };\n}\n\nconst toolGroupIds = ['default', 'mpr', 'SRToolGroup'];\n\n/**\n * Creates an array of 'setToolActive' commands for the given toolName - one for\n * each toolGroupId specified in toolGroupIds.\n * @param {string} toolName\n * @returns {Array} an array of 'setToolActive' commands\n */\nfunction _createSetToolActiveCommands(toolName) {\n  const temp = toolGroupIds.map(toolGroupId => ({\n    commandName: 'setToolActive',\n    commandOptions: {\n      toolGroupId,\n      toolName,\n    },\n    context: 'CORNERSTONE',\n  }));\n  return temp;\n}\n\nconst toolbarButtons = [\n  // Measurement\n  {\n    id: 'MeasurementTools',\n    type: 'ohif.splitButton',\n    props: {\n      groupId: 'MeasurementTools',\n      isRadio: true, // ?\n      // Switch?\n      primary: _createToolButton(\n        'Length',\n        'tool-length',\n        'Length',\n        [\n          {\n            commandName: 'setToolActive',\n            commandOptions: {\n              toolName: 'Length',\n            },\n            context: 'CORNERSTONE',\n          },\n          {\n            commandName: 'setToolActive',\n            commandOptions: {\n              toolName: 'SRLength',\n              toolGroupId: 'SRToolGroup',\n            },\n            // we can use the setToolActive command for this from Cornerstone commandsModule\n            context: 'CORNERSTONE',\n          },\n        ],\n        'Length'\n      ),\n      secondary: {\n        icon: 'chevron-down',\n        label: '',\n        isActive: true,\n        tooltip: 'More Measure Tools',\n      },\n      items: [\n        _createToolButton(\n          'Length',\n          'tool-length',\n          'Length',\n          [\n            {\n              commandName: 'setToolActive',\n              commandOptions: {\n                toolName: 'Length',\n              },\n              context: 'CORNERSTONE',\n            },\n            {\n              commandName: 'setToolActive',\n              commandOptions: {\n                toolName: 'SRLength',\n                toolGroupId: 'SRToolGroup',\n              },\n              // we can use the setToolActive command for this from Cornerstone commandsModule\n              context: 'CORNERSTONE',\n            },\n          ],\n          'Length Tool'\n        ),\n        _createToolButton(\n          'Bidirectional',\n          'tool-bidirectional',\n          'Bidirectional',\n          [\n            {\n              commandName: 'setToolActive',\n              commandOptions: {\n                toolName: 'Bidirectional',\n              },\n              context: 'CORNERSTONE',\n            },\n            {\n              commandName: 'setToolActive',\n              commandOptions: {\n                toolName: 'SRBidirectional',\n                toolGroupId: 'SRToolGroup',\n              },\n              context: 'CORNERSTONE',\n            },\n          ],\n          'Bidirectional Tool'\n        ),\n        _createToolButton(\n          'ArrowAnnotate',\n          'tool-annotate',\n          'Annotation',\n          [\n            {\n              commandName: 'setToolActive',\n              commandOptions: {\n                toolName: 'ArrowAnnotate',\n              },\n              context: 'CORNERSTONE',\n            },\n            {\n              commandName: 'setToolActive',\n              commandOptions: {\n                toolName: 'SRArrowAnnotate',\n                toolGroupId: 'SRToolGroup',\n              },\n              context: 'CORNERSTONE',\n            },\n          ],\n          'Arrow Annotate'\n        ),\n        _createToolButton(\n          'EllipticalROI',\n          'tool-elipse',\n          'Ellipse',\n          [\n            {\n              commandName: 'setToolActive',\n              commandOptions: {\n                toolName: 'EllipticalROI',\n              },\n              context: 'CORNERSTONE',\n            },\n            {\n              commandName: 'setToolActive',\n              commandOptions: {\n                toolName: 'SREllipticalROI',\n                toolGroupId: 'SRToolGroup',\n              },\n              context: 'CORNERSTONE',\n            },\n          ],\n          'Ellipse Tool'\n        ),\n        _createToolButton(\n          'CircleROI',\n          'tool-circle',\n          'Circle',\n          [\n            {\n              commandName: 'setToolActive',\n              commandOptions: {\n                toolName: 'CircleROI',\n              },\n              context: 'CORNERSTONE',\n            },\n            {\n              commandName: 'setToolActive',\n              commandOptions: {\n                toolName: 'SRCircleROI',\n                toolGroupId: 'SRToolGroup',\n              },\n              context: 'CORNERSTONE',\n            },\n          ],\n          'Circle Tool'\n        ),\n      ],\n    },\n  },\n  // Zoom..\n  {\n    id: 'Zoom',\n    type: 'ohif.radioGroup',\n    props: {\n      type: 'tool',\n      icon: 'tool-zoom',\n      label: 'Zoom',\n      commands: _createSetToolActiveCommands('Zoom'),\n    },\n  },\n  // Window Level + Presets...\n  {\n    id: 'WindowLevel',\n    type: 'ohif.splitButton',\n    props: {\n      groupId: 'WindowLevel',\n      primary: _createToolButton(\n        'WindowLevel',\n        'tool-window-level',\n        'Window Level',\n        [\n          {\n            commandName: 'setToolActive',\n            commandOptions: {\n              toolName: 'WindowLevel',\n            },\n            context: 'CORNERSTONE',\n          },\n        ],\n        'Window Level'\n      ),\n      secondary: {\n        icon: 'chevron-down',\n        label: 'W/L Manual',\n        isActive: true,\n        tooltip: 'W/L Presets',\n      },\n      isAction: true, // ?\n      renderer: WindowLevelMenuItem,\n      items: [\n        _createWwwcPreset(1, 'Soft tissue', '400 / 40'),\n        _createWwwcPreset(2, 'Lung', '1500 / -600'),\n        _createWwwcPreset(3, 'Liver', '150 / 90'),\n        _createWwwcPreset(4, 'Bone', '2500 / 480'),\n        _createWwwcPreset(5, 'Brain', '80 / 40'),\n      ],\n    },\n  },\n  // Pan...\n  {\n    id: 'Pan',\n    type: 'ohif.radioGroup',\n    props: {\n      type: 'tool',\n      icon: 'tool-move',\n      label: 'Pan',\n      commands: _createSetToolActiveCommands('Pan'),\n    },\n  },\n  {\n    id: 'Capture',\n    type: 'ohif.action',\n    props: {\n      icon: 'tool-capture',\n      label: 'Capture',\n      type: 'action',\n      commands: [\n        {\n          commandName: 'showDownloadViewportModal',\n          commandOptions: {},\n          context: 'CORNERSTONE',\n        },\n      ],\n    },\n  },\n  {\n    id: 'Layout',\n    type: 'ohif.layoutSelector',\n    props: {\n      rows: 3,\n      columns: 3,\n    },\n  },\n  {\n    id: 'MPR',\n    type: 'ohif.action',\n    props: {\n      type: 'toggle',\n      icon: 'icon-mpr-3d',\n      label: 'MPR',\n      commands: [\n        {\n          commandName: 'toggleHangingProtocol',\n          commandOptions: {\n            protocolId: 'mprAnd3DVolumeViewport',\n          },\n          context: 'DEFAULT',\n        },\n      ],\n    },\n  },\n  {\n    id: 'Crosshairs',\n    type: 'ohif.radioGroup',\n    props: {\n      type: 'tool',\n      icon: 'tool-crosshair',\n      label: 'Crosshairs',\n      commands: [\n        {\n          commandName: 'setToolActive',\n          commandOptions: {\n            toolName: 'Crosshairs',\n            toolGroupId: 'mpr',\n          },\n          context: 'CORNERSTONE',\n        },\n      ],\n    },\n  },\n  {\n    id: 'fusionPTColormap',\n    type: 'ohif.splitButton',\n    props: {\n      groupId: 'fusionPTColormap',\n      primary: _createToolButton(\n          'fusionPTColormap',\n          'tool-fusion-color',\n          'Fusion PT Colormap',\n          [],\n          'Fusion PT Colormap'\n      ),\n      secondary: {\n        icon: 'chevron-down',\n        label: 'PT Colormap',\n        isActive: true,\n        tooltip: 'PET Image Colormap',\n      },\n      isAction: true, // ?\n      renderer: WindowLevelMenuItem,\n      items: [\n        _createColormap('HSV', 'hsv'),\n        _createColormap('Hot Iron', 'hot_iron'),\n        _createColormap('S PET', 's_pet'),\n        _createColormap('Red Hot', 'red_hot'),\n        _createColormap('Perfusion', 'perfusion'),\n        _createColormap('Rainbow', 'rainbow_2'),\n        _createColormap('SUV', 'suv'),\n        _createColormap('GE 256', 'ge_256'),\n        _createColormap('GE', 'ge'),\n        _createColormap('Siemens', 'siemens'),\n      ],\n    },\n  },\n  // More...\n  {\n    id: 'MoreTools',\n    type: 'ohif.splitButton',\n    props: {\n      isRadio: true, // ?\n      groupId: 'MoreTools',\n      primary: _createActionButton(\n        'Reset',\n        'tool-reset',\n        'Reset View',\n        [\n          {\n            commandName: 'resetViewport',\n            commandOptions: {},\n            context: 'CORNERSTONE',\n          },\n        ],\n        'Reset'\n      ),\n      secondary: {\n        icon: 'chevron-down',\n        label: '',\n        isActive: true,\n        tooltip: 'More Tools',\n      },\n      items: [\n        _createActionButton(\n          'Reset',\n          'tool-reset',\n          'Reset View',\n          [\n            {\n              commandName: 'resetViewport',\n              commandOptions: {},\n              context: 'CORNERSTONE',\n            },\n          ],\n          'Reset'\n        ),\n        _createActionButton(\n          'rotate-right',\n          'tool-rotate-right',\n          'Rotate Right',\n          [\n            {\n              commandName: 'rotateViewportCW',\n              commandOptions: {},\n              context: 'CORNERSTONE',\n            },\n          ],\n          'Rotate +90'\n        ),\n        _createActionButton(\n          'flip-horizontal',\n          'tool-flip-horizontal',\n          'Flip Horizontally',\n          [\n            {\n              commandName: 'flipViewportHorizontal',\n              commandOptions: {},\n              context: 'CORNERSTONE',\n            },\n          ],\n          'Flip Horizontal'\n        ),\n        _createToggleButton('StackImageSync', 'link', 'Stack Image Sync', [\n          {\n            commandName: 'toggleStackImageSync',\n            commandOptions: {},\n            context: 'CORNERSTONE',\n          },\n        ]),\n        _createToggleButton(\n          'ReferenceLines',\n          'tool-referenceLines', // change this with the new icon\n          'Reference Lines',\n          [\n            {\n              commandName: 'toggleReferenceLines',\n              commandOptions: {},\n              context: 'CORNERSTONE',\n            },\n          ]\n        ),\n        _createToolButton(\n          'StackScroll',\n          'tool-stack-scroll',\n          'Stack Scroll',\n          [\n            {\n              commandName: 'setToolActive',\n              commandOptions: {\n                toolName: 'StackScroll',\n              },\n              context: 'CORNERSTONE',\n            },\n          ],\n          'Stack Scroll'\n        ),\n        _createActionButton(\n          'invert',\n          'tool-invert',\n          'Invert',\n          [\n            {\n              commandName: 'invertViewport',\n              commandOptions: {},\n              context: 'CORNERSTONE',\n            },\n          ],\n          'Invert Colors'\n        ),\n        _createToolButton(\n          'Probe',\n          'tool-probe',\n          'Probe',\n          [\n            {\n              commandName: 'setToolActive',\n              commandOptions: {\n                toolName: 'DragProbe',\n              },\n              context: 'CORNERSTONE',\n            },\n          ],\n          'Probe'\n        ),\n        _createToggleButton(\n          'cine',\n          'tool-cine',\n          'Cine',\n          [\n            {\n              commandName: 'toggleCine',\n              context: 'CORNERSTONE',\n            },\n          ],\n          'Cine'\n        ),\n        _createToolButton(\n          'Angle',\n          'tool-angle',\n          'Angle',\n          [\n            {\n              commandName: 'setToolActive',\n              commandOptions: {\n                toolName: 'Angle',\n              },\n              context: 'CORNERSTONE',\n            },\n          ],\n          'Angle'\n        ),\n\n        // Next two tools can be added once icons are added\n        // _createToolButton(\n        //   'Cobb Angle',\n        //   'tool-cobb-angle',\n        //   'Cobb Angle',\n        //   [\n        //     {\n        //       commandName: 'setToolActive',\n        //       commandOptions: {\n        //         toolName: 'CobbAngle',\n        //       },\n        //       context: 'CORNERSTONE',\n        //     },\n        //   ],\n        //   'Cobb Angle'\n        // ),\n        // _createToolButton(\n        //   'Planar Freehand ROI',\n        //   'tool-freehand',\n        //   'PlanarFreehandROI',\n        //   [\n        //     {\n        //       commandName: 'setToolActive',\n        //       commandOptions: {\n        //         toolName: 'PlanarFreehandROI',\n        //       },\n        //       context: 'CORNERSTONE',\n        //     },\n        //   ],\n        //   'Planar Freehand ROI'\n        // ),\n        _createToolButton(\n          'Magnify',\n          'tool-magnify',\n          'Magnify',\n          [\n            {\n              commandName: 'setToolActive',\n              commandOptions: {\n                toolName: 'Magnify',\n              },\n              context: 'CORNERSTONE',\n            },\n          ],\n          'Magnify'\n        ),\n        _createToolButton(\n          'Rectangle',\n          'tool-rectangle',\n          'Rectangle',\n          [\n            {\n              commandName: 'setToolActive',\n              commandOptions: {\n                toolName: 'RectangleROI',\n              },\n              context: 'CORNERSTONE',\n            },\n          ],\n          'Rectangle'\n        ),\n        _createToolButton(\n          'CalibrationLine',\n          'tool-calibration',\n          'Calibration',\n          [\n            {\n              commandName: 'setToolActive',\n              commandOptions: {\n                toolName: 'CalibrationLine',\n              },\n              context: 'CORNERSTONE',\n            },\n          ],\n          'Calibration Line'\n        ),\n        _createActionButton(\n          'TagBrowser',\n          'list-bullets',\n          'Dicom Tag Browser',\n          [\n            {\n              commandName: 'openDICOMTagViewer',\n              commandOptions: {},\n              context: 'DEFAULT',\n            },\n          ],\n          'Dicom Tag Browser'\n        ),\n      ],\n    },\n  },\n  {\n    id: 'SegmentationTools',\n    type: 'ohif.splitButton',\n    props: {\n      groupId: 'SegmentationTools',\n      isRadio: true, // ?\n      // Switch?\n      primary: _createToolButton(\n          'Brush',\n          'tool-brushe',\n          'Paint Brush',\n          [\n            {\n              commandName: 'setToolActive',\n              commandOptions: {\n                toolName: 'Brush',\n              },\n              context: 'CORNERSTONE',\n            },\n          ],\n          'Brush'\n      ),\n      secondary: {\n        icon: 'chevron-down',\n        label: '',\n        isActive: true,\n        tooltip: 'More Segmentation Tools',\n      },\n      items: [\n        _createToolButton(\n            'Brush',\n            'tool-brushe',\n            'Paint Brush',\n            [\n              {\n                commandName: 'setToolActive',\n                commandOptions: {\n                  toolName: 'Brush',\n                },\n                context: 'CORNERSTONE',\n              },\n            ],\n            'Paint Brush'\n        ),\n        _createToolButton(\n            'RectangleScissor',\n            'tool-rscissors',\n            'Rectangle Segmentation',\n            [\n              {\n                commandName: 'setToolActive',\n                commandOptions: {\n                  toolName: 'RectangleScissor',\n                },\n                context: 'CORNERSTONE',\n              },\n            ],\n            'Rectangle Segmentation Tool'\n        ),\n        _createToolButton(\n            'CircleScissor',\n            'tool-cscissors',\n            'Circle Segmentation',\n            [\n              {\n                commandName: 'setToolActive',\n                commandOptions: {\n                  toolName: 'CircleScissor',\n                },\n                context: 'CORNERSTONE',\n              },\n            ],\n            'Circle Segmentation Tool'\n        ),\n        _createToolButton(\n            'SphereScissor',\n            'tool-sscissors',\n            'Sphere Segmentation',\n            [\n              {\n                commandName: 'setToolActive',\n                commandOptions: {\n                  toolName: 'SphereScissor',\n                },\n                context: 'CORNERSTONE',\n              },\n            ],\n            'Sphere Scissor Tool'\n        ),\n        _createToolButton(\n            'PaintFill',\n            'paint-fill',\n            'Fill Holes',\n            [\n              {\n                commandName: 'setToolActive',\n                commandOptions: {\n                  toolName: 'PaintFill',\n                },\n                context: 'CORNERSTONE',\n              },\n            ],\n            'Paint Fill Tool'\n        ),\n        _createToolButton(\n            'RectangleROIThreshold',\n            'tool-rroithreshold',\n            'Rectangle Threshold Segmentation',\n            [\n              {\n                commandName: 'setToolActive',\n                commandOptions: {\n                  toolName: 'RectangleROIThreshold',\n                },\n                context: 'CORNERSTONE',\n              },\n            ],\n            'Rectangle ROI Threshold Tool'\n        ),\n        _createToolButton(\n            'RectangleROIStartEndThreshold',\n            'tool-rroithresholdstartend',\n            '3D Rectangle Threshold Segmentation',\n            [\n              {\n                commandName: 'setToolActive',\n                commandOptions: {\n                  toolName: 'RectangleROIStartEndThreshold',\n                },\n                context: 'CORNERSTONE',\n              },\n            ],\n            'Rectangle ROI Start End Threshold Tool'\n        ),\n      ],\n    },\n  }\n];\n\nexport default toolbarButtons;\n","import packageJson from '../package.json';\n\nconst id = packageJson.name;\n\nexport { id };\n","function initDefaultToolGroup(\n  extensionManager,\n  toolGroupService,\n  commandsManager,\n  toolGroupId\n) {\n  const utilityModule = extensionManager.getModuleEntry(\n    '@ohif/extension-cornerstone.utilityModule.tools'\n  );\n\n  const { toolNames, Enums } = utilityModule.exports;\n\n  const tools = {\n    active: [\n      {\n        toolName: toolNames.WindowLevel,\n        bindings: [{ mouseButton: Enums.MouseBindings.Primary }],\n      },\n      {\n        toolName: toolNames.Pan,\n        bindings: [{ mouseButton: Enums.MouseBindings.Auxiliary }],\n      },\n      {\n        toolName: toolNames.Zoom,\n        bindings: [{ mouseButton: Enums.MouseBindings.Secondary }],\n      },\n      { toolName: toolNames.StackScrollMouseWheel, bindings: [] },\n    ],\n    passive: [\n      { toolName: toolNames.Length },\n      { toolName: toolNames.ArrowAnnotate },\n      { toolName: toolNames.Bidirectional },\n      { toolName: toolNames.DragProbe },\n      { toolName: toolNames.Probe },\n      { toolName: toolNames.EllipticalROI },\n      { toolName: toolNames.CircleROI },\n      { toolName: toolNames.RectangleROI },\n      { toolName: toolNames.StackScroll },\n      { toolName: toolNames.Angle },\n      { toolName: toolNames.CobbAngle },\n      { toolName: toolNames.PlanarFreehandROI },\n      { toolName: toolNames.Magnify },\n      { toolName: toolNames.SegmentationDisplay },\n      { toolName: toolNames.CalibrationLine },\n    ],\n    // enabled\n    // disabled\n    disabled: [{ toolName: toolNames.ReferenceLines }],\n  };\n\n  const toolsConfig = {\n    [toolNames.ArrowAnnotate]: {\n      getTextCallback: (callback, eventDetails) =>\n        commandsManager.runCommand('arrowTextCallback', {\n          callback,\n          eventDetails,\n        }),\n\n      changeTextCallback: (data, eventDetails, callback) =>\n        commandsManager.runCommand('arrowTextCallback', {\n          callback,\n          data,\n          eventDetails,\n        }),\n    },\n  };\n\n  toolGroupService\n      .createToolGroupAndAddTools(toolGroupId, tools, toolsConfig);\n}\n\nfunction initSRToolGroup(extensionManager, toolGroupService, commandsManager) {\n  const SRUtilityModule = extensionManager.getModuleEntry(\n    '@ohif/extension-cornerstone-dicom-sr.utilityModule.tools'\n  );\n\n  const CS3DUtilityModule = extensionManager.getModuleEntry(\n    '@ohif/extension-cornerstone.utilityModule.tools'\n  );\n\n  const { toolNames: SRToolNames } = SRUtilityModule.exports;\n  const { toolNames, Enums } = CS3DUtilityModule.exports;\n  const tools = {\n    active: [\n      {\n        toolName: toolNames.WindowLevel,\n        bindings: [\n          {\n            mouseButton: Enums.MouseBindings.Primary,\n          },\n        ],\n      },\n      {\n        toolName: toolNames.Pan,\n        bindings: [\n          {\n            mouseButton: Enums.MouseBindings.Auxiliary,\n          },\n        ],\n      },\n      {\n        toolName: toolNames.Zoom,\n        bindings: [\n          {\n            mouseButton: Enums.MouseBindings.Secondary,\n          },\n        ],\n      },\n      {\n        toolName: toolNames.StackScrollMouseWheel,\n        bindings: [],\n      },\n    ],\n    passive: [\n      { toolName: SRToolNames.SRLength },\n      { toolName: SRToolNames.SRArrowAnnotate },\n      { toolName: SRToolNames.SRBidirectional },\n      { toolName: SRToolNames.SREllipticalROI },\n      { toolName: SRToolNames.SRCircleROI },\n    ],\n    enabled: [\n      {\n        toolName: SRToolNames.DICOMSRDisplay,\n        bindings: [],\n      },\n    ],\n    // disabled\n  };\n\n  const toolsConfig = {\n    [toolNames.ArrowAnnotate]: {\n      getTextCallback: (callback, eventDetails) =>\n        commandsManager.runCommand('arrowTextCallback', {\n          callback,\n          eventDetails,\n        }),\n\n      changeTextCallback: (data, eventDetails, callback) =>\n        commandsManager.runCommand('arrowTextCallback', {\n          callback,\n          data,\n          eventDetails,\n        }),\n    },\n  };\n\n  const toolGroupId = 'SRToolGroup';\n  toolGroupService.createToolGroupAndAddTools(toolGroupId, tools, toolsConfig);\n}\n\nfunction initMPRToolGroup(extensionManager, toolGroupService, commandsManager) {\n  const utilityModule = extensionManager.getModuleEntry(\n    '@ohif/extension-cornerstone.utilityModule.tools'\n  );\n\n  const { toolNames, Enums } = utilityModule.exports;\n  console.log('TOOL NAMES INIT', toolNames)\n\n  const tools = {\n    active: [\n      {\n        toolName: toolNames.WindowLevel,\n        bindings: [{ mouseButton: Enums.MouseBindings.Primary }],\n      },\n      {\n        toolName: toolNames.Pan,\n        bindings: [{ mouseButton: Enums.MouseBindings.Auxiliary }],\n      },\n      {\n        toolName: toolNames.Zoom,\n        bindings: [{ mouseButton: Enums.MouseBindings.Secondary }],\n      },\n      { toolName: toolNames.StackScrollMouseWheel, bindings: [] },\n    ],\n    passive: [\n      { toolName: toolNames.Length },\n      { toolName: toolNames.ArrowAnnotate },\n      { toolName: toolNames.Bidirectional },\n      { toolName: toolNames.DragProbe },\n      { toolName: toolNames.Probe },\n      { toolName: toolNames.EllipticalROI },\n      { toolName: toolNames.CircleROI },\n      { toolName: toolNames.RectangleROI },\n      { toolName: toolNames.StackScroll },\n      { toolName: toolNames.Angle },\n      { toolName: toolNames.CobbAngle },\n      { toolName: toolNames.PlanarFreehandROI },\n      { toolName: toolNames.SegmentationDisplay },\n      { toolName: toolNames.BrushTool },\n      { toolName: toolNames.RectangleScissorsTool },\n      { toolName: toolNames.CircleScissorsTool },\n      { toolName: toolNames.SphereScissorsTool },\n      { toolName: toolNames.RectangleROIThresholdTool },\n      { toolName: toolNames.PaintFillTool },\n      { toolName: toolNames.RectangleROIStartEndThresholdTool },\n      { toolName: toolNames.UndoTool,}\n    ],\n    disabled: [\n      { toolName: toolNames.Crosshairs },\n      { toolName: toolNames.ReferenceLines },\n    ],\n\n    // enabled\n    // disabled\n  };\n\n  const toolsConfig = {\n    [toolNames.Crosshairs]: {\n      viewportIndicators: false,\n      autoPan: {\n        enabled: false,\n        panSize: 10,\n      },\n    },\n    [toolNames.ArrowAnnotate]: {\n      getTextCallback: (callback, eventDetails) =>\n        commandsManager.runCommand('arrowTextCallback', {\n          callback,\n          eventDetails,\n        }),\n\n      changeTextCallback: (data, eventDetails, callback) =>\n        commandsManager.runCommand('arrowTextCallback', {\n          callback,\n          data,\n          eventDetails,\n        }),\n    },\n  };\n\n  toolGroupService.createToolGroupAndAddTools('mpr', tools, toolsConfig);\n}\nfunction initVolume3DToolGroup(extensionManager, toolGroupService) {\n  const utilityModule = extensionManager.getModuleEntry(\n    '@ohif/extension-cornerstone.utilityModule.tools'\n  );\n\n  const { toolNames, Enums } = utilityModule.exports;\n\n  const tools = {\n    active: [\n      {\n        toolName: toolNames.TrackballRotateTool,\n        bindings: [{ mouseButton: Enums.MouseBindings.Primary }],\n      },\n      {\n        toolName: toolNames.Zoom,\n        bindings: [{ mouseButton: Enums.MouseBindings.Secondary }],\n      },\n      {\n        toolName: toolNames.Pan,\n        bindings: [{ mouseButton: Enums.MouseBindings.Auxiliary }],\n      },\n    ],\n  };\n\n  toolGroupService.createToolGroupAndAddTools('volume3d', tools);\n}\n\nfunction initToolGroups(extensionManager, toolGroupService, commandsManager) {\n  initDefaultToolGroup(\n    extensionManager,\n    toolGroupService,\n    commandsManager,\n    'default'\n  );\n  initSRToolGroup(extensionManager, toolGroupService, commandsManager);\n  initMPRToolGroup(extensionManager, toolGroupService, commandsManager);\n  initVolume3DToolGroup(extensionManager, toolGroupService);\n}\n\nexport default initToolGroups;\n","import { hotkeys } from '@ohif/core';\nimport toolbarButtons from './toolbarButtons.js';\nimport { id } from './id.js';\nimport initToolGroups from './initToolGroups.js';\n\n// Allow this mode by excluding non-imaging modalities such as SR, SEG\n// Also, SM is not a simple imaging modalities, so exclude it.\nconst NON_IMAGE_MODALITIES = ['SM', 'ECG', 'SR', 'SEG', 'RTSTRUCT'];\n\nconst ohif = {\n  layout: '@ohif/extension-default.layoutTemplateModule.viewerLayout',\n  sopClassHandler: '@ohif/extension-default.sopClassHandlerModule.stack',\n  thumbnailList: '@ohif/extension-default.panelModule.seriesList',\n  volumeEditionPanel: '@ohif/extension-default.panelModule.volumeEditionPanel',\n  panoramicPanel: '@ohif/extension-default.panelModule.panoramicGenerationPanel'\n};\n\nconst tracked = {\n  measurements:\n    '@ohif/extension-measurement-tracking.panelModule.trackedMeasurements',\n  thumbnailList: '@ohif/extension-measurement-tracking.panelModule.seriesList',\n  viewport:\n    '@ohif/extension-measurement-tracking.viewportModule.cornerstone-tracked',\n};\n\nconst dicomsr = {\n  sopClassHandler:\n    '@ohif/extension-cornerstone-dicom-sr.sopClassHandlerModule.dicom-sr',\n  viewport: '@ohif/extension-cornerstone-dicom-sr.viewportModule.dicom-sr',\n};\n\nconst dicomvideo = {\n  sopClassHandler:\n    '@ohif/extension-dicom-video.sopClassHandlerModule.dicom-video',\n  viewport: '@ohif/extension-dicom-video.viewportModule.dicom-video',\n};\n\nconst dicompdf = {\n  sopClassHandler: '@ohif/extension-dicom-pdf.sopClassHandlerModule.dicom-pdf',\n  viewport: '@ohif/extension-dicom-pdf.viewportModule.dicom-pdf',\n};\n\nconst dicomSeg = {\n  sopClassHandler:\n    '@ohif/extension-cornerstone-dicom-seg.sopClassHandlerModule.dicom-seg',\n  viewport: '@ohif/extension-cornerstone-dicom-seg.viewportModule.dicom-seg',\n  panel: '@ohif/extension-cornerstone-dicom-seg.panelModule.panelSegmentation',\n};\n\nconst dicomRt = {\n  viewport: '@ohif/extension-cornerstone-dicom-rt.viewportModule.dicom-rt',\n  sopClassHandler:\n    '@ohif/extension-cornerstone-dicom-rt.sopClassHandlerModule.dicom-rt',\n};\n\nconst extensionDependencies = {\n  // Can derive the versions at least process.env.from npm_package_version\n  '@ohif/extension-default': '^3.0.0',\n  '@ohif/extension-cornerstone': '^3.0.0',\n  '@ohif/extension-measurement-tracking': '^3.0.0',\n  '@ohif/extension-cornerstone-dicom-sr': '^3.0.0',\n  '@ohif/extension-cornerstone-dicom-seg': '^3.0.0',\n  '@ohif/extension-cornerstone-dicom-rt': '^3.0.0',\n  '@ohif/extension-dicom-pdf': '^3.0.1',\n  '@ohif/extension-dicom-video': '^3.0.1',\n};\n\nfunction modeFactory() {\n  let _activatePanelTriggersSubscriptions = [];\n  return {\n    // TODO: We're using this as a route segment\n    // We should not be.\n    id,\n    routeName: 'viewer',\n    displayName: 'Basic Viewer',\n    /**\n     * Lifecycle hooks\n     */\n    onModeEnter: ({ servicesManager, extensionManager, commandsManager }) => {\n      const {\n        measurementService,\n        toolbarService,\n        toolGroupService,\n        panelService,\n        segmentationService,\n      } = servicesManager.services;\n\n      measurementService.clearMeasurements();\n\n      // Init Default and SR ToolGroups\n      initToolGroups(extensionManager, toolGroupService, commandsManager);\n\n      let unsubscribe;\n\n      const activateTool = () => {\n        toolbarService.recordInteraction({\n          groupId: 'WindowLevel',\n          itemId: 'WindowLevel',\n          interactionType: 'tool',\n          commands: [\n            {\n              commandName: 'setToolActive',\n              commandOptions: {\n                toolName: 'WindowLevel',\n              },\n              context: 'CORNERSTONE',\n            },\n          ],\n        });\n\n        // We don't need to reset the active tool whenever a viewport is getting\n        // added to the toolGroup.\n        unsubscribe();\n      };\n\n      // Since we only have one viewport for the basic cs3d mode and it has\n      // only one hanging protocol, we can just use the first viewport\n      ({ unsubscribe } = toolGroupService.subscribe(\n        toolGroupService.EVENTS.VIEWPORT_ADDED,\n        activateTool\n      ));\n\n      toolbarService.init(extensionManager);\n      toolbarService.addButtons(toolbarButtons);\n      toolbarService.createButtonSection('primary', [\n        'MeasurementTools',\n        'Zoom',\n        'WindowLevel',\n        'Pan',\n        'Capture',\n        // 'Layout',\n        // 'MPR',\n        // 'RectangleROIStartEndThreshold',\n        // 'fusionPTColormap',\n        'Crosshairs',\n        'MoreTools',\n        // 'SegmentationTools'\n      ]);\n      toolbarService.setActive('MPR', true)\n\n      // // ActivatePanel event trigger for when a segmentation or measurement is added.\n      // // Do not force activation so as to respect the state the user may have left the UI in.\n      _activatePanelTriggersSubscriptions = [\n        ...panelService.addActivatePanelTriggers(dicomSeg.panel, [\n          {\n            sourcePubSubService: segmentationService,\n            sourceEvents: [\n              segmentationService.EVENTS.SEGMENTATION_ADDED,\n            ],\n          },\n        ]),\n        // ...panelService.addActivatePanelTriggers(tracked.measurements, [\n        //   {\n        //     sourcePubSubService: measurementService,\n        //     sourceEvents: [\n        //       measurementService.EVENTS.MEASUREMENT_ADDED,\n        //       measurementService.EVENTS.RAW_MEASUREMENT_ADDED,\n        //     ],\n        //   },\n        // ]),\n      ];\n    },\n    onModeExit: ({ servicesManager }) => {\n      const {\n        toolGroupService,\n        syncGroupService,\n        toolbarService,\n        segmentationService,\n        cornerstoneViewportService,\n      } = servicesManager.services;\n\n      _activatePanelTriggersSubscriptions.forEach(sub => sub.unsubscribe());\n      _activatePanelTriggersSubscriptions = [];\n\n      toolGroupService.destroy();\n      syncGroupService.destroy();\n      segmentationService.destroy();\n      cornerstoneViewportService.destroy();\n    },\n    validationTags: {\n      study: [],\n      series: [],\n    },\n\n    isValidMode: function({ modalities }) {\n      const modalities_list = modalities.split('\\\\');\n\n      // Exclude non-image modalities\n      return !!modalities_list.filter(\n        modality => NON_IMAGE_MODALITIES.indexOf(modality) === -1\n      ).length;\n    },\n    routes: [\n      {\n        path: 'longitudinal',\n        /*init: ({ servicesManager, extensionManager }) => {\n          //defaultViewerRouteInit\n        },*/\n        layoutTemplate: () => {\n          return {\n            id: ohif.layout,\n            props: {\n              leftPanels: [tracked.thumbnailList],\n              rightPanels: [\n                dicomSeg.panel,\n                // tracked.measurements,\n                ohif.volumeEditionPanel,\n                ohif.panoramicPanel\n              ],\n              rightPanelDefaultClosed: true,\n              viewports: [\n                {\n                  namespace: tracked.viewport,\n                  displaySetsToDisplay: [ohif.sopClassHandler],\n                },\n                {\n                  namespace: dicomsr.viewport,\n                  displaySetsToDisplay: [dicomsr.sopClassHandler],\n                },\n                {\n                  namespace: dicomvideo.viewport,\n                  displaySetsToDisplay: [dicomvideo.sopClassHandler],\n                },\n                {\n                  namespace: dicompdf.viewport,\n                  displaySetsToDisplay: [dicompdf.sopClassHandler],\n                },\n                {\n                  namespace: dicomSeg.viewport,\n                  displaySetsToDisplay: [dicomSeg.sopClassHandler],\n                },\n                {\n                  namespace: dicomRt.viewport,\n                  displaySetsToDisplay: [dicomRt.sopClassHandler],\n                },\n              ],\n            },\n          };\n        },\n      },\n    ],\n    extensions: extensionDependencies,\n    // Default protocol gets self-registered by default in the init\n    hangingProtocol: 'mprAnd3DVolumeViewport',\n    // Order is important in sop class handlers when two handlers both use\n    // the same sop class under different situations.  In that case, the more\n    // general handler needs to come last.  For this case, the dicomvideo must\n    // come first to remove video tqransfer syntax before ohif uses images\n    sopClassHandlers: [\n      dicomvideo.sopClassHandler,\n      dicomSeg.sopClassHandler,\n      ohif.sopClassHandler,\n      dicompdf.sopClassHandler,\n      dicomsr.sopClassHandler,\n      dicomRt.sopClassHandler,\n    ],\n    hotkeys: [...hotkeys.defaults.hotkeyBindings],\n  };\n}\n\nconst mode = {\n  id,\n  modeFactory,\n  extensionDependencies,\n};\n\nexport default mode;\nexport { initToolGroups, toolbarButtons };\n"],"names":["windowLevelPresets","defaults","_createButton","type","id","icon","label","commands","tooltip","uiType","_createActionButton","bind","_createToggleButton","_createToolButton","_createColormap","colormap","toString","title","subtitle","commandName","commandOptions","_createWwwcPreset","preset","console","log","context","toolGroupIds","_createSetToolActiveCommands","toolName","map","toolGroupId","props","groupId","isRadio","primary","secondary","isActive","items","isAction","renderer","WindowLevelMenuItem","rows","columns","protocolId","packageJson","extensionManager","toolGroupService","commandsManager","utilityModule","getModuleEntry","toolNames","Enums","exports","tools","active","WindowLevel","bindings","mouseButton","MouseBindings","Primary","Pan","Auxiliary","Zoom","Secondary","StackScrollMouseWheel","passive","Length","ArrowAnnotate","Bidirectional","DragProbe","Probe","EllipticalROI","CircleROI","RectangleROI","StackScroll","Angle","CobbAngle","PlanarFreehandROI","Magnify","SegmentationDisplay","CalibrationLine","disabled","ReferenceLines","toolsConfig","getTextCallback","callback","eventDetails","runCommand","changeTextCallback","data","createToolGroupAndAddTools","initDefaultToolGroup","SRUtilityModule","CS3DUtilityModule","SRToolNames","SRLength","SRArrowAnnotate","SRBidirectional","SREllipticalROI","SRCircleROI","enabled","DICOMSRDisplay","initSRToolGroup","BrushTool","RectangleScissorsTool","CircleScissorsTool","SphereScissorsTool","RectangleROIThresholdTool","PaintFillTool","RectangleROIStartEndThresholdTool","UndoTool","Crosshairs","viewportIndicators","autoPan","panSize","initMPRToolGroup","TrackballRotateTool","initVolume3DToolGroup","NON_IMAGE_MODALITIES","ohif","tracked","dicomsr","dicomvideo","dicompdf","dicomSeg","dicomRt","extensionDependencies","modeFactory","_activatePanelTriggersSubscriptions","routeName","displayName","onModeEnter","servicesManager","measurementService","toolbarService","panelService","segmentationService","services","unsubscribe","clearMeasurements","initToolGroups","subscribe","EVENTS","VIEWPORT_ADDED","activateTool","recordInteraction","itemId","interactionType","init","addButtons","toolbarButtons","createButtonSection","setActive","addActivatePanelTriggers","sourcePubSubService","sourceEvents","SEGMENTATION_ADDED","onModeExit","syncGroupService","cornerstoneViewportService","forEach","sub","destroy","validationTags","study","series","isValidMode","modalities","split","filter","modality","indexOf","length","routes","path","layoutTemplate","leftPanels","rightPanels","rightPanelDefaultClosed","viewports","namespace","displaySetsToDisplay","extensions","hangingProtocol","sopClassHandlers","hotkeys","hotkeyBindings"],"sourceRoot":""}