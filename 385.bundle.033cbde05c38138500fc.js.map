{"version":3,"file":"385.bundle.033cbde05c38138500fc.js","mappings":"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AM,eACNC,MAAO,UACPH,KAAM,SACNI,SAAU,CACR,CACEY,YAAa,4BACbC,eAAgB,CAAC,EACjBK,QAAS,kBAKjB,CACErB,GAAI,SACJD,KAAM,sBACN4B,MAAO,CACLU,KAAM,EACNC,QAAS,IAGb,CACEtC,GAAI,MACJD,KAAM,cACN4B,MAAO,CACL5B,KAAM,SACNE,KAAM,cACNC,MAAO,MACPC,SAAU,CACR,CACEY,YAAa,wBACbC,eAAgB,CACduB,WAAY,0BAEdlB,QAAS,cAKjB,CACErB,GAAI,aACJD,KAAM,kBACN4B,MAAO,CACL5B,KAAM,OACNE,KAAM,iBACNC,MAAO,aACPC,SAAU,CACR,CACEY,YAAa,gBACbC,eAAgB,CACdQ,SAAU,aACVE,YAAa,OAEfL,QAAS,kBAKjB,CACErB,GAAI,mBACJD,KAAM,mBACN4B,MAAO,CACLC,QAAS,mBACTE,QAASrB,EACL,mBACA,oBACA,qBACA,GACA,sBAEJsB,UAAW,CACT9B,KAAM,eACNC,MAAO,cACP8B,UAAU,EACV5B,QAAS,sBAEX8B,UAAU,EACVC,SAAUC,EAAAA,GACVH,MAAO,CACLvB,EAAgB,OAChBA,EAAgB,YAChBA,EAAgB,SAChBA,EAAgB,WAChBA,EAAgB,aAChBA,EAAgB,WAChBA,EAAgB,OAChBA,EAAgB,UAChBA,EAAgB,MAChBA,EAAgB,cAKtB,CACEV,GAAI,YACJD,KAAM,mBACN4B,MAAO,CACLE,SAAS,EACTD,QAAS,YACTE,QAASxB,EACP,QACA,aACA,aACA,CACE,CACES,YAAa,gBACbC,eAAgB,CAAC,EACjBK,QAAS,gBAGb,SAEFU,UAAW,CACT9B,KAAM,eACNC,MAAO,GACP8B,UAAU,EACV5B,QAAS,cAEX6B,MAAO,CACL3B,EACE,QACA,aACA,aACA,CACE,CACES,YAAa,gBACbC,eAAgB,CAAC,EACjBK,QAAS,gBAGb,SAEFf,EACE,eACA,oBACA,eACA,CACE,CACES,YAAa,mBACbC,eAAgB,CAAC,EACjBK,QAAS,gBAGb,cAEFf,EACE,kBACA,uBACA,oBACA,CACE,CACES,YAAa,yBACbC,eAAgB,C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","sources":["webpack:///../../../modes/longitudinal/src/toolbarButtons.js","webpack:///../../../modes/longitudinal/src/id.js","webpack:///../../../modes/longitudinal/src/initToolGroups.js","webpack:///../../../modes/longitudinal/src/index.js"],"sourcesContent":["// TODO: torn, can either bake this here; or have to create a whole new button type\r\n// Only ways that you can pass in a custom React component for render :l\r\nimport {\r\n  // ExpandableToolbarButton,\r\n  // ListMenu,\r\n  WindowLevelMenuItem,\r\n} from '@ohif/ui';\r\nimport { defaults } from '@ohif/core';\r\n\r\nconst { windowLevelPresets } = defaults;\r\n/**\r\n *\r\n * @param {*} type - 'tool' | 'action' | 'toggle'\r\n * @param {*} id\r\n * @param {*} icon\r\n * @param {*} label\r\n */\r\nfunction _createButton(type, id, icon, label, commands, tooltip, uiType) {\r\n  return {\r\n    id,\r\n    icon,\r\n    label,\r\n    type,\r\n    commands,\r\n    tooltip,\r\n    uiType,\r\n  };\r\n}\r\n\r\nconst _createActionButton = _createButton.bind(null, 'action');\r\nconst _createToggleButton = _createButton.bind(null, 'toggle');\r\nconst _createToolButton = _createButton.bind(null, 'tool');\r\n\r\n\r\nfunction _createColormap(label, colormap) {\r\n  return {\r\n    id: label.toString(),\r\n    title: label,\r\n    subtitle: label,\r\n    type: 'action',\r\n    commands: [\r\n      {\r\n        commandName: 'setAllViewportsColorMap',\r\n        commandOptions: {\r\n          ...windowLevelPresets[1]\r\n        },\r\n      },\r\n      {\r\n        commandName: 'setAllViewportsColorMap',\r\n        commandOptions: {\r\n          ...windowLevelPresets[1]\r\n        },\r\n      },\r\n    ],\r\n  };\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} preset - preset number (from above import)\r\n * @param {*} title\r\n * @param {*} subtitle\r\n */\r\nfunction _createWwwcPreset(preset, title, subtitle) {\r\n  console.log('DEFAULTS', defaults)\r\n  return {\r\n    id: preset.toString(),\r\n    title,\r\n    subtitle,\r\n    type: 'action',\r\n    commands: [\r\n      {\r\n        commandName: 'setWindowLevel',\r\n        commandOptions: {\r\n          ...windowLevelPresets[preset],\r\n        },\r\n        context: 'CORNERSTONE',\r\n      },\r\n    ],\r\n  };\r\n}\r\n\r\nconst toolGroupIds = ['default', 'mpr', 'SRToolGroup'];\r\n\r\n/**\r\n * Creates an array of 'setToolActive' commands for the given toolName - one for\r\n * each toolGroupId specified in toolGroupIds.\r\n * @param {string} toolName\r\n * @returns {Array} an array of 'setToolActive' commands\r\n */\r\nfunction _createSetToolActiveCommands(toolName) {\r\n  const temp = toolGroupIds.map(toolGroupId => ({\r\n    commandName: 'setToolActive',\r\n    commandOptions: {\r\n      toolGroupId,\r\n      toolName,\r\n    },\r\n    context: 'CORNERSTONE',\r\n  }));\r\n  return temp;\r\n}\r\n\r\nconst toolbarButtons = [\r\n  // Measurement\r\n  {\r\n    id: 'MeasurementTools',\r\n    type: 'ohif.splitButton',\r\n    props: {\r\n      groupId: 'MeasurementTools',\r\n      isRadio: true, // ?\r\n      // Switch?\r\n      primary: _createToolButton(\r\n        'Length',\r\n        'tool-length',\r\n        'Length',\r\n        [\r\n          {\r\n            commandName: 'setToolActive',\r\n            commandOptions: {\r\n              toolName: 'Length',\r\n            },\r\n            context: 'CORNERSTONE',\r\n          },\r\n          {\r\n            commandName: 'setToolActive',\r\n            commandOptions: {\r\n              toolName: 'SRLength',\r\n              toolGroupId: 'SRToolGroup',\r\n            },\r\n            // we can use the setToolActive command for this from Cornerstone commandsModule\r\n            context: 'CORNERSTONE',\r\n          },\r\n        ],\r\n        'Length'\r\n      ),\r\n      secondary: {\r\n        icon: 'chevron-down',\r\n        label: '',\r\n        isActive: true,\r\n        tooltip: 'More Measure Tools',\r\n      },\r\n      items: [\r\n        _createToolButton(\r\n          'Length',\r\n          'tool-length',\r\n          'Length',\r\n          [\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'Length',\r\n              },\r\n              context: 'CORNERSTONE',\r\n            },\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'SRLength',\r\n                toolGroupId: 'SRToolGroup',\r\n              },\r\n              // we can use the setToolActive command for this from Cornerstone commandsModule\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n          'Length Tool'\r\n        ),\r\n        _createToolButton(\r\n          'Bidirectional',\r\n          'tool-bidirectional',\r\n          'Bidirectional',\r\n          [\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'Bidirectional',\r\n              },\r\n              context: 'CORNERSTONE',\r\n            },\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'SRBidirectional',\r\n                toolGroupId: 'SRToolGroup',\r\n              },\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n          'Bidirectional Tool'\r\n        ),\r\n        _createToolButton(\r\n          'ArrowAnnotate',\r\n          'tool-annotate',\r\n          'Annotation',\r\n          [\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'ArrowAnnotate',\r\n              },\r\n              context: 'CORNERSTONE',\r\n            },\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'SRArrowAnnotate',\r\n                toolGroupId: 'SRToolGroup',\r\n              },\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n          'Arrow Annotate'\r\n        ),\r\n        _createToolButton(\r\n          'EllipticalROI',\r\n          'tool-elipse',\r\n          'Ellipse',\r\n          [\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'EllipticalROI',\r\n              },\r\n              context: 'CORNERSTONE',\r\n            },\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'SREllipticalROI',\r\n                toolGroupId: 'SRToolGroup',\r\n              },\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n          'Ellipse Tool'\r\n        ),\r\n        _createToolButton(\r\n          'CircleROI',\r\n          'tool-circle',\r\n          'Circle',\r\n          [\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'CircleROI',\r\n              },\r\n              context: 'CORNERSTONE',\r\n            },\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'SRCircleROI',\r\n                toolGroupId: 'SRToolGroup',\r\n              },\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n          'Circle Tool'\r\n        ),\r\n      ],\r\n    },\r\n  },\r\n  // Zoom..\r\n  {\r\n    id: 'Zoom',\r\n    type: 'ohif.radioGroup',\r\n    props: {\r\n      type: 'tool',\r\n      icon: 'tool-zoom',\r\n      label: 'Zoom',\r\n      commands: _createSetToolActiveCommands('Zoom'),\r\n    },\r\n  },\r\n  // Window Level + Presets...\r\n  {\r\n    id: 'WindowLevel',\r\n    type: 'ohif.splitButton',\r\n    props: {\r\n      groupId: 'WindowLevel',\r\n      primary: _createToolButton(\r\n        'WindowLevel',\r\n        'tool-window-level',\r\n        'Window Level',\r\n        [\r\n          {\r\n            commandName: 'setToolActive',\r\n            commandOptions: {\r\n              toolName: 'WindowLevel',\r\n            },\r\n            context: 'CORNERSTONE',\r\n          },\r\n        ],\r\n        'Window Level'\r\n      ),\r\n      secondary: {\r\n        icon: 'chevron-down',\r\n        label: 'W/L Manual',\r\n        isActive: true,\r\n        tooltip: 'W/L Presets',\r\n      },\r\n      isAction: true, // ?\r\n      renderer: WindowLevelMenuItem,\r\n      items: [\r\n        _createWwwcPreset(1, 'Soft tissue', '400 / 40'),\r\n        _createWwwcPreset(2, 'Lung', '1500 / -600'),\r\n        _createWwwcPreset(3, 'Liver', '150 / 90'),\r\n        _createWwwcPreset(4, 'Bone', '2500 / 480'),\r\n        _createWwwcPreset(5, 'Brain', '80 / 40'),\r\n      ],\r\n    },\r\n  },\r\n  // Pan...\r\n  {\r\n    id: 'Pan',\r\n    type: 'ohif.radioGroup',\r\n    props: {\r\n      type: 'tool',\r\n      icon: 'tool-move',\r\n      label: 'Pan',\r\n      commands: _createSetToolActiveCommands('Pan'),\r\n    },\r\n  },\r\n  {\r\n    id: 'Capture',\r\n    type: 'ohif.action',\r\n    props: {\r\n      icon: 'tool-capture',\r\n      label: 'Capture',\r\n      type: 'action',\r\n      commands: [\r\n        {\r\n          commandName: 'showDownloadViewportModal',\r\n          commandOptions: {},\r\n          context: 'CORNERSTONE',\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    id: 'Layout',\r\n    type: 'ohif.layoutSelector',\r\n    props: {\r\n      rows: 3,\r\n      columns: 3,\r\n    },\r\n  },\r\n  {\r\n    id: 'MPR',\r\n    type: 'ohif.action',\r\n    props: {\r\n      type: 'toggle',\r\n      icon: 'icon-mpr-3d',\r\n      label: 'MPR',\r\n      commands: [\r\n        {\r\n          commandName: 'toggleHangingProtocol',\r\n          commandOptions: {\r\n            protocolId: 'mprAnd3DVolumeViewport',\r\n          },\r\n          context: 'DEFAULT',\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    id: 'Crosshairs',\r\n    type: 'ohif.radioGroup',\r\n    props: {\r\n      type: 'tool',\r\n      icon: 'tool-crosshair',\r\n      label: 'Crosshairs',\r\n      commands: [\r\n        {\r\n          commandName: 'setToolActive',\r\n          commandOptions: {\r\n            toolName: 'Crosshairs',\r\n            toolGroupId: 'mpr',\r\n          },\r\n          context: 'CORNERSTONE',\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    id: 'fusionPTColormap',\r\n    type: 'ohif.splitButton',\r\n    props: {\r\n      groupId: 'fusionPTColormap',\r\n      primary: _createToolButton(\r\n          'fusionPTColormap',\r\n          'tool-fusion-color',\r\n          'Fusion PT Colormap',\r\n          [],\r\n          'Fusion PT Colormap'\r\n      ),\r\n      secondary: {\r\n        icon: 'chevron-down',\r\n        label: 'PT Colormap',\r\n        isActive: true,\r\n        tooltip: 'PET Image Colormap',\r\n      },\r\n      isAction: true, // ?\r\n      renderer: WindowLevelMenuItem,\r\n      items: [\r\n        _createColormap('HSV', 'hsv'),\r\n        _createColormap('Hot Iron', 'hot_iron'),\r\n        _createColormap('S PET', 's_pet'),\r\n        _createColormap('Red Hot', 'red_hot'),\r\n        _createColormap('Perfusion', 'perfusion'),\r\n        _createColormap('Rainbow', 'rainbow_2'),\r\n        _createColormap('SUV', 'suv'),\r\n        _createColormap('GE 256', 'ge_256'),\r\n        _createColormap('GE', 'ge'),\r\n        _createColormap('Siemens', 'siemens'),\r\n      ],\r\n    },\r\n  },\r\n  // More...\r\n  {\r\n    id: 'MoreTools',\r\n    type: 'ohif.splitButton',\r\n    props: {\r\n      isRadio: true, // ?\r\n      groupId: 'MoreTools',\r\n      primary: _createActionButton(\r\n        'Reset',\r\n        'tool-reset',\r\n        'Reset View',\r\n        [\r\n          {\r\n            commandName: 'resetViewport',\r\n            commandOptions: {},\r\n            context: 'CORNERSTONE',\r\n          },\r\n        ],\r\n        'Reset'\r\n      ),\r\n      secondary: {\r\n        icon: 'chevron-down',\r\n        label: '',\r\n        isActive: true,\r\n        tooltip: 'More Tools',\r\n      },\r\n      items: [\r\n        _createActionButton(\r\n          'Reset',\r\n          'tool-reset',\r\n          'Reset View',\r\n          [\r\n            {\r\n              commandName: 'resetViewport',\r\n              commandOptions: {},\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n          'Reset'\r\n        ),\r\n        _createActionButton(\r\n          'rotate-right',\r\n          'tool-rotate-right',\r\n          'Rotate Right',\r\n          [\r\n            {\r\n              commandName: 'rotateViewportCW',\r\n              commandOptions: {},\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n          'Rotate +90'\r\n        ),\r\n        _createActionButton(\r\n          'flip-horizontal',\r\n          'tool-flip-horizontal',\r\n          'Flip Horizontally',\r\n          [\r\n            {\r\n              commandName: 'flipViewportHorizontal',\r\n              commandOptions: {},\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n          'Flip Horizontal'\r\n        ),\r\n        _createToggleButton('StackImageSync', 'link', 'Stack Image Sync', [\r\n          {\r\n            commandName: 'toggleStackImageSync',\r\n            commandOptions: {},\r\n            context: 'CORNERSTONE',\r\n          },\r\n        ]),\r\n        _createToggleButton(\r\n          'ReferenceLines',\r\n          'tool-referenceLines', // change this with the new icon\r\n          'Reference Lines',\r\n          [\r\n            {\r\n              commandName: 'toggleReferenceLines',\r\n              commandOptions: {},\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ]\r\n        ),\r\n        _createToolButton(\r\n          'StackScroll',\r\n          'tool-stack-scroll',\r\n          'Stack Scroll',\r\n          [\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'StackScroll',\r\n              },\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n          'Stack Scroll'\r\n        ),\r\n        _createActionButton(\r\n          'invert',\r\n          'tool-invert',\r\n          'Invert',\r\n          [\r\n            {\r\n              commandName: 'invertViewport',\r\n              commandOptions: {},\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n          'Invert Colors'\r\n        ),\r\n        _createToolButton(\r\n          'Probe',\r\n          'tool-probe',\r\n          'Probe',\r\n          [\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'DragProbe',\r\n              },\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n          'Probe'\r\n        ),\r\n        _createToggleButton(\r\n          'cine',\r\n          'tool-cine',\r\n          'Cine',\r\n          [\r\n            {\r\n              commandName: 'toggleCine',\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n          'Cine'\r\n        ),\r\n        _createToolButton(\r\n          'Angle',\r\n          'tool-angle',\r\n          'Angle',\r\n          [\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'Angle',\r\n              },\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n          'Angle'\r\n        ),\r\n\r\n        // Next two tools can be added once icons are added\r\n        // _createToolButton(\r\n        //   'Cobb Angle',\r\n        //   'tool-cobb-angle',\r\n        //   'Cobb Angle',\r\n        //   [\r\n        //     {\r\n        //       commandName: 'setToolActive',\r\n        //       commandOptions: {\r\n        //         toolName: 'CobbAngle',\r\n        //       },\r\n        //       context: 'CORNERSTONE',\r\n        //     },\r\n        //   ],\r\n        //   'Cobb Angle'\r\n        // ),\r\n        // _createToolButton(\r\n        //   'Planar Freehand ROI',\r\n        //   'tool-freehand',\r\n        //   'PlanarFreehandROI',\r\n        //   [\r\n        //     {\r\n        //       commandName: 'setToolActive',\r\n        //       commandOptions: {\r\n        //         toolName: 'PlanarFreehandROI',\r\n        //       },\r\n        //       context: 'CORNERSTONE',\r\n        //     },\r\n        //   ],\r\n        //   'Planar Freehand ROI'\r\n        // ),\r\n        _createToolButton(\r\n          'Magnify',\r\n          'tool-magnify',\r\n          'Magnify',\r\n          [\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'Magnify',\r\n              },\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n          'Magnify'\r\n        ),\r\n        _createToolButton(\r\n          'Rectangle',\r\n          'tool-rectangle',\r\n          'Rectangle',\r\n          [\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'RectangleROI',\r\n              },\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n          'Rectangle'\r\n        ),\r\n        _createToolButton(\r\n          'CalibrationLine',\r\n          'tool-calibration',\r\n          'Calibration',\r\n          [\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'CalibrationLine',\r\n              },\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n          'Calibration Line'\r\n        ),\r\n        _createActionButton(\r\n          'TagBrowser',\r\n          'list-bullets',\r\n          'Dicom Tag Browser',\r\n          [\r\n            {\r\n              commandName: 'openDICOMTagViewer',\r\n              commandOptions: {},\r\n              context: 'DEFAULT',\r\n            },\r\n          ],\r\n          'Dicom Tag Browser'\r\n        ),\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    id: 'SegmentationTools',\r\n    type: 'ohif.splitButton',\r\n    props: {\r\n      groupId: 'SegmentationTools',\r\n      isRadio: true, // ?\r\n      // Switch?\r\n      primary: _createToolButton(\r\n          'Brush',\r\n          'tool-brushe',\r\n          'Paint Brush',\r\n          [\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'Brush',\r\n              },\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n          'Brush'\r\n      ),\r\n      secondary: {\r\n        icon: 'chevron-down',\r\n        label: '',\r\n        isActive: true,\r\n        tooltip: 'More Segmentation Tools',\r\n      },\r\n      items: [\r\n        _createToolButton(\r\n            'Brush',\r\n            'tool-brushe',\r\n            'Paint Brush',\r\n            [\r\n              {\r\n                commandName: 'setToolActive',\r\n                commandOptions: {\r\n                  toolName: 'Brush',\r\n                },\r\n                context: 'CORNERSTONE',\r\n              },\r\n            ],\r\n            'Paint Brush'\r\n        ),\r\n        _createToolButton(\r\n            'RectangleScissor',\r\n            'tool-rscissors',\r\n            'Rectangle Segmentation',\r\n            [\r\n              {\r\n                commandName: 'setToolActive',\r\n                commandOptions: {\r\n                  toolName: 'RectangleScissor',\r\n                },\r\n                context: 'CORNERSTONE',\r\n              },\r\n            ],\r\n            'Rectangle Segmentation Tool'\r\n        ),\r\n        _createToolButton(\r\n            'CircleScissor',\r\n            'tool-cscissors',\r\n            'Circle Segmentation',\r\n            [\r\n              {\r\n                commandName: 'setToolActive',\r\n                commandOptions: {\r\n                  toolName: 'CircleScissor',\r\n                },\r\n                context: 'CORNERSTONE',\r\n              },\r\n            ],\r\n            'Circle Segmentation Tool'\r\n        ),\r\n        _createToolButton(\r\n            'SphereScissor',\r\n            'tool-sscissors',\r\n            'Sphere Segmentation',\r\n            [\r\n              {\r\n                commandName: 'setToolActive',\r\n                commandOptions: {\r\n                  toolName: 'SphereScissor',\r\n                },\r\n                context: 'CORNERSTONE',\r\n              },\r\n            ],\r\n            'Sphere Scissor Tool'\r\n        ),\r\n        _createToolButton(\r\n            'PaintFill',\r\n            'paint-fill',\r\n            'Fill Holes',\r\n            [\r\n              {\r\n                commandName: 'setToolActive',\r\n                commandOptions: {\r\n                  toolName: 'PaintFill',\r\n                },\r\n                context: 'CORNERSTONE',\r\n              },\r\n            ],\r\n            'Paint Fill Tool'\r\n        ),\r\n        _createToolButton(\r\n            'RectangleROIThreshold',\r\n            'tool-rroithreshold',\r\n            'Rectangle Threshold Segmentation',\r\n            [\r\n              {\r\n                commandName: 'setToolActive',\r\n                commandOptions: {\r\n                  toolName: 'RectangleROIThreshold',\r\n                },\r\n                context: 'CORNERSTONE',\r\n              },\r\n            ],\r\n            'Rectangle ROI Threshold Tool'\r\n        ),\r\n        _createToolButton(\r\n            'RectangleROIStartEndThreshold',\r\n            'tool-rroithresholdstartend',\r\n            '3D Rectangle Threshold Segmentation',\r\n            [\r\n              {\r\n                commandName: 'setToolActive',\r\n                commandOptions: {\r\n                  toolName: 'RectangleROIStartEndThreshold',\r\n                },\r\n                context: 'CORNERSTONE',\r\n              },\r\n            ],\r\n            'Rectangle ROI Start End Threshold Tool'\r\n        ),\r\n      ],\r\n    },\r\n  }\r\n];\r\n\r\nexport default toolbarButtons;\r\n","import packageJson from '../package.json';\r\n\r\nconst id = packageJson.name;\r\n\r\nexport { id };\r\n","function initDefaultToolGroup(\r\n  extensionManager,\r\n  toolGroupService,\r\n  commandsManager,\r\n  toolGroupId\r\n) {\r\n  const utilityModule = extensionManager.getModuleEntry(\r\n    '@ohif/extension-cornerstone.utilityModule.tools'\r\n  );\r\n\r\n  const { toolNames, Enums } = utilityModule.exports;\r\n\r\n  const tools = {\r\n    active: [\r\n      {\r\n        toolName: toolNames.WindowLevel,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Primary }],\r\n      },\r\n      {\r\n        toolName: toolNames.Pan,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Auxiliary }],\r\n      },\r\n      {\r\n        toolName: toolNames.Zoom,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Secondary }],\r\n      },\r\n      { toolName: toolNames.StackScrollMouseWheel, bindings: [] },\r\n    ],\r\n    passive: [\r\n      { toolName: toolNames.Length },\r\n      { toolName: toolNames.ArrowAnnotate },\r\n      { toolName: toolNames.Bidirectional },\r\n      { toolName: toolNames.DragProbe },\r\n      { toolName: toolNames.Probe },\r\n      { toolName: toolNames.EllipticalROI },\r\n      { toolName: toolNames.CircleROI },\r\n      { toolName: toolNames.RectangleROI },\r\n      { toolName: toolNames.StackScroll },\r\n      { toolName: toolNames.Angle },\r\n      { toolName: toolNames.CobbAngle },\r\n      { toolName: toolNames.PlanarFreehandROI },\r\n      { toolName: toolNames.Magnify },\r\n      { toolName: toolNames.SegmentationDisplay },\r\n      { toolName: toolNames.CalibrationLine },\r\n    ],\r\n    // enabled\r\n    // disabled\r\n    disabled: [{ toolName: toolNames.ReferenceLines }],\r\n  };\r\n\r\n  const toolsConfig = {\r\n    [toolNames.ArrowAnnotate]: {\r\n      getTextCallback: (callback, eventDetails) =>\r\n        commandsManager.runCommand('arrowTextCallback', {\r\n          callback,\r\n          eventDetails,\r\n        }),\r\n\r\n      changeTextCallback: (data, eventDetails, callback) =>\r\n        commandsManager.runCommand('arrowTextCallback', {\r\n          callback,\r\n          data,\r\n          eventDetails,\r\n        }),\r\n    },\r\n  };\r\n\r\n  toolGroupService\r\n      .createToolGroupAndAddTools(toolGroupId, tools, toolsConfig);\r\n}\r\n\r\nfunction initSRToolGroup(extensionManager, toolGroupService, commandsManager) {\r\n  const SRUtilityModule = extensionManager.getModuleEntry(\r\n    '@ohif/extension-cornerstone-dicom-sr.utilityModule.tools'\r\n  );\r\n\r\n  const CS3DUtilityModule = extensionManager.getModuleEntry(\r\n    '@ohif/extension-cornerstone.utilityModule.tools'\r\n  );\r\n\r\n  const { toolNames: SRToolNames } = SRUtilityModule.exports;\r\n  const { toolNames, Enums } = CS3DUtilityModule.exports;\r\n  const tools = {\r\n    active: [\r\n      {\r\n        toolName: toolNames.WindowLevel,\r\n        bindings: [\r\n          {\r\n            mouseButton: Enums.MouseBindings.Primary,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        toolName: toolNames.Pan,\r\n        bindings: [\r\n          {\r\n            mouseButton: Enums.MouseBindings.Auxiliary,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        toolName: toolNames.Zoom,\r\n        bindings: [\r\n          {\r\n            mouseButton: Enums.MouseBindings.Secondary,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        toolName: toolNames.StackScrollMouseWheel,\r\n        bindings: [],\r\n      },\r\n    ],\r\n    passive: [\r\n      { toolName: SRToolNames.SRLength },\r\n      { toolName: SRToolNames.SRArrowAnnotate },\r\n      { toolName: SRToolNames.SRBidirectional },\r\n      { toolName: SRToolNames.SREllipticalROI },\r\n      { toolName: SRToolNames.SRCircleROI },\r\n    ],\r\n    enabled: [\r\n      {\r\n        toolName: SRToolNames.DICOMSRDisplay,\r\n        bindings: [],\r\n      },\r\n    ],\r\n    // disabled\r\n  };\r\n\r\n  const toolsConfig = {\r\n    [toolNames.ArrowAnnotate]: {\r\n      getTextCallback: (callback, eventDetails) =>\r\n        commandsManager.runCommand('arrowTextCallback', {\r\n          callback,\r\n          eventDetails,\r\n        }),\r\n\r\n      changeTextCallback: (data, eventDetails, callback) =>\r\n        commandsManager.runCommand('arrowTextCallback', {\r\n          callback,\r\n          data,\r\n          eventDetails,\r\n        }),\r\n    },\r\n  };\r\n\r\n  const toolGroupId = 'SRToolGroup';\r\n  toolGroupService.createToolGroupAndAddTools(toolGroupId, tools, toolsConfig);\r\n}\r\n\r\nfunction initMPRToolGroup(extensionManager, toolGroupService, commandsManager) {\r\n  const utilityModule = extensionManager.getModuleEntry(\r\n    '@ohif/extension-cornerstone.utilityModule.tools'\r\n  );\r\n\r\n  const { toolNames, Enums } = utilityModule.exports;\r\n  console.log('TOOL NAMES INIT', toolNames)\r\n\r\n  const tools = {\r\n    active: [\r\n      {\r\n        toolName: toolNames.WindowLevel,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Primary }],\r\n      },\r\n      {\r\n        toolName: toolNames.Pan,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Auxiliary }],\r\n      },\r\n      {\r\n        toolName: toolNames.Zoom,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Secondary }],\r\n      },\r\n      { toolName: toolNames.StackScrollMouseWheel, bindings: [] },\r\n    ],\r\n    passive: [\r\n      { toolName: toolNames.Length },\r\n      { toolName: toolNames.ArrowAnnotate },\r\n      { toolName: toolNames.Bidirectional },\r\n      { toolName: toolNames.DragProbe },\r\n      { toolName: toolNames.Probe },\r\n      { toolName: toolNames.EllipticalROI },\r\n      { toolName: toolNames.CircleROI },\r\n      { toolName: toolNames.RectangleROI },\r\n      { toolName: toolNames.StackScroll },\r\n      { toolName: toolNames.Angle },\r\n      { toolName: toolNames.CobbAngle },\r\n      { toolName: toolNames.PlanarFreehandROI },\r\n      { toolName: toolNames.SegmentationDisplay },\r\n      { toolName: toolNames.BrushTool },\r\n      { toolName: toolNames.RectangleScissorsTool },\r\n      { toolName: toolNames.CircleScissorsTool },\r\n      { toolName: toolNames.SphereScissorsTool },\r\n      { toolName: toolNames.RectangleROIThresholdTool },\r\n      { toolName: toolNames.PaintFillTool },\r\n      { toolName: toolNames.RectangleROIStartEndThresholdTool },\r\n      { toolName: toolNames.UndoTool,}\r\n    ],\r\n    disabled: [\r\n      { toolName: toolNames.Crosshairs },\r\n      { toolName: toolNames.ReferenceLines },\r\n    ],\r\n\r\n    // enabled\r\n    // disabled\r\n  };\r\n\r\n  const toolsConfig = {\r\n    [toolNames.Crosshairs]: {\r\n      viewportIndicators: false,\r\n      autoPan: {\r\n        enabled: false,\r\n        panSize: 10,\r\n      },\r\n    },\r\n    [toolNames.ArrowAnnotate]: {\r\n      getTextCallback: (callback, eventDetails) =>\r\n        commandsManager.runCommand('arrowTextCallback', {\r\n          callback,\r\n          eventDetails,\r\n        }),\r\n\r\n      changeTextCallback: (data, eventDetails, callback) =>\r\n        commandsManager.runCommand('arrowTextCallback', {\r\n          callback,\r\n          data,\r\n          eventDetails,\r\n        }),\r\n    },\r\n  };\r\n\r\n  toolGroupService.createToolGroupAndAddTools('mpr', tools, toolsConfig);\r\n}\r\nfunction initVolume3DToolGroup(extensionManager, toolGroupService) {\r\n  const utilityModule = extensionManager.getModuleEntry(\r\n    '@ohif/extension-cornerstone.utilityModule.tools'\r\n  );\r\n\r\n  const { toolNames, Enums } = utilityModule.exports;\r\n\r\n  const tools = {\r\n    active: [\r\n      {\r\n        toolName: toolNames.TrackballRotateTool,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Primary }],\r\n      },\r\n      {\r\n        toolName: toolNames.Zoom,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Secondary }],\r\n      },\r\n      {\r\n        toolName: toolNames.Pan,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Auxiliary }],\r\n      },\r\n    ],\r\n  };\r\n\r\n  toolGroupService.createToolGroupAndAddTools('volume3d', tools);\r\n}\r\n\r\nfunction initToolGroups(extensionManager, toolGroupService, commandsManager) {\r\n  initDefaultToolGroup(\r\n    extensionManager,\r\n    toolGroupService,\r\n    commandsManager,\r\n    'default'\r\n  );\r\n  initSRToolGroup(extensionManager, toolGroupService, commandsManager);\r\n  initMPRToolGroup(extensionManager, toolGroupService, commandsManager);\r\n  initVolume3DToolGroup(extensionManager, toolGroupService);\r\n}\r\n\r\nexport default initToolGroups;\r\n","import { hotkeys } from '@ohif/core';\r\nimport toolbarButtons from './toolbarButtons.js';\r\nimport { id } from './id.js';\r\nimport initToolGroups from './initToolGroups.js';\r\n\r\n// Allow this mode by excluding non-imaging modalities such as SR, SEG\r\n// Also, SM is not a simple imaging modalities, so exclude it.\r\nconst NON_IMAGE_MODALITIES = ['SM', 'ECG', 'SR', 'SEG', 'RTSTRUCT'];\r\n\r\nconst ohif = {\r\n  layout: '@ohif/extension-default.layoutTemplateModule.viewerLayout',\r\n  sopClassHandler: '@ohif/extension-default.sopClassHandlerModule.stack',\r\n  thumbnailList: '@ohif/extension-default.panelModule.seriesList',\r\n  volumeEditionPanel: '@ohif/extension-default.panelModule.volumeEditionPanel',\r\n  panoramicPanel: '@ohif/extension-default.panelModule.panoramicGenerationPanel'\r\n};\r\n\r\nconst tracked = {\r\n  measurements:\r\n    '@ohif/extension-measurement-tracking.panelModule.trackedMeasurements',\r\n  thumbnailList: '@ohif/extension-measurement-tracking.panelModule.seriesList',\r\n  viewport:\r\n    '@ohif/extension-measurement-tracking.viewportModule.cornerstone-tracked',\r\n};\r\n\r\nconst dicomsr = {\r\n  sopClassHandler:\r\n    '@ohif/extension-cornerstone-dicom-sr.sopClassHandlerModule.dicom-sr',\r\n  viewport: '@ohif/extension-cornerstone-dicom-sr.viewportModule.dicom-sr',\r\n};\r\n\r\nconst dicomvideo = {\r\n  sopClassHandler:\r\n    '@ohif/extension-dicom-video.sopClassHandlerModule.dicom-video',\r\n  viewport: '@ohif/extension-dicom-video.viewportModule.dicom-video',\r\n};\r\n\r\nconst dicompdf = {\r\n  sopClassHandler: '@ohif/extension-dicom-pdf.sopClassHandlerModule.dicom-pdf',\r\n  viewport: '@ohif/extension-dicom-pdf.viewportModule.dicom-pdf',\r\n};\r\n\r\nconst dicomSeg = {\r\n  sopClassHandler:\r\n    '@ohif/extension-cornerstone-dicom-seg.sopClassHandlerModule.dicom-seg',\r\n  viewport: '@ohif/extension-cornerstone-dicom-seg.viewportModule.dicom-seg',\r\n  panel: '@ohif/extension-cornerstone-dicom-seg.panelModule.panelSegmentation',\r\n};\r\n\r\nconst dicomRt = {\r\n  viewport: '@ohif/extension-cornerstone-dicom-rt.viewportModule.dicom-rt',\r\n  sopClassHandler:\r\n    '@ohif/extension-cornerstone-dicom-rt.sopClassHandlerModule.dicom-rt',\r\n};\r\n\r\nconst extensionDependencies = {\r\n  // Can derive the versions at least process.env.from npm_package_version\r\n  '@ohif/extension-default': '^3.0.0',\r\n  '@ohif/extension-cornerstone': '^3.0.0',\r\n  '@ohif/extension-measurement-tracking': '^3.0.0',\r\n  '@ohif/extension-cornerstone-dicom-sr': '^3.0.0',\r\n  '@ohif/extension-cornerstone-dicom-seg': '^3.0.0',\r\n  '@ohif/extension-cornerstone-dicom-rt': '^3.0.0',\r\n  '@ohif/extension-dicom-pdf': '^3.0.1',\r\n  '@ohif/extension-dicom-video': '^3.0.1',\r\n};\r\n\r\nfunction modeFactory() {\r\n  let _activatePanelTriggersSubscriptions = [];\r\n  return {\r\n    // TODO: We're using this as a route segment\r\n    // We should not be.\r\n    id,\r\n    routeName: 'viewer',\r\n    displayName: 'Basic Viewer',\r\n    /**\r\n     * Lifecycle hooks\r\n     */\r\n    onModeEnter: ({ servicesManager, extensionManager, commandsManager }) => {\r\n      const {\r\n        measurementService,\r\n        toolbarService,\r\n        toolGroupService,\r\n        panelService,\r\n        segmentationService,\r\n      } = servicesManager.services;\r\n\r\n      measurementService.clearMeasurements();\r\n\r\n      // Init Default and SR ToolGroups\r\n      initToolGroups(extensionManager, toolGroupService, commandsManager);\r\n\r\n      let unsubscribe;\r\n\r\n      const activateTool = () => {\r\n        toolbarService.recordInteraction({\r\n          groupId: 'WindowLevel',\r\n          itemId: 'WindowLevel',\r\n          interactionType: 'tool',\r\n          commands: [\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'WindowLevel',\r\n              },\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n        });\r\n\r\n        // We don't need to reset the active tool whenever a viewport is getting\r\n        // added to the toolGroup.\r\n        unsubscribe();\r\n      };\r\n\r\n      // Since we only have one viewport for the basic cs3d mode and it has\r\n      // only one hanging protocol, we can just use the first viewport\r\n      ({ unsubscribe } = toolGroupService.subscribe(\r\n        toolGroupService.EVENTS.VIEWPORT_ADDED,\r\n        activateTool\r\n      ));\r\n\r\n      toolbarService.init(extensionManager);\r\n      toolbarService.addButtons(toolbarButtons);\r\n      toolbarService.createButtonSection('primary', [\r\n        'MeasurementTools',\r\n        'Zoom',\r\n        'WindowLevel',\r\n        'Pan',\r\n        'Capture',\r\n        // 'Layout',\r\n        // 'MPR',\r\n        // 'RectangleROIStartEndThreshold',\r\n        // 'fusionPTColormap',\r\n        'Crosshairs',\r\n        'MoreTools',\r\n        // 'SegmentationTools'\r\n      ]);\r\n      toolbarService.setActive('MPR', true)\r\n\r\n      // // ActivatePanel event trigger for when a segmentation or measurement is added.\r\n      // // Do not force activation so as to respect the state the user may have left the UI in.\r\n      _activatePanelTriggersSubscriptions = [\r\n        ...panelService.addActivatePanelTriggers(dicomSeg.panel, [\r\n          {\r\n            sourcePubSubService: segmentationService,\r\n            sourceEvents: [\r\n              segmentationService.EVENTS.SEGMENTATION_ADDED,\r\n            ],\r\n          },\r\n        ]),\r\n        // ...panelService.addActivatePanelTriggers(tracked.measurements, [\r\n        //   {\r\n        //     sourcePubSubService: measurementService,\r\n        //     sourceEvents: [\r\n        //       measurementService.EVENTS.MEASUREMENT_ADDED,\r\n        //       measurementService.EVENTS.RAW_MEASUREMENT_ADDED,\r\n        //     ],\r\n        //   },\r\n        // ]),\r\n      ];\r\n    },\r\n    onModeExit: ({ servicesManager }) => {\r\n      const {\r\n        toolGroupService,\r\n        syncGroupService,\r\n        toolbarService,\r\n        segmentationService,\r\n        cornerstoneViewportService,\r\n      } = servicesManager.services;\r\n\r\n      _activatePanelTriggersSubscriptions.forEach(sub => sub.unsubscribe());\r\n      _activatePanelTriggersSubscriptions = [];\r\n\r\n      toolGroupService.destroy();\r\n      syncGroupService.destroy();\r\n      segmentationService.destroy();\r\n      cornerstoneViewportService.destroy();\r\n    },\r\n    validationTags: {\r\n      study: [],\r\n      series: [],\r\n    },\r\n\r\n    isValidMode: function({ modalities }) {\r\n      const modalities_list = modalities.split('\\\\');\r\n\r\n      // Exclude non-image modalities\r\n      return !!modalities_list.filter(\r\n        modality => NON_IMAGE_MODALITIES.indexOf(modality) === -1\r\n      ).length;\r\n    },\r\n    routes: [\r\n      {\r\n        path: 'longitudinal',\r\n        /*init: ({ servicesManager, extensionManager }) => {\r\n          //defaultViewerRouteInit\r\n        },*/\r\n        layoutTemplate: () => {\r\n          return {\r\n            id: ohif.layout,\r\n            props: {\r\n              leftPanels: [tracked.thumbnailList],\r\n              rightPanels: [\r\n                dicomSeg.panel,\r\n                // tracked.measurements,\r\n                ohif.volumeEditionPanel,\r\n                ohif.panoramicPanel\r\n              ],\r\n              rightPanelDefaultClosed: true,\r\n              viewports: [\r\n                {\r\n                  namespace: tracked.viewport,\r\n                  displaySetsToDisplay: [ohif.sopClassHandler],\r\n                },\r\n                {\r\n                  namespace: dicomsr.viewport,\r\n                  displaySetsToDisplay: [dicomsr.sopClassHandler],\r\n                },\r\n                {\r\n                  namespace: dicomvideo.viewport,\r\n                  displaySetsToDisplay: [dicomvideo.sopClassHandler],\r\n                },\r\n                {\r\n                  namespace: dicompdf.viewport,\r\n                  displaySetsToDisplay: [dicompdf.sopClassHandler],\r\n                },\r\n                {\r\n                  namespace: dicomSeg.viewport,\r\n                  displaySetsToDisplay: [dicomSeg.sopClassHandler],\r\n                },\r\n                {\r\n                  namespace: dicomRt.viewport,\r\n                  displaySetsToDisplay: [dicomRt.sopClassHandler],\r\n                },\r\n              ],\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ],\r\n    extensions: extensionDependencies,\r\n    // Default protocol gets self-registered by default in the init\r\n    hangingProtocol: 'mprAnd3DVolumeViewport',\r\n    // Order is important in sop class handlers when two handlers both use\r\n    // the same sop class under different situations.  In that case, the more\r\n    // general handler needs to come last.  For this case, the dicomvideo must\r\n    // come first to remove video tqransfer syntax before ohif uses images\r\n    sopClassHandlers: [\r\n      dicomvideo.sopClassHandler,\r\n      dicomSeg.sopClassHandler,\r\n      ohif.sopClassHandler,\r\n      dicompdf.sopClassHandler,\r\n      dicomsr.sopClassHandler,\r\n      dicomRt.sopClassHandler,\r\n    ],\r\n    hotkeys: [...hotkeys.defaults.hotkeyBindings],\r\n  };\r\n}\r\n\r\nconst mode = {\r\n  id,\r\n  modeFactory,\r\n  extensionDependencies,\r\n};\r\n\r\nexport default mode;\r\nexport { initToolGroups, toolbarButtons };\r\n"],"names":["windowLevelPresets","defaults","_createButton","type","id","icon","label","commands","tooltip","uiType","_createActionButton","bind","_createToggleButton","_createToolButton","_createColormap","colormap","toString","title","subtitle","commandName","commandOptions","_createWwwcPreset","preset","console","log","context","toolGroupIds","_createSetToolActiveCommands","toolName","map","toolGroupId","props","groupId","isRadio","primary","secondary","isActive","items","isAction","renderer","WindowLevelMenuItem","rows","columns","protocolId","packageJson","extensionManager","toolGroupService","commandsManager","utilityModule","getModuleEntry","toolNames","Enums","exports","tools","active","WindowLevel","bindings","mouseButton","MouseBindings","Primary","Pan","Auxiliary","Zoom","Secondary","StackScrollMouseWheel","passive","Length","ArrowAnnotate","Bidirectional","DragProbe","Probe","EllipticalROI","CircleROI","RectangleROI","StackScroll","Angle","CobbAngle","PlanarFreehandROI","Magnify","SegmentationDisplay","CalibrationLine","disabled","ReferenceLines","toolsConfig","getTextCallback","callback","eventDetails","runCommand","changeTextCallback","data","createToolGroupAndAddTools","initDefaultToolGroup","SRUtilityModule","CS3DUtilityModule","SRToolNames","SRLength","SRArrowAnnotate","SRBidirectional","SREllipticalROI","SRCircleROI","enabled","DICOMSRDisplay","initSRToolGroup","BrushTool","RectangleScissorsTool","CircleScissorsTool","SphereScissorsTool","RectangleROIThresholdTool","PaintFillTool","RectangleROIStartEndThresholdTool","UndoTool","Crosshairs","viewportIndicators","autoPan","panSize","initMPRToolGroup","TrackballRotateTool","initVolume3DToolGroup","NON_IMAGE_MODALITIES","ohif","tracked","dicomsr","dicomvideo","dicompdf","dicomSeg","dicomRt","extensionDependencies","modeFactory","_activatePanelTriggersSubscriptions","routeName","displayName","onModeEnter","servicesManager","measurementService","toolbarService","panelService","segmentationService","services","unsubscribe","clearMeasurements","initToolGroups","subscribe","EVENTS","VIEWPORT_ADDED","activateTool","recordInteraction","itemId","interactionType","init","addButtons","toolbarButtons","createButtonSection","setActive","addActivatePanelTriggers","sourcePubSubService","sourceEvents","SEGMENTATION_ADDED","onModeExit","syncGroupService","cornerstoneViewportService","forEach","sub","destroy","validationTags","study","series","isValidMode","modalities","split","filter","modality","indexOf","length","routes","path","layoutTemplate","leftPanels","rightPanels","rightPanelDefaultClosed","viewports","namespace","displaySetsToDisplay","extensions","hangingProtocol","sopClassHandlers","hotkeys","hotkeyBindings"],"sourceRoot":""}