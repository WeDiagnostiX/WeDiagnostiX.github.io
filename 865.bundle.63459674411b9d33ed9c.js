(globalThis.webpackChunk=globalThis.webpackChunk||[]).push([[865],{52403:(e,t,a)=>{"use strict";a.r(t),a.d(t,{default:()=>ce});const o=JSON.parse('{"u2":"@ohif/extension-tmtv"}').u2,n={viewportOptions:{viewportId:"ctAXIAL",viewportType:"volume",orientation:"axial",toolGroupId:"ctToolGroup",initialImageOptions:{preset:"first"},syncGroups:[{type:"cameraPosition",id:"axialSync",source:!0,target:!0},{type:"voi",id:"ctWLSync",source:!0,target:!0}]},displaySets:[{id:"ctDisplaySet"}]},r={viewportOptions:{viewportId:"ctSAGITTAL",viewportType:"volume",orientation:"sagittal",toolGroupId:"ctToolGroup",syncGroups:[{type:"cameraPosition",id:"sagittalSync",source:!0,target:!0},{type:"voi",id:"ctWLSync",source:!0,target:!0}]},displaySets:[{id:"ctDisplaySet"}]},i={viewportOptions:{viewportId:"ctCORONAL",viewportType:"volume",orientation:"coronal",toolGroupId:"ctToolGroup",syncGroups:[{type:"cameraPosition",id:"coronalSync",source:!0,target:!0},{type:"voi",id:"ctWLSync",source:!0,target:!0}]},displaySets:[{id:"ctDisplaySet"}]},s={viewportOptions:{viewportId:"ptAXIAL",viewportType:"volume",background:[1,1,1],orientation:"axial",toolGroupId:"ptToolGroup",initialImageOptions:{preset:"first"},syncGroups:[{type:"cameraPosition",id:"axialSync",source:!0,target:!0},{type:"voi",id:"ptWLSync",source:!0,target:!0},{type:"voi",id:"ptFusionWLSync",source:!0,target:!1}]},displaySets:[{options:{voi:{custom:"getPTVOIRange"},voiInverted:!0},id:"ptDisplaySet"}]},c={viewportOptions:{viewportId:"ptSAGITTAL",viewportType:"volume",orientation:"sagittal",background:[1,1,1],toolGroupId:"ptToolGroup",syncGroups:[{type:"cameraPosition",id:"sagittalSync",source:!0,target:!0},{type:"voi",id:"ptWLSync",source:!0,target:!0},{type:"voi",id:"ptFusionWLSync",source:!0,target:!1}]},displaySets:[{options:{voi:{custom:"getPTVOIRange"},voiInverted:!0},id:"ptDisplaySet"}]},l={viewportOptions:{viewportId:"ptCORONAL",viewportType:"volume",orientation:"coronal",background:[1,1,1],toolGroupId:"ptToolGroup",syncGroups:[{type:"cameraPosition",id:"coronalSync",source:!0,target:!0},{type:"voi",id:"ptWLSync",source:!0,target:!0},{type:"voi",id:"ptFusionWLSync",source:!0,target:!1}]},displaySets:[{options:{voi:{custom:"getPTVOIRange"},voiInverted:!0},id:"ptDisplaySet"}]},u={viewportOptions:{viewportId:"fusionAXIAL",viewportType:"volume",orientation:"axial",toolGroupId:"fusionToolGroup",initialImageOptions:{preset:"first"},syncGroups:[{type:"cameraPosition",id:"axialSync",source:!0,target:!0},{type:"voi",id:"ctWLSync",source:!1,target:!0},{type:"voi",id:"fusionWLSync",source:!0,target:!0},{type:"voi",id:"ptFusionWLSync",source:!1,target:!0}]},displaySets:[{id:"ctDisplaySet"},{options:{colormap:{name:"hsv",opacityMapping:[{value:.1,opacity:.9}]},voi:{custom:"getPTVOIRange"}},id:"ptDisplaySet"}]},m={viewportOptions:{viewportId:"fusionSAGITTAL",viewportType:"volume",orientation:"sagittal",toolGroupId:"fusionToolGroup",syncGroups:[{type:"cameraPosition",id:"sagittalSync",source:!0,target:!0},{type:"voi",id:"ctWLSync",source:!1,target:!0},{type:"voi",id:"fusionWLSync",source:!0,target:!0},{type:"voi",id:"ptFusionWLSync",source:!1,target:!0}]},displaySets:[{id:"ctDisplaySet"},{options:{colormap:{name:"hsv",opacityMapping:[{value:.1,opacity:.9}]},voi:{custom:"getPTVOIRange"}},id:"ptDisplaySet"}]},d={viewportOptions:{viewportId:"fusionCoronal",viewportType:"volume",orientation:"coronal",toolGroupId:"fusionToolGroup",syncGroups:[{type:"cameraPosition",id:"coronalSync",source:!0,target:!0},{type:"voi",id:"ctWLSync",source:!1,target:!0},{type:"voi",id:"fusionWLSync",source:!0,target:!0},{type:"voi",id:"ptFusionWLSync",source:!1,target:!0}]},displaySets:[{id:"ctDisplaySet"},{options:{colormap:{name:"hsv",opacityMapping:[{value:.1,opacity:.9}]},voi:{custom:"getPTVOIRange"}},id:"ptDisplaySet"}]},p={viewportOptions:{viewportId:"mipSagittal",viewportType:"volume",orientation:"sagittal",background:[1,1,1],toolGroupId:"mipToolGroup",syncGroups:[{type:"voi",id:"ptWLSync",source:!0,target:!0},{type:"voi",id:"ptFusionWLSync",source:!0,target:!1}],customViewportProps:{hideOverlays:!0}},displaySets:[{options:{blendMode:"MIP",slabThickness:"fullVolume",voi:{custom:"getPTVOIRange"},voiInverted:!0},id:"ptDisplaySet"}]},g={id:"@ohif/extension-tmtv.hangingProtocolModule.ptCT",locked:!0,hasUpdatedPriorsInformation:!1,name:"Default",createdDate:"2021-02-23T19:22:08.894Z",modifiedDate:"2022-10-04T19:22:08.894Z",availableTo:{},editableBy:{},imageLoadStrategy:"interleaveTopToBottom",protocolMatchingRules:[{attribute:"ModalitiesInStudy",constraint:{contains:["CT","PT"]}},{attribute:"StudyDescription",constraint:{contains:"PETCT"}},{attribute:"StudyDescription",constraint:{contains:"PET/CT"}}],displaySetSelectors:{ctDisplaySet:{seriesMatchingRules:[{attribute:"Modality",constraint:{equals:{value:"CT"}},required:!0},{attribute:"isReconstructable",constraint:{equals:{value:!0}},required:!0},{attribute:"SeriesDescription",constraint:{contains:"CT"}},{attribute:"SeriesDescription",constraint:{contains:"CT WB"}}]},ptDisplaySet:{seriesMatchingRules:[{attribute:"Modality",constraint:{equals:"PT"},required:!0},{attribute:"isReconstructable",constraint:{equals:{value:!0}},required:!0},{attribute:"SeriesDescription",constraint:{contains:"Corrected"}},{weight:2,attribute:"SeriesDescription",constraint:{doesNotContain:{value:"Uncorrected"}}}]}},stages:[{name:"default",viewportStructure:{layoutType:"grid",properties:{rows:3,columns:4,layoutOptions:[{x:0,y:0,width:1/4,height:1/3},{x:1/4,y:0,width:1/4,height:1/3},{x:.5,y:0,width:1/4,height:1/3},{x:0,y:1/3,width:1/4,height:1/3},{x:1/4,y:1/3,width:1/4,height:1/3},{x:.5,y:1/3,width:1/4,height:1/3},{x:0,y:2/3,width:1/4,height:1/3},{x:1/4,y:2/3,width:1/4,height:1/3},{x:.5,y:2/3,width:1/4,height:1/3},{x:3/4,y:0,width:1/4,height:1}]}},viewports:[n,r,i,s,c,l,u,m,d,p],createdDate:"2021-02-23T18:32:42.850Z"},{name:"Fusion 2x2",viewportStructure:{layoutType:"grid",properties:{rows:2,columns:2}},viewports:[n,u,s,p]},{name:"2x3-layout",viewportStructure:{layoutType:"grid",properties:{rows:2,columns:3}},viewports:[n,r,i,s,c,l]},{name:"2x4-layout",viewportStructure:{layoutType:"grid",properties:{rows:2,columns:4,layoutOptions:[{x:0,y:0,width:1/4,height:.5},{x:1/4,y:0,width:1/4,height:.5},{x:.5,y:0,width:1/4,height:.5},{x:3/4,y:0,width:1/4,height:1},{x:0,y:.5,width:1/4,height:.5},{x:1/4,y:.5,width:1/4,height:.5},{x:.5,y:.5,width:1/4,height:.5}]}},viewports:[l,c,s,p,d,m,u]}],numberOfPriorsReferenced:-1};const S=function(){return[{name:g.id,protocol:g}]};var h=a(32735),y=a(60216),I=a.n(y),f=a(22605),v=a(48501),T=a(21572);const b={PatientWeight:null,PatientSex:null,SeriesTime:null,RadiopharmaceuticalInformationSequence:{RadionuclideTotalDose:null,RadionuclideHalfLife:null,RadiopharmaceuticalStartTime:null}};function R({servicesManager:e,commandsManager:t}){const{t:a}=(0,T.$G)("PanelSUV"),{displaySetService:o,toolGroupService:n,toolbarService:r,hangingProtocolService:i}=e.services,[s,c]=(0,h.useState)(b),[l,u]=(0,h.useState)(null),m=e=>{c((t=>{const a={...t};return Object.keys(e).forEach((o=>{"object"==typeof e[o]?a[o]={...t[o],...e[o]}:a[o]=e[o]})),a}))},d=e=>{const a=t.runCommand("getMatchingPTDisplaySet",{viewportMatchDetails:e});if(!a)return;return{ptDisplaySet:a,metadata:t.runCommand("getPTMetadata",{ptDisplaySet:a})}};return(0,h.useEffect)((()=>{const e=o.getActiveDisplaySets(),{viewportMatchDetails:t}=i.getMatchDetails();if(!e.length)return;const a=d(t);if(!a)return;const{ptDisplaySet:n,metadata:r}=a;u(n),c(r)}),[]),(0,h.useEffect)((()=>{const{unsubscribe:e}=i.subscribe(i.EVENTS.PROTOCOL_CHANGED,(({viewportMatchDetails:e})=>{const t=d(e);if(!t)return;const{ptDisplaySet:a,metadata:o}=t;u(a),c(o)}));return()=>{e()}}),[]),h.createElement("div",{className:"overflow-x-hidden overflow-y-auto invisible-scrollbar"},h.createElement("div",{className:"flex flex-col"},h.createElement("div",{className:"flex flex-col p-4 space-y-4 bg-primary-dark"},h.createElement(f.II,{label:a("Patient Sex"),labelClassName:"text-white mb-2",className:"mt-1",value:s.PatientSex||"",onChange:e=>{m({PatientSex:e.target.value})}}),h.createElement(f.II,{label:a("Patient Weight (kg)"),labelClassName:"text-white mb-2",className:"mt-1",value:s.PatientWeight||"",onChange:e=>{m({PatientWeight:e.target.value})}}),h.createElement(f.II,{label:a("Total Dose (bq)"),labelClassName:"text-white mb-2",className:"mt-1",value:s.RadiopharmaceuticalInformationSequence.RadionuclideTotalDose||"",onChange:e=>{m({RadiopharmaceuticalInformationSequence:{RadionuclideTotalDose:e.target.value}})}}),h.createElement(f.II,{label:a("Half Life (s)"),labelClassName:"text-white mb-2",className:"mt-1",value:s.RadiopharmaceuticalInformationSequence.RadionuclideHalfLife||"",onChange:e=>{m({RadiopharmaceuticalInformationSequence:{RadionuclideHalfLife:e.target.value}})}}),h.createElement(f.II,{label:a("Injection Time (s)"),labelClassName:"text-white mb-2",className:"mt-1",value:s.RadiopharmaceuticalInformationSequence.RadiopharmaceuticalStartTime||"",onChange:e=>{m({RadiopharmaceuticalInformationSequence:{RadiopharmaceuticalStartTime:e.target.value}})}}),h.createElement(f.II,{label:a("Acquisition Time (s)"),labelClassName:"text-white mb-2",className:"mt-1 mb-2",value:s.SeriesTime||"",onChange:()=>{}}),h.createElement(f.zx,{color:"primary",onClick:function(){if(!l)throw new Error("No ptDisplaySet found");n.getToolGroupIds().forEach((e=>{t.runCommand("toggleCrosshairs",{toolGroupId:e,toggledState:!1})})),r.state.toggles.Crosshairs=!1,r._broadcastEvent(r.EVENTS.TOOL_BAR_STATE_MODIFIED),v.DicomMetadataStore.updateMetadataForSeries(l.StudyInstanceUID,l.SeriesInstanceUID,s),o.setDisplaySetMetadataInvalidated(l.displaySetInstanceUID)}},"Reload Data"))))}R.propTypes={servicesManager:I().shape({services:I().shape({measurementService:I().shape({getMeasurements:I().func.isRequired,subscribe:I().func.isRequired,EVENTS:I().object.isRequired,VALUE_TYPES:I().object.isRequired}).isRequired}).isRequired}).isRequired};const x=function({id:e,servicesManager:t}){const{segmentationService:a,uiDialogService:o}=t.services,n=a.getSegmentation(e),r=({action:e,value:t})=>{if("save"===e.id)a.addOrUpdateSegmentation({...n,...t},!1,!0);o.dismiss({id:"enter-annotation"})};o.create({id:"enter-annotation",centralize:!0,isDraggable:!1,showOverlay:!0,content:f.Vq,contentProps:{title:"Enter your Segmentation",noCloseButton:!0,value:{label:n.label||""},body:({value:e,setValue:t})=>h.createElement("div",{className:"p-4 bg-primary-dark"},h.createElement(f.II,{autoFocus:!0,className:"mt-2 bg-black border-primary-main",type:"text",containerClassName:"mr-2",value:e.label,onChange:e=>{e.persist(),t((t=>({...t,label:e.target.value})))},onKeyPress:t=>{"Enter"===t.key&&r({value:e,action:{id:"save"}})}})),actions:[{id:"cancel",text:"Cancel",type:"primary"},{id:"save",text:"Save",type:"secondary"}],onSubmit:r}})};const D=function({segmentations:e,tmtvValue:t,config:a,commandsManager:o}){const{t:n}=(0,T.$G)("PanelSUVExport");return h.createElement(h.Fragment,null,e?.length?h.createElement("div",{className:"flex justify-center mt-4 space-x-2"},h.createElement(f.hE,{color:"black",size:"inherit"},h.createElement(f.zx,{className:"px-2 py-2 text-base",disabled:null===t,onClick:()=>{o.runCommand("exportTMTVReportCSV",{segmentations:e,tmtv:t,config:a})}},n("Export CSV"))),h.createElement(f.hE,{color:"black",size:"inherit"},h.createElement(f.zx,{className:"px-2 py-2 text-base",onClick:()=>{o.runCommand("createTMTVRTReport")},disabled:null===t},n("Create RT Report")))):null)},w="roi_stat",E=[{value:w,label:"Max",placeHolder:"Max"},{value:"range",label:"Range",placeHolder:"Range"}];const M=function({config:e,dispatch:t,runCommand:a}){const{t:o}=(0,T.$G)("ROIThresholdConfiguration");return h.createElement("div",{className:"flex flex-col px-4 space-y-4 bg-primary-dark py-2"},h.createElement("div",{className:"flex items-end space-x-2"},h.createElement("div",{className:"flex flex-col w-1/2"},h.createElement(f.Ph,{label:o("Strategy"),closeMenuOnSelect:!0,className:"mr-2 bg-black border-primary-main text-white ",options:E,placeholder:E.find((t=>t.value===e.strategy)).placeHolder,value:e.strategy,onChange:({value:e})=>{t({type:"setStrategy",payload:{strategy:e}})}})),h.createElement("div",{className:"w-1/2"},h.createElement(f.hE,null,h.createElement(f.zx,{size:"initial",className:"px-2 py-2 text-base text-white",color:"primaryLight",variant:"outlined",onClick:()=>a("setStartSliceForROIThresholdTool")},o("Start")),h.createElement(f.zx,{size:"initial",color:"primaryLight",variant:"outlined",className:"px-2 py-2 text-base text-white",onClick:()=>a("setEndSliceForROIThresholdTool")},o("End"))))),e.strategy===w&&h.createElement(f.II,{label:o("Percentage of Max SUV"),labelClassName:"text-white",className:"mt-2 bg-black border-primary-main",type:"text",containerClassName:"mr-2",value:e.weight,onChange:e=>{t({type:"setWeight",payload:{weight:e.target.value}})}}),e.strategy!==w&&h.createElement("div",{className:"text-sm mr-2"},h.createElement("table",null,h.createElement("tbody",null,h.createElement("tr",{className:"mt-2"},h.createElement("td",{className:"pr-4 pt-2",colSpan:"3"},h.createElement(f.__,{className:"text-white",text:"Lower & Upper Ranges"}))),h.createElement("tr",{className:"mt-2"},h.createElement("td",{className:"text-center pr-4 pt-2"},h.createElement(f.__,{className:"text-white",text:"CT"})),h.createElement("td",null,h.createElement("div",{className:"flex justify-between"},h.createElement(f.II,{label:o(""),labelClassName:"text-white",className:"mt-2 bg-black border-primary-main",type:"text",containerClassName:"mr-2",value:e.ctLower,onChange:e=>{t({type:"setThreshold",payload:{ctLower:e.target.value}})}}),h.createElement(f.II,{label:o(""),labelClassName:"text-white",className:"mt-2 bg-black border-primary-main",type:"text",containerClassName:"mr-2",value:e.ctUpper,onChange:e=>{t({type:"setThreshold",payload:{ctUpper:e.target.value}})}})))),h.createElement("tr",null,h.createElement("td",{className:"text-center pr-4 pt-2"},h.createElement(f.__,{className:"text-white",text:"PT"})),h.createElement("td",null,h.createElement("div",{className:"flex justify-between"},h.createElement(f.II,{label:o(""),labelClassName:"text-white",className:"mt-2 bg-black border-primary-main",type:"text",containerClassName:"mr-2",value:e.ptLower,onChange:e=>{t({type:"setThreshold",payload:{ptLower:e.target.value}})}}),h.createElement(f.II,{label:o(""),labelClassName:"text-white",className:"mt-2 bg-black border-primary-main",type:"text",containerClassName:"mr-2",value:e.ptUpper,onChange:e=>{t({type:"setThreshold",payload:{ptUpper:e.target.value}})}}))))))))},O=w;function C(e,t){const{payload:a}=t,{strategy:o,ctLower:n,ctUpper:r,ptLower:i,ptUpper:s,weight:c}=a;switch(t.type){case"setStrategy":return{...e,strategy:o};case"setThreshold":return{...e,ctLower:n||e.ctLower,ctUpper:r||e.ctUpper,ptLower:i||e.ptLower,ptUpper:s||e.ptUpper};case"setWeight":return{...e,weight:c};default:return e}}function N({servicesManager:e,commandsManager:t}){const{segmentationService:a}=e.services,{t:o}=(0,T.$G)("PanelSUV"),[n,r]=(0,h.useState)(!1),[i,s]=(0,h.useState)(!1),[c,l]=(0,h.useState)(null),[u,m]=(0,h.useState)((()=>a.getSegmentations())),[d,p]=(0,h.useReducer)(C,{strategy:O,ctLower:-1024,ctUpper:1024,ptLower:2.5,ptUpper:100,weight:.41}),[g,S]=(0,h.useState)(null),y=(0,h.useCallback)(((e,a={})=>t.runCommand(e,a)),[t]),I=(0,h.useCallback)((()=>{const e=y("calculateTMTV",{segmentations:u});void 0!==e&&S(e.toFixed(2))}),[u,y]),v=(0,h.useCallback)((()=>{const e=y("thresholdSegmentationByRectangleROITool",{segmentationId:c,config:d}),t=y("getLesionStats",{labelmap:e}),o=y("calculateSuvPeak",{labelmap:e}),n=t.volume*t.meanValue,r=a.getSegmentation(c),i={lesionStats:t,suvPeak:o,lesionGlyoclysisStats:n};a.addOrUpdateSegmentation({...r,...Object.assign(r.cachedStats,i),displayText:[`SUV Peak: ${o.suvPeak.toFixed(2)}`]},!0),I()}),[c,d]);return(0,h.useEffect)((()=>{const e=a.EVENTS.SEGMENTATION_ADDED,t=a.EVENTS.SEGMENTATION_UPDATED,o=[];return[e,t].forEach((e=>{const{unsubscribe:t}=a.subscribe(e,(()=>{const e=a.getSegmentations();m(e)}));o.push(t)})),()=>{o.forEach((e=>{e()}))}}),[]),(0,h.useEffect)((()=>{const{unsubscribe:e}=a.subscribe(a.EVENTS.SEGMENTATION_REMOVED,(()=>{const e=a.getSegmentations();m(e),e.length>0?(l(e[0].id),I()):(l(null),S(null))}));return()=>{e()}}),[]),(0,h.useEffect)((()=>{!c&&u.length>0&&l(u[0].id),I()}),[u,c]),h.createElement(h.Fragment,null,h.createElement("div",{className:"flex flex-col"},h.createElement("div",{className:"overflow-x-hidden overflow-y-auto invisible-scrollbar"},h.createElement("div",{className:"flex mx-4 my-4 mb-4 space-x-4"},h.createElement(f.zx,{color:"primary",onClick:()=>{s(!0),setTimeout((()=>{y("createNewLabelmapFromPT").then((e=>{s(!1),l(e)}))}))}},i?"loading ...":"New Label"),h.createElement(f.zx,{color:"primary",onClick:v},"Run")),h.createElement("div",{className:"flex items-center justify-around h-8 mb-2 border-t outline-none cursor-pointer select-none bg-secondary-dark first:border-0 border-secondary-light",onClick:()=>{r(!n)}},h.createElement("div",{className:"px-4 text-base text-white"},o("ROI Threshold Configuration"))),n&&h.createElement(M,{config:d,dispatch:p,runCommand:y}),h.createElement("div",{className:"mt-4"},u?.length?h.createElement(f.y1,{title:o("Segmentations"),segmentations:u,activeSegmentationId:c,onClick:e=>{y("setSegmentationActiveForToolGroups",{segmentationId:e}),l(e)},onToggleVisibility:e=>{a.toggleSegmentationVisibility(e)},onToggleVisibilityAll:e=>{e.map((e=>{a.toggleSegmentationVisibility(e)}))},onDelete:e=>{a.remove(e)},onEdit:t=>{x({id:t,servicesManager:e})}}):null),null!==g?h.createElement("div",{className:"flex items-baseline justify-between px-2 py-1 mt-4 bg-secondary-dark"},h.createElement("span",{className:"text-base font-bold tracking-widest text-white uppercase"},"TMTV:"),h.createElement("div",{className:"text-white"},`${g} mL`)):null,h.createElement(D,{segmentations:u,tmtvValue:g,config:d,commandsManager:t}))),h.createElement("div",{className:"opacity-50 hover:opacity-80 flex items-center justify-center text-blue-400 mt-auto cursor-pointer mb-4",onClick:()=>{window.open("https://github.com/OHIF/Viewers/blob/master/modes/tmtv/README.md","_blank")}},h.createElement(f.JO,{width:"15px",height:"15px",name:"info",className:"text-primary-active ml-4 mr-3"}),h.createElement("span",null,"User Guide")))}N.propTypes={commandsManager:I().shape({runCommand:I().func.isRequired}),servicesManager:I().shape({services:I().shape({segmentationService:I().shape({getSegmentation:I().func.isRequired,getSegmentations:I().func.isRequired,toggleSegmentationVisibility:I().func.isRequired,subscribe:I().func.isRequired,EVENTS:I().object.isRequired}).isRequired}).isRequired}).isRequired};const P=N;const L=function({commandsManager:e,extensionManager:t,servicesManager:a}){return[{name:"petSUV",iconName:"tab-patient-info",iconLabel:"PET SUV",label:"PET SUV",component:()=>h.createElement(R,{commandsManager:e,servicesManager:a,extensionManager:t})},{name:"ROIThresholdSeg",iconName:"tab-roi-threshold",iconLabel:"ROI Threshold",label:"ROI Threshold",component:()=>h.createElement(P,{commandsManager:e,servicesManager:a,extensionManager:t})}]};var U=a(72853),V=a(98386);const F=["RectangleROIStartEndThreshold"];function A(e){if(e)return function(e){const t=V.metaData.get("instance",e);return{SOPInstanceUID:t.SOPInstanceUID,SeriesInstanceUID:t.SeriesInstanceUID,StudyInstanceUID:t.StudyInstanceUID,frameNumber:t.frameNumber||1}}(e)}const G={toAnnotation:(e,t)=>{},toMeasurement:(e,t,a)=>{const{annotation:o,viewportId:n}=e,{metadata:r,data:i,annotationUID:s}=o;if(!r||!i)return console.warn("Length tool: Missing metadata or data"),null;const{toolName:c,referencedImageId:l,FrameOfReferenceUID:u}=r;if(!F.includes(c))throw new Error("Tool not supported");const{SOPInstanceUID:m,SeriesInstanceUID:d,StudyInstanceUID:p}=A(l);let g;g=m?t.getDisplaySetForSOPInstanceUID(m,d):t.getDisplaySetsForSeries(d);const{cachedStats:S}=i;return{uid:s,SOPInstanceUID:m,FrameOfReferenceUID:u,metadata:r,referenceSeriesUID:d,referenceStudyUID:p,toolName:r.toolName,displaySetInstanceUID:g.displaySetInstanceUID,label:r.label,data:i.cachedStats,type:"RectangleROIStartEndThreshold"}}},k=(e,t,a)=>({RectangleROIStartEndThreshold:{toAnnotation:G.toAnnotation,toMeasurement:e=>G.toMeasurement(e,t,a),matchingCriteria:[{valueType:e.VALUE_TYPES.ROI_THRESHOLD_MANUAL}]}});var q=a(74569);const{registerColormap:j}=V.utilities.colormap;var W=a(88256);function _(e,t){const{imageData:a}=e,o=a.getPointData().getScalars().getData(),{fn:n,baseValue:r}=function(e){const t=-1/0,a=(e,t)=>(e>t&&(t=e),t);return{fn:a,baseValue:t}}();let i=r;const s=U.utilities.rectangleROITool.getBoundsIJKFromRectangleAnnotations(t,e),[[c,l],[u,m],[d,p]]=s;for(let e=c;e<=l;e++)for(let t=u;t<=m;t++)for(let r=d;r<=p;r++){i=n(o[a.computeOffsetIndex([e,t,r])],i)}return i}const B=function(e,t,a){if("range"===a.strategy)return{ptLower:Number(a.ptLower),ptUpper:Number(a.ptUpper),ctLower:Number(a.ctLower),ctUpper:Number(a.ctUpper)};const{weight:o}=a,n=e.map((e=>U.annotation.state.getAnnotation(e)));return{ctLower:-1/0,ctUpper:1/0,ptLower:o*_(t[0],n),ptUpper:1/0}};const $=function(e,t,a,o=1){if("PT"!==t.metadata.Modality)return;if(e.scalarData.length!==t.scalarData.length)throw new Error("labelmap and referenceVolume must have the same number of pixels");const{scalarData:n,dimensions:r,imageData:i}=e,{scalarData:s,imageData:c}=t;let l;if(a&&a[0].data?.cachedStats){const{projectionPoints:e}=a[0].data.cachedStats,t=[].concat(...e).map((e=>{const t=W.R3.fromValues(0,0,0);return c.worldToIndex(e,t),t}));l=U.utilities.boundingBox.getBoundingBoxAroundShape(t,r)}let u=0,m=[0,0,0],d=[0,0,0];U.utilities.pointInShapeCallback(i,(()=>!0),(({pointIJK:e,pointLPS:t})=>{const a=c.computeOffsetIndex(e);if(n[a]!==o)return;const r=s[a];r>u&&(u=r,m=e,d=t)}),l);const p=i.getDirection().slice(0,3),g=2*(10*Math.pow(1/(4/3*Math.PI),1/3)),S=W.R3.create(),h=W.R3.create(),y=W.R3.create();c.indexToWorld(m,S),W.R3.scaleAndAdd(h,S,p,-g/2),W.R3.scaleAndAdd(y,S,p,g/2);const I=[h,y];let f=0,v=0;return U.utilities.pointInSurroundingSphereCallback(c,I,(({value:e})=>{v+=e,f+=1})),{max:u,maxIJK:m,maxLPS:d,mean:v/f}};const H=function(e,t=1){const a=U.utilities.segmentation.createMergedLabelmapForIndex(e,t,"mergedLabelmap"),{imageData:o,spacing:n}=a;return.001*o.getPointData().getScalars().getData().reduce(((e,t)=>t>0?e+1:e),0)*n[0]*n[1]*n[2]};class z{constructor(){}static getContourSequence(e,t){const{data:a}=e,{projectionPoints:o,projectionPointsImageIds:n}=a.cachedStats;return o.map(((e,a)=>{const o=function(e){const t=[...e[0],...e[1],...e[3],...e[2]],a=t.flat().map((e=>e.toFixed(2)));return a}(e),r=function(e,t){const a=t.get("sopCommonModule",e);return{ReferencedSOPClassUID:a.sopClassUID,ReferencedSOPInstanceUID:a.sopInstanceUID}}(n[a],t);return{NumberOfContourPoints:o.length/3,ContourImageSequence:r,ContourGeometricType:"CLOSED_PLANAR",ContourData:o}}))}}z.toolName="RectangleROIStartEndThreshold";const J=z;class K{constructor(){}static convert(e,t,a){!function(e){if(!e?.data)throw new Error("Tool data is empty");if(!e.metadata||e.metadata.referenceImageId)throw new Error("Tool data is not associated with any imageId")}(e);const{toolName:o}=e.metadata,n=K.TOOL_NAMES[o];if(!n)throw new Error(`Unknown tool type: ${o}, cannot convert to RTSSReport`);const r=n.getContourSequence(e,a);return{ReferencedROINumber:t+1,ROIDisplayColor:[Math.floor(255*Math.random()),Math.floor(255*Math.random()),Math.floor(255*Math.random())],ContourSequence:r}}static register(e){K.TOOL_NAMES[e.toolName]=e}}K.TOOL_NAMES={},K.register(J);const Z=K;var X=a(22737);const{DicomMetaDictionary:Y}=X.default.data;class Q{constructor(){}static generateReport(e,t,a){let o=function(e,t){const a=Y.uid(),{referencedImageId:o,FrameOfReferenceUID:n}=e[0].metadata,{studyInstanceUID:r}=t.get("generalSeriesModule",o),i=function(e,t){const a=t.get("generalSeriesModule",e),o=t.get("generalStudyModule",e),n=t.get("patientStudyModule",e),r=t.get("patientModule",e),i=t.get("patientDemographicModule",e);return{Modality:a.modality,PatientID:r.patientId,PatientName:r.patientName,PatientBirthDate:"",PatientAge:n.patientAge,PatientSex:i.patientSex,PatientWeight:n.patientWeight,StudyDate:o.studyDate,StudyTime:o.studyTime,StudyID:"ToDo",AccessionNumber:o.accessionNumber}}(o,t),s={SeriesInstanceUID:Y.uid(),SeriesNumber:"99"};return{StructureSetROISequence:[],ROIContourSequence:[],RTROIObservationsSequence:[],ReferencedSeriesSequence:[],ReferencedFrameOfReferenceSequence:[],...i,...s,StudyInstanceUID:r,SOPClassUID:"1.2.840.10008.5.1.4.1.1.481.3",SOPInstanceUID:a,Manufacturer:"dcmjs",Modality:"RTSTRUCT",FrameOfReferenceUID:n,PositionReferenceIndicator:"",StructureSetLabel:"",StructureSetName:"",ReferringPhysicianName:"",OperatorsName:"",StructureSetDate:Y.date(),StructureSetTime:Y.time()}}(e,t);e.forEach(((e,n)=>{const r=Z.convert(e,n,t,a);o.StructureSetROISequence.push(function(e,t,a){const{FrameOfReferenceUID:o}=e.metadata;return{ROINumber:t+1,ROIName:`Todo: name ${t+1}`,ROIDescription:`Todo: description ${t+1}`,ROIGenerationAlgorithm:"Todo: algorithm",ReferencedFrameOfReferenceUID:o}}(e,n)),o.ROIContourSequence.push(r),o.RTROIObservationsSequence.push(function(e,t,a){return{ObservationNumber:t+1,ReferencedROINumber:t+1,RTROIInterpretedType:"Todo: type",ROIInterpreter:"Todo: interpreter"}}(0,n)),o.ReferencedSeriesSequence=function(e,t,a){const{referencedImageId:o}=e.metadata,n=a.get("instance",o),{SeriesInstanceUID:r,StudyInstanceUID:i}=n,s=[];if(r){const e=v.DicomMetadataStore.getSeries(i,r),t={SeriesInstanceUID:r,ReferencedInstanceSequence:[]};e.instances.forEach((e=>{const{SOPInstanceUID:a,SOPClassUID:o}=e;t.ReferencedInstanceSequence.push({ReferencedSOPClassUID:o,ReferencedSOPInstanceUID:a})})),s.push(t)}return s}(e,0,t),o.ReferencedFrameOfReferenceSequence=function(e,t,a){const{referencedImageId:o,FrameOfReferenceUID:n}=e.metadata,r=t.get("instance",o),{SeriesInstanceUID:i}=r,{ReferencedSeriesSequence:s}=a;return[{FrameOfReferenceUID:n,RTReferencedStudySequence:[{ReferencedSOPClassUID:a.SOPClassUID,ReferencedSOPInstanceUID:a.SOPInstanceUID,RTReferencedSeriesSequence:[{SeriesInstanceUID:i,ContourImageSequence:[...s[0].ReferencedInstanceSequence]}]}]}]}(e,t,o)}));const n=new Uint8Array(2);n[1]=1;const r={FileMetaInformationVersion:{Value:[n.buffer],vr:"OB"},TransferSyntaxUID:{Value:["1.2.840.10008.1.2.1"],vr:"UI"},ImplementationClassUID:{Value:[Y.uid()],vr:"UI"},ImplementationVersionName:{Value:["dcmjs"],vr:"SH"}};return o._meta=r,o}static generateToolState(e,t={}){console.warn("RTSSReport.generateToolState not implemented")}}const{datasetToBlob:ee}=X.default.data,te=v.classes.MetadataProvider;const ae=function(e){const t=Q.generateReport(e,te),a=ee(t);var o=URL.createObjectURL(a);window.location.assign(o)},oe=v.classes.MetadataProvider,ne="RectangleROIStartEndThreshold",re=U.Enums.SegmentationRepresentations.Labelmap,ie=({servicesManager:e,commandsManager:t,extensionManager:a})=>{const{viewportGridService:o,uiNotificationService:n,displaySetService:r,hangingProtocolService:i,toolGroupService:s,cornerstoneViewportService:c,segmentationService:l}=e.services,u=a.getModuleEntry("@ohif/extension-cornerstone.utilityModule.common"),{getEnabledElement:m}=u.exports;function d(){const{activeViewportIndex:e}=o.getState(),{element:t}=m(e)||{};return V.getEnabledElement(t)}function p(){const{viewportMatchDetails:e}=i.getMatchDetails(),t=[];return e.forEach(((e,a)=>{const{viewportOptions:o}=e,{toolGroupId:n}=o;-1===t.indexOf(n)&&t.push(n)})),t}const g={getMatchingPTDisplaySet:({viewportMatchDetails:e})=>{let t=null;for(const[a,o]of e){const{displaySetsInfo:e}=o,a=e.map((({displaySetInstanceUID:e})=>r.getDisplaySetByUID(e)));if(a&&0!==a.length&&(t=a.find((e=>"PT"===e.Modality)),t))break}return t},getPTMetadata:({ptDisplaySet:e})=>{const t=a.getDataSources()[0].getImageIdsForDisplaySet(e)[0],o=oe.get("instance",t);if("PT"!==o.Modality)return;return{SeriesTime:o.SeriesTime,Modality:o.Modality,PatientSex:o.PatientSex,PatientWeight:o.PatientWeight,RadiopharmaceuticalInformationSequence:{RadionuclideTotalDose:o.RadiopharmaceuticalInformationSequence[0].RadionuclideTotalDose,RadionuclideHalfLife:o.RadiopharmaceuticalInformationSequence[0].RadionuclideHalfLife,RadiopharmaceuticalStartTime:o.RadiopharmaceuticalInformationSequence[0].RadiopharmaceuticalStartTime,RadiopharmaceuticalStartDateTime:o.RadiopharmaceuticalInformationSequence[0].RadiopharmaceuticalStartDateTime}}},createNewLabelmapFromPT:async()=>{const{viewportMatchDetails:e}=i.getMatchDetails(),t=g.getMatchingPTDisplaySet({viewportMatchDetails:e});if(!t)return void n.error("No matching PT display set found");const a=await l.createSegmentationForDisplaySet(t.displaySetInstanceUID),o=p(),r=re;for(const e of o){const t=!0;await l.addSegmentationRepresentationToToolGroup(e,a,t,r),l.setActiveSegmentationForToolGroup(a,e)}return a},setSegmentationActiveForToolGroups:({segmentationId:e})=>{p().forEach((t=>{l.setActiveSegmentationForToolGroup(e,t)}))},thresholdSegmentationByRectangleROITool:({segmentationId:e,config:t})=>{const a=U.segmentation.state.getSegmentation(e),{representationData:o}=a,{displaySetMatchDetails:r}=i.getMatchDetails(),s=`cornerstoneStreamingImageVolume:${r.get("ctDisplaySet").displaySetInstanceUID}`,{volumeId:c}=o[re],{referencedVolumeId:l}=V.cache.getVolume(c),u=V.cache.getVolume(e),m=V.cache.getVolume(l),d=V.cache.getVolume(s);if(!m)throw new Error("No Reference volume found");if(!u)throw new Error("No Reference labelmap found");const p=U.annotation.selection.getAnnotationsSelectedByToolName(ne);if(0===p.length)return void n.show({title:"Commands Module",message:"No ROIThreshold Tool is Selected",type:"error"});const{ptLower:g,ptUpper:S,ctLower:h,ctUpper:y}=B(p,[m,d],t);return U.utilities.segmentation.rectangleROIThresholdVolumeByRange(p,u,[{volume:m,lower:g,upper:S},{volume:d,lower:h,upper:y}],{overwrite:!0})},calculateSuvPeak:({labelmap:e})=>{const{referencedVolumeId:t}=e,a=V.cache.getVolume(t),o=U.annotation.selection.getAnnotationsSelectedByToolName(ne).map((e=>U.annotation.state.getAnnotation(e))),n=$(e,a,o);return{suvPeak:n.mean,suvMax:n.max,suvMaxIJK:n.maxIJK,suvMaxLPS:n.maxLPS}},getLesionStats:({labelmap:e,segmentIndex:t=1})=>{const{scalarData:a,spacing:o}=e,{scalarData:n}=V.cache.getVolume(e.referencedVolumeId);let r=-1/0,i=1/0,s=[],c=0;for(let e=0;e<a.length;e++)if(a[e]===t){const t=n[e];s.push(t),t>r&&(r=t),t<i&&(i=t),c++}return{minValue:i,maxValue:r,meanValue:s.reduce(((e,t)=>e+t),0)/c,stdValue:Math.sqrt(s.reduce(((e,t)=>e+t*t),0)/c-s.reduce(((e,t)=>e+t),0)/c**2),volume:c*o[0]*o[1]*o[2]*.001}},calculateLesionGlycolysis:({lesionStats:e})=>{const{meanValue:t,volume:a}=e;return{lesionGlyoclysisStats:a*t}},calculateTMTV:({segmentations:e})=>{const t=e.map((e=>l.getLabelmapVolume(e.id)));if(t.length)return H(t)},exportTMTVReportCSV:({segmentations:e,tmtv:a,config:o})=>{!function(e,t){const a=e[Object.keys(e)[0]],o=Object.keys(a),n=[o.join(",")];Object.values(e).forEach((e=>{const t=[];o.forEach((a=>{t.push(Array.isArray(e[a])?e[a].join(" "):e[a])})),n.push(t.join(","))})),n.push(""),n.push(""),n.push(""),n.push(`Patient ID,${a.PatientID}`),n.push(`Study Date,${a.StudyDate}`),n.push(""),t.forEach((({key:e,value:t})=>{const a=[];a.push(`${e}`),Object.keys(t).forEach((e=>{a.push(`${e}`),a.push(`${t[e]}`)})),n.push(a.join(","))}));const r=new Blob([n.join("\n")],{type:"text/csv;charset=utf-8"}),i=URL.createObjectURL(r),s=document.createElement("a");s.href=i,s.download=`${a.PatientID}_tmtv.csv`,s.click()}(t.runCommand("getSegmentationCSVReport",{segmentations:e}),[{key:"Total Metabolic Tumor Volume",value:{tmtv:a}},{key:"Total Lesion Glycolysis",value:{tlg:g.getTotalLesionGlycolysis({segmentations:e}).toFixed(4)}},{key:"Threshold Configuration",value:{...o}}])},getTotalLesionGlycolysis:({segmentations:e})=>{const t=e.map((e=>l.getLabelmapVolume(e.id)));let a;try{a=U.utilities.segmentation.createMergedLabelmapForIndex(t)}catch(e){return void console.error("commandsModule::getTotalLesionGlycolysis",e)}const{referencedVolumeId:o,spacing:n}=t[0];o||console.error("commandsModule::getTotalLesionGlycolysis:No referencedVolumeId found");const r=V.cache.getVolume(o),i=a.scalarData;i.length!==r.scalarData.length&&console.error("commandsModule::getTotalLesionGlycolysis:Labelmap and ptVolume are not the same size");let s=0,c=0;for(let e=0;e<i.length;e++)0!==i[e]&&(s+=r.scalarData[e],c+=1);return s/c*c*n[0]*n[1]*n[2]*.001},setStartSliceForROIThresholdTool:()=>{const{viewport:e}=d(),{focalPoint:t,viewPlaneNormal:a}=e.getCamera(),o=U.annotation.selection.getAnnotationsSelectedByToolName(ne)[0],n=U.annotation.state.getAnnotation(o),{handles:r}=n.data,{points:i}=r,s=e.getCurrentImageIdIndex();n.data.startSlice=s;const c=i.map((e=>{const o=W.R3.create();W.R3.subtract(o,t,e);const n=W.R3.dot(o,a),r=W.R3.create();return W.R3.scaleAndAdd(r,e,a,n),r}));r.points=c,n.invalidated=!0,e.render()},setEndSliceForROIThresholdTool:()=>{const{viewport:e}=d(),t=U.annotation.selection.getAnnotationsSelectedByToolName(ne)[0],a=U.annotation.state.getAnnotation(t),o=e.getCurrentImageIdIndex();a.data.endSlice=o,a.invalidated=!0,e.render()},createTMTVRTReport:()=>{const e=U.annotation.state.getAnnotationManager(),a=[];Object.keys(e.annotations).forEach((t=>{const o=e.annotations[t][ne];a.push(...o)})),t.runCommand("exportRTReportForAnnotations",{annotations:a})},getSegmentationCSVReport:({segmentations:e})=>{e&&e.length||(e=l.getSegmentations());let t={};for(const a of e){const{id:e,label:o,cachedStats:n}=a,r={id:e,label:o};if(!n){t[e]=r;continue}Object.keys(n).forEach((e=>{"object"!=typeof n[e]?r[e]=n[e]:Object.keys(n[e]).forEach((t=>{r[`${e}_${t}`]=n[e][t]}))}));const i=l.getLabelmapVolume(e);if(!i){t[e]=r;continue}const s=i.referencedVolumeId;r.referencedVolumeId=s;const c=l.getLabelmapVolume(s);if(!c){t[e]=r;continue}if(!c.imageIds||!c.imageIds.length){t[e]=r;continue}const u=c.imageIds[0],m=v.default.classes.MetadataProvider.get("instance",u);m?t[e]={...r,PatientID:m.PatientID,PatientName:m.PatientName.Alphabetic,StudyInstanceUID:m.StudyInstanceUID,SeriesInstanceUID:m.SeriesInstanceUID,StudyDate:m.StudyDate}:t[e]=r}return t},exportRTReportForAnnotations:({annotations:e})=>{ae(e)},setFusionPTColormap:({toolGroupId:e,colormap:a})=>{const o=s.getToolGroup(e),{viewportMatchDetails:n}=i.getMatchDetails(),r=g.getMatchingPTDisplaySet({viewportMatchDetails:n});if(!r)return;const l=o.getViewportIds();let u=[];l.forEach((e=>{const o=c.getViewportInfo(e).getViewportIndex();t.runCommand("setViewportColormap",{viewportIndex:o,displaySetInstanceUID:r.displaySetInstanceUID,colormap:a}),u.push(c.getCornerstoneViewport(e))})),u.forEach((e=>{e.render()}))}},S={setEndSliceForROIThresholdTool:{commandFn:g.setEndSliceForROIThresholdTool,storeContexts:[],options:{}},setStartSliceForROIThresholdTool:{commandFn:g.setStartSliceForROIThresholdTool,storeContexts:[],options:{}},getMatchingPTDisplaySet:{commandFn:g.getMatchingPTDisplaySet,storeContexts:[],options:{}},getPTMetadata:{commandFn:g.getPTMetadata,storeContexts:[],options:{}},createNewLabelmapFromPT:{commandFn:g.createNewLabelmapFromPT,storeContexts:[],options:{}},setSegmentationActiveForToolGroups:{commandFn:g.setSegmentationActiveForToolGroups,storeContexts:[],options:{}},thresholdSegmentationByRectangleROITool:{commandFn:g.thresholdSegmentationByRectangleROITool,storeContexts:[],options:{}},getTotalLesionGlycolysis:{commandFn:g.getTotalLesionGlycolysis,storeContexts:[],options:{}},calculateSuvPeak:{commandFn:g.calculateSuvPeak,storeContexts:[],options:{}},getLesionStats:{commandFn:g.getLesionStats,storeContexts:[],options:{}},calculateTMTV:{commandFn:g.calculateTMTV,storeContexts:[],options:{}},exportTMTVReportCSV:{commandFn:g.exportTMTVReportCSV,storeContexts:[],options:{}},createTMTVRTReport:{commandFn:g.createTMTVRTReport,storeContexts:[],options:{}},getSegmentationCSVReport:{commandFn:g.getSegmentationCSVReport,storeContexts:[],options:{}},exportRTReportForAnnotations:{commandFn:g.exportRTReportForAnnotations,storeContexts:[],options:{}},setFusionPTColormap:{commandFn:g.setFusionPTColormap,storeContexts:[],options:{}}};return{actions:g,definitions:S,defaultContext:"TMTV:CORNERSTONE"}},se={id:o,preRegistration({servicesManager:e,commandsManager:t,extensionManager:a,configuration:o={}}){!function({servicesManager:e,extensionManager:t}){const{measurementService:a,displaySetService:o,cornerstoneViewportService:n}=e.services;(0,U.addTool)(U.RectangleROIStartEndThresholdTool);const{RectangleROIStartEndThreshold:r}=k(a,o,n),i=a.getSource("Cornerstone3DTools","0.1");a.addMapping(i,"RectangleROIStartEndThreshold",r.matchingCriteria,r.toAnnotation,r.toMeasurement),q.Z.forEach(j)}({servicesManager:e,commandsManager:t,extensionManager:a,configuration:o})},getPanelModule:L,getHangingProtocolModule:S,getCommandsModule:({servicesManager:e,commandsManager:t,extensionManager:a})=>ie({servicesManager:e,commandsManager:t,extensionManager:a})},ce=se},78753:()=>{}}]);
//# sourceMappingURL=865.bundle.63459674411b9d33ed9c.js.map